; ModuleID = 'build_script_build.d2566a7d-cgu.0'
source_filename = "build_script_build.d2566a7d-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]" = type {}
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>" = type { %"[closure@core::str::<impl str>::trim::{closure#0}]", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"[closure@core::str::<impl str>::trim::{closure#0}]" = type {}
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { [2 x i64] }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>" = type { %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>" }
%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"alloc::alloc::Global", %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", i64 }
%"alloc::alloc::Global" = type {}
%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" }
%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", { i64, i64* }, i64 }
%"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>" = type { %"alloc::alloc::Global" }
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", { i64, i64* }, i64 }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { [1 x i64], {}*, [1 x i64] }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"[closure@std::panicking::begin_panic<&str>::{closure#0}]" = type { { [0 x i8]*, i64 }, %"core::panic::location::Location"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>" = type { i8, [15 x i8] }
%"std::io::error::SimpleMessage" = type { { [0 x i8]*, i64 }, i8, [7 x i8] }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]" = type {}
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple" = type { [1 x i8], i8 }
%"core::fmt::UnsafeArg" = type { {} }
%"core::result::Result<alloc::string::String, std::env::VarError>" = type { i64, [3 x i64] }
%"std::ffi::os_str::OsStr" = type { %"std::sys::unix::os_str::Slice" }
%"std::sys::unix::os_str::Slice" = type { [0 x i8] }
%"core::option::Option<std::ffi::os_str::OsString>" = type { {}*, [2 x i64] }
%"std::sys::unix::os_str::Buf" = type { %"alloc::vec::Vec<u8>" }
%"std::process::Command" = type { %"std::sys::unix::process::process_common::Command" }
%"std::sys::unix::process::process_common::Command" = type { { i8*, i64 }, %"alloc::vec::Vec<alloc::ffi::c_str::CString>", %"std::sys::unix::process::process_common::Argv", %"std::sys_common::process::CommandEnv", { i8*, i64 }, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", { i32*, i64 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, i8, i8, [6 x i8] }
%"alloc::vec::Vec<alloc::ffi::c_str::CString>" = type { { i64*, i64 }, i64 }
%"std::sys::unix::process::process_common::Argv" = type { %"alloc::vec::Vec<*const i8>" }
%"alloc::vec::Vec<*const i8>" = type { { i64*, i64 }, i64 }
%"std::sys_common::process::CommandEnv" = type { %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", i8, i8, [6 x i8] }
%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>" = type { { i64*, i64 }, i64 }
%"std::ffi::os_str::OsString" = type { %"std::sys::unix::os_str::Buf" }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>" = type { %"[closure@core::str::<impl str>::trim::{closure#0}]" }
%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" = type { %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" }
%"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" = type { %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]" = type {}
%"core::str::pattern::MultiCharEqPattern<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" = type { %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]" }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"core::fmt::Opaque" = type {}
%"alloc::borrow::Cow<str>" = type { i64, [3 x i64] }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>" = type { [4 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>" = type { %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" }
%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]" = type {}
%"std::env::VarError" = type { {}*, [2 x i64] }
%"std::env::VarError::NotUnicode" = type { %"std::ffi::os_str::OsString" }
%"std::process::Output" = type { %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>", i32, [1 x i32] }
%"alloc::string::FromUtf8Error" = type { %"alloc::vec::Vec<u8>", %"core::str::error::Utf8Error" }
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"alloc::borrow::Cow<str>::Owned" = type { [1 x i64], %"alloc::string::String" }
%"core::option::Option<std::process::Output>" = type { {}*, [6 x i64] }
%"core::option::Option<std::process::Output>::Some" = type { %"std::process::Output" }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"alloc::collections::btree::mem::replace::PanicGuard" = type {}
%"core::option::Option<std::ffi::os_str::OsString>::Some" = type { %"std::ffi::os_str::OsString" }
%"core::result::Result<alloc::string::String, std::env::VarError>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::string::String, std::env::VarError>::Err" = type { [1 x i64], %"std::env::VarError" }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<u64, core::num::error::ParseIntError>" = type { i8, [15 x i8] }
%"core::result::Result<u32, core::num::error::ParseIntError>" = type { i8, [7 x i8] }
%"core::str::iter::Split<char>" = type { %"core::str::iter::SplitInternal<char>" }
%"core::str::iter::SplitInternal<char>" = type { i64, i64, %"core::str::pattern::CharSearcher", i8, i8, [6 x i8] }
%"core::str::pattern::CharSearcher" = type { { [0 x i8]*, i64 }, i64, i64, i64, i32, [4 x i8] }
%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" = type { %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" }
%"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>" = type { i64, i64, %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", i8, i8, [6 x i8] }
%"core::ops::range::RangeFull" = type {}
%"core::result::Result<&str, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break" = type { [1 x i64], i64 }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]" = type { i8**, i8**, i64* }
%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:228:14: 228:72]" = type {}
%"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]" = type {}
%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [1 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", { i64, i64* }, i64 }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<&str, usize>::Err" = type { [1 x i64], i64 }
%"core::result::Result<&str, usize>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:287:40: 287:58]" = type {}
%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:285:40: 285:58]" = type {}
%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:286:40: 286:58]" = type {}
%"core::result::Result<u64, core::num::error::ParseIntError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<u64, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<u32, core::num::error::ParseIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<u32, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<std::process::Output, std::io::error::Error>" = type { i64, [7 x i64] }
%"core::result::Result<std::process::Output, std::io::error::Error>::Ok" = type { [1 x i64], %"std::process::Output" }
%"core::result::Result<std::process::Output, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>" = type { i64, [5 x i64] }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err" = type { [1 x i64], %"alloc::string::FromUtf8Error" }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", { i64, i64* }, i64 }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [3 x i64] }
%"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]" = type { %"alloc::alloc::Global" }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" }
%"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { i64*, [11 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"], i16, i16, [2 x i16] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", { i64, i64* }, i64 }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", { i64, i64* }, i64 }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", { i64, i64* }, i64 }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>" = type { i64, [2 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf" = type { [1 x i64], { i64, i64* } }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal" = type { [1 x i64], { i64, i64* } }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", [12 x i8*] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err" = type { [1 x i64], { i64, i64* } }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root" = type { [1 x i64], { i64, i64* } }
%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some" = type { %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>" = type { [1 x i64], {}*, [4 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some" = type { { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" } }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { i64, [3 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue" = type { %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"alloc::borrow::Cow<str>::Borrowed" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::ptr::metadata::PtrRepr<[*const i8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>" = type { [2 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { [3 x i64] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc438 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc439 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/std/src/io/error/repr_bitpacked.rs" }>, align 1
@alloc440 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc439, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\0F\01\00\00\0D\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17ha196934336d1b5e1E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h867fca4a7d73dd10E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfd338f81e5b45273E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfd338f81e5b45273E" to i8*) }>, align 8, !dbg !0
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8* }> <{ i8* bitcast (void ({ i8*, i64 }*)* @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h3943d9e448772912E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h66fca9f2aa7ca0a2E" to i8*), i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h32c302ac2e172676E" to i8*) }>, align 8, !dbg !24
@alloc200 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc201 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc200, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc67 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc450 = private unnamed_addr constant <{ [60 x i8] }> <{ [60 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc451 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [60 x i8] }>, <{ [60 x i8] }>* @alloc450, i32 0, i32 0, i32 0), [16 x i8] c"<\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@alloc454 = private unnamed_addr constant <{ [65 x i8] }> <{ [65 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/core/src/char/methods.rs" }>, align 1
@alloc453 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [65 x i8] }>, <{ [65 x i8] }>* @alloc454, i32 0, i32 0, i32 0), [16 x i8] c"A\00\00\00\00\00\00\00\9D\06\00\00\0A\00\00\00" }>, align 8
@alloc242 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc244 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc245 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc243 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc242, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc244, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc245, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc455 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [65 x i8] }>, <{ [65 x i8] }>* @alloc454, i32 0, i32 0, i32 0), [16 x i8] c"A\00\00\00\00\00\00\00\96\06\00\00\0E\00\00\00" }>, align 8
@alloc456 = private unnamed_addr constant <{ [62 x i8] }> <{ [62 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc457 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [62 x i8] }>, <{ [62 x i8] }>* @alloc456, i32 0, i32 0, i32 0), [16 x i8] c">\00\00\00\00\00\00\00\9E\08\00\00'\00\00\00" }>, align 8
@alloc458 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc470 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc464 = private unnamed_addr constant <{ [47 x i8] }> <{ [47 x i8] c"assertion failed: BorrowType::PERMITS_TRAVERSAL" }>, align 1
@alloc465 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/btree/node.rs" }>, align 1
@alloc463 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc465, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\EE\03\00\00\09\00\00\00" }>, align 8
@alloc466 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc465, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00A\01\00\00\09\00\00\00" }>, align 8
@alloc471 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/btree/navigate.rs" }>, align 1
@alloc469 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc471, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00L\02\00\00\0D\00\00\00" }>, align 8
@alloc472 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc471, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\BA\00\00\00\15\00\00\00" }>, align 8
@alloc473 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"attempt to join into collection with len > usize::MAX" }>, align 1
@alloc476 = private unnamed_addr constant <{ [57 x i8] }> <{ [57 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/str.rs" }>, align 1
@alloc475 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [57 x i8] }>, <{ [57 x i8] }>* @alloc476, i32 0, i32 0, i32 0), [16 x i8] c"9\00\00\00\00\00\00\00\C2\00\00\00\16\00\00\00" }>, align 8
@alloc477 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [57 x i8] }>, <{ [57 x i8] }>* @alloc476, i32 0, i32 0, i32 0), [16 x i8] c"9\00\00\00\00\00\00\00\A6\00\00\00\18\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc478 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/pattern.rs" }>, align 1
@alloc479 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc478, i32 0, i32 0, i32 0), [16 x i8] c"@\00\00\00\00\00\00\00\B7\01\00\00&\00\00\00" }>, align 8
@alloc480 = private unnamed_addr constant <{ [63 x i8] }> <{ [63 x i8] c"/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc481 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [63 x i8] }>, <{ [63 x i8] }>* @alloc480, i32 0, i32 0, i32 0), [16 x i8] c"?\00\00\00\00\00\00\00\87\00\00\00\01\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }*)* @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h66fcefb7641afb30E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hf7f2343961048f8cE" to i8*) }>, align 8, !dbg !62
@alloc53 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"cargo:rerun-if-changed=build.rs\0A" }>, align 1
@alloc54 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @alloc53, i32 0, i32 0, i32 0), [8 x i8] c" \00\00\00\00\00\00\00" }>, align 8
@alloc485 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"CARGO_FEATURE_RUSTC_DEP_OF_STD" }>, align 1
@alloc486 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"CARGO_FEATURE_ALIGN" }>, align 1
@alloc487 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"CARGO_FEATURE_CONST_EXTERN_FN" }>, align 1
@alloc488 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"LIBC_CI" }>, align 1
@alloc489 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"LIBC_CHECK_CFG" }>, align 1
@alloc490 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"CARGO_FEATURE_USE_STD" }>, align 1
@alloc64 = private unnamed_addr constant <{ [132 x i8] }> <{ [132 x i8] c"cargo:warning=\22libc's use_std cargo feature is deprecated since libc 0.2.55; please consider using the `std` cargo feature instead\22\0A" }>, align 1
@alloc65 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [132 x i8] }>, <{ [132 x i8] }>* @alloc64, i32 0, i32 0, i32 0), [8 x i8] c"\84\00\00\00\00\00\00\00" }>, align 8
@alloc10 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd15" }>, align 1
@alloc9 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd14" }>, align 1
@alloc8 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd13" }>, align 1
@alloc7 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd12" }>, align 1
@alloc6 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd11" }>, align 1
@alloc5 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd10" }>, align 1
@alloc3 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"emscripten_new_stat_abi" }>, align 1
@alloc17 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"libc_deny_warnings" }>, align 1
@alloc22 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"libc_priv_mod_use" }>, align 1
@alloc26 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"libc_union" }>, align 1
@alloc15 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"libc_const_size_of" }>, align 1
@alloc11 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"libc_align" }>, align 1
@alloc18 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"libc_int128" }>, align 1
@alloc16 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"libc_core_cvoid" }>, align 1
@alloc21 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"libc_packedN" }>, align 1
@alloc12 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"libc_cfg_target_vendor" }>, align 1
@alloc20 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"libc_non_exhaustive" }>, align 1
@alloc19 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"libc_long_array" }>, align 1
@alloc23 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"libc_ptr_addr_of" }>, align 1
@alloc25 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"libc_underscore_const_names" }>, align 1
@alloc24 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"libc_thread_local" }>, align 1
@alloc13 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"libc_const_extern_fn" }>, align 1
@alloc514 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"const-extern-fn requires a nightly compiler >= 1.40" }>, align 1
@alloc568 = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs" }>, align 1
@alloc516 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\9E\00\00\00\11\00\00\00" }>, align 8
@alloc14 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"libc_const_extern_fn_unstable" }>, align 1
@alloc4 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [23 x i8] }>, <{ [23 x i8] }>* @alloc3, i32 0, i32 0, i32 0), [8 x i8] c"\17\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc5, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc6, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc7, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc8, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc9, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc10, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc11, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc12, i32 0, i32 0, i32 0), [8 x i8] c"\16\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc13, i32 0, i32 0, i32 0), [8 x i8] c"\14\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc14, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc15, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc16, i32 0, i32 0, i32 0), [8 x i8] c"\0F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc17, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc18, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc19, i32 0, i32 0, i32 0), [8 x i8] c"\0F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc20, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc21, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc22, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc23, i32 0, i32 0, i32 0), [8 x i8] c"\10\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc24, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc25, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc26, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc4 to i8*), [8 x i8] c"\17\00\00\00\00\00\00\00" }>, align 8
@alloc130 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"cargo:rustc-check-cfg=cfg(" }>, align 1
@alloc126 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c")\0A" }>, align 1
@alloc121 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc130, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc126, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc135 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"cargo:rustc-check-cfg=values(" }>, align 1
@alloc125 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc135, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc126, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc35 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"target_os" }>, align 1
@alloc29 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"switch" }>, align 1
@alloc39 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"aix" }>, align 1
@alloc40 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"ohos" }>, align 1
@alloc33 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"hurd" }>, align 1
@alloc30 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc29, i32 0, i32 0, i32 0), [8 x i8] c"\06\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc39, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc40, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc33, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc42 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"target_env" }>, align 1
@alloc36 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"illumos" }>, align 1
@alloc38 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"wasi" }>, align 1
@alloc37 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc36, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc38, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc39, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc40, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc49 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"target_arch" }>, align 1
@alloc43 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"loongarch64" }>, align 1
@alloc45 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mips32r6" }>, align 1
@alloc46 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mips64r6" }>, align 1
@alloc47 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"csky" }>, align 1
@alloc44 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc43, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc45, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc46, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc47, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc50 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc35, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc30 to i8*), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc42, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00", i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc37 to i8*), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc49, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc44 to i8*), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc50 to i8*), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc519 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\22,\22" }>, align 1
@alloc132 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c",values(\22" }>, align 1
@alloc133 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\22))\0A" }>, align 1
@alloc131 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc130, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc132, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc133, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc137 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c",\22" }>, align 1
@alloc138 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\22)\0A" }>, align 1
@alloc136 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc135, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc137, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc138, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc520 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"RUSTC" }>, align 1
@alloc521 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"--version" }>, align 1
@alloc542 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"Failed to get rustc version" }>, align 1
@alloc524 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\CC\00\00\00\0A\00\00\00" }>, align 8
@alloc211 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"failed to run rustc: " }>, align 1
@alloc212 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc211, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc526 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\CE\00\00\00\09\00\00\00" }>, align 8
@alloc215 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"rustc 1" }>, align 1
@alloc216 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc215, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc529 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\D8\00\00\00\09\00\00\00" }>, align 8
@alloc532 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\E6\00\00\00\11\00\00\00" }>, align 8
@alloc535 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\E6\00\00\00\17\00\00\00" }>, align 8
@alloc538 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\E2\00\00\00\17\00\00\00" }>, align 8
@alloc541 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\D4\00\00\00\13\00\00\00" }>, align 8
@alloc544 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\C7\00\00\00\11\00\00\00" }>, align 8
@alloc545 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"dev" }>, align 1
@alloc546 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"nightly" }>, align 1
@alloc547 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"freebsd-version" }>, align 1
@alloc549 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\F0\00\00\00\19\00\00\00" }>, align 8
@alloc551 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\F9\00\00\00\19\00\00\00" }>, align 8
@alloc552 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"10" }>, align 1
@alloc553 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"11" }>, align 1
@alloc554 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"12" }>, align 1
@alloc555 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"13" }>, align 1
@alloc556 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"14" }>, align 1
@alloc557 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"15" }>, align 1
@alloc558 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"emcc" }>, align 1
@alloc559 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"-dumpversion" }>, align 1
@alloc561 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\0E\01\00\00\19\00\00\00" }>, align 8
@alloc563 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\17\01\00\00\1A\00\00\00" }>, align 8
@alloc565 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00!\01\00\00\0A\00\00\00" }>, align 8
@str.4 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc567 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00!\01\00\00\1A\00\00\00" }>, align 8
@alloc298 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"trying to set cfg " }>, align 1
@alloc300 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c", but it is not in ALLOWED_CFGS" }>, align 1
@alloc299 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc298, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc300, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00" }>, align 8
@alloc569 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00&\01\00\00\09\00\00\00" }>, align 8
@alloc302 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"cargo:rustc-cfg=" }>, align 1
@alloc304 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc303 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc302, i32 0, i32 0, i32 0), [8 x i8] c"\10\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc304, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hde391a5afa9e9d5fE"({ i64*, i64* }* align 8 %self, i64 %init) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !228 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %g.dbg.spill = alloca {}, align 1
  %init.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_10 = alloca i8, align 1
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !283, metadata !DIExpression()), !dbg !291
  store i64 %init, i64* %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %init.dbg.spill, metadata !284, metadata !DIExpression()), !dbg !292
  call void @llvm.dbg.declare(metadata {}* %g.dbg.spill, metadata !285, metadata !DIExpression()), !dbg !293
  store i8 1, i8* %_10, align 1, !dbg !294
  %_8 = bitcast { i64*, i64* }* %self to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, !dbg !295
; invoke core::iter::adapters::map::map_try_fold
  %_6 = invoke align 1 i8* @_ZN4core4iter8adapters3map12map_try_fold17h5d9949c75bca8e00E(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_8)
          to label %bb1 unwind label %cleanup, !dbg !296

bb5:                                              ; preds = %cleanup
  %1 = load i8, i8* %_10, align 1, !dbg !297, !range !298, !noundef !23
  %2 = trunc i8 %1 to i1, !dbg !297
  br i1 %2, label %bb4, label %bb3, !dbg !297

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1, !dbg !299
; invoke core::iter::traits::iterator::Iterator::try_fold
  %8 = invoke { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h804e1fa3a82938baE({ i64*, i64* }* align 8 %self, i64 %init, i8* align 1 %_6)
          to label %bb2 unwind label %cleanup, !dbg !299

bb2:                                              ; preds = %bb1
  %9 = extractvalue { i64, i64 } %8, 0, !dbg !299
  %10 = extractvalue { i64, i64 } %8, 1, !dbg !299
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !300
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !300
  ret { i64, i64 } %12, !dbg !300

bb3:                                              ; preds = %bb4, %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**, !dbg !301
  %14 = load i8*, i8** %13, align 8, !dbg !301
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !301
  %16 = load i32, i32* %15, align 8, !dbg !301
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0, !dbg !301
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1, !dbg !301
  resume { i8*, i32 } %18, !dbg !301

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !297
}

; <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hd14d3cea297d7d0cE"(%"core::str::iter::CharIndices"* align 8 %self) unnamed_addr #1 !dbg !302 {
start:
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %_4 = alloca { i64*, i64* }, align 8
  store %"core::str::iter::CharIndices"* %self, %"core::str::iter::CharIndices"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %self.dbg.spill, metadata !352, metadata !DIExpression()), !dbg !353
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !354
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !354
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !355, metadata !DIExpression()), !dbg !375
; call core::str::validations::next_code_point_reverse
  %0 = call { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h50f495398b647d05E({ i8*, i8* }* align 8 %self1), !dbg !375
  %_7.0 = extractvalue { i32, i32 } %0, 0, !dbg !375
  %_7.1 = extractvalue { i32, i32 } %0, 1, !dbg !375
  br label %bb2, !dbg !375

bb2:                                              ; preds = %start
; call core::option::Option<T>::map
  %_2 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h3f436848a7f497cbE"(i32 %_7.0, i32 %_7.1), !dbg !375, !range !376
  br label %bb3, !dbg !375

bb3:                                              ; preds = %bb2
  %_5 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !377
  %_6 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !377
  %1 = bitcast { i64*, i64* }* %_4 to i64**, !dbg !377
  store i64* %_5, i64** %1, align 8, !dbg !377
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_4, i32 0, i32 1, !dbg !377
  %3 = bitcast i64** %2 to { i8*, i8* }**, !dbg !377
  store { i8*, i8* }* %_6, { i8*, i8* }** %3, align 8, !dbg !377
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_4, i32 0, i32 0, !dbg !354
  %5 = load i64*, i64** %4, align 8, !dbg !354, !nonnull !23, !align !378, !noundef !23
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_4, i32 0, i32 1, !dbg !354
  %7 = load i64*, i64** %6, align 8, !dbg !354, !nonnull !23, !align !378, !noundef !23
; call core::option::Option<T>::map
  %8 = call { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h3984b168e8c3f767E"(i32 %_2, i64* align 8 %5, i64* align 8 %7), !dbg !354
  %9 = extractvalue { i64, i32 } %8, 0, !dbg !354
  %10 = extractvalue { i64, i32 } %8, 1, !dbg !354
  br label %bb1, !dbg !354

bb1:                                              ; preds = %bb3
  %11 = insertvalue { i64, i32 } undef, i64 %9, 0, !dbg !379
  %12 = insertvalue { i64, i32 } %11, i32 %10, 1, !dbg !379
  ret { i64, i32 } %12, !dbg !379
}

; <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h6c6e3c36a8b19a83E"(i64* align 8 %_1.0, i64* align 8 %_1.1, i32 %ch) unnamed_addr #1 !dbg !380 {
start:
  %index.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca { i64*, i64* }, align 8
  %4 = alloca { i64, i32 }, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1.dbg.spill, i32 0, i32 0
  store i64* %_1.0, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1.dbg.spill, i32 0, i32 1
  store i64* %_1.1, i64** %6, align 8
  %7 = bitcast { i64*, i64* }* %_1.dbg.spill to i64**
  %8 = load i64*, i64** %7, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1.dbg.spill, metadata !392, metadata !DIExpression(DW_OP_deref)), !dbg !396
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1.dbg.spill, i32 0, i32 1
  %10 = bitcast i64** %9 to { i8*, i8* }**
  %11 = load { i8*, i8* }*, { i8*, i8* }** %10, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1.dbg.spill, metadata !393, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !396
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !391, metadata !DIExpression()), !dbg !397
  %_4 = load i64, i64* %_1.0, align 8, !dbg !398
  %_10 = bitcast i64* %_1.1 to { i8*, i8* }*, !dbg !399
  store { i8*, i8* }* %_10, { i8*, i8* }** %self.dbg.spill, align 8, !dbg !399
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !400, metadata !DIExpression()), !dbg !417
  %12 = bitcast { i8*, i8* }* %_10 to i8**, !dbg !417
  %start1 = load i8*, i8** %12, align 8, !dbg !417, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !417
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !408, metadata !DIExpression()), !dbg !419
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !420
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !411, metadata !DIExpression()), !dbg !432
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1, !dbg !432
  %self = load i8*, i8** %13, align 8, !dbg !432, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !432
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !433, metadata !DIExpression()), !dbg !440
  %14 = bitcast i64* %3 to i8**, !dbg !440
  store i8* %self, i8** %14, align 8, !dbg !440
  %_20 = load i64, i64* %3, align 8, !dbg !440
  br label %bb3, !dbg !440

bb3:                                              ; preds = %start
  store i8* %start1, i8** %self.dbg.spill3, align 8, !dbg !432
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !442, metadata !DIExpression()), !dbg !450
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !450
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !452, metadata !DIExpression()), !dbg !461
  %15 = bitcast i64* %2 to i8**, !dbg !461
  store i8* %start1, i8** %15, align 8, !dbg !461
  %_22 = load i64, i64* %2, align 8, !dbg !461
  br label %bb4, !dbg !461

bb4:                                              ; preds = %bb3
  %16 = sub nuw i64 %_20, %_22, !dbg !432
  store i64 %16, i64* %1, align 8, !dbg !432
  %diff = load i64, i64* %1, align 8, !dbg !432
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !432
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !414, metadata !DIExpression()), !dbg !462
  br label %bb1, !dbg !432

bb1:                                              ; preds = %bb4
  %17 = udiv exact i64 %diff, 1, !dbg !462
  store i64 %17, i64* %0, align 8, !dbg !462
  %_5 = load i64, i64* %0, align 8, !dbg !462
  br label %bb2, !dbg !462

bb2:                                              ; preds = %bb1
  %index = add i64 %_4, %_5, !dbg !398
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !398
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !394, metadata !DIExpression()), !dbg !463
  %18 = bitcast { i64, i32 }* %4 to i64*, !dbg !464
  store i64 %index, i64* %18, align 8, !dbg !464
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1, !dbg !464
  store i32 %ch, i32* %19, align 8, !dbg !464
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0, !dbg !465
  %21 = load i64, i64* %20, align 8, !dbg !465
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1, !dbg !465
  %23 = load i32, i32* %22, align 8, !dbg !465, !range !466, !noundef !23
  %24 = insertvalue { i64, i32 } undef, i64 %21, 0, !dbg !465
  %25 = insertvalue { i64, i32 } %24, i32 %23, 1, !dbg !465
  ret { i64, i32 } %25, !dbg !465
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17hdeb12630264c5c15E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #1 !dbg !467 {
start:
  %char_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %diff.dbg.spill18 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %self.dbg.spill15 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %size.dbg.spill12 = alloca i64, align 8
  %start.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %s.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_5 = alloca { i64, i32 }, align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !502, metadata !DIExpression()), !dbg !514
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, i32 0, i32 2, !dbg !515
  store %"core::str::iter::CharIndices"* %s, %"core::str::iter::CharIndices"** %s.dbg.spill, align 8, !dbg !515
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %s.dbg.spill, metadata !503, metadata !DIExpression()), !dbg !516
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !517
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !517
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !518, metadata !DIExpression()), !dbg !531
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !531
  %start3 = load i8*, i8** %9, align 8, !dbg !531, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !531
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !522, metadata !DIExpression()), !dbg !532
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !533
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !525, metadata !DIExpression()), !dbg !539
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !539
  %self4 = load i8*, i8** %10, align 8, !dbg !539, !rawptr !418
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !539
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !540, metadata !DIExpression()), !dbg !544
  %11 = bitcast i64* %8 to i8**, !dbg !544
  store i8* %self4, i8** %11, align 8, !dbg !544
  %_35 = load i64, i64* %8, align 8, !dbg !544
  br label %bb11, !dbg !544

bb11:                                             ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !539
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !546, metadata !DIExpression()), !dbg !550
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !550
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !552, metadata !DIExpression()), !dbg !556
  %12 = bitcast i64* %7 to i8**, !dbg !556
  store i8* %start3, i8** %12, align 8, !dbg !556
  %_37 = load i64, i64* %7, align 8, !dbg !556
  br label %bb12, !dbg !556

bb12:                                             ; preds = %bb11
  %13 = sub nuw i64 %_35, %_37, !dbg !539
  store i64 %13, i64* %6, align 8, !dbg !539
  %diff = load i64, i64* %6, align 8, !dbg !539
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !539
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !528, metadata !DIExpression()), !dbg !557
  br label %bb9, !dbg !539

bb9:                                              ; preds = %bb12
  %14 = udiv exact i64 %diff, 1, !dbg !557
  store i64 %14, i64* %5, align 8, !dbg !557
  %pre_len = load i64, i64* %5, align 8, !dbg !557
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !505, metadata !DIExpression()), !dbg !558
  br label %bb10, !dbg !557

bb10:                                             ; preds = %bb9
; call <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %15 = call { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hd14d3cea297d7d0cE"(%"core::str::iter::CharIndices"* align 8 %s), !dbg !559
  store { i64, i32 } %15, { i64, i32 }* %_5, align 8, !dbg !559
  br label %bb1, !dbg !559

bb1:                                              ; preds = %bb10
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !560
  %17 = load i32, i32* %16, align 8, !dbg !560, !range !376, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !560
  %19 = icmp eq i32 %18, 0, !dbg !560
  %_7 = select i1 %19, i64 0, i64 1, !dbg !560
  %20 = icmp eq i64 %_7, 1, !dbg !560
  br i1 %20, label %bb2, label %bb6, !dbg !560

bb2:                                              ; preds = %bb1
  %21 = bitcast { i64, i32 }* %_5 to i64*, !dbg !561
  %i = load i64, i64* %21, align 8, !dbg !561
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !561
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !507, metadata !DIExpression()), !dbg !561
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !562
  %c = load i32, i32* %22, align 8, !dbg !562, !range !466, !noundef !23
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !562
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !509, metadata !DIExpression()), !dbg !562
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !563
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !563
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !564, metadata !DIExpression()), !dbg !577
  %23 = bitcast { i8*, i8* }* %self8 to i8**, !dbg !577
  %start10 = load i8*, i8** %23, align 8, !dbg !577, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start10, i8** %start.dbg.spill11, align 8, !dbg !577
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill11, metadata !568, metadata !DIExpression()), !dbg !578
  store i64 1, i64* %size.dbg.spill12, align 8, !dbg !579
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill12, metadata !571, metadata !DIExpression()), !dbg !585
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self8, i32 0, i32 1, !dbg !585
  %self13 = load i8*, i8** %24, align 8, !dbg !585, !rawptr !418
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !585
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !586, metadata !DIExpression()), !dbg !590
  %25 = bitcast i64* %4 to i8**, !dbg !590
  store i8* %self13, i8** %25, align 8, !dbg !590
  %_54 = load i64, i64* %4, align 8, !dbg !590
  br label %bb15, !dbg !590

bb6:                                              ; preds = %bb1
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !592
  store i64 2, i64* %26, align 8, !dbg !592
  br label %bb8, !dbg !593

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !593

bb15:                                             ; preds = %bb2
  store i8* %start10, i8** %self.dbg.spill15, align 8, !dbg !585
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill15, metadata !594, metadata !DIExpression()), !dbg !598
  store i8* %start10, i8** %self.dbg.spill16, align 8, !dbg !598
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !600, metadata !DIExpression()), !dbg !604
  %27 = bitcast i64* %3 to i8**, !dbg !604
  store i8* %start10, i8** %27, align 8, !dbg !604
  %_56 = load i64, i64* %3, align 8, !dbg !604
  br label %bb16, !dbg !604

bb16:                                             ; preds = %bb15
  %28 = sub nuw i64 %_54, %_56, !dbg !585
  store i64 %28, i64* %2, align 8, !dbg !585
  %diff17 = load i64, i64* %2, align 8, !dbg !585
  store i64 %diff17, i64* %diff.dbg.spill18, align 8, !dbg !585
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill18, metadata !574, metadata !DIExpression()), !dbg !605
  br label %bb13, !dbg !585

bb13:                                             ; preds = %bb16
  %29 = udiv exact i64 %diff17, 1, !dbg !605
  store i64 %29, i64* %1, align 8, !dbg !605
  %len = load i64, i64* %1, align 8, !dbg !605
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !605
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !510, metadata !DIExpression()), !dbg !606
  br label %bb14, !dbg !605

bb14:                                             ; preds = %bb13
  %char_len = sub i64 %pre_len, %len, !dbg !607
  store i64 %char_len, i64* %char_len.dbg.spill, align 8, !dbg !607
  call void @llvm.dbg.declare(metadata i64* %char_len.dbg.spill, metadata !512, metadata !DIExpression()), !dbg !608
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !609
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hb6967cc43833833dE"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %_16, i32 %c), !dbg !609
  br label %bb3, !dbg !609

bb3:                                              ; preds = %bb14
  br i1 %_15, label %bb4, label %bb5, !dbg !609

bb5:                                              ; preds = %bb3
  %_23 = add i64 %i, %char_len, !dbg !610
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !611
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1, !dbg !611
  store i64 %i, i64* %31, align 8, !dbg !611
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !611
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2, !dbg !611
  store i64 %_23, i64* %33, align 8, !dbg !611
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !611
  store i64 1, i64* %34, align 8, !dbg !611
  br label %bb7, !dbg !612

bb4:                                              ; preds = %bb3
  %_19 = add i64 %i, %char_len, !dbg !613
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !614
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1, !dbg !614
  store i64 %i, i64* %36, align 8, !dbg !614
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !614
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2, !dbg !614
  store i64 %_19, i64* %38, align 8, !dbg !614
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !614
  store i64 0, i64* %39, align 8, !dbg !614
  br label %bb7, !dbg !615

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8, !dbg !593
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h76e86bdfaf487fe2E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !616 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_22 = alloca { i8*, i64 }, align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !635, metadata !DIExpression()), !dbg !648
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !636, metadata !DIExpression()), !dbg !649
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]"* %runtime, metadata !637, metadata !DIExpression()), !dbg !650
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !651
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !651
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !651
  store i64 %slice.1, i64* %6, align 8, !dbg !651
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !652, metadata !DIExpression()), !dbg !659
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !659, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !659
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !660, metadata !DIExpression()), !dbg !667
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !666, metadata !DIExpression()), !dbg !667
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !669, metadata !DIExpression()), !dbg !677
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !676, metadata !DIExpression()), !dbg !677
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !677
  store i8* %7, i8** %0, align 8, !dbg !677
  %data = load i8*, i8** %0, align 8, !dbg !677, !rawptr !418
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !677
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !679, metadata !DIExpression()), !dbg !687
  br label %bb1, !dbg !677

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !689
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !689
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !686, metadata !DIExpression()), !dbg !687
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !687
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !690, metadata !DIExpression()), !dbg !698
  %data_address = bitcast i8* %data to {}*, !dbg !698, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !698
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !700, metadata !DIExpression()), !dbg !709
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !687
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !708, metadata !DIExpression()), !dbg !709
  %8 = bitcast { i8*, i64 }* %_22 to {}**, !dbg !709, !rawptr !418
  store {}* %data_address, {}** %8, align 8, !dbg !709
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !709
  store i64 %len, i64* %9, align 8, !dbg !709
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { i8*, i64 }*, !dbg !709
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 0, !dbg !709
  %12 = load i8*, i8** %11, align 8, !dbg !709
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !709
  %14 = load i64, i64* %13, align 8, !dbg !709
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !709
  store i8* %12, i8** %15, align 8, !dbg !709
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !709
  store i64 %14, i64* %16, align 8, !dbg !709
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { [0 x i8]*, i64 }*, !dbg !709
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !709
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !709, !rawptr !418
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !709
  %21 = load i64, i64* %20, align 8, !dbg !709, !rawptr !418
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !711
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !711
  ret { [0 x i8]*, i64 } %23, !dbg !711
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h4d1b0eebe640be38E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !712 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !720, metadata !DIExpression()), !dbg !732
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !721, metadata !DIExpression()), !dbg !733
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]"* %runtime, metadata !722, metadata !DIExpression()), !dbg !734
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !735
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !735
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !735
  store i64 %slice.1, i64* %6, align 8, !dbg !735
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !736, metadata !DIExpression()), !dbg !743
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !743, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !743
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !744, metadata !DIExpression()), !dbg !751
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !752
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !750, metadata !DIExpression()), !dbg !751
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !751
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !753, metadata !DIExpression()), !dbg !760
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !751
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !759, metadata !DIExpression()), !dbg !760
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !760
  store i8* %7, i8** %0, align 8, !dbg !760
  %_15 = load i8*, i8** %0, align 8, !dbg !760, !rawptr !418
  br label %bb1, !dbg !760

bb1:                                              ; preds = %start
  store i8* %_15, i8** %data.dbg.spill, align 8, !dbg !760
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !762, metadata !DIExpression()), !dbg !769
  %len = sub i64 %self.1, %self.0, !dbg !771
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !771
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !768, metadata !DIExpression()), !dbg !769
  store i8* %_15, i8** %self.dbg.spill5, align 8, !dbg !769
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !772, metadata !DIExpression()), !dbg !779
  %data_address = bitcast i8* %_15 to {}*, !dbg !779, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !779
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !781, metadata !DIExpression()), !dbg !788
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !769
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !787, metadata !DIExpression()), !dbg !788
  %8 = bitcast { i8*, i64 }* %_24 to {}**, !dbg !788, !rawptr !418
  store {}* %data_address, {}** %8, align 8, !dbg !788
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !788
  store i64 %len, i64* %9, align 8, !dbg !788
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !788
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !788
  %12 = load i8*, i8** %11, align 8, !dbg !788
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !788
  %14 = load i64, i64* %13, align 8, !dbg !788
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !788
  store i8* %12, i8** %15, align 8, !dbg !788
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !788
  store i64 %14, i64* %16, align 8, !dbg !788
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !788
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !788
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !788, !rawptr !418
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !788
  %21 = load i64, i64* %20, align 8, !dbg !788, !rawptr !418
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !790
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !790
  ret { [0 x i8]*, i64 } %23, !dbg !790
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he72d74f046ab17e7E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !791 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !809, metadata !DIExpression()), !dbg !822
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !810, metadata !DIExpression()), !dbg !823
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]"* %runtime, metadata !811, metadata !DIExpression()), !dbg !824
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !825
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !825
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !825
  store i64 %slice.1, i64* %6, align 8, !dbg !825
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !826, metadata !DIExpression()), !dbg !833
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !833, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !833
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !834, metadata !DIExpression()), !dbg !841
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !842
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !840, metadata !DIExpression()), !dbg !841
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !841
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !843, metadata !DIExpression()), !dbg !850
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !841
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !849, metadata !DIExpression()), !dbg !850
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !850
  store i8* %7, i8** %0, align 8, !dbg !850
  %_15 = load i8*, i8** %0, align 8, !dbg !850, !rawptr !418
  br label %bb1, !dbg !850

bb1:                                              ; preds = %start
  store i8* %_15, i8** %data.dbg.spill, align 8, !dbg !850
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !852, metadata !DIExpression()), !dbg !859
  %len = sub i64 %self.1, %self.0, !dbg !861
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !861
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !858, metadata !DIExpression()), !dbg !859
  store i8* %_15, i8** %self.dbg.spill5, align 8, !dbg !859
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !862, metadata !DIExpression()), !dbg !869
  %data_address = bitcast i8* %_15 to {}*, !dbg !869, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !869
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !871, metadata !DIExpression()), !dbg !878
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !859
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !877, metadata !DIExpression()), !dbg !878
  %8 = bitcast { i8*, i64 }* %_24 to {}**, !dbg !878, !rawptr !418
  store {}* %data_address, {}** %8, align 8, !dbg !878
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !878
  store i64 %len, i64* %9, align 8, !dbg !878
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_23 to { i8*, i64 }*, !dbg !878
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !878
  %12 = load i8*, i8** %11, align 8, !dbg !878
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !878
  %14 = load i64, i64* %13, align 8, !dbg !878
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !878
  store i8* %12, i8** %15, align 8, !dbg !878
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !878
  store i64 %14, i64* %16, align 8, !dbg !878
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !878
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !878
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !878, !rawptr !418
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !878
  %21 = load i64, i64* %20, align 8, !dbg !878, !rawptr !418
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !880
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !880
  ret { [0 x i8]*, i64 } %23, !dbg !880
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h47415f499ca832f7E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !881 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !902, metadata !DIExpression()), !dbg !904
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !903, metadata !DIExpression()), !dbg !905
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !906
  br i1 %_4, label %bb1, label %bb2, !dbg !906

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1, !dbg !907
  %5 = zext i1 %_7 to i8, !dbg !906
  store i8 %5, i8* %_3, align 1, !dbg !906
  br label %bb3, !dbg !906

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !906
  br label %bb3, !dbg !906

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !906, !range !298, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !906
  br i1 %7, label %bb4, label %bb5, !dbg !906

bb5:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h76e86bdfaf487fe2E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !908
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !908
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !908
  br label %bb6, !dbg !908

bb4:                                              ; preds = %bb3
  %9 = bitcast { i8*, i64 }* %0 to {}**, !dbg !909
  store {}* null, {}** %9, align 8, !dbg !909
  br label %bb7, !dbg !910

bb7:                                              ; preds = %bb6, %bb4
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !911
  %11 = load i8*, i8** %10, align 8, !dbg !911, !align !912
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !911
  %13 = load i64, i64* %12, align 8, !dbg !911
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0, !dbg !911
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1, !dbg !911
  ret { i8*, i64 } %15, !dbg !911

bb6:                                              ; preds = %bb5
  %16 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !913
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !913
  store [0 x i8]* %_13.0, [0 x i8]** %17, align 8, !dbg !913
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !913
  store i64 %_13.1, i64* %18, align 8, !dbg !913
  br label %bb7, !dbg !910
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h77b2b2fb35959fa1E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !914 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !926, metadata !DIExpression()), !dbg !928
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !927, metadata !DIExpression()), !dbg !929
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !930
  br i1 %_3, label %bb1, label %bb2, !dbg !930

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !931
  br i1 %_9, label %bb3, label %bb4, !dbg !931

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h2fa68cd22f1dfc6cE(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !932
  unreachable, !dbg !932

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h76e86bdfaf487fe2E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !933
  %_17.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !933
  %_17.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !933
  br label %bb5, !dbg !933

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17he222ce128646632bE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !934
  unreachable, !dbg !934

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_17.0, 0, !dbg !935
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_17.1, 1, !dbg !935
  ret { [0 x i8]*, i64 } %7, !dbg !935
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf22b940d4cf19807E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !936 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !944, metadata !DIExpression()), !dbg !946
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !945, metadata !DIExpression()), !dbg !947
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !948
  br i1 %_4, label %bb1, label %bb2, !dbg !948

bb2:                                              ; preds = %start
  %_10 = icmp ugt i64 %self.1, %slice.1, !dbg !949
  br i1 %_10, label %bb3, label %bb4, !dbg !949

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h2fa68cd22f1dfc6cE(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !950
  unreachable, !dbg !950

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h4d1b0eebe640be38E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !951
  %_20.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !951
  %_20.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !951
  br label %bb5, !dbg !951

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17he222ce128646632bE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !952
  unreachable, !dbg !952

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_20.0, 0, !dbg !953
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_20.1, 1, !dbg !953
  ret { [0 x i8]*, i64 } %7, !dbg !953
}

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h094c5f2aa01eda5eE"({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !954 {
start:
  %self.dbg.spill20 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8, !rawptr !418
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !971, metadata !DIExpression()), !dbg !972
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !973, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !994, metadata !DIExpression()), !dbg !1001
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !993
  %self2 = load i8*, i8** %7, align 8, !dbg !993, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !993
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1014, metadata !DIExpression()), !dbg !1018
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !1018
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !991, metadata !DIExpression()), !dbg !1019
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !1019
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1020, metadata !DIExpression()), !dbg !1027
  %8 = bitcast {}** %5 to i64*, !dbg !1029
  store i64 0, i64* %8, align 8, !dbg !1029
  %data_address = load {}*, {}** %5, align 8, !dbg !1029, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1029
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !979, metadata !DIExpression()), !dbg !980
  br label %bb9, !dbg !1029

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !980, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !980
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !980
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !980
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !980
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !980
  %other = load i8*, i8** %13, align 8, !dbg !980, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !980
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1026, metadata !DIExpression()), !dbg !1027
  %14 = icmp eq i8* %self2, %other, !dbg !1027
  %15 = zext i1 %14 to i8, !dbg !1027
  store i8 %15, i8* %4, align 1, !dbg !1027
  %16 = load i8, i8* %4, align 1, !dbg !1027, !range !298, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !1027
  br label %bb10, !dbg !1027

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !1039
  call void @llvm.assume(i1 %_3), !dbg !1040
  br label %bb1, !dbg !1040

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !1041

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !1042

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1013
  %self6 = load i8*, i8** %17, align 8, !dbg !1013, !rawptr !418
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !1013
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1011, metadata !DIExpression()), !dbg !1043
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !1043
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1044, metadata !DIExpression()), !dbg !1051
  %18 = bitcast {}** %3 to i64*, !dbg !1053
  store i64 0, i64* %18, align 8, !dbg !1053
  %data_address9 = load {}*, {}** %3, align 8, !dbg !1053, !rawptr !418
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !1053
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !1000, metadata !DIExpression()), !dbg !1001
  br label %bb11, !dbg !1053

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !1001, !rawptr !418
  store {}* %data_address9, {}** %19, align 8, !dbg !1001
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1001
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !1001
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !1001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !1001
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !1001
  %other11 = load i8*, i8** %23, align 8, !dbg !1001, !rawptr !418
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !1001
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !1050, metadata !DIExpression()), !dbg !1051
  %24 = icmp eq i8* %self6, %other11, !dbg !1051
  %25 = zext i1 %24 to i8, !dbg !1051
  store i8 %25, i8* %2, align 1, !dbg !1051
  %26 = load i8, i8* %2, align 1, !dbg !1051, !range !298, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !1051
  br label %bb12, !dbg !1051

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !1061
  call void @llvm.assume(i1 %_9), !dbg !1062
  br label %bb3, !dbg !1062

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !1042

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !1063
  %self13 = load i8*, i8** %27, align 8, !dbg !1063, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !1063
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !1064, metadata !DIExpression()), !dbg !1068
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1063
  %_16 = load i8*, i8** %28, align 8, !dbg !1063, !rawptr !418
  %_12 = icmp eq i8* %self13, %_16, !dbg !1063
  br i1 %_12, label %bb6, label %bb7, !dbg !1063

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !1070
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !1071, metadata !DIExpression()), !dbg !1077
  br i1 false, label %bb13, label %bb14, !dbg !1077

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !1079
  store {}* null, {}** %29, align 8, !dbg !1079
  br label %bb8, !dbg !1080

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !1081, !align !912
  ret i8* %30, !dbg !1081

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1077
  %_56 = load i8*, i8** %31, align 8, !dbg !1077, !rawptr !418
  store i8* %_56, i8** %self.dbg.spill18, align 8, !dbg !1077
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !1082, metadata !DIExpression()), !dbg !1087
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !1087
  store i8* %32, i8** %0, align 8, !dbg !1087
  %_54 = load i8*, i8** %0, align 8, !dbg !1087, !rawptr !418
  br label %bb16, !dbg !1087

bb14:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1077
  %self16 = load i8*, i8** %33, align 8, !dbg !1077, !rawptr !418
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !1077
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !1089, metadata !DIExpression()), !dbg !1094
  %34 = getelementptr inbounds i8, i8* %self16, i64 -1, !dbg !1094
  store i8* %34, i8** %1, align 8, !dbg !1094
  %_60 = load i8*, i8** %1, align 8, !dbg !1094, !rawptr !418
  br label %bb17, !dbg !1094

bb17:                                             ; preds = %bb14
  %35 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1077, !rawptr !418
  store i8* %_60, i8** %35, align 8, !dbg !1077
  %36 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1077
  %37 = load i8*, i8** %36, align 8, !dbg !1077, !rawptr !418
  store i8* %37, i8** %_19, align 8, !dbg !1077
  br label %bb15, !dbg !1077

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !1070
  store i8* %_18, i8** %6, align 8, !dbg !1096
  br label %bb8, !dbg !1080

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1077, !rawptr !418
  store i8* %_54, i8** %38, align 8, !dbg !1077
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !1077
  %self19 = load i8*, i8** %39, align 8, !dbg !1077, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self19, i8** %self.dbg.spill20, align 8, !dbg !1077
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !1097, metadata !DIExpression()), !dbg !1101
  store i8* %self19, i8** %_19, align 8, !dbg !1077
  br label %bb15, !dbg !1077
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h89c0ff6501dbe27dE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #1 !dbg !1103 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  store %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !1131, metadata !DIExpression()), !dbg !1132
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, !dbg !1133
; call core::str::pattern::ReverseSearcher::next_reject_back
  call void @_ZN4core3str7pattern15ReverseSearcher16next_reject_back17h76b240203b87ff55E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %_2), !dbg !1133
  br label %bb1, !dbg !1133

bb1:                                              ; preds = %start
  ret void, !dbg !1134
}

; <alloc::collections::btree::map::BTreeMap<K,V,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbf56b171ae3f161eE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self) unnamed_addr #0 !dbg !1135 {
start:
  %self.dbg.spill14 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"*, align 8
  %src.dbg.spill13 = alloca %"alloc::alloc::Global"*, align 8
  %slot.dbg.spill12 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, align 8
  %self.dbg.spill11 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %self.dbg.spill10 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %root.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill9 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"*, align 8
  %src.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %slot.dbg.spill8 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, align 8
  %self.dbg.spill7 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %self.dbg.spill6 = alloca { i64, i64* }*, align 8
  %self.dbg.spill4 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %slot.dbg.spill3 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", align 1
  %self.dbg.spill2 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", align 1
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1, !rawptr !418
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1, !rawptr !418
  %_32 = alloca { i64, i64* }, align 8
  %_28 = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_22 = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_13 = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %full_range = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_4 = alloca { i64, i64* }, align 8
  %value = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, metadata !1401, metadata !DIExpression()), !dbg !1413
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, metadata !1402, metadata !DIExpression()), !dbg !1414
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %value, metadata !1415, metadata !DIExpression()), !dbg !1422
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %full_range, metadata !1411, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, metadata !1425, metadata !DIExpression()), !dbg !1439
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %self.dbg.spill, metadata !1449, metadata !DIExpression()), !dbg !1456
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %slot.dbg.spill, metadata !1458, metadata !DIExpression()), !dbg !1464
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1, metadata !1466, metadata !DIExpression()), !dbg !1473
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %self.dbg.spill2, metadata !1480, metadata !DIExpression()), !dbg !1484
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %slot.dbg.spill3, metadata !1486, metadata !DIExpression()), !dbg !1490
  %1 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %value to i8*, !dbg !1492
  %2 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to i8*, !dbg !1492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !1492
  %3 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_28 to i8*, !dbg !1422
  %4 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %value to i8*, !dbg !1422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !1422
  %5 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1422
  %6 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %5 to i8*, !dbg !1422
  %7 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_28 to i8*, !dbg !1422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !1422
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, align 8, !dbg !1493
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, metadata !1494, metadata !DIExpression()), !dbg !1503
  %_30 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1503
  %self5 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_30 to { i64, i64* }*, !dbg !1493
  store { i64, i64* }* %self5, { i64, i64* }** %self.dbg.spill6, align 8, !dbg !1493
  call void @llvm.dbg.declare(metadata { i64, i64* }** %self.dbg.spill6, metadata !1504, metadata !DIExpression()), !dbg !1512
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_32, i32 0, i32 1, !dbg !1512
  %9 = bitcast i64** %8 to {}**, !dbg !1512
  store {}* null, {}** %9, align 8, !dbg !1512
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_32, i32 0, i32 0, !dbg !1512
  %11 = load i64, i64* %10, align 8, !dbg !1512
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_32, i32 0, i32 1, !dbg !1512
  %13 = load i64*, i64** %12, align 8, !dbg !1512
; call core::mem::replace
  %14 = call { i64, i64* } @_ZN4core3mem7replace17h6dbfd2d9b173c1ffE({ i64, i64* }* align 8 %self5, i64 %11, i64* %13), !dbg !1512
  store { i64, i64* } %14, { i64, i64* }* %_4, align 8, !dbg !1512
  br label %bb7, !dbg !1512

bb7:                                              ; preds = %start
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_4, i32 0, i32 1, !dbg !1513
  %16 = bitcast i64** %15 to {}**, !dbg !1513
  %17 = load {}*, {}** %16, align 8, !dbg !1513
  %18 = icmp eq {}* %17, null, !dbg !1513
  %_8 = select i1 %18, i64 0, i64 1, !dbg !1513
  %19 = icmp eq i64 %_8, 1, !dbg !1513
  br i1 %19, label %bb1, label %bb4, !dbg !1513

bb1:                                              ; preds = %bb7
  %20 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_4, i32 0, i32 0, !dbg !1514
  %root.0 = load i64, i64* %20, align 8, !dbg !1514
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_4, i32 0, i32 1, !dbg !1514
  %root.1 = load i64*, i64** %21, align 8, !dbg !1514, !nonnull !23, !noundef !23
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 0, !dbg !1514
  store i64 %root.0, i64* %22, align 8, !dbg !1514
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 1, !dbg !1514
  store i64* %root.1, i64** %23, align 8, !dbg !1514
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root.dbg.spill, metadata !1409, metadata !DIExpression()), !dbg !1514
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,Type>::into_dying
  %24 = call { i64, i64* } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$Type$GT$10into_dying17h848264588b0c6279E"(i64 %root.0, i64* %root.1), !dbg !1515
  %_11.0 = extractvalue { i64, i64* } %24, 0, !dbg !1515
  %_11.1 = extractvalue { i64, i64* } %24, 1, !dbg !1515
  br label %bb2, !dbg !1515

bb4:                                              ; preds = %bb7
; call alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::none
  call void @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$4none17h98716b5a8b6b4e9fE"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %_22), !dbg !1516
  br label %bb5, !dbg !1516

bb5:                                              ; preds = %bb4
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill7, align 8, !dbg !1517
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill7, metadata !1518, metadata !DIExpression()), !dbg !1522
  %_48 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1522
  %_25 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_48 to %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, !dbg !1523
  store %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_25, %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill8, align 8, !dbg !1523
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill8, metadata !1477, metadata !DIExpression()), !dbg !1524
  %_50 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_25 to %"alloc::alloc::Global"*, !dbg !1524, !rawptr !418
  store %"alloc::alloc::Global"* %_50, %"alloc::alloc::Global"** %src.dbg.spill, align 8, !dbg !1524
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %src.dbg.spill, metadata !1471, metadata !DIExpression()), !dbg !1525
  %25 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1 to {}*, !dbg !1526
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1, %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill9, align 8, !dbg !1473
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill9, metadata !1530, metadata !DIExpression()), !dbg !1538
  %_53 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1 to %"alloc::alloc::Global"*, !dbg !1538, !rawptr !418
  %26 = bitcast %"alloc::alloc::Global"* %_53 to i8*, !dbg !1473
  %27 = bitcast %"alloc::alloc::Global"* %_50 to i8*, !dbg !1473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 0, i1 false), !dbg !1473
  br label %bb9, !dbg !1484

bb9:                                              ; preds = %bb5
  %28 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1540
  %29 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %28 to i8*, !dbg !1540
  %30 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_22 to i8*, !dbg !1540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 64, i1 false), !dbg !1540
  %31 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 2, !dbg !1540
  store i64 0, i64* %31, align 8, !dbg !1540
  %32 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::alloc::Global"*, !dbg !1540
  br label %bb6, !dbg !1541

bb6:                                              ; preds = %bb8, %bb9
  ret void, !dbg !1542

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::full_range
  call void @"_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17hc1846c3e5363f932E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %full_range, i64 %_11.0, i64* %_11.1), !dbg !1515
  br label %bb3, !dbg !1515

bb3:                                              ; preds = %bb2
  %33 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_13 to i8*, !dbg !1543
  %34 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %full_range to i8*, !dbg !1543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 64, i1 false), !dbg !1543
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill10, align 8, !dbg !1544
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill10, metadata !1545, metadata !DIExpression()), !dbg !1554
  %_15 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1554
  %35 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_15, i32 0, i32 2, !dbg !1544
  %_14 = load i64, i64* %35, align 8, !dbg !1544
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill11, align 8, !dbg !1555
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill11, metadata !1556, metadata !DIExpression()), !dbg !1560
  %_34 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1560
  %_19 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_34 to %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, !dbg !1561
  store %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_19, %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill12, align 8, !dbg !1561
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill12, metadata !1446, metadata !DIExpression()), !dbg !1562
  %_36 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_19 to %"alloc::alloc::Global"*, !dbg !1562, !rawptr !418
  store %"alloc::alloc::Global"* %_36, %"alloc::alloc::Global"** %src.dbg.spill13, align 8, !dbg !1562
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %src.dbg.spill13, metadata !1433, metadata !DIExpression()), !dbg !1563
  %36 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to {}*, !dbg !1564
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill14, align 8, !dbg !1439
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill14, metadata !1568, metadata !DIExpression()), !dbg !1572
  %_39 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*, !dbg !1572, !rawptr !418
  %37 = bitcast %"alloc::alloc::Global"* %_39 to i8*, !dbg !1439
  %38 = bitcast %"alloc::alloc::Global"* %_36 to i8*, !dbg !1439
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 0, i1 false), !dbg !1439
  br label %bb8, !dbg !1456

bb8:                                              ; preds = %bb3
  %39 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1574
  %40 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %39 to i8*, !dbg !1574
  %41 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_13 to i8*, !dbg !1574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 64, i1 false), !dbg !1574
  %42 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 2, !dbg !1574
  store i64 %_14, i64* %42, align 8, !dbg !1574
  %43 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::alloc::Global"*, !dbg !1574
  br label %bb6, !dbg !1541
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E"(i8* %unique) unnamed_addr #1 !dbg !1575 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8, !rawptr !418
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !1580, metadata !DIExpression()), !dbg !1581
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !1582
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1583, metadata !DIExpression()), !dbg !1590
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !1590
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1591, metadata !DIExpression()), !dbg !1594
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !1594
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1596, metadata !DIExpression()), !dbg !1601
  store i8* %unique, i8** %0, align 8, !dbg !1601
  %1 = load i8*, i8** %0, align 8, !dbg !1603, !nonnull !23, !noundef !23
  ret i8* %1, !dbg !1603
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hee871011a5f2812eE"(i64 %kind.0, i64 %kind.1) unnamed_addr #1 !dbg !1604 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !1634, metadata !DIExpression()), !dbg !1635
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1636
  store i64 %kind.0, i64* %3, align 8, !dbg !1636
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1636
  store i64 %kind.1, i64* %4, align 8, !dbg !1636
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1637
  %6 = load i64, i64* %5, align 8, !dbg !1637
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1637
  %8 = load i64, i64* %7, align 8, !dbg !1637, !range !1638, !noundef !23
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !1637
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !1637
  ret { i64, i64 } %10, !dbg !1637
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hefa5c5f8ce8f522aE"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %0, i8* %1) unnamed_addr #0 !dbg !1639 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !1647, metadata !DIExpression()), !dbg !1651
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iterator, metadata !1648, metadata !DIExpression()), !dbg !1652
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hb36d6d82e07b5afcE"({ i8*, i8* }* align 8 %iterator), !dbg !1653
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !1653, !rawptr !418
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !1653, !rawptr !418
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1653
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !1653
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1653
  store i64 %slice.1, i64* %6, align 8, !dbg !1653
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1649, metadata !DIExpression()), !dbg !1654
  br label %bb1, !dbg !1653

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h0b9e3e99e6b97e3aE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1655
  br label %bb2, !dbg !1655

bb2:                                              ; preds = %bb1
  ret void, !dbg !1656
}

; <<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c56c1d8ecc9f7c5E"(i64** align 8 %self) unnamed_addr #0 !dbg !1657 {
start:
  %self.dbg.spill = alloca i64**, align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !1669, metadata !DIExpression()), !dbg !1686
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, metadata !1670, metadata !DIExpression()), !dbg !1687
  br label %bb1, !dbg !1688

bb1:                                              ; preds = %bb4, %start
  %0 = bitcast i64** %self to %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !1689
  %_8 = load %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %0, align 8, !dbg !1689, !nonnull !23, !align !378, !noundef !23
; call alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
  call void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h676a0c4979658543E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") %_2, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_8), !dbg !1689
  br label %bb2, !dbg !1689

bb2:                                              ; preds = %bb1
  %1 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2, i32 0, i32 1, !dbg !1690
  %2 = load {}*, {}** %1, align 8, !dbg !1690
  %3 = icmp eq {}* %2, null, !dbg !1690
  %_4 = select i1 %3, i64 0, i64 1, !dbg !1690
  %4 = icmp eq i64 %_4, 1, !dbg !1690
  br i1 %4, label %bb3, label %bb5, !dbg !1690

bb3:                                              ; preds = %bb2
  %5 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"*, !dbg !1687
  %6 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"* %5 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !1687
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !1687
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %6 to i8*, !dbg !1687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !1687
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_7 to i8*, !dbg !1691
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !1691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !1691
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
  call void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h3e78732f6afe1257E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_7), !dbg !1691
  br label %bb4, !dbg !1691

bb5:                                              ; preds = %bb2
  ret void, !dbg !1692

bb4:                                              ; preds = %bb3
  br label %bb1, !dbg !1688
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hf7f2343961048f8cE"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #0 !dbg !1693 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !1703, metadata !DIExpression()), !dbg !1704
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h7b64711a00802d80E(), !dbg !1705
  br label %bb1, !dbg !1705

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !1706
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hde2104638b323179E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1707 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %result.dbg.spill = alloca { [0 x i8] }, align 1
  %_2 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  call void @llvm.dbg.declare(metadata { [0 x i8] }* %result.dbg.spill, metadata !1719, metadata !DIExpression()), !dbg !1725
  call void @llvm.dbg.declare(metadata %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f, metadata !1718, metadata !DIExpression()), !dbg !1726
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !1727, metadata !DIExpression()), !dbg !1735
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2 to i8*, !dbg !1737
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f to i8*, !dbg !1737
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !1737
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h83e0383ceb9b4c80E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2) #18, !dbg !1737
  br label %bb1, !dbg !1737

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !1735, !srcloc !1738
  br label %bb4, !dbg !1735

bb4:                                              ; preds = %bb1
  call void @llvm.trap(), !dbg !1739
  unreachable, !dbg !1739

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !1740

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1741
  %4 = load i8*, i8** %3, align 8, !dbg !1741
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1741
  %6 = load i32, i32* %5, align 8, !dbg !1741
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0, !dbg !1741
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1, !dbg !1741
  resume { i8*, i32 } %8, !dbg !1741
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hbb2e76f8d8ac95d7E(void ()* %f) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1742 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca void ()*, align 8
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !1747, metadata !DIExpression()), !dbg !1751
  store void ()* %f, void ()** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %f.dbg.spill, metadata !1746, metadata !DIExpression()), !dbg !1752
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !1753, metadata !DIExpression()), !dbg !1757
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hdffb97304173dc98E(void ()* %f), !dbg !1759
  br label %bb1, !dbg !1759

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !1757, !srcloc !1738
  br label %bb4, !dbg !1757

bb4:                                              ; preds = %bb1
  ret void, !dbg !1760

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !1761

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1762
  %2 = load i8*, i8** %1, align 8, !dbg !1762
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1762
  %4 = load i32, i32* %3, align 8, !dbg !1762
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !1762
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !1762
  resume { i8*, i32 } %6, !dbg !1762
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2io5error14repr_bitpacked11decode_repr17h455b74023f42e153E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %0, i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1763 {
start:
  %code.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %kind_bits.dbg.spill = alloca i32, align 4
  %ptr.dbg.spill12 = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %custom.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca {}*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %make_custom.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %f = alloca i64*, align 8
  %self = alloca i8, align 1
  %kind = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1819, metadata !DIExpression()), !dbg !1834
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %make_custom.dbg.spill, metadata !1820, metadata !DIExpression()), !dbg !1835
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !1821, metadata !DIExpression()), !dbg !1836
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !1827, metadata !DIExpression()), !dbg !1837
  call void @llvm.dbg.declare(metadata i8* %self, metadata !1838, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.declare(metadata i64** %f, metadata !1861, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !1869, metadata !DIExpression()), !dbg !1882
  store i8 1, i8* %_37, align 1, !dbg !1884
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1885
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1886, metadata !DIExpression()), !dbg !1892
  %_38 = bitcast i8* %ptr to {}*, !dbg !1892, !rawptr !418
  store {}* %_38, {}** %self.dbg.spill2, align 8, !dbg !1892
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill2, metadata !1893, metadata !DIExpression()), !dbg !1899
  %3 = bitcast i64* %bits to {}**, !dbg !1899
  store {}* %_38, {}** %3, align 8, !dbg !1899
  br label %bb14, !dbg !1899

bb14:                                             ; preds = %start
  %_7 = load i64, i64* %bits, align 8, !dbg !1900
  %_6 = and i64 %_7, 3, !dbg !1900
  switch i64 %_6, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !1901

bb1:                                              ; preds = %bb14
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc438 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc440 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !1902

bb2:                                              ; preds = %bb14
  %_11 = load i64, i64* %bits, align 8, !dbg !1903
  %_9 = ashr i64 %_11, 32, !dbg !1904
  %code = trunc i64 %_9 to i32, !dbg !1904
  store i32 %code, i32* %code.dbg.spill, align 4, !dbg !1904
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !1823, metadata !DIExpression()), !dbg !1905
  %4 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"*, !dbg !1906
  %5 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"* %4, i32 0, i32 1, !dbg !1906
  store i32 %code, i32* %5, align 4, !dbg !1906
  %6 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1906
  store i8 0, i8* %6, align 8, !dbg !1906
  br label %bb8, !dbg !1907

bb3:                                              ; preds = %bb14
  %_15 = load i64, i64* %bits, align 8, !dbg !1908
  %_14 = lshr i64 %_15, 32, !dbg !1909
  %kind_bits = trunc i64 %_14 to i32, !dbg !1909
  store i32 %kind_bits, i32* %kind_bits.dbg.spill, align 4, !dbg !1909
  call void @llvm.dbg.declare(metadata i32* %kind_bits.dbg.spill, metadata !1825, metadata !DIExpression()), !dbg !1910
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %7 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hea841811d99fc47eE(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !dbg !1868, !range !1911

bb5:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill9, align 8, !dbg !1883
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1912, metadata !DIExpression()), !dbg !1920
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !1920
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1921, metadata !DIExpression()), !dbg !1925
  %_47 = bitcast i8* %ptr to {}*, !dbg !1925, !rawptr !418
  %ptr11 = bitcast {}* %_47 to %"std::io::error::SimpleMessage"*, !dbg !1920, !rawptr !418
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, align 8, !dbg !1920
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, metadata !1927, metadata !DIExpression()), !dbg !1933
  %8 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !1933, !rawptr !418
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %8, align 8, !dbg !1933
  %9 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !1882
  %_51 = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !dbg !1882, !rawptr !418
  %10 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"*, !dbg !1935
  %11 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"* %10, i32 0, i32 1, !dbg !1935
  store %"std::io::error::SimpleMessage"* %_51, %"std::io::error::SimpleMessage"** %11, align 8, !dbg !1935
  %12 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1935
  store i8 2, i8* %12, align 8, !dbg !1935
  br label %bb8, !dbg !1936

bb6:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !1937
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1938, metadata !DIExpression()), !dbg !1942
  %_52 = bitcast i8* %ptr to {}*, !dbg !1942, !rawptr !418
  store {}* %_52, {}** %self.dbg.spill4, align 8, !dbg !1942
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill4, metadata !1943, metadata !DIExpression()), !dbg !1951
  %self5 = bitcast {}* %_52 to i8*, !dbg !1951, !rawptr !418
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !1951
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1952, metadata !DIExpression()), !dbg !1957
  store i8* %self5, i8** %self.dbg.spill7, align 8, !dbg !1957
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1958, metadata !DIExpression()), !dbg !1963
  %13 = getelementptr i8, i8* %self5, i64 -1, !dbg !1963
  store i8* %13, i8** %1, align 8, !dbg !1963
  %_60 = load i8*, i8** %1, align 8, !dbg !1963, !rawptr !418
  br label %bb20, !dbg !1963

bb13:                                             ; preds = %cleanup
  %14 = load i8, i8* %_37, align 1, !dbg !1965, !range !298, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !1965
  br i1 %15, label %bb12, label %bb10, !dbg !1965

cleanup:                                          ; preds = %bb15, %bb3, %bb20, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb13

unreachable:                                      ; preds = %bb1
  unreachable

bb20:                                             ; preds = %bb6
  store i8* %_60, i8** %self.dbg.spill8, align 8, !dbg !1963
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1966, metadata !DIExpression()), !dbg !1974
  %custom = bitcast i8* %_60 to %"std::io::error::Custom"*, !dbg !1974, !rawptr !418
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %custom.dbg.spill, align 8, !dbg !1974
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %custom.dbg.spill, metadata !1829, metadata !DIExpression()), !dbg !1975
  store i8 0, i8* %_37, align 1, !dbg !1976
  %21 = bitcast i64** %_34 to %"std::io::error::Custom"**, !dbg !1976, !rawptr !418
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %21, align 8, !dbg !1976
  %22 = load i64*, i64** %_34, align 8, !dbg !1976
  %23 = bitcast i64* %22 to %"std::io::error::Custom"*, !dbg !1976
; invoke <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h0997d46a35485cf1E"(%"std::io::error::Custom"* %23)
          to label %bb7 unwind label %cleanup, !dbg !1976

bb7:                                              ; preds = %bb20
  %24 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !1977
  %25 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %24, i32 0, i32 1, !dbg !1977
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %25, align 8, !dbg !1977
  %26 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1977
  store i8 3, i8* %26, align 8, !dbg !1977
  br label %bb8, !dbg !1978

bb8:                                              ; preds = %bb2, %bb19, %bb5, %bb7
  %27 = load i8, i8* %_37, align 1, !dbg !1965, !range !298, !noundef !23
  %28 = trunc i8 %27 to i1, !dbg !1965
  br i1 %28, label %bb11, label %bb9, !dbg !1965

bb4:                                              ; preds = %bb3
  store i8 %7, i8* %self, align 1, !dbg !1868
  store i64* %bits, i64** %f, align 8, !dbg !1979
  %29 = load i8, i8* %self, align 1, !dbg !1867, !range !1911, !noundef !23
  %30 = sub i8 %29, 41, !dbg !1867
  %31 = icmp eq i8 %30, 0, !dbg !1867
  %_40 = select i1 %31, i64 0, i64 1, !dbg !1867
  switch i64 %_40, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ], !dbg !1867

bb16:                                             ; preds = %bb4
  unreachable, !dbg !1867

bb15:                                             ; preds = %bb4
  %_42 = load i64*, i64** %f, align 8, !dbg !1867, !nonnull !23, !align !378, !noundef !23
; invoke std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %32 = invoke i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17he0f371ca16a4a646E"(i64* align 8 %_42)
          to label %bb18 unwind label %cleanup, !dbg !1867, !range !1980

bb17:                                             ; preds = %bb4
  %x = load i8, i8* %self, align 1, !dbg !1867, !range !1980, !noundef !23
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !1867
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !1862, metadata !DIExpression()), !dbg !1981
  store i8 %x, i8* %kind, align 1, !dbg !1981
  br label %bb19, !dbg !1867

bb19:                                             ; preds = %bb18, %bb17
  %_21 = load i8, i8* %kind, align 1, !dbg !1982, !range !1980, !noundef !23
  %33 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"*, !dbg !1983
  %34 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"* %33, i32 0, i32 1, !dbg !1983
  store i8 %_21, i8* %34, align 1, !dbg !1983
  %35 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1983
  store i8 1, i8* %35, align 8, !dbg !1983
  br label %bb8, !dbg !1984

bb18:                                             ; preds = %bb15
  store i8 %32, i8* %kind, align 1, !dbg !1867
  br label %bb19, !dbg !1867

bb10:                                             ; preds = %bb12, %bb13
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !1985
  %37 = load i8*, i8** %36, align 8, !dbg !1985
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !1985
  %39 = load i32, i32* %38, align 8, !dbg !1985
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !1985
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !1985
  resume { i8*, i32 } %41, !dbg !1985

bb12:                                             ; preds = %bb13
  br label %bb10, !dbg !1965

bb9:                                              ; preds = %bb11, %bb8
  ret void, !dbg !1986

bb11:                                             ; preds = %bb8
  br label %bb9, !dbg !1965
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17he0f371ca16a4a646E"(i64* align 8 %_1) unnamed_addr #1 !dbg !1987 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !1991, metadata !DIExpression(DW_OP_deref)), !dbg !1992
  call void @llvm.dbg.declare(metadata %"core::fmt::UnsafeArg"* %_unsafe_arg.dbg.spill, metadata !1993, metadata !DIExpression()), !dbg !2107
  unreachable, !dbg !2111
}

; std::io::error::repr_bitpacked::kind_from_prim
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hea841811d99fc47eE(i32 %0) unnamed_addr #1 !dbg !2115 {
start:
  %v.dbg.spill40 = alloca i32*, align 8
  %v.dbg.spill39 = alloca i32*, align 8
  %v.dbg.spill38 = alloca i32*, align 8
  %v.dbg.spill37 = alloca i32*, align 8
  %v.dbg.spill36 = alloca i32*, align 8
  %v.dbg.spill35 = alloca i32*, align 8
  %v.dbg.spill34 = alloca i32*, align 8
  %v.dbg.spill33 = alloca i32*, align 8
  %v.dbg.spill32 = alloca i32*, align 8
  %v.dbg.spill31 = alloca i32*, align 8
  %v.dbg.spill30 = alloca i32*, align 8
  %v.dbg.spill29 = alloca i32*, align 8
  %v.dbg.spill28 = alloca i32*, align 8
  %v.dbg.spill27 = alloca i32*, align 8
  %v.dbg.spill26 = alloca i32*, align 8
  %v.dbg.spill25 = alloca i32*, align 8
  %v.dbg.spill24 = alloca i32*, align 8
  %v.dbg.spill23 = alloca i32*, align 8
  %v.dbg.spill22 = alloca i32*, align 8
  %v.dbg.spill21 = alloca i32*, align 8
  %v.dbg.spill20 = alloca i32*, align 8
  %v.dbg.spill19 = alloca i32*, align 8
  %v.dbg.spill18 = alloca i32*, align 8
  %v.dbg.spill17 = alloca i32*, align 8
  %v.dbg.spill16 = alloca i32*, align 8
  %v.dbg.spill15 = alloca i32*, align 8
  %v.dbg.spill14 = alloca i32*, align 8
  %v.dbg.spill13 = alloca i32*, align 8
  %v.dbg.spill12 = alloca i32*, align 8
  %v.dbg.spill11 = alloca i32*, align 8
  %v.dbg.spill10 = alloca i32*, align 8
  %v.dbg.spill9 = alloca i32*, align 8
  %v.dbg.spill8 = alloca i32*, align 8
  %v.dbg.spill7 = alloca i32*, align 8
  %v.dbg.spill6 = alloca i32*, align 8
  %v.dbg.spill5 = alloca i32*, align 8
  %v.dbg.spill4 = alloca i32*, align 8
  %v.dbg.spill3 = alloca i32*, align 8
  %v.dbg.spill2 = alloca i32*, align 8
  %v.dbg.spill1 = alloca i32*, align 8
  %v.dbg.spill = alloca i32*, align 8
  %1 = alloca i8, align 1
  %ek = alloca i32, align 4
  store i32 %0, i32* %ek, align 4
  call void @llvm.dbg.declare(metadata i32* %ek, metadata !2119, metadata !DIExpression()), !dbg !2244
  store i32* %ek, i32** %v.dbg.spill, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill, metadata !2122, metadata !DIExpression()), !dbg !2246
  %_5 = load i32, i32* %ek, align 4, !dbg !2245
  %_4 = icmp eq i32 %_5, 0, !dbg !2245
  br i1 %_4, label %bb1, label %bb2, !dbg !2245

bb2:                                              ; preds = %start
  store i32* %ek, i32** %v.dbg.spill1, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill1, metadata !2126, metadata !DIExpression()), !dbg !2247
  %_10 = load i32, i32* %ek, align 4, !dbg !2245
  %_9 = icmp eq i32 %_10, 1, !dbg !2245
  br i1 %_9, label %bb3, label %bb4, !dbg !2245

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !2246
  br label %bb83, !dbg !2245

bb83:                                             ; preds = %bb82, %bb81, %bb79, %bb77, %bb75, %bb73, %bb71, %bb69, %bb67, %bb65, %bb63, %bb61, %bb59, %bb57, %bb55, %bb53, %bb51, %bb49, %bb47, %bb45, %bb43, %bb41, %bb39, %bb37, %bb35, %bb33, %bb31, %bb29, %bb27, %bb25, %bb23, %bb21, %bb19, %bb17, %bb15, %bb13, %bb11, %bb9, %bb7, %bb5, %bb3, %bb1
  %2 = load i8, i8* %1, align 1, !dbg !2248, !range !1911, !noundef !23
  ret i8 %2, !dbg !2248

bb4:                                              ; preds = %bb2
  store i32* %ek, i32** %v.dbg.spill2, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill2, metadata !2129, metadata !DIExpression()), !dbg !2249
  %_15 = load i32, i32* %ek, align 4, !dbg !2245
  %_14 = icmp eq i32 %_15, 2, !dbg !2245
  br i1 %_14, label %bb5, label %bb6, !dbg !2245

bb3:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !2247
  br label %bb83, !dbg !2245

bb6:                                              ; preds = %bb4
  store i32* %ek, i32** %v.dbg.spill3, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill3, metadata !2132, metadata !DIExpression()), !dbg !2250
  %_20 = load i32, i32* %ek, align 4, !dbg !2245
  %_19 = icmp eq i32 %_20, 3, !dbg !2245
  br i1 %_19, label %bb7, label %bb8, !dbg !2245

bb5:                                              ; preds = %bb4
  store i8 2, i8* %1, align 1, !dbg !2249
  br label %bb83, !dbg !2245

bb8:                                              ; preds = %bb6
  store i32* %ek, i32** %v.dbg.spill4, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill4, metadata !2135, metadata !DIExpression()), !dbg !2251
  %_25 = load i32, i32* %ek, align 4, !dbg !2245
  %_24 = icmp eq i32 %_25, 4, !dbg !2245
  br i1 %_24, label %bb9, label %bb10, !dbg !2245

bb7:                                              ; preds = %bb6
  store i8 3, i8* %1, align 1, !dbg !2250
  br label %bb83, !dbg !2245

bb10:                                             ; preds = %bb8
  store i32* %ek, i32** %v.dbg.spill5, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill5, metadata !2138, metadata !DIExpression()), !dbg !2252
  %_30 = load i32, i32* %ek, align 4, !dbg !2245
  %_29 = icmp eq i32 %_30, 5, !dbg !2245
  br i1 %_29, label %bb11, label %bb12, !dbg !2245

bb9:                                              ; preds = %bb8
  store i8 4, i8* %1, align 1, !dbg !2251
  br label %bb83, !dbg !2245

bb12:                                             ; preds = %bb10
  store i32* %ek, i32** %v.dbg.spill6, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill6, metadata !2141, metadata !DIExpression()), !dbg !2253
  %_35 = load i32, i32* %ek, align 4, !dbg !2245
  %_34 = icmp eq i32 %_35, 6, !dbg !2245
  br i1 %_34, label %bb13, label %bb14, !dbg !2245

bb11:                                             ; preds = %bb10
  store i8 5, i8* %1, align 1, !dbg !2252
  br label %bb83, !dbg !2245

bb14:                                             ; preds = %bb12
  store i32* %ek, i32** %v.dbg.spill7, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill7, metadata !2144, metadata !DIExpression()), !dbg !2254
  %_40 = load i32, i32* %ek, align 4, !dbg !2245
  %_39 = icmp eq i32 %_40, 7, !dbg !2245
  br i1 %_39, label %bb15, label %bb16, !dbg !2245

bb13:                                             ; preds = %bb12
  store i8 6, i8* %1, align 1, !dbg !2253
  br label %bb83, !dbg !2245

bb16:                                             ; preds = %bb14
  store i32* %ek, i32** %v.dbg.spill8, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill8, metadata !2147, metadata !DIExpression()), !dbg !2255
  %_45 = load i32, i32* %ek, align 4, !dbg !2245
  %_44 = icmp eq i32 %_45, 8, !dbg !2245
  br i1 %_44, label %bb17, label %bb18, !dbg !2245

bb15:                                             ; preds = %bb14
  store i8 7, i8* %1, align 1, !dbg !2254
  br label %bb83, !dbg !2245

bb18:                                             ; preds = %bb16
  store i32* %ek, i32** %v.dbg.spill9, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill9, metadata !2150, metadata !DIExpression()), !dbg !2256
  %_50 = load i32, i32* %ek, align 4, !dbg !2245
  %_49 = icmp eq i32 %_50, 9, !dbg !2245
  br i1 %_49, label %bb19, label %bb20, !dbg !2245

bb17:                                             ; preds = %bb16
  store i8 8, i8* %1, align 1, !dbg !2255
  br label %bb83, !dbg !2245

bb20:                                             ; preds = %bb18
  store i32* %ek, i32** %v.dbg.spill10, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill10, metadata !2153, metadata !DIExpression()), !dbg !2257
  %_55 = load i32, i32* %ek, align 4, !dbg !2245
  %_54 = icmp eq i32 %_55, 10, !dbg !2245
  br i1 %_54, label %bb21, label %bb22, !dbg !2245

bb19:                                             ; preds = %bb18
  store i8 9, i8* %1, align 1, !dbg !2256
  br label %bb83, !dbg !2245

bb22:                                             ; preds = %bb20
  store i32* %ek, i32** %v.dbg.spill11, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill11, metadata !2156, metadata !DIExpression()), !dbg !2258
  %_60 = load i32, i32* %ek, align 4, !dbg !2245
  %_59 = icmp eq i32 %_60, 11, !dbg !2245
  br i1 %_59, label %bb23, label %bb24, !dbg !2245

bb21:                                             ; preds = %bb20
  store i8 10, i8* %1, align 1, !dbg !2257
  br label %bb83, !dbg !2245

bb24:                                             ; preds = %bb22
  store i32* %ek, i32** %v.dbg.spill12, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill12, metadata !2159, metadata !DIExpression()), !dbg !2259
  %_65 = load i32, i32* %ek, align 4, !dbg !2245
  %_64 = icmp eq i32 %_65, 12, !dbg !2245
  br i1 %_64, label %bb25, label %bb26, !dbg !2245

bb23:                                             ; preds = %bb22
  store i8 11, i8* %1, align 1, !dbg !2258
  br label %bb83, !dbg !2245

bb26:                                             ; preds = %bb24
  store i32* %ek, i32** %v.dbg.spill13, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill13, metadata !2162, metadata !DIExpression()), !dbg !2260
  %_70 = load i32, i32* %ek, align 4, !dbg !2245
  %_69 = icmp eq i32 %_70, 13, !dbg !2245
  br i1 %_69, label %bb27, label %bb28, !dbg !2245

bb25:                                             ; preds = %bb24
  store i8 12, i8* %1, align 1, !dbg !2259
  br label %bb83, !dbg !2245

bb28:                                             ; preds = %bb26
  store i32* %ek, i32** %v.dbg.spill14, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill14, metadata !2165, metadata !DIExpression()), !dbg !2261
  %_75 = load i32, i32* %ek, align 4, !dbg !2245
  %_74 = icmp eq i32 %_75, 14, !dbg !2245
  br i1 %_74, label %bb29, label %bb30, !dbg !2245

bb27:                                             ; preds = %bb26
  store i8 13, i8* %1, align 1, !dbg !2260
  br label %bb83, !dbg !2245

bb30:                                             ; preds = %bb28
  store i32* %ek, i32** %v.dbg.spill15, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill15, metadata !2168, metadata !DIExpression()), !dbg !2262
  %_80 = load i32, i32* %ek, align 4, !dbg !2245
  %_79 = icmp eq i32 %_80, 15, !dbg !2245
  br i1 %_79, label %bb31, label %bb32, !dbg !2245

bb29:                                             ; preds = %bb28
  store i8 14, i8* %1, align 1, !dbg !2261
  br label %bb83, !dbg !2245

bb32:                                             ; preds = %bb30
  store i32* %ek, i32** %v.dbg.spill16, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill16, metadata !2171, metadata !DIExpression()), !dbg !2263
  %_85 = load i32, i32* %ek, align 4, !dbg !2245
  %_84 = icmp eq i32 %_85, 16, !dbg !2245
  br i1 %_84, label %bb33, label %bb34, !dbg !2245

bb31:                                             ; preds = %bb30
  store i8 15, i8* %1, align 1, !dbg !2262
  br label %bb83, !dbg !2245

bb34:                                             ; preds = %bb32
  store i32* %ek, i32** %v.dbg.spill17, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill17, metadata !2174, metadata !DIExpression()), !dbg !2264
  %_90 = load i32, i32* %ek, align 4, !dbg !2245
  %_89 = icmp eq i32 %_90, 17, !dbg !2245
  br i1 %_89, label %bb35, label %bb36, !dbg !2245

bb33:                                             ; preds = %bb32
  store i8 16, i8* %1, align 1, !dbg !2263
  br label %bb83, !dbg !2245

bb36:                                             ; preds = %bb34
  store i32* %ek, i32** %v.dbg.spill18, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill18, metadata !2177, metadata !DIExpression()), !dbg !2265
  %_95 = load i32, i32* %ek, align 4, !dbg !2245
  %_94 = icmp eq i32 %_95, 18, !dbg !2245
  br i1 %_94, label %bb37, label %bb38, !dbg !2245

bb35:                                             ; preds = %bb34
  store i8 17, i8* %1, align 1, !dbg !2264
  br label %bb83, !dbg !2245

bb38:                                             ; preds = %bb36
  store i32* %ek, i32** %v.dbg.spill19, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill19, metadata !2180, metadata !DIExpression()), !dbg !2266
  %_100 = load i32, i32* %ek, align 4, !dbg !2245
  %_99 = icmp eq i32 %_100, 19, !dbg !2245
  br i1 %_99, label %bb39, label %bb40, !dbg !2245

bb37:                                             ; preds = %bb36
  store i8 18, i8* %1, align 1, !dbg !2265
  br label %bb83, !dbg !2245

bb40:                                             ; preds = %bb38
  store i32* %ek, i32** %v.dbg.spill20, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill20, metadata !2183, metadata !DIExpression()), !dbg !2267
  %_105 = load i32, i32* %ek, align 4, !dbg !2245
  %_104 = icmp eq i32 %_105, 20, !dbg !2245
  br i1 %_104, label %bb41, label %bb42, !dbg !2245

bb39:                                             ; preds = %bb38
  store i8 19, i8* %1, align 1, !dbg !2266
  br label %bb83, !dbg !2245

bb42:                                             ; preds = %bb40
  store i32* %ek, i32** %v.dbg.spill21, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill21, metadata !2186, metadata !DIExpression()), !dbg !2268
  %_110 = load i32, i32* %ek, align 4, !dbg !2245
  %_109 = icmp eq i32 %_110, 21, !dbg !2245
  br i1 %_109, label %bb43, label %bb44, !dbg !2245

bb41:                                             ; preds = %bb40
  store i8 20, i8* %1, align 1, !dbg !2267
  br label %bb83, !dbg !2245

bb44:                                             ; preds = %bb42
  store i32* %ek, i32** %v.dbg.spill22, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill22, metadata !2189, metadata !DIExpression()), !dbg !2269
  %_115 = load i32, i32* %ek, align 4, !dbg !2245
  %_114 = icmp eq i32 %_115, 22, !dbg !2245
  br i1 %_114, label %bb45, label %bb46, !dbg !2245

bb43:                                             ; preds = %bb42
  store i8 21, i8* %1, align 1, !dbg !2268
  br label %bb83, !dbg !2245

bb46:                                             ; preds = %bb44
  store i32* %ek, i32** %v.dbg.spill23, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill23, metadata !2192, metadata !DIExpression()), !dbg !2270
  %_120 = load i32, i32* %ek, align 4, !dbg !2245
  %_119 = icmp eq i32 %_120, 23, !dbg !2245
  br i1 %_119, label %bb47, label %bb48, !dbg !2245

bb45:                                             ; preds = %bb44
  store i8 22, i8* %1, align 1, !dbg !2269
  br label %bb83, !dbg !2245

bb48:                                             ; preds = %bb46
  store i32* %ek, i32** %v.dbg.spill24, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill24, metadata !2195, metadata !DIExpression()), !dbg !2271
  %_125 = load i32, i32* %ek, align 4, !dbg !2245
  %_124 = icmp eq i32 %_125, 24, !dbg !2245
  br i1 %_124, label %bb49, label %bb50, !dbg !2245

bb47:                                             ; preds = %bb46
  store i8 23, i8* %1, align 1, !dbg !2270
  br label %bb83, !dbg !2245

bb50:                                             ; preds = %bb48
  store i32* %ek, i32** %v.dbg.spill25, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill25, metadata !2198, metadata !DIExpression()), !dbg !2272
  %_130 = load i32, i32* %ek, align 4, !dbg !2245
  %_129 = icmp eq i32 %_130, 25, !dbg !2245
  br i1 %_129, label %bb51, label %bb52, !dbg !2245

bb49:                                             ; preds = %bb48
  store i8 24, i8* %1, align 1, !dbg !2271
  br label %bb83, !dbg !2245

bb52:                                             ; preds = %bb50
  store i32* %ek, i32** %v.dbg.spill26, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill26, metadata !2201, metadata !DIExpression()), !dbg !2273
  %_135 = load i32, i32* %ek, align 4, !dbg !2245
  %_134 = icmp eq i32 %_135, 26, !dbg !2245
  br i1 %_134, label %bb53, label %bb54, !dbg !2245

bb51:                                             ; preds = %bb50
  store i8 25, i8* %1, align 1, !dbg !2272
  br label %bb83, !dbg !2245

bb54:                                             ; preds = %bb52
  store i32* %ek, i32** %v.dbg.spill27, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill27, metadata !2204, metadata !DIExpression()), !dbg !2274
  %_140 = load i32, i32* %ek, align 4, !dbg !2245
  %_139 = icmp eq i32 %_140, 27, !dbg !2245
  br i1 %_139, label %bb55, label %bb56, !dbg !2245

bb53:                                             ; preds = %bb52
  store i8 26, i8* %1, align 1, !dbg !2273
  br label %bb83, !dbg !2245

bb56:                                             ; preds = %bb54
  store i32* %ek, i32** %v.dbg.spill28, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill28, metadata !2207, metadata !DIExpression()), !dbg !2275
  %_145 = load i32, i32* %ek, align 4, !dbg !2245
  %_144 = icmp eq i32 %_145, 28, !dbg !2245
  br i1 %_144, label %bb57, label %bb58, !dbg !2245

bb55:                                             ; preds = %bb54
  store i8 27, i8* %1, align 1, !dbg !2274
  br label %bb83, !dbg !2245

bb58:                                             ; preds = %bb56
  store i32* %ek, i32** %v.dbg.spill29, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill29, metadata !2210, metadata !DIExpression()), !dbg !2276
  %_150 = load i32, i32* %ek, align 4, !dbg !2245
  %_149 = icmp eq i32 %_150, 29, !dbg !2245
  br i1 %_149, label %bb59, label %bb60, !dbg !2245

bb57:                                             ; preds = %bb56
  store i8 28, i8* %1, align 1, !dbg !2275
  br label %bb83, !dbg !2245

bb60:                                             ; preds = %bb58
  store i32* %ek, i32** %v.dbg.spill30, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill30, metadata !2213, metadata !DIExpression()), !dbg !2277
  %_155 = load i32, i32* %ek, align 4, !dbg !2245
  %_154 = icmp eq i32 %_155, 30, !dbg !2245
  br i1 %_154, label %bb61, label %bb62, !dbg !2245

bb59:                                             ; preds = %bb58
  store i8 29, i8* %1, align 1, !dbg !2276
  br label %bb83, !dbg !2245

bb62:                                             ; preds = %bb60
  store i32* %ek, i32** %v.dbg.spill31, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill31, metadata !2216, metadata !DIExpression()), !dbg !2278
  %_160 = load i32, i32* %ek, align 4, !dbg !2245
  %_159 = icmp eq i32 %_160, 31, !dbg !2245
  br i1 %_159, label %bb63, label %bb64, !dbg !2245

bb61:                                             ; preds = %bb60
  store i8 30, i8* %1, align 1, !dbg !2277
  br label %bb83, !dbg !2245

bb64:                                             ; preds = %bb62
  store i32* %ek, i32** %v.dbg.spill32, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill32, metadata !2219, metadata !DIExpression()), !dbg !2279
  %_165 = load i32, i32* %ek, align 4, !dbg !2245
  %_164 = icmp eq i32 %_165, 32, !dbg !2245
  br i1 %_164, label %bb65, label %bb66, !dbg !2245

bb63:                                             ; preds = %bb62
  store i8 31, i8* %1, align 1, !dbg !2278
  br label %bb83, !dbg !2245

bb66:                                             ; preds = %bb64
  store i32* %ek, i32** %v.dbg.spill33, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill33, metadata !2222, metadata !DIExpression()), !dbg !2280
  %_170 = load i32, i32* %ek, align 4, !dbg !2245
  %_169 = icmp eq i32 %_170, 33, !dbg !2245
  br i1 %_169, label %bb67, label %bb68, !dbg !2245

bb65:                                             ; preds = %bb64
  store i8 32, i8* %1, align 1, !dbg !2279
  br label %bb83, !dbg !2245

bb68:                                             ; preds = %bb66
  store i32* %ek, i32** %v.dbg.spill34, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill34, metadata !2225, metadata !DIExpression()), !dbg !2281
  %_175 = load i32, i32* %ek, align 4, !dbg !2245
  %_174 = icmp eq i32 %_175, 34, !dbg !2245
  br i1 %_174, label %bb69, label %bb70, !dbg !2245

bb67:                                             ; preds = %bb66
  store i8 33, i8* %1, align 1, !dbg !2280
  br label %bb83, !dbg !2245

bb70:                                             ; preds = %bb68
  store i32* %ek, i32** %v.dbg.spill35, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill35, metadata !2228, metadata !DIExpression()), !dbg !2282
  %_180 = load i32, i32* %ek, align 4, !dbg !2245
  %_179 = icmp eq i32 %_180, 35, !dbg !2245
  br i1 %_179, label %bb71, label %bb72, !dbg !2245

bb69:                                             ; preds = %bb68
  store i8 34, i8* %1, align 1, !dbg !2281
  br label %bb83, !dbg !2245

bb72:                                             ; preds = %bb70
  store i32* %ek, i32** %v.dbg.spill36, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill36, metadata !2231, metadata !DIExpression()), !dbg !2283
  %_185 = load i32, i32* %ek, align 4, !dbg !2245
  %_184 = icmp eq i32 %_185, 39, !dbg !2245
  br i1 %_184, label %bb73, label %bb74, !dbg !2245

bb71:                                             ; preds = %bb70
  store i8 35, i8* %1, align 1, !dbg !2282
  br label %bb83, !dbg !2245

bb74:                                             ; preds = %bb72
  store i32* %ek, i32** %v.dbg.spill37, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill37, metadata !2234, metadata !DIExpression()), !dbg !2284
  %_190 = load i32, i32* %ek, align 4, !dbg !2245
  %_189 = icmp eq i32 %_190, 37, !dbg !2245
  br i1 %_189, label %bb75, label %bb76, !dbg !2245

bb73:                                             ; preds = %bb72
  store i8 39, i8* %1, align 1, !dbg !2283
  br label %bb83, !dbg !2245

bb76:                                             ; preds = %bb74
  store i32* %ek, i32** %v.dbg.spill38, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill38, metadata !2237, metadata !DIExpression()), !dbg !2285
  %_195 = load i32, i32* %ek, align 4, !dbg !2245
  %_194 = icmp eq i32 %_195, 36, !dbg !2245
  br i1 %_194, label %bb77, label %bb78, !dbg !2245

bb75:                                             ; preds = %bb74
  store i8 37, i8* %1, align 1, !dbg !2284
  br label %bb83, !dbg !2245

bb78:                                             ; preds = %bb76
  store i32* %ek, i32** %v.dbg.spill39, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill39, metadata !2240, metadata !DIExpression()), !dbg !2286
  %_200 = load i32, i32* %ek, align 4, !dbg !2245
  %_199 = icmp eq i32 %_200, 38, !dbg !2245
  br i1 %_199, label %bb79, label %bb80, !dbg !2245

bb77:                                             ; preds = %bb76
  store i8 36, i8* %1, align 1, !dbg !2285
  br label %bb83, !dbg !2245

bb80:                                             ; preds = %bb78
  store i32* %ek, i32** %v.dbg.spill40, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill40, metadata !2243, metadata !DIExpression()), !dbg !2287
  %_205 = load i32, i32* %ek, align 4, !dbg !2245
  %_204 = icmp eq i32 %_205, 40, !dbg !2245
  br i1 %_204, label %bb81, label %bb82, !dbg !2245

bb79:                                             ; preds = %bb78
  store i8 38, i8* %1, align 1, !dbg !2286
  br label %bb83, !dbg !2245

bb82:                                             ; preds = %bb80
  store i8 41, i8* %1, align 1, !dbg !2245
  br label %bb83, !dbg !2245

bb81:                                             ; preds = %bb80
  store i8 40, i8* %1, align 1, !dbg !2287
  br label %bb83, !dbg !2245
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17hdbdcadb0c4d08e85E(void ()* %main, i64 %argc, i8** %argv) unnamed_addr #0 !dbg !2288 {
start:
  %v.dbg.spill = alloca i64, align 8
  %argv.dbg.spill = alloca i8**, align 8
  %argc.dbg.spill = alloca i64, align 8
  %main.dbg.spill = alloca void ()*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64, align 8
  store void ()* %main, void ()** %main.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %main.dbg.spill, metadata !2294, metadata !DIExpression()), !dbg !2299
  store i64 %argc, i64* %argc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %argc.dbg.spill, metadata !2295, metadata !DIExpression()), !dbg !2300
  store i8** %argv, i8*** %argv.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.dbg.spill, metadata !2296, metadata !DIExpression()), !dbg !2301
  %0 = bitcast i64** %_8 to void ()**, !dbg !2302
  store void ()* %main, void ()** %0, align 8, !dbg !2302
  %_5.0 = bitcast i64** %_8 to {}*, !dbg !2303
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h4a61547abbd425a7E({}* align 1 %_5.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), i64 %argc, i8** %argv), !dbg !2304
  store i64 %1, i64* %_4, align 8, !dbg !2304
  br label %bb1, !dbg !2304

bb1:                                              ; preds = %start
  %v = load i64, i64* %_4, align 8, !dbg !2305
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2305
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2297, metadata !DIExpression()), !dbg !2306
  ret i64 %v, !dbg !2307
}

; std::rt::lang_start::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfd338f81e5b45273E"(i64** align 8 %_1) unnamed_addr #1 !dbg !2308 {
start:
  %self.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %self = alloca i8, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !378, !noundef !23
  %1 = bitcast i64** %0 to void ()**
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !2313, metadata !DIExpression(DW_OP_deref)), !dbg !2314
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2315, metadata !DIExpression()), !dbg !2331
  %2 = bitcast i64** %_1 to void ()**, !dbg !2333
  %_4 = load void ()*, void ()** %2, align 8, !dbg !2333, !nonnull !23, !noundef !23
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hbb2e76f8d8ac95d7E(void ()* %_4), !dbg !2332
  br label %bb1, !dbg !2332

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %3 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h3a8ca7628401a7c4E"(), !dbg !2332
  store i8 %3, i8* %self, align 1, !dbg !2332
  br label %bb2, !dbg !2332

bb2:                                              ; preds = %bb1
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !2331
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2334, metadata !DIExpression()), !dbg !2342
  %_6 = load i8, i8* %self, align 1, !dbg !2342
  %4 = zext i8 %_6 to i32, !dbg !2342
  ret i32 %4, !dbg !2344
}

; std::env::var
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2345 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %key = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %key, metadata !2382, metadata !DIExpression()), !dbg !2385
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h603d2461e4ba1659E"({ [0 x i8]*, i64 }* align 8 %key)
          to label %bb1 unwind label %cleanup, !dbg !2386

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2387

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 0, !dbg !2386
  %_3.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 1, !dbg !2386
; invoke std::env::_var
  invoke void @_ZN3std3env4_var17hf887649bba216849E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %0, %"std::ffi::os_str::OsStr"* align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup, !dbg !2388

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !2387

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2389
  %13 = load i8*, i8** %12, align 8, !dbg !2389
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2389
  %15 = load i32, i32* %14, align 8, !dbg !2389
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !2389
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !2389
  resume { i8*, i32 } %17, !dbg !2389

bb3:                                              ; preds = %bb2
  ret void, !dbg !2390
}

; std::env::var_os
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std3env6var_os17h95320143ad2097f6E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2391 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %key = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %key, metadata !2395, metadata !DIExpression()), !dbg !2396
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h603d2461e4ba1659E"({ [0 x i8]*, i64 }* align 8 %key)
          to label %bb1 unwind label %cleanup, !dbg !2397

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2398

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 0, !dbg !2397
  %_3.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 1, !dbg !2397
; invoke std::env::_var_os
  invoke void @_ZN3std3env7_var_os17h67c39c43dadd64c8E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %0, %"std::ffi::os_str::OsStr"* align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup, !dbg !2399

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !2398

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2400
  %13 = load i8*, i8** %12, align 8, !dbg !2400
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2400
  %15 = load i32, i32* %14, align 8, !dbg !2400
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !2400
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !2400
  resume { i8*, i32 } %17, !dbg !2400

bb3:                                              ; preds = %bb2
  ret void, !dbg !2401
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h853104b9acaaf0b1E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2402 {
start:
  %inner.dbg.spill = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %s.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2419, metadata !DIExpression()), !dbg !2420
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !2421
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !2421
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !2421
  store i64 %self.1, i64* %5, align 8, !dbg !2421
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2422, metadata !DIExpression()), !dbg !2434
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2434
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2434
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2434
  store i64 %self.1, i64* %7, align 8, !dbg !2434
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2436, metadata !DIExpression()), !dbg !2443
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2443
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !2443
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2443
  store i64 %self.1, i64* %9, align 8, !dbg !2443
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2443
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !2443, !nonnull !23, !align !912, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2443
  %_6.1 = load i64, i64* %11, align 8, !dbg !2443
  br label %bb1, !dbg !2443

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill2, i32 0, i32 0, !dbg !2434
  store [0 x i8]* %_6.0, [0 x i8]** %12, align 8, !dbg !2434
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill2, i32 0, i32 1, !dbg !2434
  store i64 %_6.1, i64* %13, align 8, !dbg !2434
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill2, metadata !2445, metadata !DIExpression()), !dbg !2451
  %14 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !2451
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !2451
  store [0 x i8]* %_6.0, [0 x i8]** %15, align 8, !dbg !2451
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !2451
  store i64 %_6.1, i64* %16, align 8, !dbg !2451
  %17 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0, !dbg !2451
  %_3.0 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %17, align 8, !dbg !2451, !nonnull !23, !align !912, !noundef !23, !rawptr !418
  %18 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1, !dbg !2451
  %_3.1 = load i64, i64* %18, align 8, !dbg !2451, !rawptr !418
  br label %bb2, !dbg !2451

bb2:                                              ; preds = %bb1
  %19 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 0, !dbg !2435
  store %"std::sys::unix::os_str::Slice"* %_3.0, %"std::sys::unix::os_str::Slice"** %19, align 8, !dbg !2435
  %20 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 1, !dbg !2435
  store i64 %_3.1, i64* %20, align 8, !dbg !2435
  call void @llvm.dbg.declare(metadata { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, metadata !2453, metadata !DIExpression()), !dbg !2458
  %_10.0 = bitcast %"std::sys::unix::os_str::Slice"* %_3.0 to %"std::ffi::os_str::OsStr"*, !dbg !2458, !rawptr !418
  %21 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_10.0, 0, !dbg !2460
  %22 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %21, i64 %_3.1, 1, !dbg !2460
  ret { %"std::ffi::os_str::OsStr"*, i64 } %22, !dbg !2460
}

; std::sys::unix::os_str::Buf::as_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str3Buf8as_slice17h7c81f02cc6b0dd96E(%"std::sys::unix::os_str::Buf"* align 8 %self) unnamed_addr #1 !dbg !2461 {
start:
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill4 = alloca i64, align 8
  %data.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"std::sys::unix::os_str::Buf"*, align 8
  %_17 = alloca { i8*, i64 }, align 8
  %_16 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"std::sys::unix::os_str::Buf"* %self, %"std::sys::unix::os_str::Buf"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::os_str::Buf"** %self.dbg.spill, metadata !2466, metadata !DIExpression()), !dbg !2467
  %self1 = bitcast %"std::sys::unix::os_str::Buf"* %self to %"alloc::vec::Vec<u8>"*, !dbg !2468, !rawptr !418
  store %"alloc::vec::Vec<u8>"* %self1, %"alloc::vec::Vec<u8>"** %self.dbg.spill2, align 8, !dbg !2468
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill2, metadata !2469, metadata !DIExpression()), !dbg !2478
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E"(%"alloc::vec::Vec<u8>"* align 8 %self1), !dbg !2478, !rawptr !418
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !2478
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2480, metadata !DIExpression()), !dbg !2498
  br label %bb2, !dbg !2478

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self1, i32 0, i32 1, !dbg !2478
  %len = load i64, i64* %1, align 8, !dbg !2478
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2478
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2488, metadata !DIExpression()), !dbg !2498
  store i8* %data, i8** %data.dbg.spill3, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill3, metadata !2500, metadata !DIExpression()), !dbg !2505
  store i64 %len, i64* %len.dbg.spill4, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill4, metadata !2504, metadata !DIExpression()), !dbg !2505
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !2505
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2507, metadata !DIExpression()), !dbg !2511
  %data_address = bitcast i8* %data to {}*, !dbg !2511, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2511
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2513, metadata !DIExpression()), !dbg !2518
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !2505
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2517, metadata !DIExpression()), !dbg !2518
  %2 = bitcast { i8*, i64 }* %_17 to {}**, !dbg !2518, !rawptr !418
  store {}* %data_address, {}** %2, align 8, !dbg !2518
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 1, !dbg !2518
  store i64 %len, i64* %3, align 8, !dbg !2518
  %4 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_16 to { i8*, i64 }*, !dbg !2518
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 0, !dbg !2518
  %6 = load i8*, i8** %5, align 8, !dbg !2518
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 1, !dbg !2518
  %8 = load i64, i64* %7, align 8, !dbg !2518
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !2518
  store i8* %6, i8** %9, align 8, !dbg !2518
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !2518
  store i64 %8, i64* %10, align 8, !dbg !2518
  %11 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_16 to { [0 x i8]*, i64 }*, !dbg !2518
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !2518
  %_9.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !2518, !rawptr !418
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !2518
  %_9.1 = load i64, i64* %13, align 8, !dbg !2518, !rawptr !418
  %14 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !2520
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !2520
  store [0 x i8]* %_9.0, [0 x i8]** %15, align 8, !dbg !2520
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !2520
  store i64 %_9.1, i64* %16, align 8, !dbg !2520
  %17 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0, !dbg !2520
  %18 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %17, align 8, !dbg !2520, !nonnull !23, !align !912, !noundef !23
  %19 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1, !dbg !2520
  %20 = load i64, i64* %19, align 8, !dbg !2520
  br label %bb1, !dbg !2520

bb1:                                              ; preds = %bb2
  %21 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %18, 0, !dbg !2521
  %22 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %21, i64 %20, 1, !dbg !2521
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %22, !dbg !2521
}

; std::process::Command::arg
; Function Attrs: nonlazybind uwtable
define internal align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17h40e8406b4949a826E(%"std::process::Command"* align 8 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2522 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"std::process::Command"*, align 8
  %arg = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %arg, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %arg, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::process::Command"* %self, %"std::process::Command"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Command"** %self.dbg.spill, metadata !2728, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %arg, metadata !2729, metadata !DIExpression()), !dbg !2733
  %_5 = bitcast %"std::process::Command"* %self to %"std::sys::unix::process::process_common::Command"*, !dbg !2734
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %5 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h603d2461e4ba1659E"({ [0 x i8]*, i64 }* align 8 %arg)
          to label %bb1 unwind label %cleanup, !dbg !2735

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2736

cleanup:                                          ; preds = %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %5, 0, !dbg !2735
  %_7.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %5, 1, !dbg !2735
; invoke std::sys::unix::process::process_common::Command::arg
  invoke void @_ZN3std3sys4unix7process14process_common7Command3arg17h87e0145480a03013E(%"std::sys::unix::process::process_common::Command"* align 8 %_5, %"std::ffi::os_str::OsStr"* align 1 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup, !dbg !2734

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !2736

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2737
  %12 = load i8*, i8** %11, align 8, !dbg !2737
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2737
  %14 = load i32, i32* %13, align 8, !dbg !2737
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0, !dbg !2737
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1, !dbg !2737
  resume { i8*, i32 } %16, !dbg !2737

bb3:                                              ; preds = %bb2
  ret %"std::process::Command"* %self, !dbg !2738
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std7process7Command3new17h670ad35140f40c15E(%"std::process::Command"* sret(%"std::process::Command") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2739 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"std::sys::unix::process::process_common::Command", align 8
  %program = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %program, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %program, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %program, metadata !2743, metadata !DIExpression()), !dbg !2744
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h603d2461e4ba1659E"({ [0 x i8]*, i64 }* align 8 %program)
          to label %bb1 unwind label %cleanup, !dbg !2745

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2746

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 0, !dbg !2745
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 1, !dbg !2745
; invoke std::sys::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys4unix7process14process_common7Command3new17h76ede7c6fe93c846E(%"std::sys::unix::process::process_common::Command"* sret(%"std::sys::unix::process::process_common::Command") %_2, %"std::ffi::os_str::OsStr"* align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup, !dbg !2747

bb2:                                              ; preds = %bb1
  %12 = bitcast %"std::process::Command"* %0 to %"std::sys::unix::process::process_common::Command"*, !dbg !2748
  %13 = bitcast %"std::sys::unix::process::process_common::Command"* %12 to i8*, !dbg !2748
  %14 = bitcast %"std::sys::unix::process::process_common::Command"* %_2 to i8*, !dbg !2748
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 208, i1 false), !dbg !2748
  br label %bb3, !dbg !2746

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2749
  %16 = load i8*, i8** %15, align 8, !dbg !2749
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2749
  %18 = load i32, i32* %17, align 8, !dbg !2749
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !2749
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !2749
  resume { i8*, i32 } %20, !dbg !2749

bb3:                                              ; preds = %bb2
  ret void, !dbg !2750
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std7process7Command3new17h9f99ecca9871a14cE(%"std::process::Command"* sret(%"std::process::Command") %0, %"std::ffi::os_str::OsString"* %program) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2751 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"std::sys::unix::process::process_common::Command", align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %program, metadata !2755, metadata !DIExpression()), !dbg !2758
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %2 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h447487b8c4afc400E"(%"std::ffi::os_str::OsString"* align 8 %program)
          to label %bb1 unwind label %cleanup, !dbg !2759

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %program) #19
          to label %bb5 unwind label %abort, !dbg !2760

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 0, !dbg !2759
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 1, !dbg !2759
; invoke std::sys::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys4unix7process14process_common7Command3new17h76ede7c6fe93c846E(%"std::sys::unix::process::process_common::Command"* sret(%"std::sys::unix::process::process_common::Command") %_2, %"std::ffi::os_str::OsStr"* align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup, !dbg !2761

bb2:                                              ; preds = %bb1
  %8 = bitcast %"std::process::Command"* %0 to %"std::sys::unix::process::process_common::Command"*, !dbg !2762
  %9 = bitcast %"std::sys::unix::process::process_common::Command"* %8 to i8*, !dbg !2762
  %10 = bitcast %"std::sys::unix::process::process_common::Command"* %_2 to i8*, !dbg !2762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 208, i1 false), !dbg !2762
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %program), !dbg !2760
  br label %bb3, !dbg !2760

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !2763
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !2763
  unreachable, !dbg !2763

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2763
  %13 = load i8*, i8** %12, align 8, !dbg !2763
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2763
  %15 = load i32, i32* %14, align 8, !dbg !2763
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !2763
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !2763
  resume { i8*, i32 } %17, !dbg !2763

bb3:                                              ; preds = %bb2
  ret void, !dbg !2764
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define internal void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2765 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %loc.dbg.spill = alloca %"core::panic::location::Location"*, align 8
  %2 = alloca %"core::panic::location::Location"*, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !2770, metadata !DIExpression()), !dbg !2775
  store i8 1, i8* %_4, align 1, !dbg !2776
  store %"core::panic::location::Location"* %0, %"core::panic::location::Location"** %2, align 8, !dbg !2777
  %loc = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %2, align 8, !dbg !2777, !nonnull !23, !align !378, !noundef !23
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %loc.dbg.spill, align 8, !dbg !2777
  call void @llvm.dbg.declare(metadata %"core::panic::location::Location"** %loc.dbg.spill, metadata !2771, metadata !DIExpression()), !dbg !2784
  br label %bb4, !dbg !2777

bb4:                                              ; preds = %start
  store i8 0, i8* %_4, align 1, !dbg !2785
  %5 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*, !dbg !2785
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !2785
  store [0 x i8]* %msg.0, [0 x i8]** %6, align 8, !dbg !2785
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !2785
  store i64 %msg.1, i64* %7, align 8, !dbg !2785
  %8 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 1, !dbg !2785
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %8, align 8, !dbg !2785
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hde2104638b323179E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3) #18
          to label %unreachable unwind label %cleanup, !dbg !2786

bb3:                                              ; preds = %cleanup
  %9 = load i8, i8* %_4, align 1, !dbg !2787, !range !298, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !2787
  br i1 %10, label %bb2, label %bb1, !dbg !2787

cleanup:                                          ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

unreachable:                                      ; preds = %bb4
  unreachable

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2788
  %17 = load i8*, i8** %16, align 8, !dbg !2788
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2788
  %19 = load i32, i32* %18, align 8, !dbg !2788
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !2788
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !2788
  resume { i8*, i32 } %21, !dbg !2788

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !2787
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h0c86411d559645d7E"([0 x i8]* align 1 %inner.0, i64 %inner.1) unnamed_addr #0 !dbg !2789 {
start:
  %inner.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner.dbg.spill, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner.dbg.spill, i32 0, i32 1
  store i64 %inner.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %inner.dbg.spill, metadata !2793, metadata !DIExpression()), !dbg !2794
  %3 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*, !dbg !2795
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !2795
  store [0 x i8]* %inner.0, [0 x i8]** %4, align 8, !dbg !2795
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !2795
  store i64 %inner.1, i64* %5, align 8, !dbg !2795
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0, !dbg !2796
  %7 = load i8*, i8** %6, align 8, !dbg !2796, !align !912
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1, !dbg !2796
  %9 = load i64, i64* %8, align 8, !dbg !2796
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !2796
  store i8* %7, i8** %10, align 8, !dbg !2796
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !2796
  store i64 %9, i64* %11, align 8, !dbg !2796
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !2797
  %13 = load i8*, i8** %12, align 8, !dbg !2797, !align !912
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !2797
  %15 = load i64, i64* %14, align 8, !dbg !2797
  %16 = insertvalue { i8*, i64 } undef, i8* %13, 0, !dbg !2797
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1, !dbg !2797
  ret { i8*, i64 } %17, !dbg !2797
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h83e0383ceb9b4c80E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1) unnamed_addr #5 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2798 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i64*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  call void @llvm.dbg.declare(metadata %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, metadata !2800, metadata !DIExpression()), !dbg !2802
  %2 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1
  call void @llvm.dbg.declare(metadata %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, metadata !2801, metadata !DIExpression(DW_OP_plus_uconst, 16)), !dbg !2803
  %3 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*, !dbg !2804
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !2804
  %_7.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !dbg !2804, !nonnull !23, !align !912, !noundef !23
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !2804
  %_7.1 = load i64, i64* %5, align 8, !dbg !2804
; call std::panicking::begin_panic::PanicPayload<A>::new
  %6 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h0c86411d559645d7E"([0 x i8]* align 1 %_7.0, i64 %_7.1), !dbg !2805
  store { i8*, i64 } %6, { i8*, i64 }* %_6, align 8, !dbg !2805
  br label %bb1, !dbg !2805

bb1:                                              ; preds = %start
  %_3.0 = bitcast { i8*, i64 }* %_6 to {}*, !dbg !2806
  %7 = bitcast i64** %_8 to {}**, !dbg !2807
  store {}* null, {}** %7, align 8, !dbg !2807
  %8 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1, !dbg !2808
  %_10 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %8, align 8, !dbg !2808, !nonnull !23, !align !378, !noundef !23
  %9 = load i64*, i64** %_8, align 8, !dbg !2809, !align !378
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17hd073a0e33f1efac0E({}* align 1 %_3.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8* }>* @vtable.1 to [3 x i64]*), i64* align 8 %9, %"core::panic::location::Location"* align 8 %_10, i1 zeroext true) #18
          to label %unreachable unwind label %cleanup, !dbg !2809

bb2:                                              ; preds = %cleanup
  br label %bb3, !dbg !2810

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb2

unreachable:                                      ; preds = %bb1
  unreachable

bb3:                                              ; preds = %bb2
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !2811
  %16 = load i8*, i8** %15, align 8, !dbg !2811
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !2811
  %18 = load i32, i32* %17, align 8, !dbg !2811
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !2811
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !2811
  resume { i8*, i32 } %20, !dbg !2811
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0427302dc23aab41E"({ [0 x i8]*, i64 }** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !2812 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }**, align 8
  store { [0 x i8]*, i64 }** %self, { [0 x i8]*, i64 }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %self.dbg.spill, metadata !2818, metadata !DIExpression()), !dbg !2820
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2819, metadata !DIExpression()), !dbg !2821
  %_6 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %self, align 8, !dbg !2822, !nonnull !23, !align !378, !noundef !23
; call <&T as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hd7038587a5bd85f2E"({ [0 x i8]*, i64 }* align 8 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !2823
  br label %bb1, !dbg !2823

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2824
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hd7038587a5bd85f2E"({ [0 x i8]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !2825 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !2829, metadata !DIExpression()), !dbg !2831
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2830, metadata !DIExpression()), !dbg !2832
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !2833
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !2833, !nonnull !23, !align !912, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !2833
  %_6.1 = load i64, i64* %1, align 8, !dbg !2833
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hab83556372ca0523E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !2834
  br label %bb1, !dbg !2834

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !2835
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6926105b05642888E"(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 !dbg !2836 {
start:
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]", align 1
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>", align 1
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"* %self.dbg.spill, metadata !2841, metadata !DIExpression()), !dbg !2843
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !2842, metadata !DIExpression()), !dbg !2844
  %3 = bitcast %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>"* %_4 to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !2845
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h332f042858217278E"(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %_3, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !2845
  br label %bb1, !dbg !2845

bb1:                                              ; preds = %start
  %4 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0 to %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, !dbg !2846
  %5 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %4 to i8*, !dbg !2846
  %6 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %_3 to i8*, !dbg !2846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false), !dbg !2846
  ret void, !dbg !2847
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h9497189a00934520E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* sret(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 !dbg !2848 {
start:
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]", align 1
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", align 1
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* %self.dbg.spill, metadata !2867, metadata !DIExpression()), !dbg !2869
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !2868, metadata !DIExpression()), !dbg !2870
  %3 = bitcast %"core::str::pattern::MultiCharEqPattern<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_4 to %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"*, !dbg !2871
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h86801e2df8a25968E"(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>") %_3, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !2871
  br label %bb1, !dbg !2871

bb1:                                              ; preds = %start
  %4 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %0 to %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, !dbg !2872
  %5 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %4 to i8*, !dbg !2872
  %6 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3 to i8*, !dbg !2872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false), !dbg !2872
  ret void, !dbg !2873
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1d4dcef1ac74e1c9E"(i64 %start1, i64 %n) unnamed_addr #1 !dbg !2874 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !2881, metadata !DIExpression()), !dbg !2883
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2882, metadata !DIExpression()), !dbg !2884
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !2885
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2886, metadata !DIExpression()), !dbg !2893
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !2894
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !2892, metadata !DIExpression()), !dbg !2893
  %1 = add nuw i64 %start1, %n, !dbg !2893
  store i64 %1, i64* %0, align 8, !dbg !2893
  %2 = load i64, i64* %0, align 8, !dbg !2893
  br label %bb1, !dbg !2893

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !2895
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4core3any6TypeId2of17h7b64711a00802d80E() unnamed_addr #0 !dbg !2896 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 -5139102199292759541, i64* %0, align 8, !dbg !2899
  %_1 = load i64, i64* %0, align 8, !dbg !2899
  br label %bb1, !dbg !2899

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8, !dbg !2900
  %2 = load i64, i64* %1, align 8, !dbg !2901
  ret i64 %2, !dbg !2901
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hf8a1ee2773dc55ecE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #1 !dbg !2902 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2909, metadata !DIExpression()), !dbg !2911
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !2910, metadata !DIExpression()), !dbg !2912
  %_4 = load i64, i64* %self, align 8, !dbg !2913
  %_5 = load i64, i64* %other, align 8, !dbg !2914
  %_3 = icmp ult i64 %_4, %_5, !dbg !2913
  br i1 %_3, label %bb1, label %bb2, !dbg !2913

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !2915
  %_8 = load i64, i64* %other, align 8, !dbg !2916
  %_6 = icmp eq i64 %_7, %_8, !dbg !2915
  br i1 %_6, label %bb3, label %bb4, !dbg !2915

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !2917
  br label %bb6, !dbg !2918

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !2919, !range !2920, !noundef !23
  ret i8 %1, !dbg !2919

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !2921
  br label %bb5, !dbg !2922

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !2923
  br label %bb5, !dbg !2922

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !2918
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hf4a1568806407259E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #1 !dbg !2924 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2929, metadata !DIExpression()), !dbg !2931
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !2930, metadata !DIExpression()), !dbg !2932
  %_3 = load i64, i64* %self, align 8, !dbg !2933
  %_4 = load i64, i64* %other, align 8, !dbg !2934
  %0 = icmp ult i64 %_3, %_4, !dbg !2933
  ret i1 %0, !dbg !2935
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4d4a3809c8de9910E"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #1 !dbg !2936 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !2941, metadata !DIExpression()), !dbg !2946
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !2942, metadata !DIExpression()), !dbg !2947
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !2948
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !2948, !nonnull !23, !align !912, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !2948
  %_5.1 = load i64, i64* %1, align 8, !dbg !2948
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !2949
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !2949, !nonnull !23, !align !912, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !2949
  %_6.1 = load i64, i64* %3, align 8, !dbg !2949
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hfd782e66cafbb4cbE"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !2950
  br label %bb1, !dbg !2950

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !2951
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h8462e05dd5d789ddE"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #1 !dbg !2952 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !2954, metadata !DIExpression()), !dbg !2956
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !2955, metadata !DIExpression()), !dbg !2957
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !2958
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !2958, !nonnull !23, !align !912, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !2958
  %_5.1 = load i64, i64* %1, align 8, !dbg !2958
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !2959
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !2959, !nonnull !23, !align !912, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !2959
  %_6.1 = load i64, i64* %3, align 8, !dbg !2959
; call core::str::traits::<impl core::cmp::PartialEq for str>::ne
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17hc6c85a716ff4627eE"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !2960
  br label %bb1, !dbg !2960

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !2961
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp6max_by17h5c898ecc66be43b9E(i64 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2962 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %compare.dbg.spill = alloca {}, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  call void @llvm.dbg.declare(metadata i64* %v1, metadata !2967, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.declare(metadata i64* %v2, metadata !2968, metadata !DIExpression()), !dbg !2973
  call void @llvm.dbg.declare(metadata {}* %compare.dbg.spill, metadata !2969, metadata !DIExpression()), !dbg !2974
  store i8 1, i8* %_13, align 1, !dbg !2975
  store i8 1, i8* %_12, align 1, !dbg !2975
  %4 = bitcast { i64*, i64* }* %_6 to i64**, !dbg !2975
  store i64* %v1, i64** %4, align 8, !dbg !2975
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !2975
  store i64* %v2, i64** %5, align 8, !dbg !2975
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0, !dbg !2975
  %7 = load i64*, i64** %6, align 8, !dbg !2975, !nonnull !23, !align !378, !noundef !23
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !2975
  %9 = load i64*, i64** %8, align 8, !dbg !2975, !nonnull !23, !align !378, !noundef !23
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hfff8e9d808a0e435E(i64* align 8 %7, i64* align 8 %9)
          to label %bb1 unwind label %cleanup, !dbg !2975, !range !2920

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !2976

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1, !dbg !2975
  %_11 = load i8, i8* %_4, align 1, !dbg !2975, !range !2920, !noundef !23
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !2977

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !dbg !2976, !range !298, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !2976
  br i1 %17, label %bb12, label %bb9, !dbg !2976

bb3:                                              ; preds = %bb1
  unreachable, !dbg !2975

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1, !dbg !2978
  %18 = load i64, i64* %v2, align 8, !dbg !2978
  store i64 %18, i64* %3, align 8, !dbg !2978
  br label %bb5, !dbg !2978

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1, !dbg !2979
  %19 = load i64, i64* %v1, align 8, !dbg !2979
  store i64 %19, i64* %3, align 8, !dbg !2979
  br label %bb5, !dbg !2979

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !dbg !2976, !range !298, !noundef !23
  %21 = trunc i8 %20 to i1, !dbg !2976
  br i1 %21, label %bb10, label %bb6, !dbg !2976

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !dbg !2976, !range !298, !noundef !23
  %23 = trunc i8 %22 to i1, !dbg !2976
  br i1 %23, label %bb11, label %bb7, !dbg !2976

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !2976

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2980
  %25 = load i8*, i8** %24, align 8, !dbg !2980
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2980
  %27 = load i32, i32* %26, align 8, !dbg !2980
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0, !dbg !2980
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1, !dbg !2980
  resume { i8*, i32 } %29, !dbg !2980

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !2976

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8, !dbg !2981
  ret i64 %30, !dbg !2981

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !2976
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h19ccdb0c77e0394cE(%"alloc::string::String"* align 8 %x) unnamed_addr #1 !dbg !2982 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca %"alloc::string::String"*, align 8
  %x.dbg.spill = alloca %"alloc::string::String"*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store %"alloc::string::String"* %x, %"alloc::string::String"** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %x.dbg.spill, metadata !2987, metadata !DIExpression()), !dbg !2989
  store %"alloc::string::String"* %x, %"alloc::string::String"** %x.dbg.spill1, align 8, !dbg !2990
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %x.dbg.spill1, metadata !2991, metadata !DIExpression()), !dbg !3000
  store i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h06a2e774bb30b37eE", i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3002
  call void @llvm.dbg.declare(metadata i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !2999, metadata !DIExpression()), !dbg !3000
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h06a2e774bb30b37eE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3000
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3000, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3000

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::string::String"* %x to %"core::fmt::Opaque"*, !dbg !3000
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3000
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3000, !nonnull !23, !align !912, !noundef !23
  br label %bb2, !dbg !3000

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3000
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3000
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3000
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3000
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3000
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3003
  %8 = load i8*, i8** %7, align 8, !dbg !3003, !nonnull !23, !align !912, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3003
  %10 = load i64*, i64** %9, align 8, !dbg !3003, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3003
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3003
  ret { i8*, i64* } %12, !dbg !3003
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h582ab69c2d5a85f5E({ [0 x i8]*, i64 }* align 8 %x) unnamed_addr #1 !dbg !3004 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !3008, metadata !DIExpression()), !dbg !3009
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill1, align 8, !dbg !3010
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill1, metadata !3011, metadata !DIExpression()), !dbg !3018
  store i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hd7038587a5bd85f2E", i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3020
  call void @llvm.dbg.declare(metadata i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3017, metadata !DIExpression()), !dbg !3018
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hd7038587a5bd85f2E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3018
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3018, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3018

bb1:                                              ; preds = %start
  %3 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*, !dbg !3018
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3018
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3018, !nonnull !23, !align !912, !noundef !23
  br label %bb2, !dbg !3018

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3018
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3018
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3018
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3018
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3018
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3021
  %8 = load i8*, i8** %7, align 8, !dbg !3021, !nonnull !23, !align !912, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3021
  %10 = load i64*, i64** %9, align 8, !dbg !3021, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3021
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3021
  ret { i8*, i64* } %12, !dbg !3021
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h5e8def8530a18430E({ [0 x i8]*, i64 }** align 8 %x) unnamed_addr #1 !dbg !3022 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca { [0 x i8]*, i64 }**, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }**, align 8
  %2 = alloca { i8*, i64* }, align 8
  store { [0 x i8]*, i64 }** %x, { [0 x i8]*, i64 }*** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %x.dbg.spill, metadata !3026, metadata !DIExpression()), !dbg !3027
  store { [0 x i8]*, i64 }** %x, { [0 x i8]*, i64 }*** %x.dbg.spill1, align 8, !dbg !3028
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %x.dbg.spill1, metadata !3029, metadata !DIExpression()), !dbg !3036
  store i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0427302dc23aab41E", i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3038
  call void @llvm.dbg.declare(metadata i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3035, metadata !DIExpression()), !dbg !3036
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0427302dc23aab41E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3036
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3036, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3036

bb1:                                              ; preds = %start
  %3 = bitcast { [0 x i8]*, i64 }** %x to %"core::fmt::Opaque"*, !dbg !3036
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3036
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3036, !nonnull !23, !align !912, !noundef !23
  br label %bb2, !dbg !3036

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3036
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3036
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3036
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3036
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3036
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3039
  %8 = load i8*, i8** %7, align 8, !dbg !3039, !nonnull !23, !align !912, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3039
  %10 = load i64*, i64** %9, align 8, !dbg !3039, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3039
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3039
  ret { i8*, i64* } %12, !dbg !3039
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hfe8b01c3bbed3f42E(%"alloc::borrow::Cow<str>"* align 8 %x) unnamed_addr #1 !dbg !3040 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca %"alloc::borrow::Cow<str>"*, align 8
  %x.dbg.spill = alloca %"alloc::borrow::Cow<str>"*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store %"alloc::borrow::Cow<str>"* %x, %"alloc::borrow::Cow<str>"** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %x.dbg.spill, metadata !3060, metadata !DIExpression()), !dbg !3063
  store %"alloc::borrow::Cow<str>"* %x, %"alloc::borrow::Cow<str>"** %x.dbg.spill1, align 8, !dbg !3064
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %x.dbg.spill1, metadata !3065, metadata !DIExpression()), !dbg !3074
  store i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)* @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hc804b29b9b75cce0E", i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3076
  call void @llvm.dbg.declare(metadata i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3073, metadata !DIExpression()), !dbg !3074
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)* @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hc804b29b9b75cce0E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3074
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3074, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3074

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::borrow::Cow<str>"* %x to %"core::fmt::Opaque"*, !dbg !3074
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3074
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3074, !nonnull !23, !align !912, !noundef !23
  br label %bb2, !dbg !3074

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3074
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3074
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3074
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3074
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3074
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3077
  %8 = load i8*, i8** %7, align 8, !dbg !3077, !nonnull !23, !align !912, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3077
  %10 = load i64*, i64** %9, align 8, !dbg !3077, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3077
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3077
  ret { i8*, i64* } %12, !dbg !3077
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #1 !dbg !3078 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !3082, metadata !DIExpression()), !dbg !3084
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !3083, metadata !DIExpression()), !dbg !3085
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !3086
  br i1 %_4, label %bb1, label %bb2, !dbg !3086

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !3087
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !3088
  %5 = zext i1 %_9 to i8, !dbg !3086
  store i8 %5, i8* %_3, align 1, !dbg !3086
  br label %bb3, !dbg !3086

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !3086
  br label %bb3, !dbg !3086

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !3086, !range !298, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !3086
  br i1 %7, label %bb4, label %bb6, !dbg !3086

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !3089
  store {}* null, {}** %8, align 8, !dbg !3089
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3090
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !3090
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !3090
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !3090
  store i64 %pieces.1, i64* %11, align 8, !dbg !3090
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !3090
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !3090
  %14 = load i64*, i64** %13, align 8, !dbg !3090, !align !378
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !3090
  %16 = load i64, i64* %15, align 8, !dbg !3090
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !3090
  store i64* %14, i64** %17, align 8, !dbg !3090
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !3090
  store i64 %16, i64* %18, align 8, !dbg !3090
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !3090
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !3090
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !3090
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !3090
  store i64 %args.1, i64* %21, align 8, !dbg !3090
  ret void, !dbg !3091

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc201 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc67 to [0 x { i8*, i64* }]*), i64 0), !dbg !3092
  br label %bb5, !dbg !3092

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8b6ce72891ae5e4fE(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc451 to %"core::panic::location::Location"*)) #18, !dbg !3092
  unreachable, !dbg !3092
}

; core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h15d11afacc377d43E"(%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 !dbg !3093 {
start:
  %self.dbg.spill1 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !3098, metadata !DIExpression()), !dbg !3099
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill1, align 8, !dbg !3100
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill1, metadata !3101, metadata !DIExpression()), !dbg !3107
  %_2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<std::ffi::os_str::OsString>"*, !dbg !3107, !rawptr !418
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17h1428e3b391157e66E"(%"core::option::Option<std::ffi::os_str::OsString>"* %_2), !dbg !3108
  br label %bb1, !dbg !3108

bb1:                                              ; preds = %start
  ret void, !dbg !3109
}

; core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h4d58a7e204cdda1dE"(%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* align 8 %self) unnamed_addr #0 !dbg !3110 {
start:
  %self.dbg.spill1 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill, metadata !3115, metadata !DIExpression()), !dbg !3116
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill1, align 8, !dbg !3117
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill1, metadata !3118, metadata !DIExpression()), !dbg !3124
  %_2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self to %"std::ffi::os_str::OsString"*, !dbg !3124, !rawptr !418
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %_2), !dbg !3125
  br label %bb1, !dbg !3125

bb1:                                              ; preds = %start
  ret void, !dbg !3126
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17h0284928425902346E(i64* align 8 %dest, i64 %src) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3127 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8, !rawptr !418
  %src1 = alloca i64, align 8, !rawptr !418
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !3132, metadata !DIExpression()), !dbg !3136
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !3133, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !3138, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3148, metadata !DIExpression()), !dbg !3165
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !3167
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !3156, metadata !DIExpression()), !dbg !3168
  %1 = bitcast i64* %tmp to {}*, !dbg !3169
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !3165
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !3175, metadata !DIExpression()), !dbg !3182
  %2 = bitcast i64* %tmp to i8*, !dbg !3165
  %3 = bitcast i64* %dest to i8*, !dbg !3165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !3165
  %self = load i64, i64* %tmp, align 8, !dbg !3165
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !3165
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !3184, metadata !DIExpression()), !dbg !3190
  br label %bb4, !dbg !3190

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !3190
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !3192, metadata !DIExpression()), !dbg !3198
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !3198
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !3134, metadata !DIExpression()), !dbg !3200
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !3201
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !3145, metadata !DIExpression()), !dbg !3146
  store i64 %src, i64* %src1, align 8, !dbg !3202
  %4 = bitcast i64* %dest to i8*, !dbg !3146
  %5 = bitcast i64* %src1 to i8*, !dbg !3146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !3146
  ret i64 %self, !dbg !3203

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3204

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3205
  %7 = load i8*, i8** %6, align 8, !dbg !3205
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3205
  %9 = load i32, i32* %8, align 8, !dbg !3205
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !3205
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !3205
  resume { i8*, i32 } %11, !dbg !3205

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3204
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17h22a454e450d8beccE(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* sret(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>") %result, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* align 8 %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3206 {
start:
  %dst.dbg.spill = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"*, align 8
  %src.dbg.spill = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %dest.dbg.spill = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", align 8, !rawptr !418
  %src1 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8, !rawptr !418
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %result, metadata !3213, metadata !DIExpression()), !dbg !3217
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dest.dbg.spill, metadata !3211, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src, metadata !3212, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src1, metadata !3220, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp, metadata !3230, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %self, metadata !3249, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %slot, metadata !3257, metadata !DIExpression()), !dbg !3263
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %src.dbg.spill, align 8, !dbg !3265
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %src.dbg.spill, metadata !3238, metadata !DIExpression()), !dbg !3266
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp to {}*, !dbg !3267
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"** %self.dbg.spill, align 8, !dbg !3247
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"** %self.dbg.spill, metadata !3273, metadata !DIExpression()), !dbg !3280
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !3280, !rawptr !418
  %2 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_9 to i8*, !dbg !3247
  %3 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest to i8*, !dbg !3247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 32, i1 false), !dbg !3247
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %self to i8*, !dbg !3247
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp to i8*, !dbg !3247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false), !dbg !3247
  br label %bb4, !dbg !3255

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"*, !dbg !3255
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %slot to i8*, !dbg !3255
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %6 to i8*, !dbg !3255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !3255
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %slot to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !3263
  %10 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %result to i8*, !dbg !3263
  %11 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %9 to i8*, !dbg !3263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false), !dbg !3263
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dst.dbg.spill, align 8, !dbg !3282
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dst.dbg.spill, metadata !3227, metadata !DIExpression()), !dbg !3228
  %12 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src1 to i8*, !dbg !3283
  %13 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src to i8*, !dbg !3283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !3283
  %14 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest to i8*, !dbg !3228
  %15 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src1 to i8*, !dbg !3228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false), !dbg !3228
  ret void, !dbg !3284

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3285

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3286
  %17 = load i8*, i8** %16, align 8, !dbg !3286
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3286
  %19 = load i32, i32* %18, align 8, !dbg !3286
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3286
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3286
  resume { i8*, i32 } %21, !dbg !3286

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3285
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64* } @_ZN4core3mem7replace17h6dbfd2d9b173c1ffE({ i64, i64* }* align 8 %dest, i64 %src.0, i64* %src.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3287 {
start:
  %dst.dbg.spill = alloca { i64, i64* }*, align 8
  %result.dbg.spill = alloca { i64, i64* }, align 8
  %slot.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { i64, i8* }, align 8
  %self.dbg.spill = alloca { i64, i8* }*, align 8
  %src.dbg.spill1 = alloca { i64, i64* }*, align 8
  %src.dbg.spill = alloca { i64, i64* }, align 8
  %dest.dbg.spill = alloca { i64, i64* }*, align 8
  %tmp = alloca { i64, i8* }, align 8, !rawptr !418
  %src = alloca { i64, i64* }, align 8, !rawptr !418
  store { i64, i64* }* %dest, { i64, i64* }** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %dest.dbg.spill, metadata !3291, metadata !DIExpression()), !dbg !3297
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src.dbg.spill, i32 0, i32 0
  store i64 %src.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src.dbg.spill, i32 0, i32 1
  store i64* %src.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %src.dbg.spill, metadata !3292, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.declare(metadata { i64, i64* }* %src, metadata !3299, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.declare(metadata { i64, i8* }* %tmp, metadata !3309, metadata !DIExpression()), !dbg !3326
  store { i64, i64* }* %dest, { i64, i64* }** %src.dbg.spill1, align 8, !dbg !3328
  call void @llvm.dbg.declare(metadata { i64, i64* }** %src.dbg.spill1, metadata !3317, metadata !DIExpression()), !dbg !3329
  %3 = bitcast { i64, i8* }* %tmp to {}*, !dbg !3330
  store { i64, i8* }* %tmp, { i64, i8* }** %self.dbg.spill, align 8, !dbg !3326
  call void @llvm.dbg.declare(metadata { i64, i8* }** %self.dbg.spill, metadata !3336, metadata !DIExpression()), !dbg !3343
  %_9 = bitcast { i64, i8* }* %tmp to { i64, i64* }*, !dbg !3343, !rawptr !418
  %4 = bitcast { i64, i64* }* %_9 to i8*, !dbg !3326
  %5 = bitcast { i64, i64* }* %dest to i8*, !dbg !3326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false), !dbg !3326
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0, !dbg !3326
  %self.0 = load i64, i64* %6, align 8, !dbg !3326
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1, !dbg !3326
  %self.1 = load i8*, i8** %7, align 8, !dbg !3326
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 0, !dbg !3326
  store i64 %self.0, i64* %8, align 8, !dbg !3326
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 1, !dbg !3326
  store i8* %self.1, i8** %9, align 8, !dbg !3326
  call void @llvm.dbg.declare(metadata { i64, i8* }* %self.dbg.spill2, metadata !3345, metadata !DIExpression()), !dbg !3351
  br label %bb4, !dbg !3351

bb4:                                              ; preds = %start
  %slot.1 = bitcast i8* %self.1 to i64*, !dbg !3351
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 0, !dbg !3351
  store i64 %self.0, i64* %10, align 8, !dbg !3351
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 1, !dbg !3351
  store i64* %slot.1, i64** %11, align 8, !dbg !3351
  call void @llvm.dbg.declare(metadata { i64, i64* }* %slot.dbg.spill, metadata !3353, metadata !DIExpression()), !dbg !3359
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %result.dbg.spill, i32 0, i32 0, !dbg !3359
  store i64 %self.0, i64* %12, align 8, !dbg !3359
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %result.dbg.spill, i32 0, i32 1, !dbg !3359
  store i64* %slot.1, i64** %13, align 8, !dbg !3359
  call void @llvm.dbg.declare(metadata { i64, i64* }* %result.dbg.spill, metadata !3293, metadata !DIExpression()), !dbg !3361
  store { i64, i64* }* %dest, { i64, i64* }** %dst.dbg.spill, align 8, !dbg !3362
  call void @llvm.dbg.declare(metadata { i64, i64* }** %dst.dbg.spill, metadata !3306, metadata !DIExpression()), !dbg !3307
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src, i32 0, i32 0, !dbg !3363
  store i64 %src.0, i64* %14, align 8, !dbg !3363
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src, i32 0, i32 1, !dbg !3363
  store i64* %src.1, i64** %15, align 8, !dbg !3363
  %16 = bitcast { i64, i64* }* %dest to i8*, !dbg !3307
  %17 = bitcast { i64, i64* }* %src to i8*, !dbg !3307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !3307
  %18 = insertvalue { i64, i64* } undef, i64 %self.0, 0, !dbg !3364
  %19 = insertvalue { i64, i64* } %18, i64* %slot.1, 1, !dbg !3364
  ret { i64, i64* } %19, !dbg !3364

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3365

bb1:                                              ; preds = %bb2, %bb3
  %20 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3366
  %21 = load i8*, i8** %20, align 8, !dbg !3366
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3366
  %23 = load i32, i32* %22, align 8, !dbg !3366
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !3366
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !3366
  resume { i8*, i32 } %25, !dbg !3366

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3365
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3mem7replace17he0ac2fd194b72967E({ i8*, i64 }* align 8 %dest, i8* align 1 %src.0, i64 %src.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3367 {
start:
  %dst.dbg.spill = alloca { i8*, i64 }*, align 8
  %result.dbg.spill = alloca { i8*, i64 }, align 8
  %slot.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %src.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %src.dbg.spill = alloca { i8*, i64 }, align 8
  %dest.dbg.spill = alloca { i8*, i64 }*, align 8
  %tmp = alloca { i8*, i64 }, align 8, !rawptr !418
  %src = alloca { i8*, i64 }, align 8, !rawptr !418
  store { i8*, i64 }* %dest, { i8*, i64 }** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %dest.dbg.spill, metadata !3372, metadata !DIExpression()), !dbg !3378
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src.dbg.spill, i32 0, i32 0
  store i8* %src.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %src.dbg.spill, metadata !3373, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %src, metadata !3380, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %tmp, metadata !3390, metadata !DIExpression()), !dbg !3407
  store { i8*, i64 }* %dest, { i8*, i64 }** %src.dbg.spill1, align 8, !dbg !3409
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %src.dbg.spill1, metadata !3398, metadata !DIExpression()), !dbg !3410
  %3 = bitcast { i8*, i64 }* %tmp to {}*, !dbg !3411
  store { i8*, i64 }* %tmp, { i8*, i64 }** %self.dbg.spill, align 8, !dbg !3407
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3417, metadata !DIExpression()), !dbg !3424
  %4 = bitcast { i8*, i64 }* %tmp to i8*, !dbg !3407
  %5 = bitcast { i8*, i64 }* %dest to i8*, !dbg !3407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false), !dbg !3407
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0, !dbg !3407
  %self.0 = load i8*, i8** %6, align 8, !dbg !3407
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1, !dbg !3407
  %self.1 = load i64, i64* %7, align 8, !dbg !3407
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3407
  store i8* %self.0, i8** %8, align 8, !dbg !3407
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3407
  store i64 %self.1, i64* %9, align 8, !dbg !3407
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !3426, metadata !DIExpression()), !dbg !3432
  br label %bb4, !dbg !3432

bb4:                                              ; preds = %start
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %slot.dbg.spill, i32 0, i32 0, !dbg !3432
  store i8* %self.0, i8** %10, align 8, !dbg !3432
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %slot.dbg.spill, i32 0, i32 1, !dbg !3432
  store i64 %self.1, i64* %11, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %slot.dbg.spill, metadata !3434, metadata !DIExpression()), !dbg !3440
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result.dbg.spill, i32 0, i32 0, !dbg !3440
  store i8* %self.0, i8** %12, align 8, !dbg !3440
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result.dbg.spill, i32 0, i32 1, !dbg !3440
  store i64 %self.1, i64* %13, align 8, !dbg !3440
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result.dbg.spill, metadata !3374, metadata !DIExpression()), !dbg !3442
  store { i8*, i64 }* %dest, { i8*, i64 }** %dst.dbg.spill, align 8, !dbg !3443
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %dst.dbg.spill, metadata !3387, metadata !DIExpression()), !dbg !3388
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0, !dbg !3444
  store i8* %src.0, i8** %14, align 8, !dbg !3444
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1, !dbg !3444
  store i64 %src.1, i64* %15, align 8, !dbg !3444
  %16 = bitcast { i8*, i64 }* %dest to i8*, !dbg !3388
  %17 = bitcast { i8*, i64 }* %src to i8*, !dbg !3388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !3388
  %18 = insertvalue { i8*, i64 } undef, i8* %self.0, 0, !dbg !3445
  %19 = insertvalue { i8*, i64 } %18, i64 %self.1, 1, !dbg !3445
  ret { i8*, i64 } %19, !dbg !3445

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3446

bb1:                                              ; preds = %bb2, %bb3
  %20 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3447
  %21 = load i8*, i8** %20, align 8, !dbg !3447
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3447
  %23 = load i32, i32* %22, align 8, !dbg !3447
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !3447
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !3447
  resume { i8*, i32 } %25, !dbg !3447

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3446
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h5b858ae8d87d18f0E"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !3448 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3450, metadata !DIExpression()), !dbg !3455
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3451, metadata !DIExpression()), !dbg !3456
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !3457
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !3458, metadata !DIExpression()), !dbg !3471
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !3472
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !3467, metadata !DIExpression()), !dbg !3471
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !3471
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !3471
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !3471
  %6 = zext i1 %5 to i8, !dbg !3471
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !3471
  store i64 %4, i64* %7, align 8, !dbg !3471
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3471
  store i8 %6, i8* %8, align 8, !dbg !3471
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !3471
  %_13.0 = load i64, i64* %9, align 8, !dbg !3471
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3471
  %11 = load i8, i8* %10, align 8, !dbg !3471, !range !298, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !3471
  br label %bb5, !dbg !3471

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !3471
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3468, metadata !DIExpression()), !dbg !3473
  %12 = zext i1 %_13.1 to i8, !dbg !3471
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !3471
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !3470, metadata !DIExpression()), !dbg !3473
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3473
  store i64 %_13.0, i64* %13, align 8, !dbg !3473
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3473
  %15 = zext i1 %_13.1 to i8, !dbg !3473
  store i8 %15, i8* %14, align 8, !dbg !3473
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3474
  %a = load i64, i64* %16, align 8, !dbg !3474
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !3474
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !3452, metadata !DIExpression()), !dbg !3475
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3476
  %18 = load i8, i8* %17, align 8, !dbg !3476, !range !298, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !3476
  %19 = zext i1 %b to i8, !dbg !3476
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !3476
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !3454, metadata !DIExpression()), !dbg !3477
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !3478
  %21 = zext i1 %20 to i8, !dbg !3478
  store i8 %21, i8* %0, align 1, !dbg !3478
  %22 = load i8, i8* %0, align 1, !dbg !3478, !range !298, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !3478
  br label %bb1, !dbg !3478

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !3478

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3479
  store i64 %a, i64* %23, align 8, !dbg !3479
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !3479
  store i64 1, i64* %24, align 8, !dbg !3479
  br label %bb4, !dbg !3480

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !3481
  store i64 0, i64* %25, align 8, !dbg !3481
  br label %bb4, !dbg !3480

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3482
  %27 = load i64, i64* %26, align 8, !dbg !3482, !range !3483, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3482
  %29 = load i64, i64* %28, align 8, !dbg !3482
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !3482
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !3482
  ret { i64, i64 } %31, !dbg !3482
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !3484 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3486, metadata !DIExpression()), !dbg !3491
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3487, metadata !DIExpression()), !dbg !3492
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !3493
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !3494, metadata !DIExpression()), !dbg !3501
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !3502
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !3497, metadata !DIExpression()), !dbg !3501
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !3501
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !3501
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !3501
  %6 = zext i1 %5 to i8, !dbg !3501
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !3501
  store i64 %4, i64* %7, align 8, !dbg !3501
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3501
  store i8 %6, i8* %8, align 8, !dbg !3501
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !3501
  %_13.0 = load i64, i64* %9, align 8, !dbg !3501
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3501
  %11 = load i8, i8* %10, align 8, !dbg !3501, !range !298, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !3501
  br label %bb5, !dbg !3501

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !3501
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3498, metadata !DIExpression()), !dbg !3503
  %12 = zext i1 %_13.1 to i8, !dbg !3501
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !3501
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !3500, metadata !DIExpression()), !dbg !3503
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3503
  store i64 %_13.0, i64* %13, align 8, !dbg !3503
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3503
  %15 = zext i1 %_13.1 to i8, !dbg !3503
  store i8 %15, i8* %14, align 8, !dbg !3503
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3504
  %a = load i64, i64* %16, align 8, !dbg !3504
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !3504
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !3488, metadata !DIExpression()), !dbg !3505
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3506
  %18 = load i8, i8* %17, align 8, !dbg !3506, !range !298, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !3506
  %19 = zext i1 %b to i8, !dbg !3506
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !3506
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !3490, metadata !DIExpression()), !dbg !3507
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !3508
  %21 = zext i1 %20 to i8, !dbg !3508
  store i8 %21, i8* %0, align 1, !dbg !3508
  %22 = load i8, i8* %0, align 1, !dbg !3508, !range !298, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !3508
  br label %bb1, !dbg !3508

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !3508

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3509
  store i64 %a, i64* %23, align 8, !dbg !3509
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !3509
  store i64 1, i64* %24, align 8, !dbg !3509
  br label %bb4, !dbg !3510

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !3511
  store i64 0, i64* %25, align 8, !dbg !3511
  br label %bb4, !dbg !3510

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3512
  %27 = load i64, i64* %26, align 8, !dbg !3512, !range !3483, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3512
  %29 = load i64, i64* %28, align 8, !dbg !3512
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !3512
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !3512
  ret { i64, i64 } %31, !dbg !3512
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h31eae36f81b317efE({}* align 1 %_1, i64 %0, i64 %1) unnamed_addr #1 !dbg !3513 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  %_2 = alloca { i64, i64 }, align 8
  %2 = bitcast { i64, i64 }* %_2 to i64*
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !3521, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.declare(metadata { i64, i64 }* %_2, metadata !3523, metadata !DIExpression()), !dbg !3527
  %4 = bitcast { i64, i64 }* %_2 to i64*, !dbg !3527
  %5 = load i64, i64* %4, align 8, !dbg !3527
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !3527
  %7 = load i64, i64* %6, align 8, !dbg !3527
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h5b858ae8d87d18f0E"(i64 %5, i64 %7), !dbg !3527
  %9 = extractvalue { i64, i64 } %8, 0, !dbg !3527
  %10 = extractvalue { i64, i64 } %8, 1, !dbg !3527
  br label %bb1, !dbg !3527

bb1:                                              ; preds = %start
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !3527
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !3527
  ret { i64, i64 } %12, !dbg !3527
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h01d5bc50ff17e0c8E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %self, { [0 x i8]*, i64 }* align 8 %0) unnamed_addr #0 !dbg !3528 {
start:
  %self.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, align 8
  %args = alloca i64*, align 8
  %1 = bitcast i64** %args to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %self, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %self.dbg.spill, metadata !3540, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.declare(metadata i64** %args, metadata !3541, metadata !DIExpression()), !dbg !3549
  %_4 = load i64*, i64** %args, align 8, !dbg !3550, !nonnull !23, !align !378, !noundef !23
  %2 = bitcast i64* %_4 to { [0 x i8]*, i64 }*, !dbg !3551
; call alloc::str::join_generic_copy::{{closure}}
  %3 = call { [0 x i8]*, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h9461ac78f0f5cd8dE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %self, { [0 x i8]*, i64 }* align 8 %2), !dbg !3551
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3551
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3551
  br label %bb1, !dbg !3551

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !3552
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !3552
  ret { [0 x i8]*, i64 } %7, !dbg !3552
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h867fca4a7d73dd10E"(i64** %_1) unnamed_addr #1 !dbg !3553 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca {}, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !3559, metadata !DIExpression()), !dbg !3564
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !3560, metadata !DIExpression()), !dbg !3564
  %0 = load i64*, i64** %_1, align 8, !dbg !3564, !nonnull !23, !noundef !23
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h7a60faacd5196fa4E(i64* %0), !dbg !3564
  br label %bb1, !dbg !3564

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !3564
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h7a60faacd5196fa4E(i64* %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3565 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !3569, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !3570, metadata !DIExpression()), !dbg !3571
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfd338f81e5b45273E"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !3571

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !3571

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !3571

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3571
  %9 = load i8*, i8** %8, align 8, !dbg !3571
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3571
  %11 = load i32, i32* %10, align 8, !dbg !3571
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !3571
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !3571
  resume { i8*, i32 } %13, !dbg !3571

bb2:                                              ; preds = %bb1
  ret i32 %2, !dbg !3571
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hdffb97304173dc98E(void ()* %_1) unnamed_addr #1 !dbg !3572 {
start:
  %_1.dbg.spill = alloca void ()*, align 8
  %_2 = alloca {}, align 1
  store void ()* %_1, void ()** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %_1.dbg.spill, metadata !3574, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !3575, metadata !DIExpression()), !dbg !3578
  call void %_1(), !dbg !3578
  br label %bb1, !dbg !3578

bb1:                                              ; preds = %start
  ret void, !dbg !3578
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17hfff8e9d808a0e435E(i64* align 8 %0, i64* align 8 %1) unnamed_addr #1 !dbg !3579 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !3583, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_2, metadata !3584, metadata !DIExpression()), !dbg !3592
  %4 = bitcast { i64*, i64* }* %_2 to i64**, !dbg !3592
  %5 = load i64*, i64** %4, align 8, !dbg !3592, !nonnull !23, !align !378, !noundef !23
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1, !dbg !3592
  %7 = load i64*, i64** %6, align 8, !dbg !3592, !nonnull !23, !align !378, !noundef !23
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hf8a1ee2773dc55ecE"(i64* align 8 %5, i64* align 8 %7), !dbg !3592, !range !2920
  br label %bb1, !dbg !3592

bb1:                                              ; preds = %start
  ret i8 %8, !dbg !3592
}

; core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h1b4f9fdc984d784bE"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1) unnamed_addr #0 !dbg !3593 {
start:
  %_1.dbg.spill = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"*, align 8
  store %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1, %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, metadata !3598, metadata !DIExpression()), !dbg !3601
  %0 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to i8*, !dbg !3601
  %1 = load i8, i8* %0, align 8, !dbg !3601, !range !3602, !noundef !23
  %_2 = zext i8 %1 to i64, !dbg !3601
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ], !dbg !3601

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !3601
  %3 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %2, i32 0, i32 1, !dbg !3601
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h316c7be9ae07eb84E"(%"std::io::error::Custom"** %3), !dbg !3601
  br label %bb1, !dbg !3601

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void, !dbg !3601
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h5f657d4ccad9db74E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3603 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !3608, metadata !DIExpression()), !dbg !3611
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3611
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !3611
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !3611
  %4 = load {}*, {}** %3, align 8, !dbg !3611
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !3611
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !3611, !nonnull !23, !align !378, !noundef !23
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !3611
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !3611
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !3611, !invariant.load !23, !nonnull !23
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !3611

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3611
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !3611
  %12 = load i8*, i8** %11, align 8, !dbg !3611, !nonnull !23, !noundef !23
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !3611
  %14 = load i64*, i64** %13, align 8, !dbg !3611, !nonnull !23, !align !378, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hb1917f1427afb187E(i8* %12, i64* align 8 %14) #19
          to label %bb2 unwind label %abort, !dbg !3611

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3611
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !3611
  %22 = load i8*, i8** %21, align 8, !dbg !3611, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !3611
  %24 = load i64*, i64** %23, align 8, !dbg !3611, !nonnull !23, !align !378, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hb1917f1427afb187E(i8* %22, i64* align 8 %24), !dbg !3611
  br label %bb1, !dbg !3611

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !3611
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3611
  unreachable, !dbg !3611

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3611
  %27 = load i8*, i8** %26, align 8, !dbg !3611
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3611
  %29 = load i32, i32* %28, align 8, !dbg !3611
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !3611
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !3611
  resume { i8*, i32 } %31, !dbg !3611

bb1:                                              ; preds = %bb3
  ret void, !dbg !3611
}

; core::ptr::drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17hcd38880cef285fd1E"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1) unnamed_addr #0 !dbg !3612 {
start:
  %_1.dbg.spill = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  store %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, metadata !3617, metadata !DIExpression()), !dbg !3618
; call <alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h541c6673ee73fd66E"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_1), !dbg !3618
  br label %bb1, !dbg !3618

bb1:                                              ; preds = %start
  ret void, !dbg !3618
}

; core::ptr::drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17hf4221db241dd2233E"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1) unnamed_addr #0 !dbg !3619 {
start:
  %_1.dbg.spill = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, metadata !3624, metadata !DIExpression()), !dbg !3627
; call <alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdd789a6152555bd0E"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_1), !dbg !3627
  br label %bb1, !dbg !3627

bb1:                                              ; preds = %start
  ret void, !dbg !3627
}

; core::ptr::drop_in_place<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr203drop_in_place$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h7cfc708d84775cebE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #0 !dbg !3628 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !3636, metadata !DIExpression()), !dbg !3639
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !3639
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !3639
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !3639, !invariant.load !23, !nonnull !23
  call void %4({}* %_1.0), !dbg !3639
  br label %bb1, !dbg !3639

bb1:                                              ; preds = %start
  ret void, !dbg !3639
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h28bb248865c9a70fE"({ {}*, [3 x i64]* }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3640 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !3645, metadata !DIExpression()), !dbg !3646
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3646
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !3646
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !3646
  %4 = load {}*, {}** %3, align 8, !dbg !3646
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !3646
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !3646, !nonnull !23, !align !378, !noundef !23
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !3646
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !3646
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !3646, !invariant.load !23, !nonnull !23
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !3646

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3646
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !3646
  %12 = load i8*, i8** %11, align 8, !dbg !3646, !nonnull !23, !noundef !23
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !3646
  %14 = load i64*, i64** %13, align 8, !dbg !3646, !nonnull !23, !align !378, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17ha18ccfeeb56ca191E(i8* %12, i64* align 8 %14) #19
          to label %bb2 unwind label %abort, !dbg !3646

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3646
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !3646
  %22 = load i8*, i8** %21, align 8, !dbg !3646, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !3646
  %24 = load i64*, i64** %23, align 8, !dbg !3646, !nonnull !23, !align !378, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17ha18ccfeeb56ca191E(i8* %22, i64* align 8 %24), !dbg !3646
  br label %bb1, !dbg !3646

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !3646
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3646
  unreachable, !dbg !3646

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3646
  %27 = load i8*, i8** %26, align 8, !dbg !3646
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3646
  %29 = load i32, i32* %28, align 8, !dbg !3646
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !3646
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !3646
  resume { i8*, i32 } %31, !dbg !3646

bb1:                                              ; preds = %bb3
  ret void, !dbg !3646
}

; core::ptr::drop_in_place<[alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>]>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17hb1c91d1a2d50f1c1E"([0 x { {}*, [3 x i64]* }]* %_1.0, i64 %_1.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3647 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x { {}*, [3 x i64]* }]*, i64 }, align 8
  %_9 = alloca { {}*, [3 x i64]* }*, align 8, !rawptr !418
  %_4 = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store [0 x { {}*, [3 x i64]* }]* %_1.0, [0 x { {}*, [3 x i64]* }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { {}*, [3 x i64]* }]*, i64 }* %_1.dbg.spill, metadata !3656, metadata !DIExpression()), !dbg !3657
  br i1 false, label %bb7, label %bb12, !dbg !3657

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8, !dbg !3657
  br label %bb6, !dbg !3657

bb12:                                             ; preds = %start
  %3 = bitcast [0 x { {}*, [3 x i64]* }]* %_1.0 to { {}*, [3 x i64]* }*, !dbg !3657
  store { {}*, [3 x i64]* }* %3, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657
  %4 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %_10 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i64 %_1.1, !dbg !3657, !rawptr !418
  br label %bb11, !dbg !3657

bb11:                                             ; preds = %bb10, %bb12
  %5 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %_14 = icmp eq { {}*, [3 x i64]* }* %5, %_10, !dbg !3657
  br i1 %_14, label %bb1, label %bb10, !dbg !3657

bb10:                                             ; preds = %bb11
  %_13 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %6 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %6, i64 1, !dbg !3657
  store { {}*, [3 x i64]* }* %7, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h28bb248865c9a70fE"({ {}*, [3 x i64]* }* %_13)
          to label %bb11 unwind label %cleanup, !dbg !3657

bb1:                                              ; preds = %bb6, %bb11
  ret void, !dbg !3657

bb9:                                              ; preds = %bb8, %cleanup
  %8 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %_12 = icmp eq { {}*, [3 x i64]* }* %8, %_10, !dbg !3657
  br i1 %_12, label %bb2, label %bb8, !dbg !3657

cleanup:                                          ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %14 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657, !rawptr !418
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i64 1, !dbg !3657
  store { {}*, [3 x i64]* }* %15, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3657
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h28bb248865c9a70fE"({ {}*, [3 x i64]* }* %_11) #19
          to label %bb9 unwind label %abort, !dbg !3657

bb2:                                              ; preds = %bb4, %bb9
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3657
  %17 = load i8*, i8** %16, align 8, !dbg !3657
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3657
  %19 = load i32, i32* %18, align 8, !dbg !3657
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3657
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3657
  resume { i8*, i32 } %21, !dbg !3657

abort:                                            ; preds = %bb3, %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !3657
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3657
  unreachable, !dbg !3657

bb6:                                              ; preds = %bb5, %bb7
  %23 = load i64, i64* %_4, align 8, !dbg !3657
  %_8 = icmp eq i64 %23, %_1.1, !dbg !3657
  br i1 %_8, label %bb1, label %bb5, !dbg !3657

bb5:                                              ; preds = %bb6
  %24 = load i64, i64* %_4, align 8, !dbg !3657
  %_7 = getelementptr inbounds [0 x { {}*, [3 x i64]* }], [0 x { {}*, [3 x i64]* }]* %_1.0, i64 0, i64 %24, !dbg !3657, !rawptr !418
  %25 = load i64, i64* %_4, align 8, !dbg !3657
  %26 = add i64 %25, 1, !dbg !3657
  store i64 %26, i64* %_4, align 8, !dbg !3657
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h28bb248865c9a70fE"({ {}*, [3 x i64]* }* %_7)
          to label %bb6 unwind label %cleanup1, !dbg !3657

bb4:                                              ; preds = %bb3, %cleanup1
  %27 = load i64, i64* %_4, align 8, !dbg !3657
  %_6 = icmp eq i64 %27, %_1.1, !dbg !3657
  br i1 %_6, label %bb2, label %bb3, !dbg !3657

cleanup1:                                         ; preds = %bb5
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %33 = load i64, i64* %_4, align 8, !dbg !3657
  %_5 = getelementptr inbounds [0 x { {}*, [3 x i64]* }], [0 x { {}*, [3 x i64]* }]* %_1.0, i64 0, i64 %33, !dbg !3657, !rawptr !418
  %34 = load i64, i64* %_4, align 8, !dbg !3657
  %35 = add i64 %34, 1, !dbg !3657
  store i64 %35, i64* %_4, align 8, !dbg !3657
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h28bb248865c9a70fE"({ {}*, [3 x i64]* }* %_5) #19
          to label %bb4 unwind label %abort, !dbg !3657
}

; core::ptr::drop_in_place<<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h65fee26ffc5da048E"(i64** %_1) unnamed_addr #0 !dbg !3658 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !3663, metadata !DIExpression()), !dbg !3666
; call <<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c56c1d8ecc9f7c5E"(i64** align 8 %_1), !dbg !3666
  br label %bb1, !dbg !3666

bb1:                                              ; preds = %start
  ret void, !dbg !3666
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h812d90f6c4711379E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3667 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"*, align 8
  store %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %_1.dbg.spill, metadata !3672, metadata !DIExpression()), !dbg !3675
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha754ebadfb1abed3E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3675

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1 to { i64*, i64 }*, !dbg !3675
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h58c4e59aa303dc02E"({ i64*, i64 }* %1) #19
          to label %bb1 unwind label %abort, !dbg !3675

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1 to { i64*, i64 }*, !dbg !3675
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  call void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h58c4e59aa303dc02E"({ i64*, i64 }* %7), !dbg !3675
  br label %bb2, !dbg !3675

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3675
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3675
  unreachable, !dbg !3675

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3675
  %10 = load i8*, i8** %9, align 8, !dbg !3675
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3675
  %12 = load i32, i32* %11, align 8, !dbg !3675
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3675
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3675
  resume { i8*, i32 } %14, !dbg !3675

bb2:                                              ; preds = %bb4
  ret void, !dbg !3675
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h58c4e59aa303dc02E"({ i64*, i64 }* %_1) unnamed_addr #0 !dbg !3676 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !3681, metadata !DIExpression()), !dbg !3684
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h85d510a2416f2482E"({ i64*, i64 }* align 8 %_1), !dbg !3684
  br label %bb1, !dbg !3684

bb1:                                              ; preds = %start
  ret void, !dbg !3684
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h66fcefb7641afb30E"({ [0 x i8]*, i64 }* %_1) unnamed_addr #1 !dbg !3685 {
start:
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %_1, { [0 x i8]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_1.dbg.spill, metadata !3690, metadata !DIExpression()), !dbg !3691
  ret void, !dbg !3691
}

; core::ptr::drop_in_place<std::env::VarError>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17h3020d23ce274add7E"(%"std::env::VarError"* %_1) unnamed_addr #0 !dbg !3692 {
start:
  %_1.dbg.spill = alloca %"std::env::VarError"*, align 8
  store %"std::env::VarError"* %_1, %"std::env::VarError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::env::VarError"** %_1.dbg.spill, metadata !3697, metadata !DIExpression()), !dbg !3700
  %0 = bitcast %"std::env::VarError"* %_1 to {}**, !dbg !3700
  %1 = load {}*, {}** %0, align 8, !dbg !3700
  %2 = icmp eq {}* %1, null, !dbg !3700
  %_2 = select i1 %2, i64 0, i64 1, !dbg !3700
  %3 = icmp eq i64 %_2, 0, !dbg !3700
  br i1 %3, label %bb1, label %bb2, !dbg !3700

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3700

bb2:                                              ; preds = %start
  %4 = bitcast %"std::env::VarError"* %_1 to %"std::env::VarError::NotUnicode"*, !dbg !3700
  %5 = bitcast %"std::env::VarError::NotUnicode"* %4 to %"std::ffi::os_str::OsString"*, !dbg !3700
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %5), !dbg !3700
  br label %bb1, !dbg !3700
}

; core::ptr::drop_in_place<std::process::Output>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h1a4e4d0f5779de40E"(%"std::process::Output"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3701 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::process::Output"*, align 8
  store %"std::process::Output"* %_1, %"std::process::Output"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Output"** %_1.dbg.spill, metadata !3718, metadata !DIExpression()), !dbg !3721
  %1 = bitcast %"std::process::Output"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3721
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %1)
          to label %bb4 unwind label %cleanup, !dbg !3721

bb3:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %_1, i32 0, i32 1, !dbg !3721
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %2) #19
          to label %bb1 unwind label %abort, !dbg !3721

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %_1, i32 0, i32 1, !dbg !3721
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %8), !dbg !3721
  br label %bb2, !dbg !3721

abort:                                            ; preds = %bb3
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !3721
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3721
  unreachable, !dbg !3721

bb1:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3721
  %11 = load i8*, i8** %10, align 8, !dbg !3721
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3721
  %13 = load i32, i32* %12, align 8, !dbg !3721
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !3721
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !3721
  resume { i8*, i32 } %15, !dbg !3721

bb2:                                              ; preds = %bb4
  ret void, !dbg !3721
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %_1) unnamed_addr #0 !dbg !3722 {
start:
  %_1.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %_1, %"alloc::string::String"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %_1.dbg.spill, metadata !3727, metadata !DIExpression()), !dbg !3728
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3728
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %0), !dbg !3728
  br label %bb1, !dbg !3728

bb1:                                              ; preds = %start
  ret void, !dbg !3728
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17ha44b6edb4cd1f32eE"(i8** %_1) unnamed_addr #0 !dbg !3729 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !3742, metadata !DIExpression()), !dbg !3745
; call core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17h2c3b477050ae9c6dE"(i8** %_1), !dbg !3745
  br label %bb1, !dbg !3745

bb1:                                              ; preds = %start
  ret void, !dbg !3745
}

; core::ptr::drop_in_place<std::process::Command>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_1) unnamed_addr #0 !dbg !3746 {
start:
  %_1.dbg.spill = alloca %"std::process::Command"*, align 8
  store %"std::process::Command"* %_1, %"std::process::Command"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Command"** %_1.dbg.spill, metadata !3751, metadata !DIExpression()), !dbg !3754
  %0 = bitcast %"std::process::Command"* %_1 to %"std::sys::unix::process::process_common::Command"*, !dbg !3754
; call core::ptr::drop_in_place<std::sys::unix::process::process_common::Command>
  call void @"_ZN4core3ptr69drop_in_place$LT$std..sys..unix..process..process_common..Command$GT$17h889d6d0db2f3c56eE"(%"std::sys::unix::process::process_common::Command"* %0), !dbg !3754
  br label %bb1, !dbg !3754

bb1:                                              ; preds = %start
  ret void, !dbg !3754
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hb4e1479a9f487edfE"(%"std::io::error::Custom"* %_1) unnamed_addr #0 !dbg !3755 {
start:
  %_1.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  store %"std::io::error::Custom"* %_1, %"std::io::error::Custom"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %_1.dbg.spill, metadata !3759, metadata !DIExpression()), !dbg !3762
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*, !dbg !3762
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h5f657d4ccad9db74E"({ {}*, [3 x i64]* }* %0), !dbg !3762
  br label %bb1, !dbg !3762

bb1:                                              ; preds = %start
  ret void, !dbg !3762
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3763 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %_1, %"alloc::vec::Vec<u8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %_1.dbg.spill, metadata !3768, metadata !DIExpression()), !dbg !3771
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6348c2a5f302c717E"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3771

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !3771
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h71b12e831b20184dE"({ i8*, i64 }* %1) #19
          to label %bb1 unwind label %abort, !dbg !3771

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !3771
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h71b12e831b20184dE"({ i8*, i64 }* %7), !dbg !3771
  br label %bb2, !dbg !3771

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3771
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3771
  unreachable, !dbg !3771

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3771
  %10 = load i8*, i8** %9, align 8, !dbg !3771
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3771
  %12 = load i32, i32* %11, align 8, !dbg !3771
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3771
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3771
  resume { i8*, i32 } %14, !dbg !3771

bb2:                                              ; preds = %bb4
  ret void, !dbg !3771
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3772 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !3777, metadata !DIExpression()), !dbg !3778
; invoke <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h97759489e03cba99E"({ i8*, i64 }* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3778

bb3:                                              ; preds = %cleanup
  %1 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !3778
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hd64d8fe3d4e8e5b4E"({ [0 x i8]*, i64 }* %1) #19
          to label %bb1 unwind label %abort, !dbg !3778

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !3778
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hd64d8fe3d4e8e5b4E"({ [0 x i8]*, i64 }* %7), !dbg !3778
  br label %bb2, !dbg !3778

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3778
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3778
  unreachable, !dbg !3778

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3778
  %10 = load i8*, i8** %9, align 8, !dbg !3778
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3778
  %12 = load i32, i32* %11, align 8, !dbg !3778
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3778
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3778
  resume { i8*, i32 } %14, !dbg !3778

bb2:                                              ; preds = %bb4
  ret void, !dbg !3778
}

; core::ptr::drop_in_place<std::ffi::os_str::OsString>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %_1) unnamed_addr #0 !dbg !3779 {
start:
  %_1.dbg.spill = alloca %"std::ffi::os_str::OsString"*, align 8
  store %"std::ffi::os_str::OsString"* %_1, %"std::ffi::os_str::OsString"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %_1.dbg.spill, metadata !3783, metadata !DIExpression()), !dbg !3784
  %0 = bitcast %"std::ffi::os_str::OsString"* %_1 to %"std::sys::unix::os_str::Buf"*, !dbg !3784
; call core::ptr::drop_in_place<std::sys::unix::os_str::Buf>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hcad56b55a06c0f1dE"(%"std::sys::unix::os_str::Buf"* %0), !dbg !3784
  br label %bb1, !dbg !3784

bb1:                                              ; preds = %start
  ret void, !dbg !3784
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h10c5da678b89a1e0E"(i32* %_1) unnamed_addr #0 !dbg !3785 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !3790, metadata !DIExpression()), !dbg !3793
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17he940f7859dbd9588E"(i32* align 4 %_1), !dbg !3793
  br label %bb1, !dbg !3793

bb1:                                              ; preds = %start
  ret void, !dbg !3793
}

; core::ptr::drop_in_place<std::sys::unix::os_str::Buf>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hcad56b55a06c0f1dE"(%"std::sys::unix::os_str::Buf"* %_1) unnamed_addr #0 !dbg !3794 {
start:
  %_1.dbg.spill = alloca %"std::sys::unix::os_str::Buf"*, align 8
  store %"std::sys::unix::os_str::Buf"* %_1, %"std::sys::unix::os_str::Buf"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::os_str::Buf"** %_1.dbg.spill, metadata !3799, metadata !DIExpression()), !dbg !3802
  %0 = bitcast %"std::sys::unix::os_str::Buf"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3802
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %0), !dbg !3802
  br label %bb1, !dbg !3802

bb1:                                              ; preds = %start
  ret void, !dbg !3802
}

; core::ptr::drop_in_place<alloc::string::FromUtf8Error>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h2c4c567bf49a01f0E"(%"alloc::string::FromUtf8Error"* %_1) unnamed_addr #0 !dbg !3803 {
start:
  %_1.dbg.spill = alloca %"alloc::string::FromUtf8Error"*, align 8
  store %"alloc::string::FromUtf8Error"* %_1, %"alloc::string::FromUtf8Error"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::FromUtf8Error"** %_1.dbg.spill, metadata !3828, metadata !DIExpression()), !dbg !3831
  %0 = bitcast %"alloc::string::FromUtf8Error"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3831
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %0), !dbg !3831
  br label %bb1, !dbg !3831

bb1:                                              ; preds = %start
  ret void, !dbg !3831
}

; core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hf042facad8a19d7dE"(i32* %_1) unnamed_addr #0 !dbg !3832 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !3837, metadata !DIExpression()), !dbg !3840
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h10c5da678b89a1e0E"(i32* %_1), !dbg !3840
  br label %bb1, !dbg !3840

bb1:                                              ; preds = %start
  ret void, !dbg !3840
}

; core::ptr::drop_in_place<alloc::borrow::Cow<str>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h68c780c1427036f9E"(%"alloc::borrow::Cow<str>"* %_1) unnamed_addr #0 !dbg !3841 {
start:
  %_1.dbg.spill = alloca %"alloc::borrow::Cow<str>"*, align 8
  store %"alloc::borrow::Cow<str>"* %_1, %"alloc::borrow::Cow<str>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %_1.dbg.spill, metadata !3846, metadata !DIExpression()), !dbg !3847
  %0 = bitcast %"alloc::borrow::Cow<str>"* %_1 to i64*, !dbg !3847
  %_2 = load i64, i64* %0, align 8, !dbg !3847, !range !3483, !noundef !23
  %1 = icmp eq i64 %_2, 0, !dbg !3847
  br i1 %1, label %bb1, label %bb2, !dbg !3847

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3847

bb2:                                              ; preds = %start
  %2 = bitcast %"alloc::borrow::Cow<str>"* %_1 to %"alloc::borrow::Cow<str>::Owned"*, !dbg !3847
  %3 = getelementptr inbounds %"alloc::borrow::Cow<str>::Owned", %"alloc::borrow::Cow<str>::Owned"* %2, i32 0, i32 1, !dbg !3847
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %3), !dbg !3847
  br label %bb1, !dbg !3847
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h71b12e831b20184dE"({ i8*, i64 }* %_1) unnamed_addr #0 !dbg !3848 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !3853, metadata !DIExpression()), !dbg !3856
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hebea49d732b609dbE"({ i8*, i64 }* align 8 %_1), !dbg !3856
  br label %bb1, !dbg !3856

bb1:                                              ; preds = %start
  ret void, !dbg !3856
}

; core::ptr::drop_in_place<[alloc::ffi::c_str::CString]>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17h96ab7cdab30ccdf7E"([0 x { i8*, i64 }]* %_1.0, i64 %_1.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3857 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x { i8*, i64 }]*, i64 }, align 8
  %_9 = alloca { i8*, i64 }*, align 8, !rawptr !418
  %_4 = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64 }]* %_1.0, [0 x { i8*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64 }]*, i64 }* %_1.dbg.spill, metadata !3866, metadata !DIExpression()), !dbg !3867
  br i1 false, label %bb7, label %bb12, !dbg !3867

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8, !dbg !3867
  br label %bb6, !dbg !3867

bb12:                                             ; preds = %start
  %3 = bitcast [0 x { i8*, i64 }]* %_1.0 to { i8*, i64 }*, !dbg !3867
  store { i8*, i64 }* %3, { i8*, i64 }** %_9, align 8, !dbg !3867
  %4 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %_10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i64 %_1.1, !dbg !3867, !rawptr !418
  br label %bb11, !dbg !3867

bb11:                                             ; preds = %bb10, %bb12
  %5 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %_14 = icmp eq { i8*, i64 }* %5, %_10, !dbg !3867
  br i1 %_14, label %bb1, label %bb10, !dbg !3867

bb10:                                             ; preds = %bb11
  %_13 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %6 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i64 1, !dbg !3867
  store { i8*, i64 }* %7, { i8*, i64 }** %_9, align 8, !dbg !3867
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %_13)
          to label %bb11 unwind label %cleanup, !dbg !3867

bb1:                                              ; preds = %bb6, %bb11
  ret void, !dbg !3867

bb9:                                              ; preds = %bb8, %cleanup
  %8 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %_12 = icmp eq { i8*, i64 }* %8, %_10, !dbg !3867
  br i1 %_12, label %bb2, label %bb8, !dbg !3867

cleanup:                                          ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %14 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3867, !rawptr !418
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %14, i64 1, !dbg !3867
  store { i8*, i64 }* %15, { i8*, i64 }** %_9, align 8, !dbg !3867
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %_11) #19
          to label %bb9 unwind label %abort, !dbg !3867

bb2:                                              ; preds = %bb4, %bb9
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3867
  %17 = load i8*, i8** %16, align 8, !dbg !3867
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3867
  %19 = load i32, i32* %18, align 8, !dbg !3867
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3867
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3867
  resume { i8*, i32 } %21, !dbg !3867

abort:                                            ; preds = %bb3, %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !3867
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3867
  unreachable, !dbg !3867

bb6:                                              ; preds = %bb5, %bb7
  %23 = load i64, i64* %_4, align 8, !dbg !3867
  %_8 = icmp eq i64 %23, %_1.1, !dbg !3867
  br i1 %_8, label %bb1, label %bb5, !dbg !3867

bb5:                                              ; preds = %bb6
  %24 = load i64, i64* %_4, align 8, !dbg !3867
  %_7 = getelementptr inbounds [0 x { i8*, i64 }], [0 x { i8*, i64 }]* %_1.0, i64 0, i64 %24, !dbg !3867, !rawptr !418
  %25 = load i64, i64* %_4, align 8, !dbg !3867
  %26 = add i64 %25, 1, !dbg !3867
  store i64 %26, i64* %_4, align 8, !dbg !3867
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %_7)
          to label %bb6 unwind label %cleanup1, !dbg !3867

bb4:                                              ; preds = %bb3, %cleanup1
  %27 = load i64, i64* %_4, align 8, !dbg !3867
  %_6 = icmp eq i64 %27, %_1.1, !dbg !3867
  br i1 %_6, label %bb2, label %bb3, !dbg !3867

cleanup1:                                         ; preds = %bb5
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %33 = load i64, i64* %_4, align 8, !dbg !3867
  %_5 = getelementptr inbounds [0 x { i8*, i64 }], [0 x { i8*, i64 }]* %_1.0, i64 0, i64 %33, !dbg !3867, !rawptr !418
  %34 = load i64, i64* %_4, align 8, !dbg !3867
  %35 = add i64 %34, 1, !dbg !3867
  store i64 %35, i64* %_4, align 8, !dbg !3867
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %_5) #19
          to label %bb4 unwind label %abort, !dbg !3867
}

; core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17h2c3b477050ae9c6dE"(i8** %_1) unnamed_addr #0 !dbg !3868 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !3873, metadata !DIExpression()), !dbg !3876
; call <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
  call void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8e5359068782f89bE"(i8** align 8 %_1), !dbg !3876
  br label %bb1, !dbg !3876

bb1:                                              ; preds = %start
  ret void, !dbg !3876
}

; core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h89040b315ad859d0E"(%"std::sys_common::process::CommandEnv"* %_1) unnamed_addr #0 !dbg !3877 {
start:
  %_1.dbg.spill = alloca %"std::sys_common::process::CommandEnv"*, align 8
  store %"std::sys_common::process::CommandEnv"* %_1, %"std::sys_common::process::CommandEnv"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys_common::process::CommandEnv"** %_1.dbg.spill, metadata !3882, metadata !DIExpression()), !dbg !3885
  %0 = bitcast %"std::sys_common::process::CommandEnv"* %_1 to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !3885
; call core::ptr::drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
  call void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17hcd38880cef285fd1E"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0), !dbg !3885
  br label %bb1, !dbg !3885

bb1:                                              ; preds = %start
  ret void, !dbg !3885
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hd64d8fe3d4e8e5b4E"({ [0 x i8]*, i64 }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3886 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %_1, { [0 x i8]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_1.dbg.spill, metadata !3891, metadata !DIExpression()), !dbg !3894
  br label %bb3, !dbg !3894

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !3894
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !3894
  %3 = load i8*, i8** %2, align 8, !dbg !3894, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !3894
  %5 = load i64, i64* %4, align 8, !dbg !3894
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hde9034a7bbb7537bE(i8* %3, i64 %5), !dbg !3894
  br label %bb1, !dbg !3894

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !3894
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0, !dbg !3894
  %8 = load i8*, i8** %7, align 8, !dbg !3894, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1, !dbg !3894
  %10 = load i64, i64* %9, align 8, !dbg !3894
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hde9034a7bbb7537bE(i8* %8, i64 %10) #19
          to label %bb2 unwind label %abort, !dbg !3894

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !3894
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3894
  unreachable, !dbg !3894

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3894
  %13 = load i8*, i8** %12, align 8, !dbg !3894
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3894
  %15 = load i32, i32* %14, align 8, !dbg !3894
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !3894
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !3894
  resume { i8*, i32 } %17, !dbg !3894

bb1:                                              ; preds = %bb3
  ret void, !dbg !3894
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u32]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17h7fdfdedb83bd6f15E"({ [0 x i32]*, i64 }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3895 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i32]*, i64 }*, align 8
  store { [0 x i32]*, i64 }* %_1, { [0 x i32]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }** %_1.dbg.spill, metadata !3900, metadata !DIExpression()), !dbg !3901
  br label %bb3, !dbg !3901

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i32]*, i64 }* %_1 to { i32*, i64 }*, !dbg !3901
  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 0, !dbg !3901
  %3 = load i32*, i32** %2, align 8, !dbg !3901, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1, !dbg !3901
  %5 = load i64, i64* %4, align 8, !dbg !3901
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h956b22549fd78293E(i32* %3, i64 %5), !dbg !3901
  br label %bb1, !dbg !3901

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i32]*, i64 }* %_1 to { i32*, i64 }*, !dbg !3901
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %6, i32 0, i32 0, !dbg !3901
  %8 = load i32*, i32** %7, align 8, !dbg !3901, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %6, i32 0, i32 1, !dbg !3901
  %10 = load i64, i64* %9, align 8, !dbg !3901
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h956b22549fd78293E(i32* %8, i64 %10) #19
          to label %bb2 unwind label %abort, !dbg !3901

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !3901
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3901
  unreachable, !dbg !3901

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3901
  %13 = load i8*, i8** %12, align 8, !dbg !3901
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3901
  %15 = load i32, i32* %14, align 8, !dbg !3901
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !3901
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !3901
  resume { i8*, i32 } %17, !dbg !3901

bb1:                                              ; preds = %bb3
  ret void, !dbg !3901
}

; core::ptr::drop_in_place<alloc::vec::Vec<*const i8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17h766c44ff5e55de31E"(%"alloc::vec::Vec<*const i8>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3902 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<*const i8>"*, align 8
  store %"alloc::vec::Vec<*const i8>"* %_1, %"alloc::vec::Vec<*const i8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<*const i8>"** %_1.dbg.spill, metadata !3907, metadata !DIExpression()), !dbg !3910
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h35c1bfc9efb18cecE"(%"alloc::vec::Vec<*const i8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3910

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<*const i8>"* %_1 to { i64*, i64 }*, !dbg !3910
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17hfeee4ea158d79751E"({ i64*, i64 }* %1) #19
          to label %bb1 unwind label %abort, !dbg !3910

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<*const i8>"* %_1 to { i64*, i64 }*, !dbg !3910
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17hfeee4ea158d79751E"({ i64*, i64 }* %7), !dbg !3910
  br label %bb2, !dbg !3910

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3910
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3910
  unreachable, !dbg !3910

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3910
  %10 = load i8*, i8** %9, align 8, !dbg !3910
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3910
  %12 = load i32, i32* %11, align 8, !dbg !3910
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3910
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3910
  resume { i8*, i32 } %14, !dbg !3910

bb2:                                              ; preds = %bb4
  ret void, !dbg !3910
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h001285130cc097faE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #0 !dbg !3911 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !3921, metadata !DIExpression()), !dbg !3924
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !3924
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !3924
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !3924, !invariant.load !23, !nonnull !23
  call void %4({}* %_1.0), !dbg !3924
  br label %bb1, !dbg !3924

bb1:                                              ; preds = %start
  ret void, !dbg !3924
}

; core::ptr::drop_in_place<std::sys::unix::process::process_common::Argv>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h5d4caa1e9701bea3E"(%"std::sys::unix::process::process_common::Argv"* %_1) unnamed_addr #0 !dbg !3925 {
start:
  %_1.dbg.spill = alloca %"std::sys::unix::process::process_common::Argv"*, align 8
  store %"std::sys::unix::process::process_common::Argv"* %_1, %"std::sys::unix::process::process_common::Argv"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::process::process_common::Argv"** %_1.dbg.spill, metadata !3930, metadata !DIExpression()), !dbg !3933
  %0 = bitcast %"std::sys::unix::process::process_common::Argv"* %_1 to %"alloc::vec::Vec<*const i8>"*, !dbg !3933
; call core::ptr::drop_in_place<alloc::vec::Vec<*const i8>>
  call void @"_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17h766c44ff5e55de31E"(%"alloc::vec::Vec<*const i8>"* %0), !dbg !3933
  br label %bb1, !dbg !3933

bb1:                                              ; preds = %start
  ret void, !dbg !3933
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17hfeee4ea158d79751E"({ i64*, i64 }* %_1) unnamed_addr #0 !dbg !3934 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !3939, metadata !DIExpression()), !dbg !3942
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h87a81bdf8b27ee83E"({ i64*, i64 }* align 8 %_1), !dbg !3942
  br label %bb1, !dbg !3942

bb1:                                              ; preds = %start
  ret void, !dbg !3942
}

; core::ptr::drop_in_place<std::sys::unix::process::process_common::Stdio>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr67drop_in_place$LT$std..sys..unix..process..process_common..Stdio$GT$17h3cee6cf44aadc5c5E"({ i32, i32 }* %_1) unnamed_addr #0 !dbg !3943 {
start:
  %_1.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %_1, { i32, i32 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %_1.dbg.spill, metadata !3948, metadata !DIExpression()), !dbg !3949
  %0 = bitcast { i32, i32 }* %_1 to i32*, !dbg !3949
  %1 = load i32, i32* %0, align 4, !dbg !3949, !range !3950, !noundef !23
  %_2 = zext i32 %1 to i64, !dbg !3949
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ], !dbg !3949

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_1, i32 0, i32 1, !dbg !3949
; call core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hf042facad8a19d7dE"(i32* %2), !dbg !3949
  br label %bb1, !dbg !3949

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void, !dbg !3949
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h316c7be9ae07eb84E"(%"std::io::error::Custom"** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3951 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::io::error::Custom"**, align 8
  store %"std::io::error::Custom"** %_1, %"std::io::error::Custom"*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"*** %_1.dbg.spill, metadata !3956, metadata !DIExpression()), !dbg !3959
  %1 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !3959
  %2 = bitcast i64** %1 to %"std::io::error::Custom"**, !dbg !3959
  %3 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %2, align 8, !dbg !3959
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hb4e1479a9f487edfE"(%"std::io::error::Custom"* %3)
          to label %bb3 unwind label %cleanup, !dbg !3959

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !3959
  %5 = load i64*, i64** %4, align 8, !dbg !3959, !nonnull !23, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h670519a61cb0e8f8E(i64* %5) #19
          to label %bb2 unwind label %abort, !dbg !3959

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !3959
  %12 = load i64*, i64** %11, align 8, !dbg !3959, !nonnull !23, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h670519a61cb0e8f8E(i64* %12), !dbg !3959
  br label %bb1, !dbg !3959

abort:                                            ; preds = %bb4
  %13 = landingpad { i8*, i32 }
          cleanup, !dbg !3959
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3959
  unreachable, !dbg !3959

bb2:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3959
  %15 = load i8*, i8** %14, align 8, !dbg !3959
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3959
  %17 = load i32, i32* %16, align 8, !dbg !3959
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3959
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3959
  resume { i8*, i32 } %19, !dbg !3959

bb1:                                              ; preds = %bb3
  ret void, !dbg !3959
}

; core::ptr::drop_in_place<core::option::Option<std::process::Output>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr69drop_in_place$LT$core..option..Option$LT$std..process..Output$GT$$GT$17h4c1b25b67b843f5dE"(%"core::option::Option<std::process::Output>"* %_1) unnamed_addr #0 !dbg !3960 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<std::process::Output>"*, align 8
  store %"core::option::Option<std::process::Output>"* %_1, %"core::option::Option<std::process::Output>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"** %_1.dbg.spill, metadata !3976, metadata !DIExpression()), !dbg !3979
  %0 = bitcast %"core::option::Option<std::process::Output>"* %_1 to {}**, !dbg !3979
  %1 = load {}*, {}** %0, align 8, !dbg !3979
  %2 = icmp eq {}* %1, null, !dbg !3979
  %_2 = select i1 %2, i64 0, i64 1, !dbg !3979
  %3 = icmp eq i64 %_2, 0, !dbg !3979
  br i1 %3, label %bb1, label %bb2, !dbg !3979

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3979

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<std::process::Output>"* %_1 to %"core::option::Option<std::process::Output>::Some"*, !dbg !3979
  %5 = bitcast %"core::option::Option<std::process::Output>::Some"* %4 to %"std::process::Output"*, !dbg !3979
; call core::ptr::drop_in_place<std::process::Output>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h1a4e4d0f5779de40E"(%"std::process::Output"* %5), !dbg !3979
  br label %bb1, !dbg !3979
}

; core::ptr::drop_in_place<std::sys::unix::process::process_common::Command>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr69drop_in_place$LT$std..sys..unix..process..process_common..Command$GT$17h889d6d0db2f3c56eE"(%"std::sys::unix::process::process_common::Command"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3980 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::sys::unix::process::process_common::Command"*, align 8
  store %"std::sys::unix::process::process_common::Command"* %_1, %"std::sys::unix::process::process_common::Command"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::process::process_common::Command"** %_1.dbg.spill, metadata !3985, metadata !DIExpression()), !dbg !3988
  %1 = bitcast %"std::sys::unix::process::process_common::Command"* %_1 to { i8*, i64 }*, !dbg !3988
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %1)
          to label %bb20 unwind label %cleanup, !dbg !3988

bb11:                                             ; preds = %cleanup
  %2 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 1, !dbg !3988
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hbef0ddc8d7bea86bE"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %2) #19
          to label %bb10 unwind label %abort, !dbg !3988

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb11

bb20:                                             ; preds = %start
  %8 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 1, !dbg !3988
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hbef0ddc8d7bea86bE"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %8)
          to label %bb19 unwind label %cleanup1, !dbg !3988

abort:                                            ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !3988
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3988
  unreachable, !dbg !3988

bb10:                                             ; preds = %cleanup1, %bb11
  %10 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 2, !dbg !3988
; invoke core::ptr::drop_in_place<std::sys::unix::process::process_common::Argv>
  invoke void @"_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h5d4caa1e9701bea3E"(%"std::sys::unix::process::process_common::Argv"* %10) #19
          to label %bb9 unwind label %abort, !dbg !3988

cleanup1:                                         ; preds = %bb20
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb10

bb19:                                             ; preds = %bb20
  %16 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 2, !dbg !3988
; invoke core::ptr::drop_in_place<std::sys::unix::process::process_common::Argv>
  invoke void @"_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h5d4caa1e9701bea3E"(%"std::sys::unix::process::process_common::Argv"* %16)
          to label %bb18 unwind label %cleanup2, !dbg !3988

bb9:                                              ; preds = %cleanup2, %bb10
  %17 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 3, !dbg !3988
; invoke core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h89040b315ad859d0E"(%"std::sys_common::process::CommandEnv"* %17) #19
          to label %bb8 unwind label %abort, !dbg !3988

cleanup2:                                         ; preds = %bb19
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb9

bb18:                                             ; preds = %bb19
  %23 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 3, !dbg !3988
; invoke core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h89040b315ad859d0E"(%"std::sys_common::process::CommandEnv"* %23)
          to label %bb17 unwind label %cleanup3, !dbg !3988

bb8:                                              ; preds = %cleanup3, %bb9
  %24 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 4, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h1cdce11ad28df833E"({ i8*, i64 }* %24) #19
          to label %bb7 unwind label %abort, !dbg !3988

cleanup3:                                         ; preds = %bb18
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb8

bb17:                                             ; preds = %bb18
  %30 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 4, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h1cdce11ad28df833E"({ i8*, i64 }* %30)
          to label %bb16 unwind label %cleanup4, !dbg !3988

bb7:                                              ; preds = %cleanup4, %bb8
  %31 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 5, !dbg !3988
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h812d90f6c4711379E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %31) #19
          to label %bb6 unwind label %abort, !dbg !3988

cleanup4:                                         ; preds = %bb17
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb7

bb16:                                             ; preds = %bb17
  %37 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 5, !dbg !3988
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h812d90f6c4711379E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %37)
          to label %bb15 unwind label %cleanup5, !dbg !3988

bb6:                                              ; preds = %cleanup5, %bb7
  %38 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 6, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
  invoke void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h91744cd42444054eE"({ i32*, i64 }* %38) #19
          to label %bb5 unwind label %abort, !dbg !3988

cleanup5:                                         ; preds = %bb16
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb6

bb15:                                             ; preds = %bb16
  %44 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 6, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
  invoke void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h91744cd42444054eE"({ i32*, i64 }* %44)
          to label %bb14 unwind label %cleanup6, !dbg !3988

bb5:                                              ; preds = %cleanup6, %bb6
  %45 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 9, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %45) #19
          to label %bb4 unwind label %abort, !dbg !3988

cleanup6:                                         ; preds = %bb15
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  %48 = extractvalue { i8*, i32 } %46, 1
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %47, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %48, i32* %50, align 8
  br label %bb5

bb14:                                             ; preds = %bb15
  %51 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 9, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %51)
          to label %bb13 unwind label %cleanup7, !dbg !3988

bb4:                                              ; preds = %cleanup7, %bb5
  %52 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 10, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %52) #19
          to label %bb3 unwind label %abort, !dbg !3988

cleanup7:                                         ; preds = %bb14
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb4

bb13:                                             ; preds = %bb14
  %58 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 10, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %58)
          to label %bb12 unwind label %cleanup8, !dbg !3988

bb3:                                              ; preds = %cleanup8, %bb4
  %59 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 11, !dbg !3988
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %59) #19
          to label %bb1 unwind label %abort, !dbg !3988

cleanup8:                                         ; preds = %bb13
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %62, i32* %64, align 8
  br label %bb3

bb12:                                             ; preds = %bb13
  %65 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 11, !dbg !3988
; call core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  call void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %65), !dbg !3988
  br label %bb2, !dbg !3988

bb1:                                              ; preds = %bb3
  %66 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3988
  %67 = load i8*, i8** %66, align 8, !dbg !3988
  %68 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3988
  %69 = load i32, i32* %68, align 8, !dbg !3988
  %70 = insertvalue { i8*, i32 } undef, i8* %67, 0, !dbg !3988
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1, !dbg !3988
  resume { i8*, i32 } %71, !dbg !3988

bb2:                                              ; preds = %bb12
  ret void, !dbg !3988
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hbef0ddc8d7bea86bE"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3989 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<alloc::ffi::c_str::CString>"*, align 8
  store %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1, %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %_1.dbg.spill, metadata !3994, metadata !DIExpression()), !dbg !3997
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb7a612e473abe038E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3997

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1 to { i64*, i64 }*, !dbg !3997
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h8a1dd2662f1935d0E"({ i64*, i64 }* %1) #19
          to label %bb1 unwind label %abort, !dbg !3997

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1 to { i64*, i64 }*, !dbg !3997
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
  call void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h8a1dd2662f1935d0E"({ i64*, i64 }* %7), !dbg !3997
  br label %bb2, !dbg !3997

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3997
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !3997
  unreachable, !dbg !3997

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3997
  %10 = load i8*, i8** %9, align 8, !dbg !3997
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3997
  %12 = load i32, i32* %11, align 8, !dbg !3997
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3997
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3997
  resume { i8*, i32 } %14, !dbg !3997

bb2:                                              ; preds = %bb4
  ret void, !dbg !3997
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h50bb70fb0756222bE"(%"core::option::Option<alloc::string::String>"* %_1) unnamed_addr #0 !dbg !3998 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  store %"core::option::Option<alloc::string::String>"* %_1, %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, metadata !4014, metadata !DIExpression()), !dbg !4017
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to {}**, !dbg !4017
  %1 = load {}*, {}** %0, align 8, !dbg !4017
  %2 = icmp eq {}* %1, null, !dbg !4017
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4017
  %3 = icmp eq i64 %_2, 0, !dbg !4017
  br i1 %3, label %bb1, label %bb2, !dbg !4017

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4017

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !4017
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*, !dbg !4017
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %5), !dbg !4017
  br label %bb1, !dbg !4017
}

; core::ptr::drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17h9ed4a0baa34effa7E"(%"alloc::collections::btree::mem::replace::PanicGuard"* %_1) unnamed_addr #0 !dbg !4018 {
start:
  %_1.dbg.spill = alloca %"alloc::collections::btree::mem::replace::PanicGuard"*, align 8
  store %"alloc::collections::btree::mem::replace::PanicGuard"* %_1, %"alloc::collections::btree::mem::replace::PanicGuard"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"** %_1.dbg.spill, metadata !4026, metadata !DIExpression()), !dbg !4029
; call <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
  call void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h852eea478b151cadE"(%"alloc::collections::btree::mem::replace::PanicGuard"* align 1 %_1), !dbg !4029
  br label %bb1, !dbg !4029

bb1:                                              ; preds = %start
  ret void, !dbg !4029
}

; core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h1cdce11ad28df833E"({ i8*, i64 }* %_1) unnamed_addr #0 !dbg !4030 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !4035, metadata !DIExpression()), !dbg !4038
  %0 = bitcast { i8*, i64 }* %_1 to {}**, !dbg !4038
  %1 = load {}*, {}** %0, align 8, !dbg !4038
  %2 = icmp eq {}* %1, null, !dbg !4038
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4038
  %3 = icmp eq i64 %_2, 0, !dbg !4038
  br i1 %3, label %bb1, label %bb2, !dbg !4038

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4038

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E"({ i8*, i64 }* %_1), !dbg !4038
  br label %bb1, !dbg !4038
}

; core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17h1428e3b391157e66E"(%"core::option::Option<std::ffi::os_str::OsString>"* %_1) unnamed_addr #0 !dbg !4039 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<std::ffi::os_str::OsString>"*, align 8
  store %"core::option::Option<std::ffi::os_str::OsString>"* %_1, %"core::option::Option<std::ffi::os_str::OsString>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::ffi::os_str::OsString>"** %_1.dbg.spill, metadata !4043, metadata !DIExpression()), !dbg !4044
  %0 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_1 to {}**, !dbg !4044
  %1 = load {}*, {}** %0, align 8, !dbg !4044
  %2 = icmp eq {}* %1, null, !dbg !4044
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4044
  %3 = icmp eq i64 %_2, 0, !dbg !4044
  br i1 %3, label %bb1, label %bb2, !dbg !4044

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4044

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_1 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !4044
  %5 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %4 to %"std::ffi::os_str::OsString"*, !dbg !4044
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %5), !dbg !4044
  br label %bb1, !dbg !4044
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h8a1dd2662f1935d0E"({ i64*, i64 }* %_1) unnamed_addr #0 !dbg !4045 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !4050, metadata !DIExpression()), !dbg !4053
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha47067e394a6b8ddE"({ i64*, i64 }* align 8 %_1), !dbg !4053
  br label %bb1, !dbg !4053

bb1:                                              ; preds = %start
  ret void, !dbg !4053
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h3943d9e448772912E"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !4054 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !4059, metadata !DIExpression()), !dbg !4062
  ret void, !dbg !4062
}

; core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17ha196934336d1b5e1E"(i64** %_1) unnamed_addr #1 !dbg !4063 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4067, metadata !DIExpression()), !dbg !4070
  ret void, !dbg !4070
}

; core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h91744cd42444054eE"({ i32*, i64 }* %_1) unnamed_addr #0 !dbg !4071 {
start:
  %_1.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %_1, { i32*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %_1.dbg.spill, metadata !4076, metadata !DIExpression()), !dbg !4079
  %0 = bitcast { i32*, i64 }* %_1 to {}**, !dbg !4079
  %1 = load {}*, {}** %0, align 8, !dbg !4079
  %2 = icmp eq {}* %1, null, !dbg !4079
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4079
  %3 = icmp eq i64 %_2, 0, !dbg !4079
  br i1 %3, label %bb1, label %bb2, !dbg !4079

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4079

bb2:                                              ; preds = %start
  %4 = bitcast { i32*, i64 }* %_1 to { [0 x i32]*, i64 }*, !dbg !4079
; call core::ptr::drop_in_place<alloc::boxed::Box<[u32]>>
  call void @"_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17h7fdfdedb83bd6f15E"({ [0 x i32]*, i64 }* %4), !dbg !4079
  br label %bb1, !dbg !4079
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h61d30803e960b676E"(i8* %ptr) unnamed_addr #1 !dbg !4080 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8, !rawptr !418
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4097, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !4099, metadata !DIExpression()), !dbg !4104
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !4112
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4110, metadata !DIExpression()), !dbg !4113
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !4113
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !4114, metadata !DIExpression()), !dbg !4119
  %3 = bitcast {}** %1 to i64*, !dbg !4121
  store i64 0, i64* %3, align 8, !dbg !4121
  %data_address = load {}*, {}** %1, align 8, !dbg !4121, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4121
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4103, metadata !DIExpression()), !dbg !4104
  br label %bb4, !dbg !4121

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !4104, !rawptr !418
  store {}* %data_address, {}** %4, align 8, !dbg !4104
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !4104
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !4104
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !4104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !4104
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !4104
  %other = load i8*, i8** %8, align 8, !dbg !4104, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !4104
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4118, metadata !DIExpression()), !dbg !4119
  %9 = icmp eq i8* %ptr, %other, !dbg !4119
  %10 = zext i1 %9 to i8, !dbg !4119
  store i8 %10, i8* %0, align 1, !dbg !4119
  %11 = load i8, i8* %0, align 1, !dbg !4119, !range !298, !noundef !23
  %_3 = trunc i8 %11 to i1, !dbg !4119
  br label %bb5, !dbg !4119

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !4127
  br i1 %_2, label %bb1, label %bb2, !dbg !4127

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !4128
  store {}* null, {}** %12, align 8, !dbg !4128
  br label %bb3, !dbg !4129

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !4130
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !4131, metadata !DIExpression()), !dbg !4134
  store i8* %ptr, i8** %_5, align 8, !dbg !4134
  %13 = load i8*, i8** %_5, align 8, !dbg !4136, !nonnull !23, !noundef !23
  store i8* %13, i8** %2, align 8, !dbg !4136
  br label %bb3, !dbg !4129

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !4137
  ret i8* %14, !dbg !4137
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h3907a4c46ddbe6e5E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4138 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !4147, metadata !DIExpression()), !dbg !4150
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4150
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !4150
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !4150
  %4 = load {}*, {}** %3, align 8, !dbg !4150
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !4150
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !4150, !nonnull !23, !align !378, !noundef !23
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !4150
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !4150
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !4150, !invariant.load !23, !nonnull !23
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !4150

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4150
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !4150
  %12 = load i8*, i8** %11, align 8, !dbg !4150, !nonnull !23, !noundef !23
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !4150
  %14 = load i64*, i64** %13, align 8, !dbg !4150, !nonnull !23, !align !378, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h8015f80a71312221E(i8* %12, i64* align 8 %14) #19
          to label %bb2 unwind label %abort, !dbg !4150

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4150
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !4150
  %22 = load i8*, i8** %21, align 8, !dbg !4150, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !4150
  %24 = load i64*, i64** %23, align 8, !dbg !4150, !nonnull !23, !align !378, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h8015f80a71312221E(i8* %22, i64* align 8 %24), !dbg !4150
  br label %bb1, !dbg !4150

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !4150
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !4150
  unreachable, !dbg !4150

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4150
  %27 = load i8*, i8** %26, align 8, !dbg !4150
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4150
  %29 = load i32, i32* %28, align 8, !dbg !4150
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !4150
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !4150
  resume { i8*, i32 } %31, !dbg !4150

bb1:                                              ; preds = %bb3
  ret void, !dbg !4150
}

; core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_1) unnamed_addr #0 !dbg !4151 {
start:
  %_1.dbg.spill = alloca %"core::result::Result<alloc::string::String, std::env::VarError>"*, align 8
  store %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1, %"core::result::Result<alloc::string::String, std::env::VarError>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, std::env::VarError>"** %_1.dbg.spill, metadata !4156, metadata !DIExpression()), !dbg !4159
  %0 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1 to i64*, !dbg !4159
  %_2 = load i64, i64* %0, align 8, !dbg !4159, !range !3483, !noundef !23
  %1 = icmp eq i64 %_2, 0, !dbg !4159
  br i1 %1, label %bb2, label %bb3, !dbg !4159

bb2:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !4159
  %3 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %2, i32 0, i32 1, !dbg !4159
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %3), !dbg !4159
  br label %bb1, !dbg !4159

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1 to %"core::result::Result<alloc::string::String, std::env::VarError>::Err"*, !dbg !4159
  %5 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", %"core::result::Result<alloc::string::String, std::env::VarError>::Err"* %4, i32 0, i32 1, !dbg !4159
; call core::ptr::drop_in_place<std::env::VarError>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17h3020d23ce274add7E"(%"std::env::VarError"* %5), !dbg !4159
  br label %bb1, !dbg !4159

bb1:                                              ; preds = %bb2, %bb3
  ret void, !dbg !4159
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17hbbf2fc7512c41c58E"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #0 !dbg !4160 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !4168, metadata !DIExpression()), !dbg !4171
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !4171
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !4171
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !4171, !invariant.load !23, !nonnull !23
  call void %4({}* %_1.0), !dbg !4171
  br label %bb1, !dbg !4171

bb1:                                              ; preds = %start
  ret void, !dbg !4171
}

; core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE"({ i32, i32 }* %_1) unnamed_addr #0 !dbg !4172 {
start:
  %_1.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %_1, { i32, i32 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %_1.dbg.spill, metadata !4177, metadata !DIExpression()), !dbg !4180
  %0 = bitcast { i32, i32 }* %_1 to i32*, !dbg !4180
  %1 = load i32, i32* %0, align 4, !dbg !4180, !range !4181, !noundef !23
  %2 = sub i32 %1, 4, !dbg !4180
  %3 = icmp eq i32 %2, 0, !dbg !4180
  %_2 = select i1 %3, i64 0, i64 1, !dbg !4180
  %4 = icmp eq i64 %_2, 0, !dbg !4180
  br i1 %4, label %bb1, label %bb2, !dbg !4180

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4180

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sys::unix::process::process_common::Stdio>
  call void @"_ZN4core3ptr67drop_in_place$LT$std..sys..unix..process..process_common..Stdio$GT$17h3cee6cf44aadc5c5E"({ i32, i32 }* %_1), !dbg !4180
  br label %bb1, !dbg !4180
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core3str11validations15next_code_point17haf5cc2a85bb4f12dE({ i8*, i8* }* align 8 %bytes) unnamed_addr #1 !dbg !4182 {
start:
  %byte.dbg.spill16 = alloca i8, align 1
  %ch.dbg.spill15 = alloca i32, align 4
  %w.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %y_z.dbg.spill = alloca i32, align 4
  %byte.dbg.spill12 = alloca i8, align 1
  %ch.dbg.spill11 = alloca i32, align 4
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill9 = alloca i8*, align 8
  %byte.dbg.spill7 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill6 = alloca i8*, align 8
  %init.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self2 = alloca i8*, align 8
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !4188, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.declare(metadata i8** %self, metadata !4226, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !4191, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !4256, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !4265, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4215, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !4277, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !4286, metadata !DIExpression()), !dbg !4293
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E"({ i8*, i8* }* align 8 %bytes), !dbg !4254
  store i8* %1, i8** %self, align 8, !dbg !4254
  br label %bb1, !dbg !4254

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !4253
  %3 = load {}*, {}** %2, align 8, !dbg !4253
  %4 = icmp eq {}* %3, null, !dbg !4253
  %_51 = select i1 %4, i64 0, i64 1, !dbg !4253
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !4253

bb18:                                             ; preds = %bb1
  unreachable, !dbg !4253

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !4253
  store {}* null, {}** %5, align 8, !dbg !4253
  br label %bb2, !dbg !4253

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !4253, !nonnull !23, !align !912, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !4253
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !4250, metadata !DIExpression()), !dbg !4295
  store i8* %v, i8** %_4, align 8, !dbg !4295
  br label %bb2, !dbg !4253

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !4254
  %7 = load {}*, {}** %6, align 8, !dbg !4254
  %8 = icmp eq {}* %7, null, !dbg !4254
  %_7 = select i1 %8, i64 1, i64 0, !dbg !4254
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !4254

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4254

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !4254, !nonnull !23, !align !912, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !4254
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !4209, metadata !DIExpression()), !dbg !4296
  %x = load i8, i8* %val, align 1, !dbg !4297
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !4297
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !4189, metadata !DIExpression()), !dbg !4298
  %_11 = icmp ult i8 %x, -128, !dbg !4299
  br i1 %_11, label %bb6, label %bb7, !dbg !4299

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !4263
  store i32 0, i32* %9, align 4, !dbg !4263
  br label %bb15, !dbg !4300

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !4303

bb7:                                              ; preds = %bb3
  store i8 %x, i8* %byte.dbg.spill, align 1, !dbg !4304
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !4305, metadata !DIExpression()), !dbg !4311
  %_55 = and i8 %x, 31, !dbg !4311
  %init = zext i8 %_55 to i32, !dbg !4311
  store i32 %init, i32* %init.dbg.spill, align 4, !dbg !4311
  call void @llvm.dbg.declare(metadata i32* %init.dbg.spill, metadata !4211, metadata !DIExpression()), !dbg !4313
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %10 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E"({ i8*, i8* }* align 8 %bytes), !dbg !4275
  store i8* %10, i8** %self2, align 8, !dbg !4275
  br label %bb8, !dbg !4275

bb6:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32, !dbg !4314
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4315
  store i32 %_13, i32* %11, align 4, !dbg !4315
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !4315
  store i32 1, i32* %12, align 4, !dbg !4315
  br label %bb15, !dbg !4316

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !4303
  %14 = load i32, i32* %13, align 4, !dbg !4303, !range !4318, !noundef !23
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4303
  %16 = load i32, i32* %15, align 4, !dbg !4303
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !4303
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !4303
  ret { i32, i32 } %18, !dbg !4303

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !4274
  %20 = load {}*, {}** %19, align 8, !dbg !4274
  %21 = icmp eq {}* %20, null, !dbg !4274
  %_59 = select i1 %21, i64 0, i64 1, !dbg !4274
  switch i64 %_59, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !4274

bb21:                                             ; preds = %bb8
  unreachable, !dbg !4274

bb20:                                             ; preds = %bb8
  unreachable, !dbg !4319

bb22:                                             ; preds = %bb8
  %val5 = load i8*, i8** %self2, align 8, !dbg !4274, !nonnull !23, !align !912, !noundef !23
  store i8* %val5, i8** %val.dbg.spill6, align 8, !dbg !4274
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill6, metadata !4271, metadata !DIExpression()), !dbg !4323
  %y = load i8, i8* %val5, align 1, !dbg !4324
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !4324
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !4213, metadata !DIExpression()), !dbg !4325
  store i32 %init, i32* %ch.dbg.spill, align 4, !dbg !4326
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4327, metadata !DIExpression()), !dbg !4333
  store i8 %y, i8* %byte.dbg.spill7, align 1, !dbg !4335
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill7, metadata !4332, metadata !DIExpression()), !dbg !4333
  %_60 = shl i32 %init, 6, !dbg !4333
  %_63 = and i8 %y, 63, !dbg !4333
  %_62 = zext i8 %_63 to i32, !dbg !4333
  %22 = or i32 %_60, %_62, !dbg !4333
  store i32 %22, i32* %ch, align 4, !dbg !4333
  %_24 = icmp uge i8 %x, -32, !dbg !4336
  br i1 %_24, label %bb9, label %bb14, !dbg !4336

bb14:                                             ; preds = %bb13, %bb22
  %_50 = load i32, i32* %ch, align 4, !dbg !4337
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4338
  store i32 %_50, i32* %23, align 4, !dbg !4338
  %24 = bitcast { i32, i32 }* %0 to i32*, !dbg !4338
  store i32 1, i32* %24, align 4, !dbg !4338
  br label %bb16, !dbg !4303

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %25 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E"({ i8*, i8* }* align 8 %bytes), !dbg !4285
  store i8* %25, i8** %self3, align 8, !dbg !4285
  br label %bb10, !dbg !4285

bb10:                                             ; preds = %bb9
  %26 = bitcast i8** %self3 to {}**, !dbg !4284
  %27 = load {}*, {}** %26, align 8, !dbg !4284
  %28 = icmp eq {}* %27, null, !dbg !4284
  %_66 = select i1 %28, i64 0, i64 1, !dbg !4284
  switch i64 %_66, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !4284

bb24:                                             ; preds = %bb10
  unreachable, !dbg !4284

bb23:                                             ; preds = %bb10
  unreachable, !dbg !4339

bb25:                                             ; preds = %bb10
  %val8 = load i8*, i8** %self3, align 8, !dbg !4284, !nonnull !23, !align !912, !noundef !23
  store i8* %val8, i8** %val.dbg.spill9, align 8, !dbg !4284
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill9, metadata !4281, metadata !DIExpression()), !dbg !4343
  %z = load i8, i8* %val8, align 1, !dbg !4344
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !4344
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !4217, metadata !DIExpression()), !dbg !4345
  %_32 = and i8 %y, 63, !dbg !4346
  %ch10 = zext i8 %_32 to i32, !dbg !4346
  store i32 %ch10, i32* %ch.dbg.spill11, align 4, !dbg !4346
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill11, metadata !4347, metadata !DIExpression()), !dbg !4351
  store i8 %z, i8* %byte.dbg.spill12, align 1, !dbg !4353
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !4350, metadata !DIExpression()), !dbg !4351
  %_67 = shl i32 %ch10, 6, !dbg !4351
  %_70 = and i8 %z, 63, !dbg !4351
  %_69 = zext i8 %_70 to i32, !dbg !4351
  %y_z = or i32 %_67, %_69, !dbg !4351
  store i32 %y_z, i32* %y_z.dbg.spill, align 4, !dbg !4351
  call void @llvm.dbg.declare(metadata i32* %y_z.dbg.spill, metadata !4219, metadata !DIExpression()), !dbg !4354
  %_35 = shl i32 %init, 12, !dbg !4355
  %29 = or i32 %_35, %y_z, !dbg !4356
  store i32 %29, i32* %ch, align 4, !dbg !4356
  %_38 = icmp uge i8 %x, -16, !dbg !4357
  br i1 %_38, label %bb11, label %bb13, !dbg !4357

bb13:                                             ; preds = %bb28, %bb25
  br label %bb14, !dbg !4358

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E"({ i8*, i8* }* align 8 %bytes), !dbg !4294
  store i8* %30, i8** %self4, align 8, !dbg !4294
  br label %bb12, !dbg !4294

bb12:                                             ; preds = %bb11
  %31 = bitcast i8** %self4 to {}**, !dbg !4293
  %32 = load {}*, {}** %31, align 8, !dbg !4293
  %33 = icmp eq {}* %32, null, !dbg !4293
  %_73 = select i1 %33, i64 0, i64 1, !dbg !4293
  switch i64 %_73, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !4293

bb27:                                             ; preds = %bb12
  unreachable, !dbg !4293

bb26:                                             ; preds = %bb12
  unreachable, !dbg !4359

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !4293, !nonnull !23, !align !912, !noundef !23
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !4293
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !4290, metadata !DIExpression()), !dbg !4363
  %w = load i8, i8* %val13, align 1, !dbg !4364
  store i8 %w, i8* %w.dbg.spill, align 1, !dbg !4364
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !4221, metadata !DIExpression()), !dbg !4365
  %_45 = and i32 %init, 7, !dbg !4366
  %_44 = shl i32 %_45, 18, !dbg !4366
  store i32 %y_z, i32* %ch.dbg.spill15, align 4, !dbg !4367
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill15, metadata !4368, metadata !DIExpression()), !dbg !4372
  store i8 %w, i8* %byte.dbg.spill16, align 1, !dbg !4374
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill16, metadata !4371, metadata !DIExpression()), !dbg !4372
  %_74 = shl i32 %y_z, 6, !dbg !4372
  %_77 = and i8 %w, 63, !dbg !4372
  %_76 = zext i8 %_77 to i32, !dbg !4372
  %_47 = or i32 %_74, %_76, !dbg !4372
  %34 = or i32 %_44, %_47, !dbg !4375
  store i32 %34, i32* %ch, align 4, !dbg !4375
  br label %bb13, !dbg !4376
}

; core::str::validations::next_code_point_reverse
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h50f495398b647d05E({ i8*, i8* }* align 8 %bytes) unnamed_addr #1 !dbg !4377 {
start:
  %byte.dbg.spill23 = alloca i8, align 1
  %ch.dbg.spill22 = alloca i32, align 4
  %byte.dbg.spill20 = alloca i8, align 1
  %ch.dbg.spill19 = alloca i32, align 4
  %byte.dbg.spill17 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %byte.dbg.spill15 = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %byte.dbg.spill12 = alloca i8, align 1
  %byte.dbg.spill11 = alloca i8, align 1
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill10 = alloca i8*, align 8
  %byte.dbg.spill8 = alloca i8, align 1
  %byte.dbg.spill = alloca i8, align 1
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill7 = alloca i8*, align 8
  %w.dbg.spill = alloca i8, align 1
  %back_byte.dbg.spill = alloca i8, align 1
  %next_byte.dbg.spill5 = alloca i8, align 1
  %next_byte.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %self2 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !4379, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata i8** %self, metadata !4400, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !4382, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !4410, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4391, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !4417, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !4426, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !4435, metadata !DIExpression()), !dbg !4442
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %1 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h094c5f2aa01eda5eE"({ i8*, i8* }* align 8 %bytes), !dbg !4408
  store i8* %1, i8** %self, align 8, !dbg !4408
  br label %bb1, !dbg !4408

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !4407
  %3 = load {}*, {}** %2, align 8, !dbg !4407
  %4 = icmp eq {}* %3, null, !dbg !4407
  %_51 = select i1 %4, i64 0, i64 1, !dbg !4407
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !4407

bb18:                                             ; preds = %bb1
  unreachable, !dbg !4407

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !4407
  store {}* null, {}** %5, align 8, !dbg !4407
  br label %bb2, !dbg !4407

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !4407, !nonnull !23, !align !912, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !4407
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !4404, metadata !DIExpression()), !dbg !4444
  store i8* %v, i8** %_4, align 8, !dbg !4444
  br label %bb2, !dbg !4407

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !4408
  %7 = load {}*, {}** %6, align 8, !dbg !4408
  %8 = icmp eq {}* %7, null, !dbg !4408
  %_7 = select i1 %8, i64 1, i64 0, !dbg !4408
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !4408

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4408

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !4408, !nonnull !23, !align !912, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !4408
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !4384, metadata !DIExpression()), !dbg !4445
  store i8* %val, i8** %next_byte.dbg.spill, align 8, !dbg !4446
  call void @llvm.dbg.declare(metadata i8** %next_byte.dbg.spill, metadata !4388, metadata !DIExpression()), !dbg !4447
  %_14 = load i8, i8* %val, align 1, !dbg !4448
  %_13 = icmp ult i8 %_14, -128, !dbg !4448
  br i1 %_13, label %bb6, label %bb7, !dbg !4448

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !4414
  store i32 0, i32* %9, align 4, !dbg !4414
  br label %bb15, !dbg !4449

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !4451

bb7:                                              ; preds = %bb3
  %back_byte = load i8, i8* %val, align 1, !dbg !4452
  store i8 %back_byte, i8* %back_byte.dbg.spill, align 1, !dbg !4452
  call void @llvm.dbg.declare(metadata i8* %back_byte.dbg.spill, metadata !4389, metadata !DIExpression()), !dbg !4453
  store i8 %back_byte, i8* %w.dbg.spill, align 1, !dbg !4454
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !4380, metadata !DIExpression()), !dbg !4455
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %10 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h094c5f2aa01eda5eE"({ i8*, i8* }* align 8 %bytes), !dbg !4425
  store i8* %10, i8** %self2, align 8, !dbg !4425
  br label %bb8, !dbg !4425

bb6:                                              ; preds = %bb3
  %next_byte = load i8, i8* %val, align 1, !dbg !4446
  store i8 %next_byte, i8* %next_byte.dbg.spill5, align 1, !dbg !4446
  call void @llvm.dbg.declare(metadata i8* %next_byte.dbg.spill5, metadata !4386, metadata !DIExpression()), !dbg !4447
  %_15 = zext i8 %next_byte to i32, !dbg !4456
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4457
  store i32 %_15, i32* %11, align 4, !dbg !4457
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !4457
  store i32 1, i32* %12, align 4, !dbg !4457
  br label %bb15, !dbg !4449

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !4451
  %14 = load i32, i32* %13, align 4, !dbg !4451, !range !4318, !noundef !23
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4451
  %16 = load i32, i32* %15, align 4, !dbg !4451
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !4451
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !4451
  ret { i32, i32 } %18, !dbg !4451

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !4424
  %20 = load {}*, {}** %19, align 8, !dbg !4424
  %21 = icmp eq {}* %20, null, !dbg !4424
  %_55 = select i1 %21, i64 0, i64 1, !dbg !4424
  switch i64 %_55, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !4424

bb21:                                             ; preds = %bb8
  unreachable, !dbg !4424

bb20:                                             ; preds = %bb8
  unreachable, !dbg !4458

bb22:                                             ; preds = %bb8
  %val6 = load i8*, i8** %self2, align 8, !dbg !4424, !nonnull !23, !align !912, !noundef !23
  store i8* %val6, i8** %val.dbg.spill7, align 8, !dbg !4424
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill7, metadata !4421, metadata !DIExpression()), !dbg !4462
  %z = load i8, i8* %val6, align 1, !dbg !4463
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !4463
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !4393, metadata !DIExpression()), !dbg !4464
  store i8 %z, i8* %byte.dbg.spill, align 1, !dbg !4465
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !4466, metadata !DIExpression()), !dbg !4470
  %_57 = and i8 %z, 31, !dbg !4470
  %_23 = zext i8 %_57 to i32, !dbg !4470
  store i32 %_23, i32* %ch, align 4, !dbg !4472
  store i8 %z, i8* %byte.dbg.spill8, align 1, !dbg !4473
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill8, metadata !4474, metadata !DIExpression()), !dbg !4479
  %_25 = icmp slt i8 %z, -64, !dbg !4479
  br i1 %_25, label %bb9, label %bb14, !dbg !4480

bb14:                                             ; preds = %bb13, %bb22
  %ch21 = load i32, i32* %ch, align 4, !dbg !4481
  store i32 %ch21, i32* %ch.dbg.spill22, align 4, !dbg !4481
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill22, metadata !4482, metadata !DIExpression()), !dbg !4486
  store i8 %back_byte, i8* %byte.dbg.spill23, align 1, !dbg !4488
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill23, metadata !4485, metadata !DIExpression()), !dbg !4486
  %_86 = shl i32 %ch21, 6, !dbg !4486
  %_89 = and i8 %back_byte, 63, !dbg !4486
  %_88 = zext i8 %_89 to i32, !dbg !4486
  %_47 = or i32 %_86, %_88, !dbg !4486
  store i32 %_47, i32* %ch, align 4, !dbg !4489
  %_50 = load i32, i32* %ch, align 4, !dbg !4490
  %22 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4491
  store i32 %_50, i32* %22, align 4, !dbg !4491
  %23 = bitcast { i32, i32 }* %0 to i32*, !dbg !4491
  store i32 1, i32* %23, align 4, !dbg !4491
  br label %bb16, !dbg !4451

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %24 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h094c5f2aa01eda5eE"({ i8*, i8* }* align 8 %bytes), !dbg !4434
  store i8* %24, i8** %self3, align 8, !dbg !4434
  br label %bb10, !dbg !4434

bb10:                                             ; preds = %bb9
  %25 = bitcast i8** %self3 to {}**, !dbg !4433
  %26 = load {}*, {}** %25, align 8, !dbg !4433
  %27 = icmp eq {}* %26, null, !dbg !4433
  %_63 = select i1 %27, i64 0, i64 1, !dbg !4433
  switch i64 %_63, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !4433

bb24:                                             ; preds = %bb10
  unreachable, !dbg !4433

bb23:                                             ; preds = %bb10
  unreachable, !dbg !4492

bb25:                                             ; preds = %bb10
  %val9 = load i8*, i8** %self3, align 8, !dbg !4433, !nonnull !23, !align !912, !noundef !23
  store i8* %val9, i8** %val.dbg.spill10, align 8, !dbg !4433
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill10, metadata !4430, metadata !DIExpression()), !dbg !4496
  %y = load i8, i8* %val9, align 1, !dbg !4497
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !4497
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !4395, metadata !DIExpression()), !dbg !4498
  store i8 %y, i8* %byte.dbg.spill11, align 1, !dbg !4499
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill11, metadata !4500, metadata !DIExpression()), !dbg !4504
  %_65 = and i8 %y, 15, !dbg !4504
  %_31 = zext i8 %_65 to i32, !dbg !4504
  store i32 %_31, i32* %ch, align 4, !dbg !4506
  store i8 %y, i8* %byte.dbg.spill12, align 1, !dbg !4507
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !4508, metadata !DIExpression()), !dbg !4511
  %_33 = icmp slt i8 %y, -64, !dbg !4511
  br i1 %_33, label %bb11, label %bb13, !dbg !4512

bb13:                                             ; preds = %bb28, %bb25
  %ch18 = load i32, i32* %ch, align 4, !dbg !4513
  store i32 %ch18, i32* %ch.dbg.spill19, align 4, !dbg !4513
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill19, metadata !4514, metadata !DIExpression()), !dbg !4518
  store i8 %z, i8* %byte.dbg.spill20, align 1, !dbg !4520
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill20, metadata !4517, metadata !DIExpression()), !dbg !4518
  %_81 = shl i32 %ch18, 6, !dbg !4518
  %_84 = and i8 %z, 63, !dbg !4518
  %_83 = zext i8 %_84 to i32, !dbg !4518
  %_44 = or i32 %_81, %_83, !dbg !4518
  store i32 %_44, i32* %ch, align 4, !dbg !4521
  br label %bb14, !dbg !4522

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %28 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h094c5f2aa01eda5eE"({ i8*, i8* }* align 8 %bytes), !dbg !4443
  store i8* %28, i8** %self4, align 8, !dbg !4443
  br label %bb12, !dbg !4443

bb12:                                             ; preds = %bb11
  %29 = bitcast i8** %self4 to {}**, !dbg !4442
  %30 = load {}*, {}** %29, align 8, !dbg !4442
  %31 = icmp eq {}* %30, null, !dbg !4442
  %_71 = select i1 %31, i64 0, i64 1, !dbg !4442
  switch i64 %_71, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !4442

bb27:                                             ; preds = %bb12
  unreachable, !dbg !4442

bb26:                                             ; preds = %bb12
  unreachable, !dbg !4523

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !4442, !nonnull !23, !align !912, !noundef !23
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !4442
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !4439, metadata !DIExpression()), !dbg !4527
  %x = load i8, i8* %val13, align 1, !dbg !4528
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !4528
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !4397, metadata !DIExpression()), !dbg !4529
  store i8 %x, i8* %byte.dbg.spill15, align 1, !dbg !4530
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill15, metadata !4531, metadata !DIExpression()), !dbg !4535
  %_73 = and i8 %x, 7, !dbg !4535
  %_39 = zext i8 %_73 to i32, !dbg !4535
  store i32 %_39, i32* %ch, align 4, !dbg !4537
  %ch16 = load i32, i32* %ch, align 4, !dbg !4538
  store i32 %ch16, i32* %ch.dbg.spill, align 4, !dbg !4538
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4539, metadata !DIExpression()), !dbg !4543
  store i8 %y, i8* %byte.dbg.spill17, align 1, !dbg !4545
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill17, metadata !4542, metadata !DIExpression()), !dbg !4543
  %_76 = shl i32 %ch16, 6, !dbg !4543
  %_79 = and i8 %y, 63, !dbg !4543
  %_78 = zext i8 %_79 to i32, !dbg !4543
  %_41 = or i32 %_76, %_78, !dbg !4543
  store i32 %_41, i32* %ch, align 4, !dbg !4546
  br label %bb13, !dbg !4547
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %pat.0, i64 %pat.1) unnamed_addr #0 !dbg !4548 {
start:
  %pat.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4552, metadata !DIExpression()), !dbg !4556
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 0
  store [0 x i8]* %pat.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 1
  store i64 %pat.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %pat.dbg.spill, metadata !4553, metadata !DIExpression()), !dbg !4557
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %4 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hce23eb5c2272605cE"([0 x i8]* align 1 %pat.0, i64 %pat.1, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4558
  br label %bb1, !dbg !4558

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !4559
}

; core::str::<impl str>::trim_matches
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17h277750caef367a35E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4560 {
start:
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %pat.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %i1 = alloca { i64, i64 }, align 8
  %_15 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_8 = alloca %"core::option::Option<(usize, usize)>", align 8
  %matcher = alloca %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", align 8
  %j = alloca i64, align 8
  %i = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4564, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"* %pat.dbg.spill, metadata !4565, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4566, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4568, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %matcher, metadata !4570, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i1, metadata !4584, metadata !DIExpression()), !dbg !4592
  store i64 0, i64* %i, align 8, !dbg !4594
  store i64 0, i64* %j, align 8, !dbg !4595
; call <F as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6926105b05642888E"(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %matcher, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4596
  br label %bb1, !dbg !4596

bb1:                                              ; preds = %start
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_reject
  invoke void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17h7be9bc9c0bf9c8f3E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_8, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %matcher)
          to label %bb2 unwind label %cleanup, !dbg !4597

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !4598

cleanup:                                          ; preds = %bb7, %bb4, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to i64*, !dbg !4599
  %_10 = load i64, i64* %8, align 8, !dbg !4599, !range !3483, !noundef !23
  %9 = icmp eq i64 %_10, 1, !dbg !4599
  br i1 %9, label %bb3, label %bb4, !dbg !4599

bb3:                                              ; preds = %bb2
  %10 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4600
  %11 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %10, i32 0, i32 1, !dbg !4600
  %12 = bitcast { i64, i64 }* %11 to i64*, !dbg !4600
  %a = load i64, i64* %12, align 8, !dbg !4600
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4600
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4572, metadata !DIExpression()), !dbg !4600
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4601
  %14 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %13, i32 0, i32 1, !dbg !4601
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !4601
  %b = load i64, i64* %15, align 8, !dbg !4601
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4601
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4574, metadata !DIExpression()), !dbg !4601
  store i64 %a, i64* %i, align 8, !dbg !4602
  store i64 %b, i64* %j, align 8, !dbg !4603
  br label %bb4, !dbg !4604

bb4:                                              ; preds = %bb3, %bb2
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
  invoke void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h89c0ff6501dbe27dE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_15, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %matcher)
          to label %bb5 unwind label %cleanup, !dbg !4605

bb5:                                              ; preds = %bb4
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_15 to i64*, !dbg !4606
  %_17 = load i64, i64* %16, align 8, !dbg !4606, !range !3483, !noundef !23
  %17 = icmp eq i64 %_17, 1, !dbg !4606
  br i1 %17, label %bb6, label %bb7, !dbg !4606

bb6:                                              ; preds = %bb5
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_15 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4607
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !4607
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !4607
  %b2 = load i64, i64* %20, align 8, !dbg !4607
  store i64 %b2, i64* %b.dbg.spill3, align 8, !dbg !4607
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill3, metadata !4575, metadata !DIExpression()), !dbg !4607
  store i64 %b2, i64* %j, align 8, !dbg !4608
  br label %bb7, !dbg !4609

bb7:                                              ; preds = %bb6, %bb5
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !4593
  store [0 x i8]* %self.0, [0 x i8]** %21, align 8, !dbg !4593
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !4593
  store i64 %self.1, i64* %22, align 8, !dbg !4593
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !4589, metadata !DIExpression()), !dbg !4592
  %_22 = load i64, i64* %i, align 8, !dbg !4610
  %_23 = load i64, i64* %j, align 8, !dbg !4611
  %23 = bitcast { i64, i64 }* %i1 to i64*, !dbg !4610
  store i64 %_22, i64* %23, align 8, !dbg !4610
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 1, !dbg !4610
  store i64 %_23, i64* %24, align 8, !dbg !4610
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 0, !dbg !4592
  %_25.0 = load i64, i64* %25, align 8, !dbg !4592, !rawptr !418
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 1, !dbg !4592
  %_25.1 = load i64, i64* %26, align 8, !dbg !4592, !rawptr !418
; invoke core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %27 = invoke { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E"(i64 %_25.0, i64 %_25.1, [0 x i8]* %self.0, i64 %self.1)
          to label %bb11 unwind label %cleanup, !dbg !4592

bb11:                                             ; preds = %bb7
  %_24.0 = extractvalue { [0 x i8]*, i64 } %27, 0, !dbg !4592
  %_24.1 = extractvalue { [0 x i8]*, i64 } %27, 1, !dbg !4592
  br label %bb8, !dbg !4598

bb10:                                             ; preds = %bb9
  %28 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4612
  %29 = load i8*, i8** %28, align 8, !dbg !4612
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4612
  %31 = load i32, i32* %30, align 8, !dbg !4612
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0, !dbg !4612
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1, !dbg !4612
  resume { i8*, i32 } %33, !dbg !4612

bb8:                                              ; preds = %bb11
  %34 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_24.0, 0, !dbg !4613
  %35 = insertvalue { [0 x i8]*, i64 } %34, i64 %_24.1, 1, !dbg !4613
  ret { [0 x i8]*, i64 } %35, !dbg !4613
}

; core::str::<impl str>::trim
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim17h73a39436613dedb4E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4614 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4618, metadata !DIExpression()), !dbg !4619
; call core::str::<impl str>::trim_matches
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17h277750caef367a35E"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4620
  %3 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !4620
  %4 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !4620
  br label %bb1, !dbg !4620

bb1:                                              ; preds = %start
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %3, 0, !dbg !4621
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !4621
  ret { [0 x i8]*, i64 } %6, !dbg !4621
}

; core::str::<impl str>::trim::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17h32988296079ff709E"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %_1, i32 %c) unnamed_addr #1 !dbg !4622 {
start:
  %c.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]"*, align 8
  store %"[closure@core::str::<impl str>::trim::{closure#0}]"* %_1, %"[closure@core::str::<impl str>::trim::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"** %_1.dbg.spill, metadata !4628, metadata !DIExpression()), !dbg !4629
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !4627, metadata !DIExpression()), !dbg !4630
; call core::char::methods::<impl char>::is_whitespace
  %0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h7df9e2a627a36ce5E"(i32 %c), !dbg !4631
  br label %bb1, !dbg !4631

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !4632
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h79e5239eb98f20dbE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4633 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4656, metadata !DIExpression()), !dbg !4659
; call core::num::<impl core::str::traits::FromStr for u64>::from_str
  call void @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$8from_str17h8bc305f07af1f6a8E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4660
  br label %bb1, !dbg !4660

bb1:                                              ; preds = %start
  ret void, !dbg !4661
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hbf348ed177e1e855E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4662 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4680, metadata !DIExpression()), !dbg !4683
; call core::num::<impl core::str::traits::FromStr for u32>::from_str
  %4 = call i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$8from_str17h201a618152c4cdc6E"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4684
  store i64 %4, i64* %0, align 8, !dbg !4684
  %5 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %1 to i8*, !dbg !4684
  %6 = bitcast i64* %0 to i8*, !dbg !4684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !4684
  br label %bb1, !dbg !4684

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %1 to i64*, !dbg !4685
  %8 = load i64, i64* %7, align 4, !dbg !4685
  ret i64 %8, !dbg !4685
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h40983305cb1e6931E"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %0, [0 x i8]* align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4686 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %pat.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<char>", align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4713, metadata !DIExpression()), !dbg !4715
  store i32 %pat, i32* %pat.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %pat.dbg.spill, metadata !4714, metadata !DIExpression()), !dbg !4716
  store i8 1, i8* %_9, align 1, !dbg !4717
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4718
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !4718
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4718
  store i64 %self.1, i64* %6, align 8, !dbg !4718
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4719, metadata !DIExpression()), !dbg !4724
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4724
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !4724
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4724
  store i64 %self.1, i64* %8, align 8, !dbg !4724
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4725, metadata !DIExpression()), !dbg !4728
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !4728
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !4728
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !4728
  store i64 %self.1, i64* %10, align 8, !dbg !4728
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !4728
  %_11.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !4728, !nonnull !23, !align !912, !noundef !23
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !4728
  %_11.1 = load i64, i64* %12, align 8, !dbg !4728
  br label %bb5, !dbg !4728

bb5:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !4730
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h53a411f692041c03E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %_6, i32 %pat, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup, !dbg !4730

bb4:                                              ; preds = %cleanup
  %13 = load i8, i8* %_9, align 1, !dbg !4731, !range !298, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !4731
  br i1 %14, label %bb3, label %bb2, !dbg !4731

cleanup:                                          ; preds = %bb5
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb1:                                              ; preds = %bb5
  %20 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i64*, !dbg !4717
  store i64 0, i64* %20, align 8, !dbg !4717
  %21 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 1, !dbg !4717
  store i64 %_11.1, i64* %21, align 8, !dbg !4717
  %22 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 2, !dbg !4717
  %23 = bitcast %"core::str::pattern::CharSearcher"* %22 to i8*, !dbg !4717
  %24 = bitcast %"core::str::pattern::CharSearcher"* %_6 to i8*, !dbg !4717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 48, i1 false), !dbg !4717
  %25 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 3, !dbg !4717
  store i8 1, i8* %25, align 8, !dbg !4717
  %26 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 4, !dbg !4717
  store i8 0, i8* %26, align 1, !dbg !4717
  %27 = bitcast %"core::str::iter::Split<char>"* %0 to %"core::str::iter::SplitInternal<char>"*, !dbg !4732
  %28 = bitcast %"core::str::iter::SplitInternal<char>"* %27 to i8*, !dbg !4732
  %29 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i8*, !dbg !4732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 72, i1 false), !dbg !4732
  ret void, !dbg !4733

bb2:                                              ; preds = %bb3, %bb4
  %30 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4734
  %31 = load i8*, i8** %30, align 8, !dbg !4734
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4734
  %33 = load i32, i32* %32, align 8, !dbg !4734
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0, !dbg !4734
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1, !dbg !4734
  resume { i8*, i32 } %35, !dbg !4734

bb3:                                              ; preds = %bb4
  br label %bb2, !dbg !4731
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h7dca17bdb016bfe4E"(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* sret(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4735 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %pat.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4751, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* %pat.dbg.spill, metadata !4752, metadata !DIExpression()), !dbg !4754
  store i8 1, i8* %_9, align 1, !dbg !4755
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4756
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !4756
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4756
  store i64 %self.1, i64* %6, align 8, !dbg !4756
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4757, metadata !DIExpression()), !dbg !4760
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4760
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !4760
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4760
  store i64 %self.1, i64* %8, align 8, !dbg !4760
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4761, metadata !DIExpression()), !dbg !4764
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !4764
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !4764
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !4764
  store i64 %self.1, i64* %10, align 8, !dbg !4764
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !4764
  %_11.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !4764, !nonnull !23, !align !912, !noundef !23
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !4764
  %_11.1 = load i64, i64* %12, align 8, !dbg !4764
  br label %bb5, !dbg !4764

bb5:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !4766
; invoke <F as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h9497189a00934520E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* sret(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>") %_6, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup, !dbg !4766

bb4:                                              ; preds = %cleanup
  %13 = load i8, i8* %_9, align 1, !dbg !4767, !range !298, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !4767
  br i1 %14, label %bb3, label %bb2, !dbg !4767

cleanup:                                          ; preds = %bb5
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb1:                                              ; preds = %bb5
  %20 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3 to i64*, !dbg !4755
  store i64 0, i64* %20, align 8, !dbg !4755
  %21 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3, i32 0, i32 1, !dbg !4755
  store i64 %_11.1, i64* %21, align 8, !dbg !4755
  %22 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3, i32 0, i32 2, !dbg !4755
  %23 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %22 to i8*, !dbg !4755
  %24 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_6 to i8*, !dbg !4755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 40, i1 false), !dbg !4755
  %25 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3, i32 0, i32 3, !dbg !4755
  store i8 1, i8* %25, align 8, !dbg !4755
  %26 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3, i32 0, i32 4, !dbg !4755
  store i8 0, i8* %26, align 1, !dbg !4755
  %27 = bitcast %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %0 to %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, !dbg !4768
  %28 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %27 to i8*, !dbg !4768
  %29 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %_3 to i8*, !dbg !4768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 64, i1 false), !dbg !4768
  ret void, !dbg !4769

bb2:                                              ; preds = %bb3, %bb4
  %30 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4770
  %31 = load i8*, i8** %30, align 8, !dbg !4770
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4770
  %33 = load i32, i32* %32, align 8, !dbg !4770
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0, !dbg !4770
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1, !dbg !4770
  resume { i8*, i32 } %35, !dbg !4770

bb3:                                              ; preds = %bb4
  br label %bb2, !dbg !4767
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h5ac10359c124edb4E"(%"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !4771 {
start:
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !4776, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4785, metadata !DIExpression()), !dbg !4790
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 4, !dbg !4792
  %2 = load i8, i8* %1, align 1, !dbg !4792, !range !298, !noundef !23
  %_2 = trunc i8 %2 to i1, !dbg !4792
  br i1 %_2, label %bb1, label %bb2, !dbg !4792

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 2, !dbg !4793
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h79d159b234693157E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %_4), !dbg !4793
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !4793, !rawptr !418
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !4793, !rawptr !418
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0, !dbg !4793
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8, !dbg !4793
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1, !dbg !4793
  store i64 %haystack.1, i64* %5, align 8, !dbg !4793
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !4777, metadata !DIExpression()), !dbg !4794
  br label %bb3, !dbg !4793

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4795
  store {}* null, {}** %6, align 8, !dbg !4795
  br label %bb10, !dbg !4796

bb10:                                             ; preds = %bb9, %bb1
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4796
  %8 = load i8*, i8** %7, align 8, !dbg !4796, !align !912
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4796
  %10 = load i64, i64* %9, align 8, !dbg !4796
  %11 = insertvalue { i8*, i64 } undef, i8* %8, 0, !dbg !4796
  %12 = insertvalue { i8*, i64 } %11, i64 %10, 1, !dbg !4796
  ret { i8*, i64 } %12, !dbg !4796

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 2, !dbg !4797
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
  call void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h432a93621517fb67E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_5, %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %_6), !dbg !4797
  br label %bb4, !dbg !4797

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*, !dbg !4797
  %_7 = load i64, i64* %13, align 8, !dbg !4797, !range !3483, !noundef !23
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !4798

bb6:                                              ; preds = %bb4
  unreachable, !dbg !4797

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %14 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h0a9973e2318a33a2E"(%"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self), !dbg !4799
  store { i8*, i64 } %14, { i8*, i64 }* %0, align 8, !dbg !4799
  br label %bb8, !dbg !4799

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4800
  %16 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %15, i32 0, i32 1, !dbg !4800
  %17 = bitcast { i64, i64 }* %16 to i64*, !dbg !4800
  %a = load i64, i64* %17, align 8, !dbg !4800
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4800
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4779, metadata !DIExpression()), !dbg !4801
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4802
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !4802
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !4802
  %b = load i64, i64* %20, align 8, !dbg !4802
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4802
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4781, metadata !DIExpression()), !dbg !4803
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4791
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !4791
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4791
  store i64 %haystack.1, i64* %22, align 8, !dbg !4791
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4789, metadata !DIExpression()), !dbg !4790
  %23 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to i64*, !dbg !4804
  %_13 = load i64, i64* %23, align 8, !dbg !4804
  %24 = bitcast { i64, i64 }* %i to i64*, !dbg !4804
  store i64 %_13, i64* %24, align 8, !dbg !4804
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4804
  store i64 %a, i64* %25, align 8, !dbg !4804
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4790
  %_19.0 = load i64, i64* %26, align 8, !dbg !4790, !rawptr !418
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4790
  %_19.1 = load i64, i64* %27, align 8, !dbg !4790, !rawptr !418
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %28 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E"(i64 %_19.0, i64 %_19.1, [0 x i8]* %haystack.0, i64 %haystack.1), !dbg !4790
  %_18.0 = extractvalue { [0 x i8]*, i64 } %28, 0, !dbg !4790
  %_18.1 = extractvalue { [0 x i8]*, i64 } %28, 1, !dbg !4790
  br label %bb11, !dbg !4790

bb11:                                             ; preds = %bb7
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 0, !dbg !4790
  store [0 x i8]* %_18.0, [0 x i8]** %29, align 8, !dbg !4790
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 1, !dbg !4790
  store i64 %_18.1, i64* %30, align 8, !dbg !4790
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %elt.dbg.spill, metadata !4782, metadata !DIExpression()), !dbg !4805
  %31 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to i64*, !dbg !4806
  store i64 %b, i64* %31, align 8, !dbg !4806
  %32 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4807
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !4807
  store [0 x i8]* %_18.0, [0 x i8]** %33, align 8, !dbg !4807
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !4807
  store i64 %_18.1, i64* %34, align 8, !dbg !4807
  br label %bb9, !dbg !4808

bb9:                                              ; preds = %bb8, %bb11
  br label %bb10, !dbg !4796

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !4809
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha8f598893f77e507E"(%"core::str::iter::SplitInternal<char>"* align 8 %self) unnamed_addr #1 !dbg !4810 {
start:
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<char>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<char>"* %self, %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, metadata !4815, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4824, metadata !DIExpression()), !dbg !4829
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !4831
  %2 = load i8, i8* %1, align 1, !dbg !4831, !range !298, !noundef !23
  %_2 = trunc i8 %2 to i1, !dbg !4831
  br i1 %_2, label %bb1, label %bb2, !dbg !4831

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !4832
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd05587b02468c61aE"(%"core::str::pattern::CharSearcher"* align 8 %_4), !dbg !4832
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !4832, !rawptr !418
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !4832, !rawptr !418
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0, !dbg !4832
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8, !dbg !4832
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1, !dbg !4832
  store i64 %haystack.1, i64* %5, align 8, !dbg !4832
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !4816, metadata !DIExpression()), !dbg !4833
  br label %bb3, !dbg !4832

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4834
  store {}* null, {}** %6, align 8, !dbg !4834
  br label %bb10, !dbg !4835

bb10:                                             ; preds = %bb9, %bb1
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4835
  %8 = load i8*, i8** %7, align 8, !dbg !4835, !align !912
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4835
  %10 = load i64, i64* %9, align 8, !dbg !4835
  %11 = insertvalue { i8*, i64 } undef, i8* %8, 0, !dbg !4835
  %12 = insertvalue { i8*, i64 } %11, i64 %10, 1, !dbg !4835
  ret { i8*, i64 } %12, !dbg !4835

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !4836
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17ha9b3fa3a7f61912dE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_5, %"core::str::pattern::CharSearcher"* align 8 %_6), !dbg !4836
  br label %bb4, !dbg !4836

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*, !dbg !4836
  %_7 = load i64, i64* %13, align 8, !dbg !4836, !range !3483, !noundef !23
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !4837

bb6:                                              ; preds = %bb4
  unreachable, !dbg !4836

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %14 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h76dbd58b6c5472cfE"(%"core::str::iter::SplitInternal<char>"* align 8 %self), !dbg !4838
  store { i8*, i64 } %14, { i8*, i64 }* %0, align 8, !dbg !4838
  br label %bb8, !dbg !4838

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4839
  %16 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %15, i32 0, i32 1, !dbg !4839
  %17 = bitcast { i64, i64 }* %16 to i64*, !dbg !4839
  %a = load i64, i64* %17, align 8, !dbg !4839
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4839
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4818, metadata !DIExpression()), !dbg !4840
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4841
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !4841
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !4841
  %b = load i64, i64* %20, align 8, !dbg !4841
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4841
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4820, metadata !DIExpression()), !dbg !4842
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4830
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !4830
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4830
  store i64 %haystack.1, i64* %22, align 8, !dbg !4830
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4828, metadata !DIExpression()), !dbg !4829
  %23 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4843
  %_13 = load i64, i64* %23, align 8, !dbg !4843
  %24 = bitcast { i64, i64 }* %i to i64*, !dbg !4843
  store i64 %_13, i64* %24, align 8, !dbg !4843
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4843
  store i64 %a, i64* %25, align 8, !dbg !4843
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4829
  %_19.0 = load i64, i64* %26, align 8, !dbg !4829, !rawptr !418
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4829
  %_19.1 = load i64, i64* %27, align 8, !dbg !4829, !rawptr !418
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %28 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E"(i64 %_19.0, i64 %_19.1, [0 x i8]* %haystack.0, i64 %haystack.1), !dbg !4829
  %_18.0 = extractvalue { [0 x i8]*, i64 } %28, 0, !dbg !4829
  %_18.1 = extractvalue { [0 x i8]*, i64 } %28, 1, !dbg !4829
  br label %bb11, !dbg !4829

bb11:                                             ; preds = %bb7
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 0, !dbg !4829
  store [0 x i8]* %_18.0, [0 x i8]** %29, align 8, !dbg !4829
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 1, !dbg !4829
  store i64 %_18.1, i64* %30, align 8, !dbg !4829
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %elt.dbg.spill, metadata !4821, metadata !DIExpression()), !dbg !4844
  %31 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4845
  store i64 %b, i64* %31, align 8, !dbg !4845
  %32 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4846
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !4846
  store [0 x i8]* %_18.0, [0 x i8]** %33, align 8, !dbg !4846
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !4846
  store i64 %_18.1, i64* %34, align 8, !dbg !4846
  br label %bb9, !dbg !4847

bb9:                                              ; preds = %bb8, %bb11
  br label %bb10, !dbg !4835

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !4848
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h0a9973e2318a33a2E"(%"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !4849 {
start:
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !4851, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4855, metadata !DIExpression()), !dbg !4860
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 4, !dbg !4862
  %2 = load i8, i8* %1, align 1, !dbg !4862, !range !298, !noundef !23
  %_4 = trunc i8 %2 to i1, !dbg !4862
  %_3 = xor i1 %_4, true, !dbg !4863
  br i1 %_3, label %bb2, label %bb1, !dbg !4863

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !4863
  br label %bb3, !dbg !4863

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 3, !dbg !4864
  %4 = load i8, i8* %3, align 8, !dbg !4864, !range !298, !noundef !23
  %_6 = trunc i8 %4 to i1, !dbg !4864
  br i1 %_6, label %bb4, label %bb5, !dbg !4865

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 1, !dbg !4866
  %_9 = load i64, i64* %5, align 8, !dbg !4866
  %6 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to i64*, !dbg !4867
  %_10 = load i64, i64* %6, align 8, !dbg !4867
  %_8 = sub i64 %_9, %_10, !dbg !4866
  %_7 = icmp ugt i64 %_8, 0, !dbg !4866
  %7 = zext i1 %_7 to i8, !dbg !4865
  store i8 %7, i8* %_5, align 1, !dbg !4865
  br label %bb6, !dbg !4865

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1, !dbg !4865
  br label %bb6, !dbg !4865

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !dbg !4863, !range !298, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !4863
  %10 = zext i1 %9 to i8, !dbg !4863
  store i8 %10, i8* %_2, align 1, !dbg !4863
  br label %bb3, !dbg !4863

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !dbg !4863, !range !298, !noundef !23
  %12 = trunc i8 %11 to i1, !dbg !4863
  br i1 %12, label %bb7, label %bb9, !dbg !4863

bb9:                                              ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4868
  store {}* null, {}** %13, align 8, !dbg !4868
  br label %bb10, !dbg !4869

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 4, !dbg !4870
  store i8 1, i8* %14, align 1, !dbg !4870
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 2, !dbg !4861
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h79d159b234693157E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %_14), !dbg !4861
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0, !dbg !4861, !rawptr !418
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1, !dbg !4861, !rawptr !418
  br label %bb8, !dbg !4861

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4861
  store [0 x i8]* %_13.0, [0 x i8]** %16, align 8, !dbg !4861
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4861
  store i64 %_13.1, i64* %17, align 8, !dbg !4861
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4859, metadata !DIExpression()), !dbg !4860
  %18 = bitcast %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to i64*, !dbg !4871
  %_16 = load i64, i64* %18, align 8, !dbg !4871
  %19 = getelementptr inbounds %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 1, !dbg !4872
  %_17 = load i64, i64* %19, align 8, !dbg !4872
  %20 = bitcast { i64, i64 }* %i to i64*, !dbg !4871
  store i64 %_16, i64* %20, align 8, !dbg !4871
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4871
  store i64 %_17, i64* %21, align 8, !dbg !4871
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4860
  %_20.0 = load i64, i64* %22, align 8, !dbg !4860, !rawptr !418
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4860
  %_20.1 = load i64, i64* %23, align 8, !dbg !4860, !rawptr !418
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E"(i64 %_20.0, i64 %_20.1, [0 x i8]* %_13.0, i64 %_13.1), !dbg !4860
  %_19.0 = extractvalue { [0 x i8]*, i64 } %24, 0, !dbg !4860
  %_19.1 = extractvalue { [0 x i8]*, i64 } %24, 1, !dbg !4860
  br label %bb11, !dbg !4860

bb11:                                             ; preds = %bb8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0, !dbg !4860
  store [0 x i8]* %_19.0, [0 x i8]** %25, align 8, !dbg !4860
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1, !dbg !4860
  store i64 %_19.1, i64* %26, align 8, !dbg !4860
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !4852, metadata !DIExpression()), !dbg !4873
  %27 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4874
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !4874
  store [0 x i8]* %_19.0, [0 x i8]** %28, align 8, !dbg !4874
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !4874
  store i64 %_19.1, i64* %29, align 8, !dbg !4874
  br label %bb10, !dbg !4869

bb10:                                             ; preds = %bb9, %bb11
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4875
  %31 = load i8*, i8** %30, align 8, !dbg !4875, !align !912
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4875
  %33 = load i64, i64* %32, align 8, !dbg !4875
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0, !dbg !4875
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1, !dbg !4875
  ret { i8*, i64 } %35, !dbg !4875
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h76dbd58b6c5472cfE"(%"core::str::iter::SplitInternal<char>"* align 8 %self) unnamed_addr #1 !dbg !4876 {
start:
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<char>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<char>"* %self, %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, metadata !4878, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4882, metadata !DIExpression()), !dbg !4887
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !4889
  %2 = load i8, i8* %1, align 1, !dbg !4889, !range !298, !noundef !23
  %_4 = trunc i8 %2 to i1, !dbg !4889
  %_3 = xor i1 %_4, true, !dbg !4890
  br i1 %_3, label %bb2, label %bb1, !dbg !4890

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !4890
  br label %bb3, !dbg !4890

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 3, !dbg !4891
  %4 = load i8, i8* %3, align 8, !dbg !4891, !range !298, !noundef !23
  %_6 = trunc i8 %4 to i1, !dbg !4891
  br i1 %_6, label %bb4, label %bb5, !dbg !4892

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1, !dbg !4893
  %_9 = load i64, i64* %5, align 8, !dbg !4893
  %6 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4894
  %_10 = load i64, i64* %6, align 8, !dbg !4894
  %_8 = sub i64 %_9, %_10, !dbg !4893
  %_7 = icmp ugt i64 %_8, 0, !dbg !4893
  %7 = zext i1 %_7 to i8, !dbg !4892
  store i8 %7, i8* %_5, align 1, !dbg !4892
  br label %bb6, !dbg !4892

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1, !dbg !4892
  br label %bb6, !dbg !4892

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !dbg !4890, !range !298, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !4890
  %10 = zext i1 %9 to i8, !dbg !4890
  store i8 %10, i8* %_2, align 1, !dbg !4890
  br label %bb3, !dbg !4890

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !dbg !4890, !range !298, !noundef !23
  %12 = trunc i8 %11 to i1, !dbg !4890
  br i1 %12, label %bb7, label %bb9, !dbg !4890

bb9:                                              ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4895
  store {}* null, {}** %13, align 8, !dbg !4895
  br label %bb10, !dbg !4896

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !4897
  store i8 1, i8* %14, align 1, !dbg !4897
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !4888
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd05587b02468c61aE"(%"core::str::pattern::CharSearcher"* align 8 %_14), !dbg !4888
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0, !dbg !4888, !rawptr !418
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1, !dbg !4888, !rawptr !418
  br label %bb8, !dbg !4888

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4888
  store [0 x i8]* %_13.0, [0 x i8]** %16, align 8, !dbg !4888
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4888
  store i64 %_13.1, i64* %17, align 8, !dbg !4888
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4886, metadata !DIExpression()), !dbg !4887
  %18 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4898
  %_16 = load i64, i64* %18, align 8, !dbg !4898
  %19 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1, !dbg !4899
  %_17 = load i64, i64* %19, align 8, !dbg !4899
  %20 = bitcast { i64, i64 }* %i to i64*, !dbg !4898
  store i64 %_16, i64* %20, align 8, !dbg !4898
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4898
  store i64 %_17, i64* %21, align 8, !dbg !4898
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4887
  %_20.0 = load i64, i64* %22, align 8, !dbg !4887, !rawptr !418
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4887
  %_20.1 = load i64, i64* %23, align 8, !dbg !4887, !rawptr !418
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E"(i64 %_20.0, i64 %_20.1, [0 x i8]* %_13.0, i64 %_13.1), !dbg !4887
  %_19.0 = extractvalue { [0 x i8]*, i64 } %24, 0, !dbg !4887
  %_19.1 = extractvalue { [0 x i8]*, i64 } %24, 1, !dbg !4887
  br label %bb11, !dbg !4887

bb11:                                             ; preds = %bb8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0, !dbg !4887
  store [0 x i8]* %_19.0, [0 x i8]** %25, align 8, !dbg !4887
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1, !dbg !4887
  store i64 %_19.1, i64* %26, align 8, !dbg !4887
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !4879, metadata !DIExpression()), !dbg !4900
  %27 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4901
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !4901
  store [0 x i8]* %_19.0, [0 x i8]** %28, align 8, !dbg !4901
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !4901
  store i64 %_19.1, i64* %29, align 8, !dbg !4901
  br label %bb10, !dbg !4896

bb10:                                             ; preds = %bb9, %bb11
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4902
  %31 = load i8*, i8** %30, align 8, !dbg !4902, !align !912
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4902
  %33 = load i64, i64* %32, align 8, !dbg !4902
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0, !dbg !4902
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1, !dbg !4902
  ret { i8*, i64 } %35, !dbg !4902
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !4903 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %len.dbg.spill6 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_26 = alloca { i8*, i64 }, align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !4914, metadata !DIExpression()), !dbg !4922
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !4915, metadata !DIExpression()), !dbg !4923
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !4924
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !4924
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !4924
  store i64 %slice.1, i64* %6, align 8, !dbg !4924
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !4916, metadata !DIExpression()), !dbg !4925
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4926
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !4926
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4926
  store i64 %slice.1, i64* %8, align 8, !dbg !4926
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4927, metadata !DIExpression()), !dbg !4931
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !4931, !rawptr !418
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !4931
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !4932, metadata !DIExpression()), !dbg !4937
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !4938
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4936, metadata !DIExpression()), !dbg !4937
  store i8* %self, i8** %self.dbg.spill4, align 8, !dbg !4937
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !4939, metadata !DIExpression()), !dbg !4944
  store i64 %self.0, i64* %count.dbg.spill5, align 8, !dbg !4937
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !4943, metadata !DIExpression()), !dbg !4944
  %9 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !4944
  store i8* %9, i8** %0, align 8, !dbg !4944
  %ptr = load i8*, i8** %0, align 8, !dbg !4944, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4944
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4918, metadata !DIExpression()), !dbg !4946
  br label %bb1, !dbg !4944

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !4947
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !4947
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4920, metadata !DIExpression()), !dbg !4948
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !4949
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !4950, metadata !DIExpression()), !dbg !4955
  store i64 %len, i64* %len.dbg.spill6, align 8, !dbg !4957
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill6, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i8* %ptr, i8** %self.dbg.spill7, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !4958, metadata !DIExpression()), !dbg !4962
  %data_address = bitcast i8* %ptr to {}*, !dbg !4962, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4962
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4964, metadata !DIExpression()), !dbg !4969
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !4968, metadata !DIExpression()), !dbg !4969
  %10 = bitcast { i8*, i64 }* %_26 to {}**, !dbg !4969, !rawptr !418
  store {}* %data_address, {}** %10, align 8, !dbg !4969
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !4969
  store i64 %len, i64* %11, align 8, !dbg !4969
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !4969
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 0, !dbg !4969
  %14 = load i8*, i8** %13, align 8, !dbg !4969
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !4969
  %16 = load i64, i64* %15, align 8, !dbg !4969
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 0, !dbg !4969
  store i8* %14, i8** %17, align 8, !dbg !4969
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !4969
  store i64 %16, i64* %18, align 8, !dbg !4969
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !4969
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0, !dbg !4969
  %_12.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !dbg !4969, !rawptr !418
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1, !dbg !4969
  %_12.1 = load i64, i64* %21, align 8, !dbg !4969, !rawptr !418
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0, !dbg !4971
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %_12.1, 1, !dbg !4971
  ret { [0 x i8]*, i64 } %23, !dbg !4971
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hfd782e66cafbb4cbE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !4972 {
start:
  %other.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4975, metadata !DIExpression()), !dbg !4977
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !4976, metadata !DIExpression()), !dbg !4978
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4979
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !4979
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4979
  store i64 %self.1, i64* %5, align 8, !dbg !4979
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4980, metadata !DIExpression()), !dbg !4984
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !4984
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !4984
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !4984
  store i64 %self.1, i64* %7, align 8, !dbg !4984
  br label %bb1, !dbg !4984

bb1:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %_4, { [0 x i8]*, i64 }** %self.dbg.spill2, align 8, !dbg !4979
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill2, metadata !4985, metadata !DIExpression()), !dbg !4993
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !4994
  store [0 x i8]* %other.0, [0 x i8]** %8, align 8, !dbg !4994
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !4994
  store i64 %other.1, i64* %9, align 8, !dbg !4994
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !4995, metadata !DIExpression()), !dbg !4999
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !4999
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8, !dbg !4999
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !4999
  store i64 %other.1, i64* %11, align 8, !dbg !4999
  br label %bb2, !dbg !4999

bb2:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %_7, { [0 x i8]*, i64 }** %other.dbg.spill4, align 8, !dbg !4994
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill4, metadata !4992, metadata !DIExpression()), !dbg !4993
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !4993
  %_13.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !4993, !nonnull !23, !align !912, !noundef !23
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !4993
  %_13.1 = load i64, i64* %13, align 8, !dbg !4993
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !4993
  %_14.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !4993, !nonnull !23, !align !912, !noundef !23
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !4993
  %_14.1 = load i64, i64* %15, align 8, !dbg !4993
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %16 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe80d7d0bf324262E"([0 x i8]* align 1 %_13.0, i64 %_13.1, [0 x i8]* align 1 %_14.0, i64 %_14.1), !dbg !4993
  br label %bb3, !dbg !4993

bb3:                                              ; preds = %bb2
  ret i1 %16, !dbg !5000
}

; core::str::traits::<impl core::cmp::PartialEq for str>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17hc6c85a716ff4627eE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !5001 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5003, metadata !DIExpression()), !dbg !5005
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !5004, metadata !DIExpression()), !dbg !5006
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_3 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hfd782e66cafbb4cbE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1), !dbg !5007
  br label %bb1, !dbg !5007

bb1:                                              ; preds = %start
  %4 = xor i1 %_3, true, !dbg !5008
  ret i1 %4, !dbg !5009
}

; core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17h3da7e002de0456c6E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !5010 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5013, metadata !DIExpression()), !dbg !5014
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5015
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !5015
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5015
  store i64 %self.1, i64* %4, align 8, !dbg !5015
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5016, metadata !DIExpression()), !dbg !5019
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !5019
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !5019
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !5019
  store i64 %self.1, i64* %6, align 8, !dbg !5019
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !5019
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !5019, !nonnull !23, !align !912, !noundef !23
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !5019
  %10 = load i64, i64* %9, align 8, !dbg !5019
  br label %bb1, !dbg !5019

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !5020
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !5020
  ret { [0 x i8]*, i64 } %12, !dbg !5020
}

; core::str::pattern::ReverseSearcher::next_reject_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern15ReverseSearcher16next_reject_back17h76b240203b87ff55E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #1 !dbg !5021 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !5026, metadata !DIExpression()), !dbg !5032
  br label %bb1, !dbg !5033

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
  call void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17hdeb12630264c5c15E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_2, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self), !dbg !5034
  br label %bb2, !dbg !5034

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*, !dbg !5034
  %_4 = load i64, i64* %1, align 8, !dbg !5034, !range !5035, !noundef !23
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ], !dbg !5036

bb5:                                              ; preds = %bb2
  br label %bb1, !dbg !5037

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !5039
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %2, i32 0, i32 1, !dbg !5039
  %a = load i64, i64* %3, align 8, !dbg !5039
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !5039
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !5027, metadata !DIExpression()), !dbg !5040
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !5041
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %4, i32 0, i32 2, !dbg !5041
  %b = load i64, i64* %5, align 8, !dbg !5041
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !5041
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !5029, metadata !DIExpression()), !dbg !5042
  %6 = bitcast { i64, i64 }* %_7 to i64*, !dbg !5043
  store i64 %a, i64* %6, align 8, !dbg !5043
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5043
  store i64 %b, i64* %7, align 8, !dbg !5043
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !5044
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1, !dbg !5044
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !5044
  %11 = load i64, i64* %10, align 8, !dbg !5044
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5044
  %13 = load i64, i64* %12, align 8, !dbg !5044
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5044
  store i64 %11, i64* %14, align 8, !dbg !5044
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5044
  store i64 %13, i64* %15, align 8, !dbg !5044
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !5044
  store i64 1, i64* %16, align 8, !dbg !5044
  br label %bb6, !dbg !5037

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !5045
  store i64 0, i64* %17, align 8, !dbg !5045
  br label %bb6, !dbg !5046

bb6:                                              ; preds = %bb3, %bb4
  ret void, !dbg !5047
}

; core::str::pattern::Searcher::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern8Searcher10next_match17h62a409247a51568fE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !5048 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !5054, metadata !DIExpression()), !dbg !5060
  br label %bb1, !dbg !5061

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17he708c6b8215159f9E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_2, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self), !dbg !5062
  br label %bb2, !dbg !5062

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*, !dbg !5062
  %_4 = load i64, i64* %1, align 8, !dbg !5062, !range !5035, !noundef !23
  switch i64 %_4, label %bb5 [
    i64 0, label %bb3
    i64 2, label %bb4
  ], !dbg !5063

bb5:                                              ; preds = %bb2
  br label %bb1, !dbg !5064

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*, !dbg !5066
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %2, i32 0, i32 1, !dbg !5066
  %a = load i64, i64* %3, align 8, !dbg !5066
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !5066
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !5055, metadata !DIExpression()), !dbg !5067
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*, !dbg !5068
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %4, i32 0, i32 2, !dbg !5068
  %b = load i64, i64* %5, align 8, !dbg !5068
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !5068
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !5057, metadata !DIExpression()), !dbg !5069
  %6 = bitcast { i64, i64 }* %_7 to i64*, !dbg !5070
  store i64 %a, i64* %6, align 8, !dbg !5070
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5070
  store i64 %b, i64* %7, align 8, !dbg !5070
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !5071
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1, !dbg !5071
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !5071
  %11 = load i64, i64* %10, align 8, !dbg !5071
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5071
  %13 = load i64, i64* %12, align 8, !dbg !5071
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5071
  store i64 %11, i64* %14, align 8, !dbg !5071
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5071
  store i64 %13, i64* %15, align 8, !dbg !5071
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !5071
  store i64 1, i64* %16, align 8, !dbg !5071
  br label %bb6, !dbg !5064

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !5072
  store i64 0, i64* %17, align 8, !dbg !5072
  br label %bb6, !dbg !5073

bb6:                                              ; preds = %bb3, %bb4
  ret void, !dbg !5074
}

; core::str::pattern::Searcher::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern8Searcher11next_reject17h31bf01ea2ddf4d96E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #1 !dbg !5075 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !5077, metadata !DIExpression()), !dbg !5081
  br label %bb1, !dbg !5082

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h8077774041b14461E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_2, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self), !dbg !5083
  br label %bb2, !dbg !5083

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*, !dbg !5083
  %_4 = load i64, i64* %1, align 8, !dbg !5083, !range !5035, !noundef !23
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ], !dbg !5084

bb5:                                              ; preds = %bb2
  br label %bb1, !dbg !5085

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !5087
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %2, i32 0, i32 1, !dbg !5087
  %a = load i64, i64* %3, align 8, !dbg !5087
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !5087
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !5078, metadata !DIExpression()), !dbg !5088
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !5089
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %4, i32 0, i32 2, !dbg !5089
  %b = load i64, i64* %5, align 8, !dbg !5089
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !5080, metadata !DIExpression()), !dbg !5090
  %6 = bitcast { i64, i64 }* %_7 to i64*, !dbg !5091
  store i64 %a, i64* %6, align 8, !dbg !5091
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5091
  store i64 %b, i64* %7, align 8, !dbg !5091
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !5092
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1, !dbg !5092
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !5092
  %11 = load i64, i64* %10, align 8, !dbg !5092
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5092
  %13 = load i64, i64* %12, align 8, !dbg !5092
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5092
  store i64 %11, i64* %14, align 8, !dbg !5092
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5092
  store i64 %13, i64* %15, align 8, !dbg !5092
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !5092
  store i64 1, i64* %16, align 8, !dbg !5092
  br label %bb6, !dbg !5085

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !5093
  store i64 0, i64* %17, align 8, !dbg !5093
  br label %bb6, !dbg !5094

bb6:                                              ; preds = %bb3, %bb4
  ret void, !dbg !5095
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17hb50ab06b9b1ec8c9E(i32 %0, [0 x i8]* align 1 %dst.0, i64 %dst.1) unnamed_addr #1 !dbg !5096 {
start:
  %1 = alloca %"core::fmt::Opaque"*, align 8
  %2 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill23 = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill22 = alloca i64*, align 8
  %x.dbg.spill21 = alloca i64*, align 8
  %3 = alloca %"core::fmt::Opaque"*, align 8
  %4 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill20 = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill19 = alloca i32*, align 8
  %x.dbg.spill18 = alloca i32*, align 8
  %5 = alloca %"core::fmt::Opaque"*, align 8
  %6 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill17 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %slice.dbg.spill16 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill15 = alloca i64, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill13 = alloca i8*, align 8
  %b.dbg.spill11 = alloca i8*, align 8
  %a.dbg.spill9 = alloca i8*, align 8
  %c.dbg.spill7 = alloca i8*, align 8
  %b.dbg.spill5 = alloca i8*, align 8
  %a.dbg.spill3 = alloca i8*, align 8
  %d.dbg.spill = alloca i8*, align 8
  %c.dbg.spill = alloca i8*, align 8
  %b.dbg.spill = alloca i8*, align 8
  %a.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_137 = alloca { i64, i64 }, align 8
  %index = alloca i64, align 8
  %_86 = alloca i64, align 8
  %_83 = alloca { i8*, i64* }, align 8
  %_80 = alloca { i8*, i64* }, align 8
  %_77 = alloca { i8*, i64* }, align 8
  %_76 = alloca [3 x { i8*, i64* }], align 8
  %_69 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5103, metadata !DIExpression()), !dbg !5122
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0
  store [0 x i8]* %dst.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1
  store i64 %dst.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !5104, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5105, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !5125, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5138, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill, metadata !5152, metadata !DIExpression()), !dbg !5160
  %_5 = load i32, i32* %code, align 4, !dbg !5162
; call core::char::methods::len_utf8
  %9 = call i64 @_ZN4core4char7methods8len_utf817h2970cce3301ba9a4E(i32 %_5), !dbg !5163
  store i64 %9, i64* %len, align 8, !dbg !5163
  br label %bb1, !dbg !5163

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8, !dbg !5164
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5137
  store [0 x i8]* %dst.0, [0 x i8]** %10, align 8, !dbg !5137
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5137
  store i64 %dst.1, i64* %11, align 8, !dbg !5137
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5133, metadata !DIExpression()), !dbg !5136
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5136
  store [0 x i8]* %dst.0, [0 x i8]** %12, align 8, !dbg !5136
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5136
  store i64 %dst.1, i64* %13, align 8, !dbg !5136
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5159, metadata !DIExpression()), !dbg !5160
  %14 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5165
  store i64 %_7, i64* %14, align 8, !dbg !5165
  %15 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5165
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !5165
  store [0 x i8]* %dst.0, [0 x i8]** %16, align 8, !dbg !5165
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !5165
  store i64 %dst.1, i64* %17, align 8, !dbg !5165
  %18 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5166
  %19 = load i64, i64* %18, align 8, !dbg !5166
  switch i64 %19, label %bb3 [
    i64 1, label %bb2
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !5166

bb3:                                              ; preds = %bb2, %bb4, %bb5, %bb6, %bb1
  store i64* %len, i64** %x.dbg.spill, align 8, !dbg !5167
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !5168, metadata !DIExpression()), !dbg !5174
  store i64* %len, i64** %x.dbg.spill17, align 8, !dbg !5174
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill17, metadata !5176, metadata !DIExpression()), !dbg !5186
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17he2f1c89eaa9d32a9E", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !5174
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !5185, metadata !DIExpression()), !dbg !5186
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17he2f1c89eaa9d32a9E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5186
  %_115 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5186, !nonnull !23, !noundef !23
  br label %bb13, !dbg !5186

bb2:                                              ; preds = %bb1
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5188
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !5188
  %_94.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !5188, !nonnull !23, !align !912, !noundef !23
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !5188
  %_94.1 = load i64, i64* %22, align 8, !dbg !5188
  %_14 = icmp uge i64 %_94.1, 1, !dbg !5188
  br i1 %_14, label %bb7, label %bb3, !dbg !5188

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5189
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !5189
  %_95.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !5189, !nonnull !23, !align !912, !noundef !23
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !5189
  %_95.1 = load i64, i64* %25, align 8, !dbg !5189
  %_17 = icmp uge i64 %_95.1, 2, !dbg !5189
  br i1 %_17, label %bb8, label %bb3, !dbg !5189

bb5:                                              ; preds = %bb1
  %26 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5190
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !5190
  %_96.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !5190, !nonnull !23, !align !912, !noundef !23
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !5190
  %_96.1 = load i64, i64* %28, align 8, !dbg !5190
  %_20 = icmp uge i64 %_96.1, 3, !dbg !5190
  br i1 %_20, label %bb9, label %bb3, !dbg !5190

bb6:                                              ; preds = %bb1
  %29 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5191
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !5191
  %_97.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !5191, !nonnull !23, !align !912, !noundef !23
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !5191
  %_97.1 = load i64, i64* %31, align 8, !dbg !5191
  %_23 = icmp uge i64 %_97.1, 4, !dbg !5191
  br i1 %_23, label %bb10, label %bb3, !dbg !5191

bb10:                                             ; preds = %bb6
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5192
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !5192
  %_104.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !5192, !nonnull !23, !align !912, !noundef !23
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !5192
  %_104.1 = load i64, i64* %34, align 8, !dbg !5192
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %_104.0, i64 0, i64 0, !dbg !5192
  store i8* %a, i8** %a.dbg.spill, align 8, !dbg !5192
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill, metadata !5117, metadata !DIExpression()), !dbg !5193
  %35 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5194
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 0, !dbg !5194
  %_105.0 = load [0 x i8]*, [0 x i8]** %36, align 8, !dbg !5194, !nonnull !23, !align !912, !noundef !23
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 1, !dbg !5194
  %_105.1 = load i64, i64* %37, align 8, !dbg !5194
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %_105.0, i64 0, i64 1, !dbg !5194
  store i8* %b, i8** %b.dbg.spill, align 8, !dbg !5194
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill, metadata !5119, metadata !DIExpression()), !dbg !5195
  %38 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5196
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 0, !dbg !5196
  %_106.0 = load [0 x i8]*, [0 x i8]** %39, align 8, !dbg !5196, !nonnull !23, !align !912, !noundef !23
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 1, !dbg !5196
  %_106.1 = load i64, i64* %40, align 8, !dbg !5196
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %_106.0, i64 0, i64 2, !dbg !5196
  store i8* %c, i8** %c.dbg.spill, align 8, !dbg !5196
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill, metadata !5120, metadata !DIExpression()), !dbg !5197
  %41 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5198
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 0, !dbg !5198
  %_107.0 = load [0 x i8]*, [0 x i8]** %42, align 8, !dbg !5198, !nonnull !23, !align !912, !noundef !23
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 1, !dbg !5198
  %_107.1 = load i64, i64* %43, align 8, !dbg !5198
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %_107.0, i64 0, i64 3, !dbg !5198
  store i8* %d, i8** %d.dbg.spill, align 8, !dbg !5198
  call void @llvm.dbg.declare(metadata i8** %d.dbg.spill, metadata !5121, metadata !DIExpression()), !dbg !5199
  %_56 = load i32, i32* %code, align 4, !dbg !5200
  %_55 = lshr i32 %_56, 18, !dbg !5200
  %_54 = and i32 %_55, 7, !dbg !5201
  %_53 = trunc i32 %_54 to i8, !dbg !5201
  %44 = or i8 %_53, -16, !dbg !5202
  store i8 %44, i8* %a, align 1, !dbg !5202
  %_60 = load i32, i32* %code, align 4, !dbg !5203
  %_59 = lshr i32 %_60, 12, !dbg !5203
  %_58 = and i32 %_59, 63, !dbg !5204
  %_57 = trunc i32 %_58 to i8, !dbg !5204
  %45 = or i8 %_57, -128, !dbg !5205
  store i8 %45, i8* %b, align 1, !dbg !5205
  %_64 = load i32, i32* %code, align 4, !dbg !5206
  %_63 = lshr i32 %_64, 6, !dbg !5206
  %_62 = and i32 %_63, 63, !dbg !5207
  %_61 = trunc i32 %_62 to i8, !dbg !5207
  %46 = or i8 %_61, -128, !dbg !5208
  store i8 %46, i8* %c, align 1, !dbg !5208
  %_67 = load i32, i32* %code, align 4, !dbg !5209
  %_66 = and i32 %_67, 63, !dbg !5210
  %_65 = trunc i32 %_66 to i8, !dbg !5210
  %47 = or i8 %_65, -128, !dbg !5211
  store i8 %47, i8* %d, align 1, !dbg !5211
  br label %bb12, !dbg !5212

bb12:                                             ; preds = %bb7, %bb8, %bb9, %bb10
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !5151
  store [0 x i8]* %dst.0, [0 x i8]** %48, align 8, !dbg !5151
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !5151
  store i64 %dst.1, i64* %49, align 8, !dbg !5151
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill14, metadata !5147, metadata !DIExpression()), !dbg !5150
  %_92 = load i64, i64* %len, align 8, !dbg !5213
  store i64 %_92, i64* %index, align 8, !dbg !5214
  %self = load i64, i64* %index, align 8, !dbg !5150
  store i64 %self, i64* %self.dbg.spill15, align 8, !dbg !5150
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill15, metadata !5215, metadata !DIExpression()), !dbg !5223
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 0, !dbg !5150
  store [0 x i8]* %dst.0, [0 x i8]** %50, align 8, !dbg !5150
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 1, !dbg !5150
  store i64 %dst.1, i64* %51, align 8, !dbg !5150
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill16, metadata !5222, metadata !DIExpression()), !dbg !5223
  %52 = bitcast { i64, i64 }* %_137 to i64*, !dbg !5223
  store i64 0, i64* %52, align 8, !dbg !5223
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5223
  store i64 %self, i64* %53, align 8, !dbg !5223
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 0, !dbg !5223
  %55 = load i64, i64* %54, align 8, !dbg !5223
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5223
  %57 = load i64, i64* %56, align 8, !dbg !5223
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %58 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf22b940d4cf19807E"(i64 %55, i64 %57, [0 x i8]* align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc453 to %"core::panic::location::Location"*)), !dbg !5223
  %_136.0 = extractvalue { [0 x i8]*, i64 } %58, 0, !dbg !5223
  %_136.1 = extractvalue { [0 x i8]*, i64 } %58, 1, !dbg !5223
  br label %bb19, !dbg !5223

bb9:                                              ; preds = %bb5
  %59 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5225
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 0, !dbg !5225
  %_101.0 = load [0 x i8]*, [0 x i8]** %60, align 8, !dbg !5225, !nonnull !23, !align !912, !noundef !23
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 1, !dbg !5225
  %_101.1 = load i64, i64* %61, align 8, !dbg !5225
  %a2 = getelementptr inbounds [0 x i8], [0 x i8]* %_101.0, i64 0, i64 0, !dbg !5225
  store i8* %a2, i8** %a.dbg.spill3, align 8, !dbg !5225
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill3, metadata !5113, metadata !DIExpression()), !dbg !5226
  %62 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5227
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0, !dbg !5227
  %_102.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !dbg !5227, !nonnull !23, !align !912, !noundef !23
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1, !dbg !5227
  %_102.1 = load i64, i64* %64, align 8, !dbg !5227
  %b4 = getelementptr inbounds [0 x i8], [0 x i8]* %_102.0, i64 0, i64 1, !dbg !5227
  store i8* %b4, i8** %b.dbg.spill5, align 8, !dbg !5227
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill5, metadata !5115, metadata !DIExpression()), !dbg !5228
  %65 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5229
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 0, !dbg !5229
  %_103.0 = load [0 x i8]*, [0 x i8]** %66, align 8, !dbg !5229, !nonnull !23, !align !912, !noundef !23
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 1, !dbg !5229
  %_103.1 = load i64, i64* %67, align 8, !dbg !5229
  %c6 = getelementptr inbounds [0 x i8], [0 x i8]* %_103.0, i64 0, i64 2, !dbg !5229
  store i8* %c6, i8** %c.dbg.spill7, align 8, !dbg !5229
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill7, metadata !5116, metadata !DIExpression()), !dbg !5230
  %_41 = load i32, i32* %code, align 4, !dbg !5231
  %_40 = lshr i32 %_41, 12, !dbg !5231
  %_39 = and i32 %_40, 15, !dbg !5232
  %_38 = trunc i32 %_39 to i8, !dbg !5232
  %68 = or i8 %_38, -32, !dbg !5233
  store i8 %68, i8* %a2, align 1, !dbg !5233
  %_45 = load i32, i32* %code, align 4, !dbg !5234
  %_44 = lshr i32 %_45, 6, !dbg !5234
  %_43 = and i32 %_44, 63, !dbg !5235
  %_42 = trunc i32 %_43 to i8, !dbg !5235
  %69 = or i8 %_42, -128, !dbg !5236
  store i8 %69, i8* %b4, align 1, !dbg !5236
  %_48 = load i32, i32* %code, align 4, !dbg !5237
  %_47 = and i32 %_48, 63, !dbg !5238
  %_46 = trunc i32 %_47 to i8, !dbg !5238
  %70 = or i8 %_46, -128, !dbg !5239
  store i8 %70, i8* %c6, align 1, !dbg !5239
  br label %bb12, !dbg !5240

bb8:                                              ; preds = %bb4
  %71 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5241
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 0, !dbg !5241
  %_99.0 = load [0 x i8]*, [0 x i8]** %72, align 8, !dbg !5241, !nonnull !23, !align !912, !noundef !23
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 1, !dbg !5241
  %_99.1 = load i64, i64* %73, align 8, !dbg !5241
  %a8 = getelementptr inbounds [0 x i8], [0 x i8]* %_99.0, i64 0, i64 0, !dbg !5241
  store i8* %a8, i8** %a.dbg.spill9, align 8, !dbg !5241
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill9, metadata !5110, metadata !DIExpression()), !dbg !5242
  %74 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5243
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 0, !dbg !5243
  %_100.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !5243, !nonnull !23, !align !912, !noundef !23
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 1, !dbg !5243
  %_100.1 = load i64, i64* %76, align 8, !dbg !5243
  %b10 = getelementptr inbounds [0 x i8], [0 x i8]* %_100.0, i64 0, i64 1, !dbg !5243
  store i8* %b10, i8** %b.dbg.spill11, align 8, !dbg !5243
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill11, metadata !5112, metadata !DIExpression()), !dbg !5244
  %_31 = load i32, i32* %code, align 4, !dbg !5245
  %_30 = lshr i32 %_31, 6, !dbg !5245
  %_29 = and i32 %_30, 31, !dbg !5246
  %_28 = trunc i32 %_29 to i8, !dbg !5246
  %77 = or i8 %_28, -64, !dbg !5247
  store i8 %77, i8* %a8, align 1, !dbg !5247
  %_34 = load i32, i32* %code, align 4, !dbg !5248
  %_33 = and i32 %_34, 63, !dbg !5249
  %_32 = trunc i32 %_33 to i8, !dbg !5249
  %78 = or i8 %_32, -128, !dbg !5250
  store i8 %78, i8* %b10, align 1, !dbg !5250
  br label %bb12, !dbg !5251

bb7:                                              ; preds = %bb2
  %79 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5252
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 0, !dbg !5252
  %_98.0 = load [0 x i8]*, [0 x i8]** %80, align 8, !dbg !5252, !nonnull !23, !align !912, !noundef !23
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 1, !dbg !5252
  %_98.1 = load i64, i64* %81, align 8, !dbg !5252
  %a12 = getelementptr inbounds [0 x i8], [0 x i8]* %_98.0, i64 0, i64 0, !dbg !5252
  store i8* %a12, i8** %a.dbg.spill13, align 8, !dbg !5252
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill13, metadata !5107, metadata !DIExpression()), !dbg !5253
  %_25 = load i32, i32* %code, align 4, !dbg !5254
  %82 = trunc i32 %_25 to i8, !dbg !5255
  store i8 %82, i8* %a12, align 1, !dbg !5255
  br label %bb12, !dbg !5256

bb19:                                             ; preds = %bb12
  %83 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_136.0, 0, !dbg !5257
  %84 = insertvalue { [0 x i8]*, i64 } %83, i64 %_136.1, 1, !dbg !5257
  ret { [0 x i8]*, i64 } %84, !dbg !5257

bb13:                                             ; preds = %bb3
  %85 = bitcast i64* %len to %"core::fmt::Opaque"*, !dbg !5186
  store %"core::fmt::Opaque"* %85, %"core::fmt::Opaque"** %5, align 8, !dbg !5186
  %_117 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %5, align 8, !dbg !5186, !nonnull !23, !align !912, !noundef !23
  br label %bb14, !dbg !5186

bb14:                                             ; preds = %bb13
  %86 = bitcast { i8*, i64* }* %_77 to %"core::fmt::Opaque"**, !dbg !5186
  store %"core::fmt::Opaque"* %_117, %"core::fmt::Opaque"** %86, align 8, !dbg !5186
  %87 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5186
  %88 = bitcast i64** %87 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5186
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_115, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %88, align 8, !dbg !5186
  store i32* %code, i32** %x.dbg.spill18, align 8, !dbg !5167
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill18, metadata !5258, metadata !DIExpression()), !dbg !5264
  store i32* %code, i32** %x.dbg.spill19, align 8, !dbg !5264
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill19, metadata !5266, metadata !DIExpression()), !dbg !5276
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h827c8d2c4f363944E", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, align 8, !dbg !5264
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, metadata !5275, metadata !DIExpression()), !dbg !5276
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h827c8d2c4f363944E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5276
  %_121 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5276, !nonnull !23, !noundef !23
  br label %bb15, !dbg !5276

bb15:                                             ; preds = %bb14
  %89 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !5276
  store %"core::fmt::Opaque"* %89, %"core::fmt::Opaque"** %3, align 8, !dbg !5276
  %_123 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %3, align 8, !dbg !5276, !nonnull !23, !align !912, !noundef !23
  br label %bb16, !dbg !5276

bb16:                                             ; preds = %bb15
  %90 = bitcast { i8*, i64* }* %_80 to %"core::fmt::Opaque"**, !dbg !5276
  store %"core::fmt::Opaque"* %_123, %"core::fmt::Opaque"** %90, align 8, !dbg !5276
  %91 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5276
  %92 = bitcast i64** %91 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5276
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_121, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %92, align 8, !dbg !5276
  store i64 %dst.1, i64* %_86, align 8, !dbg !5278
  store i64* %_86, i64** %x.dbg.spill21, align 8, !dbg !5167
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill21, metadata !5279, metadata !DIExpression()), !dbg !5283
  store i64* %_86, i64** %x.dbg.spill22, align 8, !dbg !5283
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill22, metadata !5284, metadata !DIExpression()), !dbg !5289
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17he2f1c89eaa9d32a9E", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, align 8, !dbg !5283
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, metadata !5288, metadata !DIExpression()), !dbg !5289
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17he2f1c89eaa9d32a9E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !5289
  %_127 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !5289, !nonnull !23, !noundef !23
  br label %bb17, !dbg !5289

bb17:                                             ; preds = %bb16
  %93 = bitcast i64* %_86 to %"core::fmt::Opaque"*, !dbg !5289
  store %"core::fmt::Opaque"* %93, %"core::fmt::Opaque"** %1, align 8, !dbg !5289
  %_129 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %1, align 8, !dbg !5289, !nonnull !23, !align !912, !noundef !23
  br label %bb18, !dbg !5289

bb18:                                             ; preds = %bb17
  %94 = bitcast { i8*, i64* }* %_83 to %"core::fmt::Opaque"**, !dbg !5289
  store %"core::fmt::Opaque"* %_129, %"core::fmt::Opaque"** %94, align 8, !dbg !5289
  %95 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5289
  %96 = bitcast i64** %95 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5289
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_127, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %96, align 8, !dbg !5289
  %97 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 0, !dbg !5167
  %98 = load i8*, i8** %97, align 8, !dbg !5167, !nonnull !23, !align !912, !noundef !23
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5167
  %100 = load i64*, i64** %99, align 8, !dbg !5167, !nonnull !23, !noundef !23
  %101 = bitcast [3 x { i8*, i64* }]* %_76 to { i8*, i64* }*, !dbg !5167
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0, !dbg !5167
  store i8* %98, i8** %102, align 8, !dbg !5167
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1, !dbg !5167
  store i64* %100, i64** %103, align 8, !dbg !5167
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 0, !dbg !5167
  %105 = load i8*, i8** %104, align 8, !dbg !5167, !nonnull !23, !align !912, !noundef !23
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5167
  %107 = load i64*, i64** %106, align 8, !dbg !5167, !nonnull !23, !noundef !23
  %108 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i32 0, i32 1, !dbg !5167
  %109 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 0, !dbg !5167
  store i8* %105, i8** %109, align 8, !dbg !5167
  %110 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 1, !dbg !5167
  store i64* %107, i64** %110, align 8, !dbg !5167
  %111 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 0, !dbg !5167
  %112 = load i8*, i8** %111, align 8, !dbg !5167, !nonnull !23, !align !912, !noundef !23
  %113 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5167
  %114 = load i64*, i64** %113, align 8, !dbg !5167, !nonnull !23, !noundef !23
  %115 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i32 0, i32 2, !dbg !5167
  %116 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 0, !dbg !5167
  store i8* %112, i8** %116, align 8, !dbg !5167
  %117 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 1, !dbg !5167
  store i64* %114, i64** %117, align 8, !dbg !5167
  %_73.0 = bitcast [3 x { i8*, i64* }]* %_76 to [0 x { i8*, i64* }]*, !dbg !5167
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_69, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc243 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_73.0, i64 3), !dbg !5167
  br label %bb11, !dbg !5167

bb11:                                             ; preds = %bb18
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8b6ce72891ae5e4fE(%"core::fmt::Arguments"* %_69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc455 to %"core::panic::location::Location"*)) #18, !dbg !5167
  unreachable, !dbg !5167
}

; core::char::methods::<impl char>::is_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h7df9e2a627a36ce5E"(i32 %self) unnamed_addr #1 !dbg !5291 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %0 = alloca i8, align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !5296, metadata !DIExpression()), !dbg !5299
  %1 = icmp eq i32 %self, 32, !dbg !5300
  br i1 %1, label %bb4, label %bb1, !dbg !5300

bb4:                                              ; preds = %bb2, %start
  store i8 1, i8* %0, align 1, !dbg !5301
  br label %bb9, !dbg !5301

bb1:                                              ; preds = %start
  %_2 = icmp ule i32 9, %self, !dbg !5302
  br i1 %_2, label %bb2, label %bb3, !dbg !5302

bb3:                                              ; preds = %bb2, %bb1
  store i32 %self, i32* %c.dbg.spill, align 4, !dbg !5303
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !5297, metadata !DIExpression()), !dbg !5304
  %_5 = icmp ugt i32 %self, 127, !dbg !5305
  br i1 %_5, label %bb6, label %bb5, !dbg !5305

bb2:                                              ; preds = %bb1
  %_3 = icmp ule i32 %self, 13, !dbg !5302
  br i1 %_3, label %bb4, label %bb3, !dbg !5302

bb5:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1, !dbg !5305
  br label %bb7, !dbg !5305

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %_7 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17h20b43c7456439298E(i32 %self), !dbg !5306
  br label %bb8, !dbg !5306

bb8:                                              ; preds = %bb6
  %2 = zext i1 %_7 to i8, !dbg !5305
  store i8 %2, i8* %0, align 1, !dbg !5305
  br label %bb7, !dbg !5305

bb7:                                              ; preds = %bb5, %bb8
  br label %bb9, !dbg !5307

bb9:                                              ; preds = %bb4, %bb7
  %3 = load i8, i8* %0, align 1, !dbg !5308, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !5308
  ret i1 %4, !dbg !5308
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h2970cce3301ba9a4E(i32 %code) unnamed_addr #1 !dbg !5309 {
start:
  %code.dbg.spill = alloca i32, align 4
  %0 = alloca i64, align 8
  store i32 %code, i32* %code.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !5313, metadata !DIExpression()), !dbg !5314
  %_2 = icmp ult i32 %code, 128, !dbg !5315
  br i1 %_2, label %bb1, label %bb2, !dbg !5315

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048, !dbg !5316
  br i1 %_4, label %bb3, label %bb4, !dbg !5316

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !5317
  br label %bb9, !dbg !5318

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8, !dbg !5319
  ret i64 %1, !dbg !5319

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536, !dbg !5320
  br i1 %_6, label %bb5, label %bb6, !dbg !5320

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8, !dbg !5321
  br label %bb8, !dbg !5322

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9, !dbg !5318

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8, !dbg !5323
  br label %bb7, !dbg !5324

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8, !dbg !5325
  br label %bb7, !dbg !5324

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8, !dbg !5322
}

; core::iter::traits::iterator::Iterator::advance_by
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator10advance_by17hf019702708226cfdE(%"core::str::iter::Split<char>"* align 8 %self, i64 %n) unnamed_addr #1 !dbg !5326 {
start:
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::iter::Split<char>"*, align 8
  %residual = alloca i64, align 8
  %_14 = alloca %"core::result::Result<&str, usize>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store %"core::str::iter::Split<char>"* %self, %"core::str::iter::Split<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"** %self.dbg.spill, metadata !5350, metadata !DIExpression()), !dbg !5375
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5351, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5377, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !5352, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.declare(metadata i64* %residual, metadata !5389, metadata !DIExpression()), !dbg !5402
  %1 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5387
  store i64 0, i64* %1, align 8, !dbg !5387
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5387
  store i64 %n, i64* %2, align 8, !dbg !5387
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !5386
  %_3.0 = load i64, i64* %3, align 8, !dbg !5386
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5386
  %_3.1 = load i64, i64* %4, align 8, !dbg !5386
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !5387
  store i64 %_3.0, i64* %5, align 8, !dbg !5387
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !5387
  store i64 %_3.1, i64* %6, align 8, !dbg !5387
  br label %bb1, !dbg !5404

bb1:                                              ; preds = %bb11, %start
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !5388
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !5405, metadata !DIExpression()), !dbg !5415
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %7 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h6d92f5d3f3f7c62fE"({ i64, i64 }* align 8 %iter), !dbg !5415
  store { i64, i64 } %7, { i64, i64 }* %_7, align 8, !dbg !5415
  br label %bb13, !dbg !5415

bb13:                                             ; preds = %bb1
  %8 = bitcast { i64, i64 }* %_7 to i64*, !dbg !5388
  %_10 = load i64, i64* %8, align 8, !dbg !5388, !range !3483, !noundef !23
  switch i64 %_10, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !5388

bb3:                                              ; preds = %bb13
  unreachable, !dbg !5388

bb4:                                              ; preds = %bb13
  %9 = bitcast { i64, i64 }* %0 to i64*, !dbg !5416
  store i64 0, i64* %9, align 8, !dbg !5416
  br label %bb12, !dbg !5417

bb2:                                              ; preds = %bb13
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5418
  %i = load i64, i64* %10, align 8, !dbg !5418
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !5418
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !5354, metadata !DIExpression()), !dbg !5419
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %11 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E"(%"core::str::iter::Split<char>"* align 8 %self), !dbg !5420
  %_15.0 = extractvalue { i8*, i64 } %11, 0, !dbg !5420
  %_15.1 = extractvalue { i8*, i64 } %11, 1, !dbg !5420
  br label %bb5, !dbg !5420

bb5:                                              ; preds = %bb2
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hef3e01df1eef8a18E"(%"core::result::Result<&str, usize>"* sret(%"core::result::Result<&str, usize>") %_14, i8* align 1 %_15.0, i64 %_15.1, i64 %i), !dbg !5420
  br label %bb6, !dbg !5420

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc62c2300a8c60ecfE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>") %_13, %"core::result::Result<&str, usize>"* %_14), !dbg !5420
  br label %bb7, !dbg !5420

bb7:                                              ; preds = %bb6
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %_13 to i64*, !dbg !5420
  %_18 = load i64, i64* %12, align 8, !dbg !5420, !range !3483, !noundef !23
  switch i64 %_18, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !5420

bb9:                                              ; preds = %bb7
  unreachable, !dbg !5420

bb8:                                              ; preds = %bb7
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"*, !dbg !5420
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"* %13, i32 0, i32 1, !dbg !5420
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !5420
  %val.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !dbg !5420, !nonnull !23, !align !912, !noundef !23
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !5420
  %val.1 = load i64, i64* %16, align 8, !dbg !5420
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !5420
  store [0 x i8]* %val.0, [0 x i8]** %17, align 8, !dbg !5420
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !5420
  store i64 %val.1, i64* %18, align 8, !dbg !5420
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !5371, metadata !DIExpression()), !dbg !5421
  br label %bb11, !dbg !5422

bb10:                                             ; preds = %bb7
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"*, !dbg !5423
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"* %19, i32 0, i32 1, !dbg !5423
  %residual3 = load i64, i64* %20, align 8, !dbg !5423
  store i64 %residual3, i64* %residual.dbg.spill, align 8, !dbg !5423
  call void @llvm.dbg.declare(metadata i64* %residual.dbg.spill, metadata !5356, metadata !DIExpression()), !dbg !5424
  store i64 %residual3, i64* %residual, align 8, !dbg !5424
  %e = load i64, i64* %residual, align 8, !dbg !5402
  store i64 %e, i64* %e.dbg.spill, align 8, !dbg !5402
  call void @llvm.dbg.declare(metadata i64* %e.dbg.spill, metadata !5397, metadata !DIExpression()), !dbg !5425
; call <T as core::convert::From<T>>::from
  %_24 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2cc2b8b7a682aff2E"(i64 %e), !dbg !5425
  br label %bb14, !dbg !5425

bb14:                                             ; preds = %bb10
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5425
  store i64 %_24, i64* %21, align 8, !dbg !5425
  %22 = bitcast { i64, i64 }* %0 to i64*, !dbg !5425
  store i64 1, i64* %22, align 8, !dbg !5425
  br label %bb12, !dbg !5417

bb12:                                             ; preds = %bb4, %bb14
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5417
  %24 = load i64, i64* %23, align 8, !dbg !5417, !range !3483, !noundef !23
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5417
  %26 = load i64, i64* %25, align 8, !dbg !5417
  %27 = insertvalue { i64, i64 } undef, i64 %24, 0, !dbg !5417
  %28 = insertvalue { i64, i64 } %27, i64 %26, 1, !dbg !5417
  ret { i64, i64 } %28, !dbg !5417

bb11:                                             ; preds = %bb8
  br label %bb1, !dbg !5404
}

; core::iter::traits::iterator::Iterator::nth
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator3nth17hbf2f54fc1c2a83daE(%"core::str::iter::Split<char>"* align 8 %self, i64 %n) unnamed_addr #1 !dbg !5426 {
start:
  %v.dbg.spill = alloca {}, align 1
  %x.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %residual.dbg.spill3 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::iter::Split<char>"*, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::Split<char>"* %self, %"core::str::iter::Split<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"** %self.dbg.spill, metadata !5430, metadata !DIExpression()), !dbg !5436
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5431, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.declare(metadata i8* %self1, metadata !5438, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !5475, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !5432, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill3, metadata !5489, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !5434, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.declare(metadata {}* %x.dbg.spill, metadata !5481, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !5470, metadata !DIExpression()), !dbg !5499
; call core::iter::traits::iterator::Iterator::advance_by
  %1 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator10advance_by17hf019702708226cfdE(%"core::str::iter::Split<char>"* align 8 %self, i64 %n), !dbg !5474
  store { i64, i64 } %1, { i64, i64 }* %self2, align 8, !dbg !5474
  br label %bb1, !dbg !5474

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %self2 to i64*, !dbg !5487
  %_13 = load i64, i64* %2, align 8, !dbg !5487, !range !3483, !noundef !23
  switch i64 %_13, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !5487

bb10:                                             ; preds = %bb1
  unreachable, !dbg !5487

bb11:                                             ; preds = %bb1
  store i8 1, i8* %self1, align 1, !dbg !5498
  br label %bb2, !dbg !5487

bb9:                                              ; preds = %bb1
  store i8 0, i8* %self1, align 1, !dbg !5500
  br label %bb2, !dbg !5487

bb2:                                              ; preds = %bb11, %bb9
  %3 = load i8, i8* %self1, align 1, !dbg !5473, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !5473
  %_16 = zext i1 %4 to i64, !dbg !5473
  switch i64 %_16, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ], !dbg !5473

bb13:                                             ; preds = %bb2
  unreachable, !dbg !5473

bb12:                                             ; preds = %bb2
  store i8 1, i8* %_3, align 1, !dbg !5473
  br label %bb3, !dbg !5473

bb14:                                             ; preds = %bb2
  store i8 0, i8* %_3, align 1, !dbg !5499
  br label %bb3, !dbg !5473

bb3:                                              ; preds = %bb12, %bb14
  %5 = load i8, i8* %_3, align 1, !dbg !5474, !range !298, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !5474
  %_8 = zext i1 %6 to i64, !dbg !5474
  switch i64 %_8, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !5474

bb5:                                              ; preds = %bb3
  unreachable, !dbg !5474

bb4:                                              ; preds = %bb3
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E"(%"core::str::iter::Split<char>"* align 8 %self), !dbg !5501
  store { i8*, i64 } %7, { i8*, i64 }* %0, align 8, !dbg !5501
  br label %bb7, !dbg !5501

bb6:                                              ; preds = %bb3
  %8 = bitcast { i8*, i64 }* %0 to {}**, !dbg !5495
  store {}* null, {}** %8, align 8, !dbg !5495
  br label %bb8, !dbg !5502

bb8:                                              ; preds = %bb7, %bb6
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !5502
  %10 = load i8*, i8** %9, align 8, !dbg !5502, !align !912
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !5502
  %12 = load i64, i64* %11, align 8, !dbg !5502
  %13 = insertvalue { i8*, i64 } undef, i8* %10, 0, !dbg !5502
  %14 = insertvalue { i8*, i64 } %13, i64 %12, 1, !dbg !5502
  ret { i8*, i64 } %14, !dbg !5502

bb7:                                              ; preds = %bb4
  br label %bb8, !dbg !5502
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h804e1fa3a82938baE({ i64*, i64* }* align 8 %self, i64 %init, i8* align 1 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5503 {
start:
  %val.dbg.spill = alloca i64, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %init.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i64, i64* }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_5 = alloca i64*, align 8
  %accum = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %f = alloca i8*, align 8
  store i8* %0, i8** %f, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !5514, metadata !DIExpression()), !dbg !5528
  store i64 %init, i64* %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %init.dbg.spill, metadata !5515, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.declare(metadata i8** %f, metadata !5516, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata i64* %accum, metadata !5517, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !5521, metadata !DIExpression()), !dbg !5532
  store i8 1, i8* %_21, align 1, !dbg !5533
  store i64 %init, i64* %accum, align 8, !dbg !5533
  br label %bb1, !dbg !5534

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !5535

bb17:                                             ; preds = %cleanup
  %4 = load i8, i8* %_21, align 1, !dbg !5536, !range !298, !noundef !23
  %5 = trunc i8 %4 to i1, !dbg !5536
  br i1 %5, label %bb16, label %bb14, !dbg !5536

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %_5, align 8, !dbg !5535
  %11 = bitcast i64** %_5 to {}**, !dbg !5537
  %12 = load {}*, {}** %11, align 8, !dbg !5537
  %13 = icmp eq {}* %12, null, !dbg !5537
  %_7 = select i1 %13, i64 0, i64 1, !dbg !5537
  %14 = icmp eq i64 %_7, 1, !dbg !5537
  br i1 %14, label %bb3, label %bb10, !dbg !5537

bb3:                                              ; preds = %bb2
  %15 = bitcast i64** %_5 to { [0 x i8]*, i64 }**, !dbg !5538
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %15, align 8, !dbg !5538, !nonnull !23, !align !378, !noundef !23
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !5538
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !5519, metadata !DIExpression()), !dbg !5538
  store i8 0, i8* %_21, align 1, !dbg !5539
  %_14 = load i64, i64* %accum, align 8, !dbg !5539
  %16 = bitcast { i64, i64* }* %_13 to i64*, !dbg !5540
  store i64 %_14, i64* %16, align 8, !dbg !5540
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 1, !dbg !5540
  %18 = bitcast i64** %17 to { [0 x i8]*, i64 }**, !dbg !5540
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %18, align 8, !dbg !5540
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 0, !dbg !5540
  %20 = load i64, i64* %19, align 8, !dbg !5540
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 1, !dbg !5540
  %22 = load i64*, i64** %21, align 8, !dbg !5540, !nonnull !23, !align !378, !noundef !23
  %23 = bitcast i64* %22 to { [0 x i8]*, i64 }*, !dbg !5540
; invoke core::iter::adapters::map::map_try_fold::{{closure}}
  %24 = invoke { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hcee578b304e65e18E"(i8** align 8 %f, i64 %20, { [0 x i8]*, i64 }* align 8 %23)
          to label %bb4 unwind label %cleanup, !dbg !5540

bb10:                                             ; preds = %bb2
  br label %bb11, !dbg !5534

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1, !dbg !5541
  %_20 = load i64, i64* %accum, align 8, !dbg !5541
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::from_output
  %25 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hcb15333b73c25d66E"(i64 %_20)
          to label %bb12 unwind label %cleanup, !dbg !5541

bb12:                                             ; preds = %bb11
  store { i64, i64 } %25, { i64, i64 }* %2, align 8, !dbg !5541
  br label %bb13, !dbg !5536

bb13:                                             ; preds = %bb9, %bb12
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !5542
  %27 = load i64, i64* %26, align 8, !dbg !5542, !range !3483, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !5542
  %29 = load i64, i64* %28, align 8, !dbg !5542
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !5542
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !5542
  ret { i64, i64 } %31, !dbg !5542

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i64, i64 } %24, 0, !dbg !5540
  %_11.1 = extractvalue { i64, i64 } %24, 1, !dbg !5540
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %32 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h009968790cd0239eE"(i64 %_11.0, i64 %_11.1)
          to label %bb5 unwind label %cleanup, !dbg !5540

bb5:                                              ; preds = %bb4
  store { i64, i64 } %32, { i64, i64 }* %_10, align 8, !dbg !5540
  %33 = bitcast { i64, i64 }* %_10 to i64*, !dbg !5540
  %_16 = load i64, i64* %33, align 8, !dbg !5540, !range !3483, !noundef !23
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !5540

bb7:                                              ; preds = %bb5
  unreachable, !dbg !5540

bb6:                                              ; preds = %bb5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !5540
  %val = load i64, i64* %34, align 8, !dbg !5540
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5540
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5523, metadata !DIExpression()), !dbg !5543
  store i8 1, i8* %_21, align 1, !dbg !5544
  store i64 %val, i64* %accum, align 8, !dbg !5544
  br label %bb1, !dbg !5534

bb8:                                              ; preds = %bb5
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %35 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hd40a09fb05970a28E"()
          to label %bb9 unwind label %cleanup, !dbg !5545

bb9:                                              ; preds = %bb8
  store { i64, i64 } %35, { i64, i64 }* %2, align 8, !dbg !5545
  br label %bb13, !dbg !5536

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15, !dbg !5536

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !5536

bb15:                                             ; preds = %bb14
  %36 = bitcast { i8*, i32 }* %1 to i8**, !dbg !5546
  %37 = load i8*, i8** %36, align 8, !dbg !5546
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !5546
  %39 = load i32, i32* %38, align 8, !dbg !5546
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !5546
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !5546
  resume { i8*, i32 } %41, !dbg !5546
}

; core::iter::adapters::map::map_try_fold
; Function Attrs: nonlazybind uwtable
define internal align 1 i8* @_ZN4core4iter8adapters3map12map_try_fold17h5d9949c75bca8e00E(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %f) unnamed_addr #0 !dbg !5547 {
start:
  %g.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, align 8
  %0 = alloca i8*, align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %f.dbg.spill, metadata !5551, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.declare(metadata {}* %g.dbg.spill, metadata !5552, metadata !DIExpression()), !dbg !5557
  %1 = bitcast i8** %0 to {}*, !dbg !5558
  %2 = bitcast i8** %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**, !dbg !5558
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %2, align 8, !dbg !5558
  %3 = load i8*, i8** %0, align 8, !dbg !5559, !nonnull !23, !align !912, !noundef !23
  ret i8* %3, !dbg !5559
}

; core::iter::adapters::map::map_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hcee578b304e65e18E"(i8** align 8 %_1, i64 %acc, { [0 x i8]*, i64 }* align 8 %elt) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5560 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %acc.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca i8**, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i64*, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  %1 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !23, !align !378, !noundef !23
  %2 = bitcast i8** %1 to {}*
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !5567, metadata !DIExpression(DW_OP_deref)), !dbg !5569
  %3 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !23, !align !378, !noundef !23
  %4 = bitcast i8** %3 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !5568, metadata !DIExpression(DW_OP_deref)), !dbg !5570
  store i64 %acc, i64* %acc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %acc.dbg.spill, metadata !5565, metadata !DIExpression()), !dbg !5571
  store { [0 x i8]*, i64 }* %elt, { [0 x i8]*, i64 }** %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %elt.dbg.spill, metadata !5566, metadata !DIExpression()), !dbg !5572
  %_4 = bitcast i8** %_1 to {}*, !dbg !5573
  store i8 1, i8* %_11, align 1, !dbg !5574
  %5 = bitcast i8** %_1 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**, !dbg !5575
  %_12 = load %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %5, align 8, !dbg !5575, !nonnull !23, !align !912, !noundef !23
  %6 = bitcast i64** %_9 to { [0 x i8]*, i64 }**, !dbg !5575
  store { [0 x i8]*, i64 }* %elt, { [0 x i8]*, i64 }** %6, align 8, !dbg !5575
  %7 = load i64*, i64** %_9, align 8, !dbg !5575, !nonnull !23, !align !378, !noundef !23
  %8 = bitcast i64* %7 to { [0 x i8]*, i64 }*, !dbg !5575
; invoke alloc::str::join_generic_copy::{{closure}}::{{closure}}
  %_7 = invoke i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9da2e48680bbcafaE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_12, { [0 x i8]*, i64 }* align 8 %8)
          to label %bb1 unwind label %cleanup, !dbg !5575

bb5:                                              ; preds = %cleanup
  %9 = load i8, i8* %_11, align 1, !dbg !5576, !range !298, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !5576
  br i1 %10, label %bb4, label %bb3, !dbg !5576

cleanup:                                          ; preds = %bb1, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !5573
  %16 = bitcast { i64, i64 }* %_5 to i64*, !dbg !5573
  store i64 %acc, i64* %16, align 8, !dbg !5573
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5573
  store i64 %_7, i64* %17, align 8, !dbg !5573
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !5573
  %19 = load i64, i64* %18, align 8, !dbg !5573
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5573
  %21 = load i64, i64* %20, align 8, !dbg !5573
; invoke core::ops::function::FnMut::call_mut
  %22 = invoke { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h31eae36f81b317efE({}* align 1 %_4, i64 %19, i64 %21)
          to label %bb2 unwind label %cleanup, !dbg !5573

bb2:                                              ; preds = %bb1
  %23 = extractvalue { i64, i64 } %22, 0, !dbg !5573
  %24 = extractvalue { i64, i64 } %22, 1, !dbg !5573
  %25 = insertvalue { i64, i64 } undef, i64 %23, 0, !dbg !5577
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1, !dbg !5577
  ret { i64, i64 } %26, !dbg !5577

bb3:                                              ; preds = %bb4, %bb5
  %27 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5578
  %28 = load i8*, i8** %27, align 8, !dbg !5578
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5578
  %30 = load i32, i32* %29, align 8, !dbg !5578
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0, !dbg !5578
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1, !dbg !5578
  resume { i8*, i32 } %32, !dbg !5578

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !5576
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3e8f9981f6b2038fE"(i64* %iter.0, i64* %iter.1) unnamed_addr #0 !dbg !5579 {
start:
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]", align 1
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !5583, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f.dbg.spill, metadata !5584, metadata !DIExpression()), !dbg !5586
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5587
  store i64* %iter.0, i64** %3, align 8, !dbg !5587
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5587
  store i64* %iter.1, i64** %4, align 8, !dbg !5587
  %5 = bitcast { i64*, i64* }* %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, !dbg !5587
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5588
  %7 = load i64*, i64** %6, align 8, !dbg !5588, !nonnull !23, !noundef !23
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5588
  %9 = load i64*, i64** %8, align 8, !dbg !5588
  %10 = insertvalue { i64*, i64* } undef, i64* %7, 0, !dbg !5588
  %11 = insertvalue { i64*, i64* } %10, i64* %9, 1, !dbg !5588
  ret { i64*, i64* } %11, !dbg !5588
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hee31dbf736bcd211E"(i64* %iter.0, i64* %iter.1) unnamed_addr #0 !dbg !5589 {
start:
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]", align 1
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !5598, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %f.dbg.spill, metadata !5599, metadata !DIExpression()), !dbg !5601
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5602
  store i64* %iter.0, i64** %3, align 8, !dbg !5602
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5602
  store i64* %iter.1, i64** %4, align 8, !dbg !5602
  %5 = bitcast { i64*, i64* }* %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !5602
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5603
  %7 = load i64*, i64** %6, align 8, !dbg !5603, !nonnull !23, !noundef !23
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5603
  %9 = load i64*, i64** %8, align 8, !dbg !5603
  %10 = insertvalue { i64*, i64* } undef, i64* %7, 0, !dbg !5603
  %11 = insertvalue { i64*, i64* } %10, i64* %9, 1, !dbg !5603
  ret { i64*, i64* } %11, !dbg !5603
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout10size_align17h6c87caed0a231971E() unnamed_addr #0 !dbg !5604 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !5608
  store i64 640, i64* %1, align 8, !dbg !5608
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5608
  store i64 8, i64* %2, align 8, !dbg !5608
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5609
  %4 = load i64, i64* %3, align 8, !dbg !5609
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5609
  %6 = load i64, i64* %5, align 8, !dbg !5609
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !5609
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !5609
  ret { i64, i64 } %8, !dbg !5609
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout10size_align17hcc3107a128799684E() unnamed_addr #0 !dbg !5610 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !5611
  store i64 544, i64* %1, align 8, !dbg !5611
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5611
  store i64 8, i64* %2, align 8, !dbg !5611
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5612
  %4 = load i64, i64* %3, align 8, !dbg !5612
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5612
  %6 = load i64, i64* %5, align 8, !dbg !5612
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !5612
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !5612
  ret { i64, i64 } %8, !dbg !5612
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5ae70b08ad2208bcE(i64 %n) unnamed_addr #1 !dbg !5613 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill6 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5634, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5655, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5700, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5706, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5637, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5712, metadata !DIExpression()), !dbg !5723
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5695, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5718, metadata !DIExpression()), !dbg !5726
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE"(i64 1, i64 %n), !dbg !5699
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5699
  br label %bb1, !dbg !5699

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5710
  %_16 = load i64, i64* %3, align 8, !dbg !5710, !range !3483, !noundef !23
  switch i64 %_16, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !5710

bb8:                                              ; preds = %bb1
  unreachable, !dbg !5710

bb7:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5710
  store i64 1, i64* %4, align 8, !dbg !5710
  br label %bb10, !dbg !5710

bb9:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5710
  %v = load i64, i64* %5, align 8, !dbg !5710
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5710
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5707, metadata !DIExpression()), !dbg !5727
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5727
  store i64 %v, i64* %6, align 8, !dbg !5727
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5727
  store i64 0, i64* %7, align 8, !dbg !5727
  br label %bb10, !dbg !5710

bb10:                                             ; preds = %bb7, %bb9
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5698
  %_19 = load i64, i64* %8, align 8, !dbg !5698, !range !3483, !noundef !23
  switch i64 %_19, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !5698

bb12:                                             ; preds = %bb10
  unreachable, !dbg !5698

bb13:                                             ; preds = %bb10
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5698
  %v4 = load i64, i64* %9, align 8, !dbg !5698
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5698
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5692, metadata !DIExpression()), !dbg !5728
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5728
  store i64 %v4, i64* %10, align 8, !dbg !5728
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5728
  store i64 0, i64* %11, align 8, !dbg !5728
  br label %bb2, !dbg !5698

bb11:                                             ; preds = %bb10
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5725
  store i64 1, i64* %12, align 8, !dbg !5725
  br label %bb2, !dbg !5698

bb2:                                              ; preds = %bb13, %bb11
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5699
  %_9 = load i64, i64* %13, align 8, !dbg !5699, !range !3483, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5699

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5699

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5699
  %val = load i64, i64* %14, align 8, !dbg !5699
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5699
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5652, metadata !DIExpression()), !dbg !5729
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5729
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5635, metadata !DIExpression()), !dbg !5730
  store i64 %val, i64* %size.dbg.spill, align 8, !dbg !5731
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !5732, metadata !DIExpression()), !dbg !5738
  store i64 1, i64* %align.dbg.spill, align 8, !dbg !5740
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5737, metadata !DIExpression()), !dbg !5738
  store i64 1, i64* %align.dbg.spill6, align 8, !dbg !5738
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill6, metadata !5744, metadata !DIExpression()), !dbg !5751
  store i64 1, i64* %0, align 8, !dbg !5751
  %_27 = load i64, i64* %0, align 8, !dbg !5751, !range !5753, !noundef !23
  br label %bb15, !dbg !5751

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7d1cdc01e8805927E"(), !dbg !5726
  br label %bb14, !dbg !5726

bb14:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5726
  store i64 0, i64* %15, align 8, !dbg !5726
  br label %bb6, !dbg !5754

bb6:                                              ; preds = %bb15, %bb14
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5754
  %17 = load i64, i64* %16, align 8, !dbg !5754
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5754
  %19 = load i64, i64* %18, align 8, !dbg !5754, !range !1638, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5754
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5754
  ret { i64, i64 } %21, !dbg !5754

bb15:                                             ; preds = %bb3
  %22 = bitcast { i64, i64 }* %_13 to i64*, !dbg !5738
  store i64 %val, i64* %22, align 8, !dbg !5738
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5738
  store i64 %_27, i64* %23, align 8, !dbg !5738
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !5755
  %25 = load i64, i64* %24, align 8, !dbg !5755
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5755
  %27 = load i64, i64* %26, align 8, !dbg !5755, !range !5753, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5755
  store i64 %25, i64* %28, align 8, !dbg !5755
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5755
  store i64 %27, i64* %29, align 8, !dbg !5755
  br label %bb6, !dbg !5754
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5dd466e01263a857E(i64 %n) unnamed_addr #1 !dbg !5756 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill6 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5758, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5766, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5778, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5782, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5761, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5788, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5773, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5792, metadata !DIExpression()), !dbg !5798
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE"(i64 16, i64 %n), !dbg !5777
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5777
  br label %bb1, !dbg !5777

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5786
  %_16 = load i64, i64* %3, align 8, !dbg !5786, !range !3483, !noundef !23
  switch i64 %_16, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !5786

bb8:                                              ; preds = %bb1
  unreachable, !dbg !5786

bb7:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5786
  store i64 1, i64* %4, align 8, !dbg !5786
  br label %bb10, !dbg !5786

bb9:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5786
  %v = load i64, i64* %5, align 8, !dbg !5786
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5786
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5783, metadata !DIExpression()), !dbg !5799
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5799
  store i64 %v, i64* %6, align 8, !dbg !5799
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5799
  store i64 0, i64* %7, align 8, !dbg !5799
  br label %bb10, !dbg !5786

bb10:                                             ; preds = %bb7, %bb9
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5776
  %_19 = load i64, i64* %8, align 8, !dbg !5776, !range !3483, !noundef !23
  switch i64 %_19, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !5776

bb12:                                             ; preds = %bb10
  unreachable, !dbg !5776

bb13:                                             ; preds = %bb10
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5776
  %v4 = load i64, i64* %9, align 8, !dbg !5776
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5776
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5770, metadata !DIExpression()), !dbg !5800
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5800
  store i64 %v4, i64* %10, align 8, !dbg !5800
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5800
  store i64 0, i64* %11, align 8, !dbg !5800
  br label %bb2, !dbg !5776

bb11:                                             ; preds = %bb10
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5797
  store i64 1, i64* %12, align 8, !dbg !5797
  br label %bb2, !dbg !5776

bb2:                                              ; preds = %bb13, %bb11
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5777
  %_9 = load i64, i64* %13, align 8, !dbg !5777, !range !3483, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5777

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5777

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5777
  %val = load i64, i64* %14, align 8, !dbg !5777
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5777
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5763, metadata !DIExpression()), !dbg !5801
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5801
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5759, metadata !DIExpression()), !dbg !5802
  store i64 %val, i64* %size.dbg.spill, align 8, !dbg !5803
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !5804, metadata !DIExpression()), !dbg !5808
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !5810
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5807, metadata !DIExpression()), !dbg !5808
  store i64 8, i64* %align.dbg.spill6, align 8, !dbg !5808
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill6, metadata !5814, metadata !DIExpression()), !dbg !5818
  store i64 8, i64* %0, align 8, !dbg !5818
  %_27 = load i64, i64* %0, align 8, !dbg !5818, !range !5753, !noundef !23
  br label %bb15, !dbg !5818

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7d1cdc01e8805927E"(), !dbg !5798
  br label %bb14, !dbg !5798

bb14:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5798
  store i64 0, i64* %15, align 8, !dbg !5798
  br label %bb6, !dbg !5820

bb6:                                              ; preds = %bb15, %bb14
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5820
  %17 = load i64, i64* %16, align 8, !dbg !5820
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5820
  %19 = load i64, i64* %18, align 8, !dbg !5820, !range !1638, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5820
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5820
  ret { i64, i64 } %21, !dbg !5820

bb15:                                             ; preds = %bb3
  %22 = bitcast { i64, i64 }* %_13 to i64*, !dbg !5808
  store i64 %val, i64* %22, align 8, !dbg !5808
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5808
  store i64 %_27, i64* %23, align 8, !dbg !5808
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !5821
  %25 = load i64, i64* %24, align 8, !dbg !5821
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5821
  %27 = load i64, i64* %26, align 8, !dbg !5821, !range !5753, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5821
  store i64 %25, i64* %28, align 8, !dbg !5821
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5821
  store i64 %27, i64* %29, align 8, !dbg !5821
  br label %bb6, !dbg !5820
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17ha363f8135b733889E(i64 %n) unnamed_addr #1 !dbg !5822 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill6 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5824, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5832, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5844, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5848, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5827, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5854, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5839, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5858, metadata !DIExpression()), !dbg !5864
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE"(i64 8, i64 %n), !dbg !5843
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5843
  br label %bb1, !dbg !5843

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5852
  %_16 = load i64, i64* %3, align 8, !dbg !5852, !range !3483, !noundef !23
  switch i64 %_16, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !5852

bb8:                                              ; preds = %bb1
  unreachable, !dbg !5852

bb7:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5852
  store i64 1, i64* %4, align 8, !dbg !5852
  br label %bb10, !dbg !5852

bb9:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5852
  %v = load i64, i64* %5, align 8, !dbg !5852
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5852
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5849, metadata !DIExpression()), !dbg !5865
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5865
  store i64 %v, i64* %6, align 8, !dbg !5865
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5865
  store i64 0, i64* %7, align 8, !dbg !5865
  br label %bb10, !dbg !5852

bb10:                                             ; preds = %bb7, %bb9
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5842
  %_19 = load i64, i64* %8, align 8, !dbg !5842, !range !3483, !noundef !23
  switch i64 %_19, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !5842

bb12:                                             ; preds = %bb10
  unreachable, !dbg !5842

bb13:                                             ; preds = %bb10
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5842
  %v4 = load i64, i64* %9, align 8, !dbg !5842
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5842
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5836, metadata !DIExpression()), !dbg !5866
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5866
  store i64 %v4, i64* %10, align 8, !dbg !5866
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5866
  store i64 0, i64* %11, align 8, !dbg !5866
  br label %bb2, !dbg !5842

bb11:                                             ; preds = %bb10
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5863
  store i64 1, i64* %12, align 8, !dbg !5863
  br label %bb2, !dbg !5842

bb2:                                              ; preds = %bb13, %bb11
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5843
  %_9 = load i64, i64* %13, align 8, !dbg !5843, !range !3483, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5843

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5843

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5843
  %val = load i64, i64* %14, align 8, !dbg !5843
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5843
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5829, metadata !DIExpression()), !dbg !5867
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5867
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5825, metadata !DIExpression()), !dbg !5868
  store i64 %val, i64* %size.dbg.spill, align 8, !dbg !5869
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !5870, metadata !DIExpression()), !dbg !5874
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !5876
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5873, metadata !DIExpression()), !dbg !5874
  store i64 8, i64* %align.dbg.spill6, align 8, !dbg !5874
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill6, metadata !5880, metadata !DIExpression()), !dbg !5884
  store i64 8, i64* %0, align 8, !dbg !5884
  %_27 = load i64, i64* %0, align 8, !dbg !5884, !range !5753, !noundef !23
  br label %bb15, !dbg !5884

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7d1cdc01e8805927E"(), !dbg !5864
  br label %bb14, !dbg !5864

bb14:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5864
  store i64 0, i64* %15, align 8, !dbg !5864
  br label %bb6, !dbg !5886

bb6:                                              ; preds = %bb15, %bb14
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5886
  %17 = load i64, i64* %16, align 8, !dbg !5886
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5886
  %19 = load i64, i64* %18, align 8, !dbg !5886, !range !1638, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5886
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5886
  ret { i64, i64 } %21, !dbg !5886

bb15:                                             ; preds = %bb3
  %22 = bitcast { i64, i64 }* %_13 to i64*, !dbg !5874
  store i64 %val, i64* %22, align 8, !dbg !5874
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5874
  store i64 %_27, i64* %23, align 8, !dbg !5874
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !5887
  %25 = load i64, i64* %24, align 8, !dbg !5887
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5887
  %27 = load i64, i64* %26, align 8, !dbg !5887, !range !5753, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5887
  store i64 %25, i64* %28, align 8, !dbg !5887
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5887
  store i64 %27, i64* %29, align 8, !dbg !5887
  br label %bb6, !dbg !5886
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hb5571c4ff1ccabe7E(i64 %n) unnamed_addr #1 !dbg !5888 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill6 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5890, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5898, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5910, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5914, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5893, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5920, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5905, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5924, metadata !DIExpression()), !dbg !5930
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE"(i64 16, i64 %n), !dbg !5909
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5909
  br label %bb1, !dbg !5909

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5918
  %_16 = load i64, i64* %3, align 8, !dbg !5918, !range !3483, !noundef !23
  switch i64 %_16, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !5918

bb8:                                              ; preds = %bb1
  unreachable, !dbg !5918

bb7:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5918
  store i64 1, i64* %4, align 8, !dbg !5918
  br label %bb10, !dbg !5918

bb9:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5918
  %v = load i64, i64* %5, align 8, !dbg !5918
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5918
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5915, metadata !DIExpression()), !dbg !5931
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5931
  store i64 %v, i64* %6, align 8, !dbg !5931
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5931
  store i64 0, i64* %7, align 8, !dbg !5931
  br label %bb10, !dbg !5918

bb10:                                             ; preds = %bb7, %bb9
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5908
  %_19 = load i64, i64* %8, align 8, !dbg !5908, !range !3483, !noundef !23
  switch i64 %_19, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !5908

bb12:                                             ; preds = %bb10
  unreachable, !dbg !5908

bb13:                                             ; preds = %bb10
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5908
  %v4 = load i64, i64* %9, align 8, !dbg !5908
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5908
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5902, metadata !DIExpression()), !dbg !5932
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5932
  store i64 %v4, i64* %10, align 8, !dbg !5932
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5932
  store i64 0, i64* %11, align 8, !dbg !5932
  br label %bb2, !dbg !5908

bb11:                                             ; preds = %bb10
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5929
  store i64 1, i64* %12, align 8, !dbg !5929
  br label %bb2, !dbg !5908

bb2:                                              ; preds = %bb13, %bb11
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5909
  %_9 = load i64, i64* %13, align 8, !dbg !5909, !range !3483, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5909

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5909

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5909
  %val = load i64, i64* %14, align 8, !dbg !5909
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5909
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5895, metadata !DIExpression()), !dbg !5933
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5891, metadata !DIExpression()), !dbg !5934
  store i64 %val, i64* %size.dbg.spill, align 8, !dbg !5935
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !5936, metadata !DIExpression()), !dbg !5940
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !5942
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5939, metadata !DIExpression()), !dbg !5940
  store i64 8, i64* %align.dbg.spill6, align 8, !dbg !5940
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill6, metadata !5946, metadata !DIExpression()), !dbg !5950
  store i64 8, i64* %0, align 8, !dbg !5950
  %_27 = load i64, i64* %0, align 8, !dbg !5950, !range !5753, !noundef !23
  br label %bb15, !dbg !5950

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7d1cdc01e8805927E"(), !dbg !5930
  br label %bb14, !dbg !5930

bb14:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5930
  store i64 0, i64* %15, align 8, !dbg !5930
  br label %bb6, !dbg !5952

bb6:                                              ; preds = %bb15, %bb14
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5952
  %17 = load i64, i64* %16, align 8, !dbg !5952
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5952
  %19 = load i64, i64* %18, align 8, !dbg !5952, !range !1638, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5952
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5952
  ret { i64, i64 } %21, !dbg !5952

bb15:                                             ; preds = %bb3
  %22 = bitcast { i64, i64 }* %_13 to i64*, !dbg !5940
  store i64 %val, i64* %22, align 8, !dbg !5940
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5940
  store i64 %_27, i64* %23, align 8, !dbg !5940
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !5953
  %25 = load i64, i64* %24, align 8, !dbg !5953
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !5953
  %27 = load i64, i64* %26, align 8, !dbg !5953, !range !5753, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5953
  store i64 %25, i64* %28, align 8, !dbg !5953
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5953
  store i64 %27, i64* %29, align 8, !dbg !5953
  br label %bb6, !dbg !5952
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7f2aa81a50b85865E"(i64* align 8 %self) unnamed_addr #1 !dbg !5954 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !5962, metadata !DIExpression()), !dbg !5963
  %0 = load i64, i64* %self, align 8, !dbg !5964
  ret i64 %0, !dbg !5965
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h5f141bcbd9e85e4cE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 !dbg !5966 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %index = alloca i64, align 8
  %_12 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %needle = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5972, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %needle, metadata !5973, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5978, metadata !DIExpression()), !dbg !5986
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0, !dbg !5988
  %_4.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !5988, !nonnull !23, !align !912, !noundef !23
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1, !dbg !5988
  %_4.1 = load i64, i64* %8, align 8, !dbg !5988
  store i64 %_4.1, i64* %n.dbg.spill, align 8, !dbg !5988
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5974, metadata !DIExpression()), !dbg !5989
  %_5 = icmp uge i64 %self.1, %_4.1, !dbg !5990
  br i1 %_5, label %bb2, label %bb1, !dbg !5990

bb1:                                              ; preds = %start
  store i8 0, i8* %2, align 1, !dbg !5990
  br label %bb3, !dbg !5990

bb2:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %needle, { [0 x i8]*, i64 }** %self.dbg.spill1, align 8, !dbg !5991
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill1, metadata !5992, metadata !DIExpression()), !dbg !5997
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5987
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !5987
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5987
  store i64 %self.1, i64* %10, align 8, !dbg !5987
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5985, metadata !DIExpression()), !dbg !5986
  store i64 %_4.1, i64* %index, align 8, !dbg !5998
  %self = load i64, i64* %index, align 8, !dbg !5986
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !5986
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !5999, metadata !DIExpression()), !dbg !6006
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5986
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !5986
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5986
  store i64 %self.1, i64* %12, align 8, !dbg !5986
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !6005, metadata !DIExpression()), !dbg !6006
  %13 = bitcast { i64, i64 }* %_19 to i64*, !dbg !6006
  store i64 0, i64* %13, align 8, !dbg !6006
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 1, !dbg !6006
  store i64 %self, i64* %14, align 8, !dbg !6006
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 0, !dbg !6006
  %16 = load i64, i64* %15, align 8, !dbg !6006
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 1, !dbg !6006
  %18 = load i64, i64* %17, align 8, !dbg !6006
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %19 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h77b2b2fb35959fa1E"(i64 %16, i64 %18, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc457 to %"core::panic::location::Location"*)), !dbg !6006
  %_13.0 = extractvalue { [0 x i8]*, i64 } %19, 0, !dbg !6006
  %_13.1 = extractvalue { [0 x i8]*, i64 } %19, 1, !dbg !6006
  br label %bb4, !dbg !6006

bb4:                                              ; preds = %bb2
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0, !dbg !6008
  store [0 x i8]* %_13.0, [0 x i8]** %20, align 8, !dbg !6008
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1, !dbg !6008
  store i64 %_13.1, i64* %21, align 8, !dbg !6008
  store { [0 x i8]*, i64 }* %_12, { [0 x i8]*, i64 }** %other.dbg.spill, align 8, !dbg !6008
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !5996, metadata !DIExpression()), !dbg !5997
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0, !dbg !5997
  %_24.0 = load [0 x i8]*, [0 x i8]** %22, align 8, !dbg !5997, !nonnull !23, !align !912, !noundef !23
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1, !dbg !5997
  %_24.1 = load i64, i64* %23, align 8, !dbg !5997
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0, !dbg !5997
  %_25.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !5997, !nonnull !23, !align !912, !noundef !23
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1, !dbg !5997
  %_25.1 = load i64, i64* %25, align 8, !dbg !5997
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %_9 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe80d7d0bf324262E"([0 x i8]* align 1 %_24.0, i64 %_24.1, [0 x i8]* align 1 %_25.0, i64 %_25.1), !dbg !5997
  br label %bb5, !dbg !5997

bb5:                                              ; preds = %bb4
  %26 = zext i1 %_9 to i8, !dbg !5990
  store i8 %26, i8* %2, align 1, !dbg !5990
  br label %bb3, !dbg !5990

bb3:                                              ; preds = %bb1, %bb5
  %27 = load i8, i8* %2, align 1, !dbg !6009, !range !298, !noundef !23
  %28 = trunc i8 %27 to i1, !dbg !6009
  ret i1 %28, !dbg !6009
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid, %"core::panic::location::Location"* align 8 %1) unnamed_addr #1 !dbg !6010 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6022, metadata !DIExpression()), !dbg !6024
  store i64 %mid, i64* %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %mid.dbg.spill, metadata !6023, metadata !DIExpression()), !dbg !6025
  %_4 = icmp ule i64 %mid, %self.1, !dbg !6026
  %_3 = xor i1 %_4, true, !dbg !6027
  br i1 %_3, label %bb1, label %bb2, !dbg !6027

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h8b0f62979fd90619E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid), !dbg !6028
  br label %bb3, !dbg !6028

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [35 x i8] }>* @alloc458 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 %1) #18, !dbg !6027
  unreachable, !dbg !6027

bb3:                                              ; preds = %bb2
  ret void, !dbg !6029
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %src.0, i64 %src.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !6030 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6034, metadata !DIExpression()), !dbg !6036
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !6035, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]"* %runtime, metadata !6038, metadata !DIExpression()), !dbg !6059
  %_3 = icmp ne i64 %self.1, %src.1, !dbg !6061
  br i1 %_3, label %bb1, label %bb2, !dbg !6061

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6062
  store [0 x i8]* %src.0, [0 x i8]** %5, align 8, !dbg !6062
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6062
  store i64 %src.1, i64* %6, align 8, !dbg !6062
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !6063, metadata !DIExpression()), !dbg !6068
  %src = bitcast [0 x i8]* %src.0 to i8*, !dbg !6068, !rawptr !418
  store i8* %src, i8** %src.dbg.spill2, align 8, !dbg !6068
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill2, metadata !6047, metadata !DIExpression()), !dbg !6069
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !6070
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !6070
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !6070
  store i64 %self.1, i64* %8, align 8, !dbg !6070
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !6071, metadata !DIExpression()), !dbg !6076
  %dst = bitcast [0 x i8]* %self.0 to i8*, !dbg !6076, !rawptr !418
  store i8* %dst, i8** %dst.dbg.spill, align 8, !dbg !6076
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !6049, metadata !DIExpression()), !dbg !6069
  store i64 %self.1, i64* %count.dbg.spill, align 8, !dbg !6077
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6050, metadata !DIExpression()), !dbg !6069
  %9 = mul i64 %self.1, 1, !dbg !6069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %9, i1 false), !dbg !6069
  ret void, !dbg !6078

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h1667fc787cb626dcE"(i64 %self.1, i64 %src.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !6079
  unreachable, !dbg !6079
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h8b0f62979fd90619E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #1 !dbg !6080 {
start:
  %metadata.dbg.spill16 = alloca i64, align 8
  %data_address.dbg.spill15 = alloca {}*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %len.dbg.spill12 = alloca i64, align 8
  %data.dbg.spill11 = alloca i8*, align 8
  %len.dbg.spill10 = alloca i64, align 8
  %data.dbg.spill9 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill4 = alloca i64, align 8
  %data.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_56 = alloca { i8*, i64 }, align 8
  %_55 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_33 = alloca { i8*, i64 }, align 8
  %_32 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6084, metadata !DIExpression()), !dbg !6098
  store i64 %mid, i64* %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %mid.dbg.spill, metadata !6085, metadata !DIExpression()), !dbg !6099
  store i64 %self.1, i64* %len.dbg.spill, align 8, !dbg !6100
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6086, metadata !DIExpression()), !dbg !6101
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6102
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !6102
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6102
  store i64 %self.1, i64* %5, align 8, !dbg !6102
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !6103, metadata !DIExpression()), !dbg !6106
  %ptr = bitcast [0 x i8]* %self.0 to i8*, !dbg !6106, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !6106
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6088, metadata !DIExpression()), !dbg !6107
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !6108
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !6109, metadata !DIExpression()), !dbg !6124
  store i64 %mid, i64* %len.dbg.spill2, align 8, !dbg !6126
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !6115, metadata !DIExpression()), !dbg !6124
  store i8* %ptr, i8** %data.dbg.spill3, align 8, !dbg !6124
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill3, metadata !6127, metadata !DIExpression()), !dbg !6132
  store i64 %mid, i64* %len.dbg.spill4, align 8, !dbg !6124
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill4, metadata !6131, metadata !DIExpression()), !dbg !6132
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !6134, metadata !DIExpression()), !dbg !6138
  %data_address = bitcast i8* %ptr to {}*, !dbg !6138, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6138
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6140, metadata !DIExpression()), !dbg !6145
  store i64 %mid, i64* %metadata.dbg.spill, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !6144, metadata !DIExpression()), !dbg !6145
  %6 = bitcast { i8*, i64 }* %_33 to {}**, !dbg !6145, !rawptr !418
  store {}* %data_address, {}** %6, align 8, !dbg !6145
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_33, i32 0, i32 1, !dbg !6145
  store i64 %mid, i64* %7, align 8, !dbg !6145
  %8 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_32 to { i8*, i64 }*, !dbg !6145
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_33, i32 0, i32 0, !dbg !6145
  %10 = load i8*, i8** %9, align 8, !dbg !6145
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_33, i32 0, i32 1, !dbg !6145
  %12 = load i64, i64* %11, align 8, !dbg !6145
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0, !dbg !6145
  store i8* %10, i8** %13, align 8, !dbg !6145
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1, !dbg !6145
  store i64 %12, i64* %14, align 8, !dbg !6145
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_32 to { [0 x i8]*, i64 }*, !dbg !6145
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !6145
  %_25.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !6145, !rawptr !418
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !6145
  %_25.1 = load i64, i64* %17, align 8, !dbg !6145, !rawptr !418
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !6147
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6148, metadata !DIExpression()), !dbg !6153
  store i64 %mid, i64* %count.dbg.spill, align 8, !dbg !6154
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6152, metadata !DIExpression()), !dbg !6153
  store i8* %ptr, i8** %self.dbg.spill7, align 8, !dbg !6153
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6155, metadata !DIExpression()), !dbg !6160
  store i64 %mid, i64* %count.dbg.spill8, align 8, !dbg !6153
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6159, metadata !DIExpression()), !dbg !6160
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %mid, !dbg !6160
  store i8* %18, i8** %1, align 8, !dbg !6160
  %_40 = load i8*, i8** %1, align 8, !dbg !6160, !rawptr !418
  br label %bb1, !dbg !6160

bb1:                                              ; preds = %start
  store i8* %_40, i8** %data.dbg.spill9, align 8, !dbg !6160
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill9, metadata !6162, metadata !DIExpression()), !dbg !6170
  %len = sub i64 %self.1, %mid, !dbg !6172
  store i64 %len, i64* %len.dbg.spill10, align 8, !dbg !6172
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill10, metadata !6166, metadata !DIExpression()), !dbg !6170
  store i8* %_40, i8** %data.dbg.spill11, align 8, !dbg !6170
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill11, metadata !6173, metadata !DIExpression()), !dbg !6178
  store i64 %len, i64* %len.dbg.spill12, align 8, !dbg !6170
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill12, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i8* %_40, i8** %self.dbg.spill13, align 8, !dbg !6178
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !6180, metadata !DIExpression()), !dbg !6184
  %data_address14 = bitcast i8* %_40 to {}*, !dbg !6184, !rawptr !418
  store {}* %data_address14, {}** %data_address.dbg.spill15, align 8, !dbg !6184
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill15, metadata !6186, metadata !DIExpression()), !dbg !6191
  store i64 %len, i64* %metadata.dbg.spill16, align 8, !dbg !6178
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill16, metadata !6190, metadata !DIExpression()), !dbg !6191
  %19 = bitcast { i8*, i64 }* %_56 to {}**, !dbg !6191, !rawptr !418
  store {}* %data_address14, {}** %19, align 8, !dbg !6191
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_56, i32 0, i32 1, !dbg !6191
  store i64 %len, i64* %20, align 8, !dbg !6191
  %21 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_55 to { i8*, i64 }*, !dbg !6191
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_56, i32 0, i32 0, !dbg !6191
  %23 = load i8*, i8** %22, align 8, !dbg !6191
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_56, i32 0, i32 1, !dbg !6191
  %25 = load i64, i64* %24, align 8, !dbg !6191
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 0, !dbg !6191
  store i8* %23, i8** %26, align 8, !dbg !6191
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 1, !dbg !6191
  store i64 %25, i64* %27, align 8, !dbg !6191
  %28 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_55 to { [0 x i8]*, i64 }*, !dbg !6191
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0, !dbg !6191
  %_48.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !dbg !6191, !rawptr !418
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1, !dbg !6191
  %_48.1 = load i64, i64* %30, align 8, !dbg !6191, !rawptr !418
  %31 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*, !dbg !6193
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !6193
  store [0 x i8]* %_25.0, [0 x i8]** %32, align 8, !dbg !6193
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !6193
  store i64 %_25.1, i64* %33, align 8, !dbg !6193
  %34 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1, !dbg !6193
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0, !dbg !6193
  store [0 x i8]* %_48.0, [0 x i8]** %35, align 8, !dbg !6193
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1, !dbg !6193
  store i64 %_48.1, i64* %36, align 8, !dbg !6193
  ret void, !dbg !6194
}

; core::slice::<impl [T]>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17h5e49016f22dbe103E"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, { [0 x i8]*, i64 }* align 8 %x) unnamed_addr #1 !dbg !6195 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6199, metadata !DIExpression()), !dbg !6201
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !6200, metadata !DIExpression()), !dbg !6202
; call <T as core::slice::cmp::SliceContains>::slice_contains
  %2 = call zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h49c019e0642362a4E"({ [0 x i8]*, i64 }* align 8 %x, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1), !dbg !6203
  br label %bb1, !dbg !6203

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !6204
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe80d7d0bf324262E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !6205 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6210, metadata !DIExpression()), !dbg !6212
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !6211, metadata !DIExpression()), !dbg !6213
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %4 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hc1214e48380b33d3E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1), !dbg !6214
  br label %bb1, !dbg !6214

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !6215
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7f11c3d66892abdeE"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !6216 {
start:
  %ptr.dbg.spill11 = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i64*, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8, !rawptr !418
  %3 = alloca { i64*, i64* }, align 8
  %4 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %4, align 8
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !6220, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %end, metadata !6223, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6227, metadata !DIExpression()), !dbg !6232
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6243
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %6, align 8, !dbg !6243
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6243
  store i64 %slice.1, i64* %7, align 8, !dbg !6243
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6244, metadata !DIExpression()), !dbg !6250
  %ptr = bitcast [0 x { [0 x i8]*, i64 }]* %slice.0 to { [0 x i8]*, i64 }*, !dbg !6250, !rawptr !418
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !6250
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !6221, metadata !DIExpression()), !dbg !6251
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill1, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill1, metadata !6240, metadata !DIExpression()), !dbg !6252
  %self = bitcast { [0 x i8]*, i64 }* %ptr to i8*, !dbg !6252, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6253, metadata !DIExpression()), !dbg !6258
  %8 = bitcast {}** %2 to i64*, !dbg !6260
  store i64 0, i64* %8, align 8, !dbg !6260
  %data_address = load {}*, {}** %2, align 8, !dbg !6260, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6260
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6231, metadata !DIExpression()), !dbg !6232
  br label %bb5, !dbg !6260

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6232, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !6232
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6232
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6232
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6232
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6232
  %other = load i8*, i8** %13, align 8, !dbg !6232, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6232
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6257, metadata !DIExpression()), !dbg !6258
  %14 = icmp eq i8* %self, %other, !dbg !6258
  %15 = zext i1 %14 to i8, !dbg !6258
  store i8 %15, i8* %1, align 1, !dbg !6258
  %16 = load i8, i8* %1, align 1, !dbg !6258, !range !298, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6258
  br label %bb6, !dbg !6258

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6266
  call void @llvm.assume(i1 %_5), !dbg !6267
  br label %bb1, !dbg !6267

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6268

bb2:                                              ; preds = %bb1
  %self6 = bitcast { [0 x i8]*, i64 }* %ptr to i8*, !dbg !6269, !rawptr !418
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !6269
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6270, metadata !DIExpression()), !dbg !6275
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !6276
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6274, metadata !DIExpression()), !dbg !6275
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !6275
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !6277, metadata !DIExpression()), !dbg !6282
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !6275
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !6281, metadata !DIExpression()), !dbg !6282
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !6282
  store i8* %17, i8** %0, align 8, !dbg !6282
  %_10 = load i8*, i8** %0, align 8, !dbg !6282, !rawptr !418
  br label %bb7, !dbg !6282

bb3:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill3, align 8, !dbg !6284
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill3, metadata !6285, metadata !DIExpression()), !dbg !6292
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6291, metadata !DIExpression()), !dbg !6292
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !6292
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !6294, metadata !DIExpression()), !dbg !6301
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6292
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6300, metadata !DIExpression()), !dbg !6301
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr, i64 %slice.1, !dbg !6301
  store { [0 x i8]*, i64 }* %18, { [0 x i8]*, i64 }** %end, align 8, !dbg !6301
  br label %bb8, !dbg !6301

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6303

bb4:                                              ; preds = %bb7, %bb8
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill11, align 8, !dbg !6304
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill11, metadata !6305, metadata !DIExpression()), !dbg !6311
  %19 = bitcast i64** %_18 to { [0 x i8]*, i64 }**, !dbg !6311, !rawptr !418
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %19, align 8, !dbg !6311
  %_21 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8, !dbg !6313, !rawptr !418
  %20 = bitcast { i64*, i64* }* %3 to i64**, !dbg !6314
  %21 = load i64*, i64** %_18, align 8, !dbg !6314, !nonnull !23, !noundef !23
  store i64* %21, i64** %20, align 8, !dbg !6314
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6314
  %23 = bitcast i64** %22 to { [0 x i8]*, i64 }**, !dbg !6314, !rawptr !418
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %23, align 8, !dbg !6314
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0, !dbg !6315
  %25 = load i64*, i64** %24, align 8, !dbg !6315, !nonnull !23, !noundef !23
  %26 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6315
  %27 = load i64*, i64** %26, align 8, !dbg !6315
  %28 = insertvalue { i64*, i64* } undef, i64* %25, 0, !dbg !6315
  %29 = insertvalue { i64*, i64* } %28, i64* %27, 1, !dbg !6315
  ret { i64*, i64* } %29, !dbg !6315

bb7:                                              ; preds = %bb2
  %30 = bitcast i8* %_10 to { [0 x i8]*, i64 }*, !dbg !6269
  store { [0 x i8]*, i64 }* %30, { [0 x i8]*, i64 }** %end, align 8, !dbg !6269
  br label %bb4, !dbg !6303
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8af76636c7f25d78E"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !6316 {
start:
  %ptr.dbg.spill10 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill9 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i8*, align 8, !rawptr !418
  %end = alloca i8*, align 8, !rawptr !418
  %3 = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !6320, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.declare(metadata i8** %end, metadata !6323, metadata !DIExpression()), !dbg !6326
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6327, metadata !DIExpression()), !dbg !6332
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6341
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !6341
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6341
  store i64 %slice.1, i64* %7, align 8, !dbg !6341
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6342, metadata !DIExpression()), !dbg !6348
  %ptr = bitcast [0 x i8]* %slice.0 to i8*, !dbg !6348, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !6348
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6321, metadata !DIExpression()), !dbg !6349
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !6340
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !6338, metadata !DIExpression()), !dbg !6350
  store i8* %ptr, i8** %self.dbg.spill2, align 8, !dbg !6350
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6351, metadata !DIExpression()), !dbg !6356
  %8 = bitcast {}** %2 to i64*, !dbg !6358
  store i64 0, i64* %8, align 8, !dbg !6358
  %data_address = load {}*, {}** %2, align 8, !dbg !6358, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6358
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6331, metadata !DIExpression()), !dbg !6332
  br label %bb5, !dbg !6358

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6332, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !6332
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6332
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6332
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6332
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6332
  %other = load i8*, i8** %13, align 8, !dbg !6332, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6332
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6355, metadata !DIExpression()), !dbg !6356
  %14 = icmp eq i8* %ptr, %other, !dbg !6356
  %15 = zext i1 %14 to i8, !dbg !6356
  store i8 %15, i8* %1, align 1, !dbg !6356
  %16 = load i8, i8* %1, align 1, !dbg !6356, !range !298, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6356
  br label %bb6, !dbg !6356

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6364
  call void @llvm.assume(i1 %_5), !dbg !6365
  br label %bb1, !dbg !6365

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6366

bb2:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !6367
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6368, metadata !DIExpression()), !dbg !6373
  store i64 %slice.1, i64* %count.dbg.spill7, align 8, !dbg !6374
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !6372, metadata !DIExpression()), !dbg !6373
  store i8* %ptr, i8** %self.dbg.spill8, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !6375, metadata !DIExpression()), !dbg !6380
  store i64 %slice.1, i64* %count.dbg.spill9, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill9, metadata !6379, metadata !DIExpression()), !dbg !6380
  %17 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !6380
  store i8* %17, i8** %0, align 8, !dbg !6380
  %_10 = load i8*, i8** %0, align 8, !dbg !6380, !rawptr !418
  br label %bb7, !dbg !6380

bb3:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !6382
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !6383, metadata !DIExpression()), !dbg !6388
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6389
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6387, metadata !DIExpression()), !dbg !6388
  store i8* %ptr, i8** %self.dbg.spill4, align 8, !dbg !6388
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !6390, metadata !DIExpression()), !dbg !6395
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6388
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6394, metadata !DIExpression()), !dbg !6395
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !6395
  store i8* %18, i8** %end, align 8, !dbg !6395
  br label %bb8, !dbg !6395

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6397

bb4:                                              ; preds = %bb7, %bb8
  store i8* %ptr, i8** %ptr.dbg.spill10, align 8, !dbg !6398
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill10, metadata !6399, metadata !DIExpression()), !dbg !6403
  store i8* %ptr, i8** %_18, align 8, !dbg !6403
  %_21 = load i8*, i8** %end, align 8, !dbg !6405, !rawptr !418
  %19 = bitcast { i8*, i8* }* %3 to i8**, !dbg !6406
  %20 = load i8*, i8** %_18, align 8, !dbg !6406, !nonnull !23, !noundef !23
  store i8* %20, i8** %19, align 8, !dbg !6406
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !6406, !rawptr !418
  store i8* %_21, i8** %21, align 8, !dbg !6406
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !6407
  %23 = load i8*, i8** %22, align 8, !dbg !6407, !nonnull !23, !noundef !23
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !6407
  %25 = load i8*, i8** %24, align 8, !dbg !6407
  %26 = insertvalue { i8*, i8* } undef, i8* %23, 0, !dbg !6407
  %27 = insertvalue { i8*, i8* } %26, i8* %25, 1, !dbg !6407
  ret { i8*, i8* } %27, !dbg !6407

bb7:                                              ; preds = %bb2
  store i8* %_10, i8** %end, align 8, !dbg !6367
  br label %bb4, !dbg !6397
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hfd5547a024cb01cfE"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !6408 {
start:
  %ptr.dbg.spill11 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %ptr.dbg.spill = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i64*, align 8
  %end = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8, !rawptr !418
  %3 = alloca { i64*, i64* }, align 8
  %4 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %slice.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %4, align 8
  %5 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %slice.dbg.spill, metadata !6436, metadata !DIExpression()), !dbg !6441
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, metadata !6439, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6443, metadata !DIExpression()), !dbg !6448
  %6 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6459
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %slice.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %6, align 8, !dbg !6459
  %7 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6459
  store i64 %slice.1, i64* %7, align 8, !dbg !6459
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, metadata !6460, metadata !DIExpression()), !dbg !6466
  %ptr = bitcast [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %slice.0 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !6466, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, align 8, !dbg !6466
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, metadata !6437, metadata !DIExpression()), !dbg !6467
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill1, align 8, !dbg !6458
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill1, metadata !6456, metadata !DIExpression()), !dbg !6468
  %self = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr to i8*, !dbg !6468, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !6468
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6469, metadata !DIExpression()), !dbg !6474
  %8 = bitcast {}** %2 to i64*, !dbg !6476
  store i64 0, i64* %8, align 8, !dbg !6476
  %data_address = load {}*, {}** %2, align 8, !dbg !6476, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6476
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6447, metadata !DIExpression()), !dbg !6448
  br label %bb5, !dbg !6476

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6448, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !6448
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6448
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6448
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6448
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6448
  %other = load i8*, i8** %13, align 8, !dbg !6448, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6448
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6473, metadata !DIExpression()), !dbg !6474
  %14 = icmp eq i8* %self, %other, !dbg !6474
  %15 = zext i1 %14 to i8, !dbg !6474
  store i8 %15, i8* %1, align 1, !dbg !6474
  %16 = load i8, i8* %1, align 1, !dbg !6474, !range !298, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6474
  br label %bb6, !dbg !6474

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6482
  call void @llvm.assume(i1 %_5), !dbg !6483
  br label %bb1, !dbg !6483

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6484

bb2:                                              ; preds = %bb1
  %self6 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr to i8*, !dbg !6485, !rawptr !418
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !6485
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6486, metadata !DIExpression()), !dbg !6491
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !6492
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6490, metadata !DIExpression()), !dbg !6491
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !6491
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !6493, metadata !DIExpression()), !dbg !6498
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !6491
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !6497, metadata !DIExpression()), !dbg !6498
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !6498
  store i8* %17, i8** %0, align 8, !dbg !6498
  %_10 = load i8*, i8** %0, align 8, !dbg !6498, !rawptr !418
  br label %bb7, !dbg !6498

bb3:                                              ; preds = %bb1
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill3, align 8, !dbg !6500
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill3, metadata !6501, metadata !DIExpression()), !dbg !6508
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6509
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6507, metadata !DIExpression()), !dbg !6508
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, align 8, !dbg !6508
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, metadata !6510, metadata !DIExpression()), !dbg !6517
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6508
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6516, metadata !DIExpression()), !dbg !6517
  %18 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, i64 %slice.1, !dbg !6517
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %18, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, align 8, !dbg !6517
  br label %bb8, !dbg !6517

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6519

bb4:                                              ; preds = %bb7, %bb8
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill11, align 8, !dbg !6520
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill11, metadata !6521, metadata !DIExpression()), !dbg !6528
  %19 = bitcast i64** %_18 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !6528, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %19, align 8, !dbg !6528
  %_21 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, align 8, !dbg !6530, !rawptr !418
  %20 = bitcast { i64*, i64* }* %3 to i64**, !dbg !6531
  %21 = load i64*, i64** %_18, align 8, !dbg !6531, !nonnull !23, !noundef !23
  store i64* %21, i64** %20, align 8, !dbg !6531
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6531
  %23 = bitcast i64** %22 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !6531, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_21, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %23, align 8, !dbg !6531
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0, !dbg !6532
  %25 = load i64*, i64** %24, align 8, !dbg !6532, !nonnull !23, !noundef !23
  %26 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6532
  %27 = load i64*, i64** %26, align 8, !dbg !6532
  %28 = insertvalue { i64*, i64* } undef, i64* %25, 0, !dbg !6532
  %29 = insertvalue { i64*, i64* } %28, i64* %27, 1, !dbg !6532
  ret { i64*, i64* } %29, !dbg !6532

bb7:                                              ; preds = %bb2
  %30 = bitcast i8* %_10 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !6485
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %30, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, align 8, !dbg !6485
  br label %bb4, !dbg !6519
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hb36d6d82e07b5afcE"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !6533 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill15 = alloca i8*, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill12 = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_42 = alloca { i8*, i64 }, align 8
  %_41 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %len = alloca i64, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !6537, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6539, metadata !DIExpression()), !dbg !6547
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill1, align 8, !dbg !6562
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill1, metadata !6551, metadata !DIExpression()), !dbg !6563
  %5 = bitcast { i8*, i8* }* %self to i8**, !dbg !6563
  %self2 = load i8*, i8** %5, align 8, !dbg !6563, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !6563
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !6564, metadata !DIExpression()), !dbg !6568
  store i8* %self2, i8** %data.dbg.spill, align 8, !dbg !6563
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !6543, metadata !DIExpression()), !dbg !6547
  %6 = bitcast { i8*, i8* }* %self to i8**, !dbg !6563
  %start4 = load i8*, i8** %6, align 8, !dbg !6563, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start4, i8** %start.dbg.spill, align 8, !dbg !6563
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !6553, metadata !DIExpression()), !dbg !6570
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !6571
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6556, metadata !DIExpression()), !dbg !6577
  br i1 false, label %bb1, label %bb2, !dbg !6577

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !6577
  %self9 = load i8*, i8** %7, align 8, !dbg !6577, !rawptr !418
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !6577
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !6578, metadata !DIExpression()), !dbg !6582
  %8 = bitcast i64* %1 to i8**, !dbg !6582
  store i8* %self9, i8** %8, align 8, !dbg !6582
  %self11 = load i64, i64* %1, align 8, !dbg !6582
  store i64 %self11, i64* %self.dbg.spill12, align 8, !dbg !6582
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill12, metadata !6584, metadata !DIExpression()), !dbg !6589
  br label %bb6, !dbg !6582

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !6577
  %self5 = load i8*, i8** %9, align 8, !dbg !6577, !rawptr !418
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !6577
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6590, metadata !DIExpression()), !dbg !6594
  %10 = bitcast i64* %4 to i8**, !dbg !6594
  store i8* %self5, i8** %10, align 8, !dbg !6594
  %_17 = load i64, i64* %4, align 8, !dbg !6594
  br label %bb8, !dbg !6594

bb8:                                              ; preds = %bb2
  store i8* %start4, i8** %self.dbg.spill7, align 8, !dbg !6577
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6596, metadata !DIExpression()), !dbg !6600
  store i8* %start4, i8** %self.dbg.spill8, align 8, !dbg !6600
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !6602, metadata !DIExpression()), !dbg !6606
  %11 = bitcast i64* %3 to i8**, !dbg !6606
  store i8* %start4, i8** %11, align 8, !dbg !6606
  %_19 = load i64, i64* %3, align 8, !dbg !6606
  br label %bb9, !dbg !6606

bb9:                                              ; preds = %bb8
  %12 = sub nuw i64 %_17, %_19, !dbg !6577
  store i64 %12, i64* %2, align 8, !dbg !6577
  %diff = load i64, i64* %2, align 8, !dbg !6577
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !6577
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !6559, metadata !DIExpression()), !dbg !6607
  br label %bb3, !dbg !6577

bb3:                                              ; preds = %bb9
  %13 = udiv exact i64 %diff, 1, !dbg !6607
  store i64 %13, i64* %len, align 8, !dbg !6607
  br label %bb4, !dbg !6607

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !6577

bb5:                                              ; preds = %bb7, %bb4
  store i8* %self2, i8** %data.dbg.spill15, align 8, !dbg !6547
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill15, metadata !6608, metadata !DIExpression()), !dbg !6613
  %len16 = load i64, i64* %len, align 8, !dbg !6547
  store i64 %len16, i64* %len.dbg.spill, align 8, !dbg !6547
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6612, metadata !DIExpression()), !dbg !6613
  store i8* %self2, i8** %self.dbg.spill17, align 8, !dbg !6613
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !6615, metadata !DIExpression()), !dbg !6619
  %data_address = bitcast i8* %self2 to {}*, !dbg !6619, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6619
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6621, metadata !DIExpression()), !dbg !6626
  store i64 %len16, i64* %metadata.dbg.spill, align 8, !dbg !6613
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !6625, metadata !DIExpression()), !dbg !6626
  %14 = bitcast { i8*, i64 }* %_42 to {}**, !dbg !6626, !rawptr !418
  store {}* %data_address, {}** %14, align 8, !dbg !6626
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !6626
  store i64 %len16, i64* %15, align 8, !dbg !6626
  %16 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { i8*, i64 }*, !dbg !6626
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 0, !dbg !6626
  %18 = load i8*, i8** %17, align 8, !dbg !6626
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !6626
  %20 = load i64, i64* %19, align 8, !dbg !6626
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 0, !dbg !6626
  store i8* %18, i8** %21, align 8, !dbg !6626
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 1, !dbg !6626
  store i64 %20, i64* %22, align 8, !dbg !6626
  %23 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { [0 x i8]*, i64 }*, !dbg !6626
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !6626
  %_34.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !6626, !rawptr !418
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !6626
  %_34.1 = load i64, i64* %25, align 8, !dbg !6626, !rawptr !418
  %26 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_34.0, 0, !dbg !6628
  %27 = insertvalue { [0 x i8]*, i64 } %26, i64 %_34.1, 1, !dbg !6628
  ret { [0 x i8]*, i64 } %27, !dbg !6628

bb6:                                              ; preds = %bb1
  store i8* %start4, i8** %self.dbg.spill13, align 8, !dbg !6577
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !6629, metadata !DIExpression()), !dbg !6633
  store i8* %start4, i8** %self.dbg.spill14, align 8, !dbg !6633
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !6635, metadata !DIExpression()), !dbg !6639
  %28 = bitcast i64* %0 to i8**, !dbg !6639
  store i8* %start4, i8** %28, align 8, !dbg !6639
  %rhs = load i64, i64* %0, align 8, !dbg !6639
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !6639
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !6588, metadata !DIExpression()), !dbg !6589
  br label %bb7, !dbg !6639

bb7:                                              ; preds = %bb6
  %29 = sub i64 %self11, %rhs, !dbg !6589
  store i64 %29, i64* %len, align 8, !dbg !6589
  br label %bb5, !dbg !6577
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h995688bfa5e3dbb3E"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !6640 {
start:
  %self.dbg.spill1 = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %self.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, metadata !6643, metadata !DIExpression()), !dbg !6644
  %2 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6645
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %self.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %2, align 8, !dbg !6645
  %3 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6645
  store i64 %self.1, i64* %3, align 8, !dbg !6645
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill1, metadata !6646, metadata !DIExpression()), !dbg !6650
; call core::slice::iter::Iter<T>::new
  %4 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hfd5547a024cb01cfE"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %self.0, i64 %self.1), !dbg !6650
  %5 = extractvalue { i64*, i64* } %4, 0, !dbg !6650
  %6 = extractvalue { i64*, i64* } %4, 1, !dbg !6650
  br label %bb1, !dbg !6650

bb1:                                              ; preds = %start
  %7 = insertvalue { i64*, i64* } undef, i64* %5, 0, !dbg !6651
  %8 = insertvalue { i64*, i64* } %7, i64* %6, 1, !dbg !6651
  ret { i64*, i64* } %8, !dbg !6651
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hae11c91d5ec3ff5bE"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !6652 {
start:
  %self.dbg.spill1 = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6654, metadata !DIExpression()), !dbg !6655
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6656
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %2, align 8, !dbg !6656
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6656
  store i64 %self.1, i64* %3, align 8, !dbg !6656
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, metadata !6657, metadata !DIExpression()), !dbg !6661
; call core::slice::iter::Iter<T>::new
  %4 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7f11c3d66892abdeE"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1), !dbg !6661
  %5 = extractvalue { i64*, i64* } %4, 0, !dbg !6661
  %6 = extractvalue { i64*, i64* } %4, 1, !dbg !6661
  br label %bb1, !dbg !6661

bb1:                                              ; preds = %start
  %7 = insertvalue { i64*, i64* } undef, i64* %5, 0, !dbg !6662
  %8 = insertvalue { i64*, i64* } %7, i64* %6, 1, !dbg !6662
  ret { i64*, i64* } %8, !dbg !6662
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17h4e438ee7cd669ff4E(i8 %0, [0 x i8]* align 1 %text.0, i64 %text.1) unnamed_addr #1 !dbg !6663 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %text.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
  call void @llvm.dbg.declare(metadata i8* %x, metadata !6669, metadata !DIExpression()), !dbg !6671
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 0
  store [0 x i8]* %text.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 1
  store i64 %text.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %text.dbg.spill, metadata !6670, metadata !DIExpression()), !dbg !6672
  %_3 = icmp ult i64 %text.1, 16, !dbg !6673
  br i1 %_3, label %bb1, label %bb3, !dbg !6673

bb3:                                              ; preds = %start
  %_12 = load i8, i8* %x, align 1, !dbg !6674
; call core::slice::memchr::memchr_general_case
  %4 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h12d6c474fdfa8481E(i8 %_12, [0 x i8]* align 1 %text.0, i64 %text.1), !dbg !6675
  store { i64, i64 } %4, { i64, i64 }* %1, align 8, !dbg !6675
  br label %bb4, !dbg !6675

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6676
  store [0 x i8]* %text.0, [0 x i8]** %5, align 8, !dbg !6676
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6676
  store i64 %text.1, i64* %6, align 8, !dbg !6676
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6677, metadata !DIExpression()), !dbg !6681
; call core::slice::iter::Iter<T>::new
  %7 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8af76636c7f25d78E"([0 x i8]* align 1 %text.0, i64 %text.1), !dbg !6681
  store { i8*, i8* } %7, { i8*, i8* }* %_8, align 8, !dbg !6681
  br label %bb6, !dbg !6681

bb6:                                              ; preds = %bb1
  store i8* %x, i8** %_10, align 8, !dbg !6682
  %8 = load i8*, i8** %_10, align 8, !dbg !6676, !nonnull !23, !align !912, !noundef !23
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %9 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hef704d7154331340E"({ i8*, i8* }* align 8 %_8, i8* align 1 %8), !dbg !6676
  store { i64, i64 } %9, { i64, i64 }* %1, align 8, !dbg !6676
  br label %bb2, !dbg !6676

bb2:                                              ; preds = %bb6
  br label %bb5, !dbg !6683

bb5:                                              ; preds = %bb4, %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !6683
  %11 = load i64, i64* %10, align 8, !dbg !6683, !range !3483, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6683
  %13 = load i64, i64* %12, align 8, !dbg !6683
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6683
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6683
  ret { i64, i64 } %15, !dbg !6683

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !6683
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hf5fd9a82cd2844d8E"(i8** align 8 %_1, i8* align 1 %elt) unnamed_addr #1 !dbg !6684 {
start:
  %elt.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  %0 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !23, !align !378, !noundef !23
  %1 = load i8*, i8** %0, align 8, !nonnull !23, !align !912, !noundef !23
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !6694, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !6695
  store i8* %elt, i8** %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %elt.dbg.spill, metadata !6693, metadata !DIExpression()), !dbg !6696
  %_3 = load i8, i8* %elt, align 1, !dbg !6697
  %_5 = load i8*, i8** %_1, align 8, !dbg !6698, !nonnull !23, !align !912, !noundef !23
  %_4 = load i8, i8* %_5, align 1, !dbg !6698
  %2 = icmp eq i8 %_3, %_4, !dbg !6697
  ret i1 %2, !dbg !6699
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core6option15Option$LT$T$GT$3map17h3544d673cafebf97E"(i8* align 1 %0, i64 %1) unnamed_addr #1 !dbg !6700 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:228:14: 228:72]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %2 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !6719, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:228:14: 228:72]"* %f.dbg.spill, metadata !6720, metadata !DIExpression()), !dbg !6727
  store i8 1, i8* %_9, align 1, !dbg !6728
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !6728
  %6 = load {}*, {}** %5, align 8, !dbg !6728
  %7 = icmp eq {}* %6, null, !dbg !6728
  %_3 = select i1 %7, i64 0, i64 1, !dbg !6728
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6729

bb2:                                              ; preds = %start
  unreachable, !dbg !6728

bb1:                                              ; preds = %start
  store i8 2, i8* %2, align 1, !dbg !6730
  br label %bb7, !dbg !6730

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !6731
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0, !dbg !6731
  %x.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !dbg !6731, !nonnull !23, !align !912, !noundef !23
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1, !dbg !6731
  %x.1 = load i64, i64* %10, align 8, !dbg !6731
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !6731
  store [0 x i8]* %x.0, [0 x i8]** %11, align 8, !dbg !6731
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !6731
  store i64 %x.1, i64* %12, align 8, !dbg !6731
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !6721, metadata !DIExpression()), !dbg !6732
  store i8 0, i8* %_9, align 1, !dbg !6733
  %13 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*, !dbg !6733
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0, !dbg !6733
  store [0 x i8]* %x.0, [0 x i8]** %14, align 8, !dbg !6733
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1, !dbg !6733
  store i64 %x.1, i64* %15, align 8, !dbg !6733
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0, !dbg !6733
  %17 = load i8*, i8** %16, align 8, !dbg !6733, !nonnull !23, !align !912, !noundef !23
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1, !dbg !6733
  %19 = load i64, i64* %18, align 8, !dbg !6733
  %20 = bitcast i8* %17 to [0 x i8]*, !dbg !6733
; call build_script_build::rustc_minor_nightly::{{closure}}
  %_5 = call zeroext i1 @"_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17h4e87a3ecba6a48f2E"([0 x i8]* align 1 %20, i64 %19), !dbg !6733
  br label %bb4, !dbg !6733

bb4:                                              ; preds = %bb3
  %21 = zext i1 %_5 to i8, !dbg !6734
  store i8 %21, i8* %2, align 1, !dbg !6734
  br label %bb7, !dbg !6735

bb7:                                              ; preds = %bb1, %bb4
  %22 = load i8, i8* %_9, align 1, !dbg !6736, !range !298, !noundef !23
  %23 = trunc i8 %22 to i1, !dbg !6736
  br i1 %23, label %bb6, label %bb5, !dbg !6736

bb5:                                              ; preds = %bb6, %bb7
  %24 = load i8, i8* %2, align 1, !dbg !6737, !range !6738, !noundef !23
  ret i8 %24, !dbg !6737

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6736
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h3984b168e8c3f767E"(i32 %0, i64* align 8 %f.0, i64* align 8 %f.1) unnamed_addr #1 !dbg !6739 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca { i64*, i64* }, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %1 = alloca { i64, i32 }, align 8
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  call void @llvm.dbg.declare(metadata i32* %self, metadata !6743, metadata !DIExpression()), !dbg !6750
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 0
  store i64* %f.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 1
  store i64* %f.1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %f.dbg.spill, metadata !6744, metadata !DIExpression()), !dbg !6751
  store i8 1, i8* %_9, align 1, !dbg !6752
  %4 = load i32, i32* %self, align 4, !dbg !6752, !range !376, !noundef !23
  %5 = sub i32 %4, 1114112, !dbg !6752
  %6 = icmp eq i32 %5, 0, !dbg !6752
  %_3 = select i1 %6, i64 0, i64 1, !dbg !6752
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6753

bb2:                                              ; preds = %start
  unreachable, !dbg !6752

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !6754
  store i32 1114112, i32* %7, align 8, !dbg !6754
  br label %bb7, !dbg !6754

bb3:                                              ; preds = %start
  %x = load i32, i32* %self, align 4, !dbg !6755, !range !466, !noundef !23
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !6755
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6745, metadata !DIExpression()), !dbg !6756
  store i8 0, i8* %_9, align 1, !dbg !6757
  store i32 %x, i32* %_7, align 4, !dbg !6757
  %8 = load i32, i32* %_7, align 4, !dbg !6757, !range !466, !noundef !23
; call <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %9 = call { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h6c6e3c36a8b19a83E"(i64* align 8 %f.0, i64* align 8 %f.1, i32 %8), !dbg !6757
  %_5.0 = extractvalue { i64, i32 } %9, 0, !dbg !6757
  %_5.1 = extractvalue { i64, i32 } %9, 1, !dbg !6757
  br label %bb4, !dbg !6757

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0, !dbg !6758
  store i64 %_5.0, i64* %10, align 8, !dbg !6758
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !6758
  store i32 %_5.1, i32* %11, align 8, !dbg !6758
  br label %bb7, !dbg !6759

bb7:                                              ; preds = %bb1, %bb4
  %12 = load i8, i8* %_9, align 1, !dbg !6760, !range !298, !noundef !23
  %13 = trunc i8 %12 to i1, !dbg !6760
  br i1 %13, label %bb6, label %bb5, !dbg !6760

bb5:                                              ; preds = %bb6, %bb7
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0, !dbg !6761
  %15 = load i64, i64* %14, align 8, !dbg !6761
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !6761
  %17 = load i32, i32* %16, align 8, !dbg !6761, !range !376, !noundef !23
  %18 = insertvalue { i64, i32 } undef, i64 %15, 0, !dbg !6761
  %19 = insertvalue { i64, i32 } %18, i32 %17, 1, !dbg !6761
  ret { i64, i32 } %19, !dbg !6761

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6760
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$3map17h3f436848a7f497cbE"(i32 %0, i32 %1) unnamed_addr #1 !dbg !6762 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !6768, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]"* %f.dbg.spill, metadata !6769, metadata !DIExpression()), !dbg !6776
  store i8 1, i8* %_9, align 1, !dbg !6777
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !6777
  %6 = load i32, i32* %5, align 4, !dbg !6777, !range !4318, !noundef !23
  %_3 = zext i32 %6 to i64, !dbg !6777
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6778

bb2:                                              ; preds = %start
  unreachable, !dbg !6777

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !6779
  br label %bb7, !dbg !6779

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !6780
  %x = load i32, i32* %7, align 4, !dbg !6780
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !6780
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6770, metadata !DIExpression()), !dbg !6781
  store i8 0, i8* %_9, align 1, !dbg !6782
  store i32 %x, i32* %_7, align 4, !dbg !6782
  %8 = load i32, i32* %_7, align 4, !dbg !6782
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %_5 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17he9c4aa4cf6517257E"(i32 %8), !dbg !6782, !range !466
  br label %bb4, !dbg !6782

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !6783
  br label %bb7, !dbg !6784

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !6785, !range !298, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !6785
  br i1 %10, label %bb6, label %bb5, !dbg !6785

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !6786, !range !376, !noundef !23
  ret i32 %11, !dbg !6786

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6785
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$3map17hc8a456bd96a89377E"(i32 %0, i32 %1) unnamed_addr #1 !dbg !6787 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !6794, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %f.dbg.spill, metadata !6795, metadata !DIExpression()), !dbg !6801
  store i8 1, i8* %_9, align 1, !dbg !6802
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !6802
  %6 = load i32, i32* %5, align 4, !dbg !6802, !range !4318, !noundef !23
  %_3 = zext i32 %6 to i64, !dbg !6802
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6803

bb2:                                              ; preds = %start
  unreachable, !dbg !6802

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !6804
  br label %bb7, !dbg !6804

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !6805
  %x = load i32, i32* %7, align 4, !dbg !6805
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !6805
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6796, metadata !DIExpression()), !dbg !6806
  store i8 0, i8* %_9, align 1, !dbg !6807
  store i32 %x, i32* %_7, align 4, !dbg !6807
  %8 = load i32, i32* %_7, align 4, !dbg !6807
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h73dbbdeebee6071cE"(i32 %8), !dbg !6807, !range !466
  br label %bb4, !dbg !6807

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !6808
  br label %bb7, !dbg !6809

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !6810, !range !298, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !6810
  br i1 %10, label %bb6, label %bb5, !dbg !6810

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !6811, !range !376, !noundef !23
  ret i32 %11, !dbg !6811

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6810
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %0, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %f) unnamed_addr #1 !dbg !6812 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %1 = alloca { i8*, i64 }, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  call void @llvm.dbg.declare(metadata i64** %self, metadata !6840, metadata !DIExpression()), !dbg !6847
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %f.dbg.spill, metadata !6841, metadata !DIExpression()), !dbg !6848
  store i8 1, i8* %_9, align 1, !dbg !6849
  %2 = bitcast i64** %self to {}**, !dbg !6849
  %3 = load {}*, {}** %2, align 8, !dbg !6849
  %4 = icmp eq {}* %3, null, !dbg !6849
  %_3 = select i1 %4, i64 0, i64 1, !dbg !6849
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6850

bb2:                                              ; preds = %start
  unreachable, !dbg !6849

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i64 }* %1 to {}**, !dbg !6851
  store {}* null, {}** %5, align 8, !dbg !6851
  br label %bb7, !dbg !6851

bb3:                                              ; preds = %start
  %6 = bitcast i64** %self to { [0 x i8]*, i64 }**, !dbg !6852
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8, !dbg !6852, !nonnull !23, !align !378, !noundef !23
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !6852
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !6842, metadata !DIExpression()), !dbg !6853
  store i8 0, i8* %_9, align 1, !dbg !6854
  %7 = bitcast i64** %_7 to { [0 x i8]*, i64 }**, !dbg !6854
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %7, align 8, !dbg !6854
  %8 = load i64*, i64** %_7, align 8, !dbg !6854, !nonnull !23, !align !378, !noundef !23
  %9 = bitcast i64* %8 to { [0 x i8]*, i64 }*, !dbg !6854
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %10 = call { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h01d5bc50ff17e0c8E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %f, { [0 x i8]*, i64 }* align 8 %9), !dbg !6854
  %_5.0 = extractvalue { [0 x i8]*, i64 } %10, 0, !dbg !6854
  %_5.1 = extractvalue { [0 x i8]*, i64 } %10, 1, !dbg !6854
  br label %bb4, !dbg !6854

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i64 }* %1 to { [0 x i8]*, i64 }*, !dbg !6855
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !6855
  store [0 x i8]* %_5.0, [0 x i8]** %12, align 8, !dbg !6855
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !6855
  store i64 %_5.1, i64* %13, align 8, !dbg !6855
  br label %bb7, !dbg !6856

bb7:                                              ; preds = %bb1, %bb4
  %14 = load i8, i8* %_9, align 1, !dbg !6857, !range !298, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !6857
  br i1 %15, label %bb6, label %bb5, !dbg !6857

bb5:                                              ; preds = %bb6, %bb7
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !6858
  %17 = load i8*, i8** %16, align 8, !dbg !6858, !align !912
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !6858
  %19 = load i64, i64* %18, align 8, !dbg !6858
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !6858
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !6858
  ret { i8*, i64 } %21, !dbg !6858

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6857
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$3map17he55e82bfcd2f51a5E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %0, i64* align 8 %1, i64* align 8 %f.0, i64* align 8 %f.1) unnamed_addr #1 !dbg !6859 {
start:
  %x.dbg.spill = alloca i64**, align 8
  %f.dbg.spill = alloca { i64*, i64* }, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca i64*, align 8
  store i64* %1, i64** %self, align 8
  call void @llvm.dbg.declare(metadata i64** %self, metadata !6921, metadata !DIExpression()), !dbg !6928
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 0
  store i64* %f.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 1
  store i64* %f.1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %f.dbg.spill, metadata !6922, metadata !DIExpression()), !dbg !6929
  store i8 1, i8* %_9, align 1, !dbg !6930
  %4 = bitcast i64** %self to {}**, !dbg !6930
  %5 = load {}*, {}** %4, align 8, !dbg !6930
  %6 = icmp eq {}* %5, null, !dbg !6930
  %_3 = select i1 %6, i64 0, i64 1, !dbg !6930
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6931

bb2:                                              ; preds = %start
  unreachable, !dbg !6930

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1, !dbg !6932
  store {}* null, {}** %7, align 8, !dbg !6932
  br label %bb7, !dbg !6932

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to i64***, !dbg !6933
  %x = load i64**, i64*** %8, align 8, !dbg !6933, !nonnull !23, !align !378, !noundef !23
  store i64** %x, i64*** %x.dbg.spill, align 8, !dbg !6933
  call void @llvm.dbg.declare(metadata i64*** %x.dbg.spill, metadata !6923, metadata !DIExpression()), !dbg !6934
  store i8 0, i8* %_9, align 1, !dbg !6935
  %9 = bitcast i64** %_7 to i64***, !dbg !6935
  store i64** %x, i64*** %9, align 8, !dbg !6935
  %10 = load i64*, i64** %_7, align 8, !dbg !6935, !nonnull !23, !align !378, !noundef !23
  %11 = bitcast i64* %10 to i64**, !dbg !6935
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend::{{closure}}
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hd294fbed258e1537E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %_5, i64* align 8 %f.0, i64* align 8 %f.1, i64** align 8 %11), !dbg !6935
  br label %bb4, !dbg !6935

bb4:                                              ; preds = %bb3
  %12 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !6936
  %13 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %12 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !6936
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %13 to i8*, !dbg !6936
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*, !dbg !6936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !6936
  br label %bb7, !dbg !6937

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !dbg !6938, !range !298, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !6938
  br i1 %17, label %bb6, label %bb5, !dbg !6938

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !6939

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6938
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hef3e01df1eef8a18E"(%"core::result::Result<&str, usize>"* sret(%"core::result::Result<&str, usize>") %0, i8* align 1 %1, i64 %2, i64 %err) unnamed_addr #1 !dbg !6940 {
start:
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %err.dbg.spill = alloca i64, align 8
  %_7 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !6958, metadata !DIExpression()), !dbg !6962
  store i64 %err, i64* %err.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %err.dbg.spill, metadata !6959, metadata !DIExpression()), !dbg !6963
  store i8 1, i8* %_7, align 1, !dbg !6964
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !6964
  %6 = load {}*, {}** %5, align 8, !dbg !6964
  %7 = icmp eq {}* %6, null, !dbg !6964
  %_3 = select i1 %7, i64 0, i64 1, !dbg !6964
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6965

bb2:                                              ; preds = %start
  unreachable, !dbg !6964

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !6966
  %8 = bitcast %"core::result::Result<&str, usize>"* %0 to %"core::result::Result<&str, usize>::Err"*, !dbg !6967
  %9 = getelementptr inbounds %"core::result::Result<&str, usize>::Err", %"core::result::Result<&str, usize>::Err"* %8, i32 0, i32 1, !dbg !6967
  store i64 %err, i64* %9, align 8, !dbg !6967
  %10 = bitcast %"core::result::Result<&str, usize>"* %0 to i64*, !dbg !6967
  store i64 1, i64* %10, align 8, !dbg !6967
  br label %bb6, !dbg !6968

bb3:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !6969
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !6969
  %v.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !6969, !nonnull !23, !align !912, !noundef !23
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !6969
  %v.1 = load i64, i64* %13, align 8, !dbg !6969
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !6969
  store [0 x i8]* %v.0, [0 x i8]** %14, align 8, !dbg !6969
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !6969
  store i64 %v.1, i64* %15, align 8, !dbg !6969
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !6960, metadata !DIExpression()), !dbg !6970
  %16 = bitcast %"core::result::Result<&str, usize>"* %0 to %"core::result::Result<&str, usize>::Ok"*, !dbg !6971
  %17 = getelementptr inbounds %"core::result::Result<&str, usize>::Ok", %"core::result::Result<&str, usize>::Ok"* %16, i32 0, i32 1, !dbg !6971
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !6971
  store [0 x i8]* %v.0, [0 x i8]** %18, align 8, !dbg !6971
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !6971
  store i64 %v.1, i64* %19, align 8, !dbg !6971
  %20 = bitcast %"core::result::Result<&str, usize>"* %0 to i64*, !dbg !6971
  store i64 0, i64* %20, align 8, !dbg !6971
  br label %bb6, !dbg !6972

bb6:                                              ; preds = %bb1, %bb3
  %21 = load i8, i8* %_7, align 1, !dbg !6973, !range !298, !noundef !23
  %22 = trunc i8 %21 to i1, !dbg !6973
  br i1 %22, label %bb5, label %bb4, !dbg !6973

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !6974

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6973
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6expect17hff1c4514e1d2e0daE"(%"std::process::Output"* sret(%"std::process::Output") %val, %"core::option::Option<std::process::Output>"* %self, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !6975 {
start:
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8, !dbg !6983
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %val, metadata !6981, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"* %self, metadata !6979, metadata !DIExpression()), !dbg !6984
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !6980, metadata !DIExpression()), !dbg !6985
  %3 = bitcast %"core::option::Option<std::process::Output>"* %self to {}**, !dbg !6986
  %4 = load {}*, {}** %3, align 8, !dbg !6986
  %5 = icmp eq {}* %4, null, !dbg !6986
  %_3 = select i1 %5, i64 0, i64 1, !dbg !6986
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6987

bb2:                                              ; preds = %start
  unreachable, !dbg !6986

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h88d530fef2e585ceE([0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !6988
  unreachable, !dbg !6988

bb3:                                              ; preds = %start
  %6 = bitcast %"core::option::Option<std::process::Output>"* %self to %"core::option::Option<std::process::Output>::Some"*, !dbg !6989
  %7 = bitcast %"core::option::Option<std::process::Output>::Some"* %6 to %"std::process::Output"*, !dbg !6989
  %8 = bitcast %"std::process::Output"* %val to i8*, !dbg !6989
  %9 = bitcast %"std::process::Output"* %7 to i8*, !dbg !6989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 56, i1 false), !dbg !6989
  ret void, !dbg !6990
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h1f1e1df6230d4258E"(%"std::process::Output"* sret(%"std::process::Output") %val, %"core::option::Option<std::process::Output>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !6991 {
start:
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %val, metadata !6996, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"* %self, metadata !6995, metadata !DIExpression()), !dbg !6999
  %1 = bitcast %"core::option::Option<std::process::Output>"* %self to {}**, !dbg !7000
  %2 = load {}*, {}** %1, align 8, !dbg !7000
  %3 = icmp eq {}* %2, null, !dbg !7000
  %_2 = select i1 %3, i64 0, i64 1, !dbg !7000
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7001

bb2:                                              ; preds = %start
  unreachable, !dbg !7000

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc470 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 %0) #18, !dbg !7002
  unreachable, !dbg !7002

bb3:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<std::process::Output>"* %self to %"core::option::Option<std::process::Output>::Some"*, !dbg !7003
  %5 = bitcast %"core::option::Option<std::process::Output>::Some"* %4 to %"std::process::Output"*, !dbg !7003
  %6 = bitcast %"std::process::Output"* %val to i8*, !dbg !7003
  %7 = bitcast %"std::process::Output"* %5 to i8*, !dbg !7003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 56, i1 false), !dbg !7003
  ret void, !dbg !7004
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3972cbb744e0ace4E"(%"alloc::string::String"* sret(%"alloc::string::String") %val, %"core::option::Option<alloc::string::String>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !7005 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val, metadata !7010, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %self, metadata !7009, metadata !DIExpression()), !dbg !7013
  %1 = bitcast %"core::option::Option<alloc::string::String>"* %self to {}**, !dbg !7014
  %2 = load {}*, {}** %1, align 8, !dbg !7014
  %3 = icmp eq {}* %2, null, !dbg !7014
  %_2 = select i1 %3, i64 0, i64 1, !dbg !7014
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7015

bb2:                                              ; preds = %start
  unreachable, !dbg !7014

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc470 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 %0) #18, !dbg !7016
  unreachable, !dbg !7016

bb3:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %self to %"core::option::Option<alloc::string::String>::Some"*, !dbg !7017
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*, !dbg !7017
  %6 = bitcast %"alloc::string::String"* %val to i8*, !dbg !7017
  %7 = bitcast %"alloc::string::String"* %5 to i8*, !dbg !7017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !7017
  ret void, !dbg !7018
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h59695cd46541fff0E"(%"core::option::Option<std::process::Output>"* align 8 %self) unnamed_addr #1 !dbg !7019 {
start:
  %self.dbg.spill1 = alloca %"core::option::Option<std::process::Output>"*, align 8
  %self.dbg.spill = alloca %"core::option::Option<std::process::Output>"*, align 8
  %_2 = alloca i8, align 1
  store %"core::option::Option<std::process::Output>"* %self, %"core::option::Option<std::process::Output>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"** %self.dbg.spill, metadata !7024, metadata !DIExpression()), !dbg !7025
  store %"core::option::Option<std::process::Output>"* %self, %"core::option::Option<std::process::Output>"** %self.dbg.spill1, align 8, !dbg !7026
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"** %self.dbg.spill1, metadata !7027, metadata !DIExpression()), !dbg !7030
  %0 = bitcast %"core::option::Option<std::process::Output>"* %self to {}**, !dbg !7030
  %1 = load {}*, {}** %0, align 8, !dbg !7030
  %2 = icmp eq {}* %1, null, !dbg !7030
  %_4 = select i1 %2, i64 0, i64 1, !dbg !7030
  %3 = icmp eq i64 %_4, 1, !dbg !7030
  br i1 %3, label %bb3, label %bb2, !dbg !7030

bb3:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !7030
  br label %bb1, !dbg !7030

bb2:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !7030
  br label %bb1, !dbg !7030

bb1:                                              ; preds = %bb3, %bb2
  %4 = load i8, i8* %_2, align 1, !dbg !7031, !range !298, !noundef !23
  %5 = trunc i8 %4 to i1, !dbg !7031
  %6 = xor i1 %5, true, !dbg !7031
  ret i1 %6, !dbg !7032
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha99b49c88e79874bE"(%"core::option::Option<alloc::string::String>"* align 8 %self) unnamed_addr #1 !dbg !7033 {
start:
  %self.dbg.spill1 = alloca %"core::option::Option<alloc::string::String>"*, align 8
  %self.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  %_2 = alloca i8, align 1
  store %"core::option::Option<alloc::string::String>"* %self, %"core::option::Option<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %self.dbg.spill, metadata !7038, metadata !DIExpression()), !dbg !7039
  store %"core::option::Option<alloc::string::String>"* %self, %"core::option::Option<alloc::string::String>"** %self.dbg.spill1, align 8, !dbg !7040
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %self.dbg.spill1, metadata !7041, metadata !DIExpression()), !dbg !7044
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %self to {}**, !dbg !7044
  %1 = load {}*, {}** %0, align 8, !dbg !7044
  %2 = icmp eq {}* %1, null, !dbg !7044
  %_4 = select i1 %2, i64 0, i64 1, !dbg !7044
  %3 = icmp eq i64 %_4, 1, !dbg !7044
  br i1 %3, label %bb3, label %bb2, !dbg !7044

bb3:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !7044
  br label %bb1, !dbg !7044

bb2:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !7044
  br label %bb1, !dbg !7044

bb1:                                              ; preds = %bb3, %bb2
  %4 = load i8, i8* %_2, align 1, !dbg !7045, !range !298, !noundef !23
  %5 = trunc i8 %4 to i1, !dbg !7045
  %6 = xor i1 %5, true, !dbg !7045
  ret i1 %6, !dbg !7046
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h236ce353924c272eE"(i8* align 1 %0, i64 %1) unnamed_addr #1 !dbg !7047 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:287:40: 287:58]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7064, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:287:40: 287:58]"* %f.dbg.spill, metadata !7065, metadata !DIExpression()), !dbg !7072
  store i8 1, i8* %_8, align 1, !dbg !7073
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7073
  %6 = load {}*, {}** %5, align 8, !dbg !7073
  %7 = icmp eq {}* %6, null, !dbg !7073
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7073
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7074

bb2:                                              ; preds = %start
  unreachable, !dbg !7073

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7075
  store i64 0, i64* %8, align 8, !dbg !7075
  br label %bb7, !dbg !7075

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7076
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7076
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7076, !nonnull !23, !align !912, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7076
  %x.1 = load i64, i64* %11, align 8, !dbg !7076
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7076
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7076
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7076
  store i64 %x.1, i64* %13, align 8, !dbg !7076
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7066, metadata !DIExpression()), !dbg !7077
  store i8 0, i8* %_8, align 1, !dbg !7078
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !7078
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7078
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7078
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7078
  store i64 %x.1, i64* %16, align 8, !dbg !7078
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !7078
  %18 = load i8*, i8** %17, align 8, !dbg !7078, !nonnull !23, !align !912, !noundef !23
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !7078
  %20 = load i64, i64* %19, align 8, !dbg !7078
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7078
; call build_script_build::emcc_version_code::{{closure}}
  %22 = call { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h427b2086b2c91d7cE"([0 x i8]* align 1 %21, i64 %20), !dbg !7078
  store { i64, i64 } %22, { i64, i64 }* %2, align 8, !dbg !7078
  br label %bb4, !dbg !7078

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7079

bb7:                                              ; preds = %bb1, %bb4
  %23 = load i8, i8* %_8, align 1, !dbg !7080, !range !298, !noundef !23
  %24 = trunc i8 %23 to i1, !dbg !7080
  br i1 %24, label %bb6, label %bb5, !dbg !7080

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7081
  %26 = load i64, i64* %25, align 8, !dbg !7081, !range !3483, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7081
  %28 = load i64, i64* %27, align 8, !dbg !7081
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !7081
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !7081
  ret { i64, i64 } %30, !dbg !7081

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7080
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h3923e9e4c6ee51b6E"(i64 %0, i64 %1, i64* align 8 %f.0, i64 %f.1) unnamed_addr #1 !dbg !7082 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca { i64*, i64 }, align 8
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7089, metadata !DIExpression()), !dbg !7096
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %f.dbg.spill, i32 0, i32 0
  store i64* %f.0, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %f.dbg.spill, i32 0, i32 1
  store i64 %f.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %f.dbg.spill, metadata !7090, metadata !DIExpression()), !dbg !7097
  store i8 1, i8* %_8, align 1, !dbg !7098
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !7098
  %_3 = load i64, i64* %7, align 8, !dbg !7098, !range !3483, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7099

bb2:                                              ; preds = %start
  unreachable, !dbg !7098

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7100
  store i64 0, i64* %8, align 8, !dbg !7100
  br label %bb7, !dbg !7100

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7101
  %x = load i64, i64* %9, align 8, !dbg !7101
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !7101
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !7091, metadata !DIExpression()), !dbg !7102
  store i8 0, i8* %_8, align 1, !dbg !7103
  store i64 %x, i64* %_6, align 8, !dbg !7103
  %10 = load i64, i64* %_6, align 8, !dbg !7103
; call alloc::str::join_generic_copy::{{closure}}
  %11 = call { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hbf7dcdf19e5da596E"(i64* align 8 %f.0, i64 %f.1, i64 %10), !dbg !7103
  store { i64, i64 } %11, { i64, i64 }* %2, align 8, !dbg !7103
  br label %bb4, !dbg !7103

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7104

bb7:                                              ; preds = %bb1, %bb4
  %12 = load i8, i8* %_8, align 1, !dbg !7105, !range !298, !noundef !23
  %13 = trunc i8 %12 to i1, !dbg !7105
  br i1 %13, label %bb6, label %bb5, !dbg !7105

bb5:                                              ; preds = %bb6, %bb7
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7106
  %15 = load i64, i64* %14, align 8, !dbg !7106, !range !3483, !noundef !23
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7106
  %17 = load i64, i64* %16, align 8, !dbg !7106
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !7106
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !7106
  ret { i64, i64 } %19, !dbg !7106

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7105
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hc6e3570f9e1f313cE"(i8* align 1 %0, i64 %1) unnamed_addr #1 !dbg !7107 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:285:40: 285:58]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7112, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:285:40: 285:58]"* %f.dbg.spill, metadata !7113, metadata !DIExpression()), !dbg !7119
  store i8 1, i8* %_8, align 1, !dbg !7120
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7120
  %6 = load {}*, {}** %5, align 8, !dbg !7120
  %7 = icmp eq {}* %6, null, !dbg !7120
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7120
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7121

bb2:                                              ; preds = %start
  unreachable, !dbg !7120

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7122
  store i64 0, i64* %8, align 8, !dbg !7122
  br label %bb7, !dbg !7122

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7123
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7123
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7123, !nonnull !23, !align !912, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7123
  %x.1 = load i64, i64* %11, align 8, !dbg !7123
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7123
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7123
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7123
  store i64 %x.1, i64* %13, align 8, !dbg !7123
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7114, metadata !DIExpression()), !dbg !7124
  store i8 0, i8* %_8, align 1, !dbg !7125
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !7125
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7125
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7125
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7125
  store i64 %x.1, i64* %16, align 8, !dbg !7125
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !7125
  %18 = load i8*, i8** %17, align 8, !dbg !7125, !nonnull !23, !align !912, !noundef !23
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !7125
  %20 = load i64, i64* %19, align 8, !dbg !7125
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7125
; call build_script_build::emcc_version_code::{{closure}}
  %22 = call { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h879d7db3f5ce5301E"([0 x i8]* align 1 %21, i64 %20), !dbg !7125
  store { i64, i64 } %22, { i64, i64 }* %2, align 8, !dbg !7125
  br label %bb4, !dbg !7125

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7126

bb7:                                              ; preds = %bb1, %bb4
  %23 = load i8, i8* %_8, align 1, !dbg !7127, !range !298, !noundef !23
  %24 = trunc i8 %23 to i1, !dbg !7127
  br i1 %24, label %bb6, label %bb5, !dbg !7127

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7128
  %26 = load i64, i64* %25, align 8, !dbg !7128, !range !3483, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7128
  %28 = load i64, i64* %27, align 8, !dbg !7128
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !7128
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !7128
  ret { i64, i64 } %30, !dbg !7128

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7127
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hcd35fc88269df9afE"(i8* align 1 %0, i64 %1) unnamed_addr #1 !dbg !7129 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:286:40: 286:58]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7134, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:286:40: 286:58]"* %f.dbg.spill, metadata !7135, metadata !DIExpression()), !dbg !7141
  store i8 1, i8* %_8, align 1, !dbg !7142
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7142
  %6 = load {}*, {}** %5, align 8, !dbg !7142
  %7 = icmp eq {}* %6, null, !dbg !7142
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7142
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7143

bb2:                                              ; preds = %start
  unreachable, !dbg !7142

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7144
  store i64 0, i64* %8, align 8, !dbg !7144
  br label %bb7, !dbg !7144

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7145
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7145
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7145, !nonnull !23, !align !912, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7145
  %x.1 = load i64, i64* %11, align 8, !dbg !7145
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7145
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7145
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7145
  store i64 %x.1, i64* %13, align 8, !dbg !7145
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7136, metadata !DIExpression()), !dbg !7146
  store i8 0, i8* %_8, align 1, !dbg !7147
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !7147
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7147
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7147
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7147
  store i64 %x.1, i64* %16, align 8, !dbg !7147
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !7147
  %18 = load i8*, i8** %17, align 8, !dbg !7147, !nonnull !23, !align !912, !noundef !23
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !7147
  %20 = load i64, i64* %19, align 8, !dbg !7147
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7147
; call build_script_build::emcc_version_code::{{closure}}
  %22 = call { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h3438d5e0506ce391E"([0 x i8]* align 1 %21, i64 %20), !dbg !7147
  store { i64, i64 } %22, { i64, i64 }* %2, align 8, !dbg !7147
  br label %bb4, !dbg !7147

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7148

bb7:                                              ; preds = %bb1, %bb4
  %23 = load i8, i8* %_8, align 1, !dbg !7149, !range !298, !noundef !23
  %24 = trunc i8 %23 to i1, !dbg !7149
  br i1 %24, label %bb6, label %bb5, !dbg !7149

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7150
  %26 = load i64, i64* %25, align 8, !dbg !7150, !range !3483, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7150
  %28 = load i64, i64* %27, align 8, !dbg !7150
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !7150
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !7150
  ret { i64, i64 } %30, !dbg !7150

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7149
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h8bd53bce537392cdE"(i8 %0, i1 zeroext %default) unnamed_addr #1 !dbg !7151 {
start:
  %x.dbg.spill = alloca i8, align 1
  %default.dbg.spill = alloca i8, align 1
  %_5 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !7155, metadata !DIExpression()), !dbg !7159
  %2 = zext i1 %default to i8
  store i8 %2, i8* %default.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %default.dbg.spill, metadata !7156, metadata !DIExpression()), !dbg !7160
  store i8 1, i8* %_5, align 1, !dbg !7161
  %3 = load i8, i8* %self, align 1, !dbg !7161, !range !6738, !noundef !23
  %4 = sub i8 %3, 2, !dbg !7161
  %5 = icmp eq i8 %4, 0, !dbg !7161
  %_3 = select i1 %5, i64 0, i64 1, !dbg !7161
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7162

bb2:                                              ; preds = %start
  unreachable, !dbg !7161

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1, !dbg !7163
  %6 = zext i1 %default to i8, !dbg !7163
  store i8 %6, i8* %1, align 1, !dbg !7163
  br label %bb6, !dbg !7163

bb3:                                              ; preds = %start
  %7 = load i8, i8* %self, align 1, !dbg !7164, !range !298, !noundef !23
  %x = trunc i8 %7 to i1, !dbg !7164
  %8 = zext i1 %x to i8, !dbg !7164
  store i8 %8, i8* %x.dbg.spill, align 1, !dbg !7164
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !7157, metadata !DIExpression()), !dbg !7165
  %9 = zext i1 %x to i8, !dbg !7166
  store i8 %9, i8* %1, align 1, !dbg !7166
  br label %bb6, !dbg !7167

bb6:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_5, align 1, !dbg !7168, !range !298, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !7168
  br i1 %11, label %bb5, label %bb4, !dbg !7168

bb4:                                              ; preds = %bb5, %bb6
  %12 = load i8, i8* %1, align 1, !dbg !7169, !range !298, !noundef !23
  %13 = trunc i8 %12 to i1, !dbg !7169
  ret i1 %13, !dbg !7169

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7168
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h92649cf3c581683dE"(i64 %0, i64 %1, i64 %default) unnamed_addr #1 !dbg !7170 {
start:
  %x.dbg.spill = alloca i64, align 8
  %default.dbg.spill = alloca i64, align 8
  %_5 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7174, metadata !DIExpression()), !dbg !7178
  store i64 %default, i64* %default.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %default.dbg.spill, metadata !7175, metadata !DIExpression()), !dbg !7179
  store i8 1, i8* %_5, align 1, !dbg !7180
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !7180
  %_3 = load i64, i64* %5, align 8, !dbg !7180, !range !3483, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7181

bb2:                                              ; preds = %start
  unreachable, !dbg !7180

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1, !dbg !7182
  store i64 %default, i64* %2, align 8, !dbg !7182
  br label %bb6, !dbg !7182

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7183
  %x = load i64, i64* %6, align 8, !dbg !7183
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !7183
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !7176, metadata !DIExpression()), !dbg !7184
  store i64 %x, i64* %2, align 8, !dbg !7185
  br label %bb6, !dbg !7186

bb6:                                              ; preds = %bb1, %bb3
  %7 = load i8, i8* %_5, align 1, !dbg !7187, !range !298, !noundef !23
  %8 = trunc i8 %7 to i1, !dbg !7187
  br i1 %8, label %bb5, label %bb4, !dbg !7187

bb4:                                              ; preds = %bb5, %bb6
  %9 = load i64, i64* %2, align 8, !dbg !7188
  ret i64 %9, !dbg !7188

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7187
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h49d709f4ce5513a3E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %self) unnamed_addr #1 !dbg !7189 {
start:
  %x.dbg.spill2 = alloca i64, align 8
  %x.dbg.spill = alloca i8, align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<u64, core::num::error::ParseIntError>"* %self, metadata !7193, metadata !DIExpression()), !dbg !7198
  %1 = bitcast %"core::result::Result<u64, core::num::error::ParseIntError>"* %self to i8*, !dbg !7199
  %2 = load i8, i8* %1, align 8, !dbg !7199, !range !298, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !7199
  %_2 = zext i1 %3 to i64, !dbg !7199
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7200

bb2:                                              ; preds = %start
  unreachable, !dbg !7199

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<u64, core::num::error::ParseIntError>"* %self to %"core::result::Result<u64, core::num::error::ParseIntError>::Ok"*, !dbg !7201
  %5 = getelementptr inbounds %"core::result::Result<u64, core::num::error::ParseIntError>::Ok", %"core::result::Result<u64, core::num::error::ParseIntError>::Ok"* %4, i32 0, i32 1, !dbg !7201
  %x1 = load i64, i64* %5, align 8, !dbg !7201
  store i64 %x1, i64* %x.dbg.spill2, align 8, !dbg !7201
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill2, metadata !7194, metadata !DIExpression()), !dbg !7202
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7203
  store i64 %x1, i64* %6, align 8, !dbg !7203
  %7 = bitcast { i64, i64 }* %0 to i64*, !dbg !7203
  store i64 1, i64* %7, align 8, !dbg !7203
  br label %bb5, !dbg !7204

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u64, core::num::error::ParseIntError>"* %self to %"core::result::Result<u64, core::num::error::ParseIntError>::Err"*, !dbg !7205
  %9 = getelementptr inbounds %"core::result::Result<u64, core::num::error::ParseIntError>::Err", %"core::result::Result<u64, core::num::error::ParseIntError>::Err"* %8, i32 0, i32 1, !dbg !7205
  %x = load i8, i8* %9, align 1, !dbg !7205, !range !7206, !noundef !23
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !7205
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !7196, metadata !DIExpression()), !dbg !7207
  %10 = bitcast { i64, i64 }* %0 to i64*, !dbg !7208
  store i64 0, i64* %10, align 8, !dbg !7208
  br label %bb4, !dbg !7209

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7209

bb5:                                              ; preds = %bb3, %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !7210
  %12 = load i64, i64* %11, align 8, !dbg !7210, !range !3483, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7210
  %14 = load i64, i64* %13, align 8, !dbg !7210
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0, !dbg !7210
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !7210
  ret { i64, i64 } %16, !dbg !7210
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h5e4edb54d8a33f3fE"(i64 %0) unnamed_addr #1 !dbg !7211 {
start:
  %x.dbg.spill2 = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %1 = alloca { i32, i32 }, align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata %"core::result::Result<u32, core::num::error::ParseIntError>"* %self, metadata !7215, metadata !DIExpression()), !dbg !7220
  %5 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*, !dbg !7221
  %6 = load i8, i8* %5, align 4, !dbg !7221, !range !298, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !7221
  %_2 = zext i1 %7 to i64, !dbg !7221
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7222

bb2:                                              ; preds = %start
  unreachable, !dbg !7221

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to %"core::result::Result<u32, core::num::error::ParseIntError>::Ok"*, !dbg !7223
  %9 = getelementptr inbounds %"core::result::Result<u32, core::num::error::ParseIntError>::Ok", %"core::result::Result<u32, core::num::error::ParseIntError>::Ok"* %8, i32 0, i32 1, !dbg !7223
  %x1 = load i32, i32* %9, align 4, !dbg !7223
  store i32 %x1, i32* %x.dbg.spill2, align 4, !dbg !7223
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill2, metadata !7216, metadata !DIExpression()), !dbg !7224
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !7225
  store i32 %x1, i32* %10, align 4, !dbg !7225
  %11 = bitcast { i32, i32 }* %1 to i32*, !dbg !7225
  store i32 1, i32* %11, align 4, !dbg !7225
  br label %bb5, !dbg !7226

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to %"core::result::Result<u32, core::num::error::ParseIntError>::Err"*, !dbg !7227
  %13 = getelementptr inbounds %"core::result::Result<u32, core::num::error::ParseIntError>::Err", %"core::result::Result<u32, core::num::error::ParseIntError>::Err"* %12, i32 0, i32 1, !dbg !7227
  %x = load i8, i8* %13, align 1, !dbg !7227, !range !7206, !noundef !23
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !7227
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !7218, metadata !DIExpression()), !dbg !7228
  %14 = bitcast { i32, i32 }* %1 to i32*, !dbg !7229
  store i32 0, i32* %14, align 4, !dbg !7229
  br label %bb4, !dbg !7230

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7230

bb5:                                              ; preds = %bb3, %bb4
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0, !dbg !7231
  %16 = load i32, i32* %15, align 4, !dbg !7231, !range !4318, !noundef !23
  %17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !7231
  %18 = load i32, i32* %17, align 4, !dbg !7231
  %19 = insertvalue { i32, i32 } undef, i32 %16, 0, !dbg !7231
  %20 = insertvalue { i32, i32 } %19, i32 %18, 1, !dbg !7231
  ret { i32, i32 } %20, !dbg !7231
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6c83611c0bcafc63E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %0, %"core::result::Result<std::process::Output, std::io::error::Error>"* %self) unnamed_addr #1 !dbg !7232 {
start:
  %x1 = alloca i8*, align 8
  %_4 = alloca %"std::process::Output", align 8
  %x = alloca %"std::process::Output", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<std::process::Output, std::io::error::Error>"* %self, metadata !7251, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %x, metadata !7252, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.declare(metadata i8** %x1, metadata !7254, metadata !DIExpression()), !dbg !7258
  %1 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to i64*, !dbg !7259
  %_2 = load i64, i64* %1, align 8, !dbg !7259, !range !3483, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7260

bb2:                                              ; preds = %start
  unreachable, !dbg !7259

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to %"core::result::Result<std::process::Output, std::io::error::Error>::Ok"*, !dbg !7261
  %3 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Ok", %"core::result::Result<std::process::Output, std::io::error::Error>::Ok"* %2, i32 0, i32 1, !dbg !7261
  %4 = bitcast %"std::process::Output"* %x to i8*, !dbg !7261
  %5 = bitcast %"std::process::Output"* %3 to i8*, !dbg !7261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 56, i1 false), !dbg !7261
  %6 = bitcast %"std::process::Output"* %_4 to i8*, !dbg !7262
  %7 = bitcast %"std::process::Output"* %x to i8*, !dbg !7262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 56, i1 false), !dbg !7262
  %8 = bitcast %"core::option::Option<std::process::Output>"* %0 to %"core::option::Option<std::process::Output>::Some"*, !dbg !7263
  %9 = bitcast %"core::option::Option<std::process::Output>::Some"* %8 to %"std::process::Output"*, !dbg !7263
  %10 = bitcast %"std::process::Output"* %9 to i8*, !dbg !7263
  %11 = bitcast %"std::process::Output"* %_4 to i8*, !dbg !7263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false), !dbg !7263
  br label %bb5, !dbg !7264

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to %"core::result::Result<std::process::Output, std::io::error::Error>::Err"*, !dbg !7265
  %13 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Err", %"core::result::Result<std::process::Output, std::io::error::Error>::Err"* %12, i32 0, i32 1, !dbg !7265
  %14 = load i8*, i8** %13, align 8, !dbg !7265, !nonnull !23, !noundef !23
  store i8* %14, i8** %x1, align 8, !dbg !7265
  %15 = bitcast %"core::option::Option<std::process::Output>"* %0 to {}**, !dbg !7266
  store {}* null, {}** %15, align 8, !dbg !7266
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17ha44b6edb4cd1f32eE"(i8** %x1), !dbg !7267
  br label %bb4, !dbg !7267

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7267

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !7268
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h8ff4be63b50557b6E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self) unnamed_addr #1 !dbg !7269 {
start:
  %x1 = alloca %"alloc::string::FromUtf8Error", align 8
  %_4 = alloca %"alloc::string::String", align 8
  %x = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self, metadata !7288, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %x, metadata !7289, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata %"alloc::string::FromUtf8Error"* %x1, metadata !7291, metadata !DIExpression()), !dbg !7295
  %1 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self to i64*, !dbg !7296
  %_2 = load i64, i64* %1, align 8, !dbg !7296, !range !3483, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7297

bb2:                                              ; preds = %start
  unreachable, !dbg !7296

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"*, !dbg !7298
  %3 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"* %2, i32 0, i32 1, !dbg !7298
  %4 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7298
  %5 = bitcast %"alloc::string::String"* %3 to i8*, !dbg !7298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !7298
  %6 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !7299
  %7 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !7299
  %8 = bitcast %"core::option::Option<alloc::string::String>"* %0 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !7300
  %9 = bitcast %"core::option::Option<alloc::string::String>::Some"* %8 to %"alloc::string::String"*, !dbg !7300
  %10 = bitcast %"alloc::string::String"* %9 to i8*, !dbg !7300
  %11 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !7300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !7300
  br label %bb5, !dbg !7301

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"*, !dbg !7302
  %13 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"* %12, i32 0, i32 1, !dbg !7302
  %14 = bitcast %"alloc::string::FromUtf8Error"* %x1 to i8*, !dbg !7302
  %15 = bitcast %"alloc::string::FromUtf8Error"* %13 to i8*, !dbg !7302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !7302
  %16 = bitcast %"core::option::Option<alloc::string::String>"* %0 to {}**, !dbg !7303
  store {}* null, {}** %16, align 8, !dbg !7303
; call core::ptr::drop_in_place<alloc::string::FromUtf8Error>
  call void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h2c4c567bf49a01f0E"(%"alloc::string::FromUtf8Error"* %x1), !dbg !7304
  br label %bb4, !dbg !7304

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7304

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !7305
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17hc0a9c6e44b396b71E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %self) unnamed_addr #1 !dbg !7306 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %x = alloca %"core::str::error::Utf8Error", align 8
  %0 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<&str, core::str::error::Utf8Error>"* %self, metadata !7325, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata %"core::str::error::Utf8Error"* %x, metadata !7328, metadata !DIExpression()), !dbg !7331
  %1 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*, !dbg !7332
  %_2 = load i64, i64* %1, align 8, !dbg !7332, !range !3483, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7333

bb2:                                              ; preds = %start
  unreachable, !dbg !7332

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*, !dbg !7334
  %3 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %2, i32 0, i32 1, !dbg !7334
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !7334
  %x.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !dbg !7334, !nonnull !23, !align !912, !noundef !23
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !7334
  %x.1 = load i64, i64* %5, align 8, !dbg !7334
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7334
  store [0 x i8]* %x.0, [0 x i8]** %6, align 8, !dbg !7334
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7334
  store i64 %x.1, i64* %7, align 8, !dbg !7334
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7326, metadata !DIExpression()), !dbg !7335
  %8 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !7336
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0, !dbg !7336
  store [0 x i8]* %x.0, [0 x i8]** %9, align 8, !dbg !7336
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1, !dbg !7336
  store i64 %x.1, i64* %10, align 8, !dbg !7336
  br label %bb5, !dbg !7337

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*, !dbg !7338
  %12 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %11, i32 0, i32 1, !dbg !7338
  %13 = bitcast %"core::str::error::Utf8Error"* %x to i8*, !dbg !7338
  %14 = bitcast %"core::str::error::Utf8Error"* %12 to i8*, !dbg !7338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false), !dbg !7338
  %15 = bitcast { i8*, i64 }* %0 to {}**, !dbg !7339
  store {}* null, {}** %15, align 8, !dbg !7339
  br label %bb4, !dbg !7340

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7340

bb5:                                              ; preds = %bb3, %bb4
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !7341
  %17 = load i8*, i8** %16, align 8, !dbg !7341, !align !912
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !7341
  %19 = load i64, i64* %18, align 8, !dbg !7341
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !7341
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !7341
  ret { i8*, i64 } %21, !dbg !7341
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %self) unnamed_addr #1 !dbg !7342 {
start:
  %self.dbg.spill = alloca %"core::result::Result<alloc::string::String, std::env::VarError>"*, align 8
  %0 = alloca i8, align 1
  store %"core::result::Result<alloc::string::String, std::env::VarError>"* %self, %"core::result::Result<alloc::string::String, std::env::VarError>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, std::env::VarError>"** %self.dbg.spill, metadata !7347, metadata !DIExpression()), !dbg !7348
  %1 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %self to i64*, !dbg !7349
  %_2 = load i64, i64* %1, align 8, !dbg !7349, !range !3483, !noundef !23
  %2 = icmp eq i64 %_2, 0, !dbg !7350
  br i1 %2, label %bb2, label %bb1, !dbg !7350

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !7350
  br label %bb3, !dbg !7350

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !7350
  br label %bb3, !dbg !7350

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !dbg !7351, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !7351
  ret i1 %4, !dbg !7351
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h15361ed5ea8acb97E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #1 !dbg !7352 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7373, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !7374, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !7377, metadata !DIExpression()), !dbg !7384
  store i8 1, i8* %_11, align 1, !dbg !7385
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7385
  %6 = load i64, i64* %5, align 8, !dbg !7385, !range !1638, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !7385
  %_3 = select i1 %7, i64 1, i64 0, !dbg !7385
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7386

bb2:                                              ; preds = %start
  unreachable, !dbg !7385

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !7387
  %t.0 = load i64, i64* %8, align 8, !dbg !7387
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7387
  %t.1 = load i64, i64* %9, align 8, !dbg !7387, !range !5753, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7387
  store i64 %t.0, i64* %10, align 8, !dbg !7387
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7387
  store i64 %t.1, i64* %11, align 8, !dbg !7387
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !7375, metadata !DIExpression()), !dbg !7388
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7389
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !7389
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !7389
  store i64 %t.0, i64* %14, align 8, !dbg !7389
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !7389
  store i64 %t.1, i64* %15, align 8, !dbg !7389
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !7389
  store i64 0, i64* %16, align 8, !dbg !7389
  br label %bb7, !dbg !7390

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !7391
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !7391
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2104520d324e94afE"(), !dbg !7391
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !7391
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !7391
  br label %bb4, !dbg !7391

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !7392
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !7392
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !7392
  store i64 %_7.0, i64* %21, align 8, !dbg !7392
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !7392
  store i64 %_7.1, i64* %22, align 8, !dbg !7392
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !7392
  store i64 1, i64* %23, align 8, !dbg !7392
  br label %bb7, !dbg !7393

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !7394, !range !298, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !7394
  br i1 %25, label %bb6, label %bb5, !dbg !7394

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7395

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7394
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc2d8e143c3032a97E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !7396 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7431, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !7432, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !7433, metadata !DIExpression()), !dbg !7441
  store i8 1, i8* %_11, align 1, !dbg !7442
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7442
  %6 = load i64, i64* %5, align 8, !dbg !7442, !range !7443, !noundef !23
  %7 = sub i64 %6, -9223372036854775807, !dbg !7442
  %8 = icmp eq i64 %7, 0, !dbg !7442
  %_3 = select i1 %8, i64 0, i64 1, !dbg !7442
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7444

bb2:                                              ; preds = %start
  unreachable, !dbg !7442

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7445
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !7445
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7445
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !7445
  br label %bb7, !dbg !7446

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !7447
  %e.0 = load i64, i64* %12, align 8, !dbg !7447
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7447
  %e.1 = load i64, i64* %13, align 8, !dbg !7447, !range !1638, !noundef !23
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !7447
  store i64 %e.0, i64* %14, align 8, !dbg !7447
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !7447
  store i64 %e.1, i64* %15, align 8, !dbg !7447
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !7435, metadata !DIExpression()), !dbg !7448
  store i8 0, i8* %_11, align 1, !dbg !7449
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !7449
  store i64 %e.0, i64* %16, align 8, !dbg !7449
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !7449
  store i64 %e.1, i64* %17, align 8, !dbg !7449
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !7449
  %19 = load i64, i64* %18, align 8, !dbg !7449
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !7449
  %21 = load i64, i64* %20, align 8, !dbg !7449, !range !1638, !noundef !23
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hf725b3c1a732c9b8E"(i64 %19, i64 %21), !dbg !7449
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !7449
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !7449
  br label %bb4, !dbg !7449

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7450
  store i64 %_7.0, i64* %23, align 8, !dbg !7450
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7450
  store i64 %_7.1, i64* %24, align 8, !dbg !7450
  br label %bb7, !dbg !7451

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !7452, !range !298, !noundef !23
  %26 = trunc i8 %25 to i1, !dbg !7452
  br i1 %26, label %bb6, label %bb5, !dbg !7452

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7453
  %28 = load i64, i64* %27, align 8, !dbg !7453
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7453
  %30 = load i64, i64* %29, align 8, !dbg !7453, !range !7443, !noundef !23
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !7453
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !7453
  ret { i64, i64 } %32, !dbg !7453

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7452
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf2790cdcd6fed450E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #1 !dbg !7454 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7496, metadata !DIExpression()), !dbg !7505
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !7497, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !7500, metadata !DIExpression()), !dbg !7507
  store i8 1, i8* %_11, align 1, !dbg !7508
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7508
  %6 = load {}*, {}** %5, align 8, !dbg !7508
  %7 = icmp eq {}* %6, null, !dbg !7508
  %_3 = select i1 %7, i64 1, i64 0, !dbg !7508
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7509

bb2:                                              ; preds = %start
  unreachable, !dbg !7508

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !7510
  %t.0 = load i8*, i8** %8, align 8, !dbg !7510, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !7510
  %t.1 = load i64, i64* %9, align 8, !dbg !7510
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7510
  store i8* %t.0, i8** %10, align 8, !dbg !7510
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7510
  store i64 %t.1, i64* %11, align 8, !dbg !7510
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !7498, metadata !DIExpression()), !dbg !7511
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !7512
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !7512
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !7512
  store i8* %t.0, i8** %14, align 8, !dbg !7512
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !7512
  store i64 %t.1, i64* %15, align 8, !dbg !7512
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7512
  store i64 0, i64* %16, align 8, !dbg !7512
  br label %bb7, !dbg !7513

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !7514
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !7514
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h650506fa10c07391E"(i64* align 8 %op), !dbg !7514
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !7514
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !7514
  br label %bb4, !dbg !7514

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !7515
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !7515
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !7515
  store i64 %_7.0, i64* %21, align 8, !dbg !7515
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !7515
  store i64 %_7.1, i64* %22, align 8, !dbg !7515
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7515
  store i64 1, i64* %23, align 8, !dbg !7515
  br label %bb7, !dbg !7516

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !7517, !range !298, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !7517
  br i1 %25, label %bb6, label %bb5, !dbg !7517

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7518

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7517
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2c88d357f9756a4aE"(i64 %t.0, i64 %t.1) unnamed_addr #0 !dbg !7519 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !7525, metadata !DIExpression()), !dbg !7528
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !7529
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !7529
  ret { i64, i64 } %3, !dbg !7529
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2cc2b8b7a682aff2E"(i64 %t) unnamed_addr #0 !dbg !7530 {
start:
  %t.dbg.spill = alloca i64, align 8
  store i64 %t, i64* %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %t.dbg.spill, metadata !7534, metadata !DIExpression()), !dbg !7535
  ret i64 %t, !dbg !7536
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7d1cdc01e8805927E"() unnamed_addr #0 !dbg !7537 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !7541, metadata !DIExpression()), !dbg !7544
  ret void, !dbg !7545
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha0555b3c59efcc3fE"() unnamed_addr #0 !dbg !7546 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !7550, metadata !DIExpression()), !dbg !7553
  ret void, !dbg !7554
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h178be142c24bc97eE"(i8* %self) unnamed_addr #0 !dbg !7555 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !7558, metadata !DIExpression()), !dbg !7562
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E"(i8* %self), !dbg !7563
  br label %bb1, !dbg !7563

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !7564
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc8cc66ceb68590efE"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !7565 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !7567, metadata !DIExpression()), !dbg !7571
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hee871011a5f2812eE"(i64 %self.0, i64 %self.1), !dbg !7572
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !7572
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !7572
  br label %bb1, !dbg !7572

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !7573
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !7573
  ret { i64, i64 } %6, !dbg !7573
}

; <T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !7574 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !7581, metadata !DIExpression()), !dbg !7582
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !7583
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !7583
  ret { [0 x i8]*, i64 } %3, !dbg !7583
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h53a411f692041c03E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %0, i32 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 !dbg !7584 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %utf8_size.dbg.spill = alloca i64, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i32, align 4
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i32, align 4
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !7589, metadata !DIExpression()), !dbg !7595
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !7590, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata [4 x i8]* %utf8_encoded, metadata !7591, metadata !DIExpression()), !dbg !7597
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0, !dbg !7598
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 4, i1 false), !dbg !7598
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !7599
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !7600, metadata !DIExpression()), !dbg !7611
  %dst.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*, !dbg !7612
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0, !dbg !7612
  store [0 x i8]* %dst.0, [0 x i8]** %6, align 8, !dbg !7612
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1, !dbg !7612
  store i64 4, i64* %7, align 8, !dbg !7612
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !7610, metadata !DIExpression()), !dbg !7611
; call core::char::methods::encode_utf8_raw
  %8 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17hb50ab06b9b1ec8c9E(i32 %self, [0 x i8]* align 1 %dst.0, i64 4), !dbg !7611
  %_21.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !7611, !rawptr !418
  %_21.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !7611, !rawptr !418
  br label %bb1, !dbg !7611

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !7611
  store [0 x i8]* %_21.0, [0 x i8]** %9, align 8, !dbg !7611
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !7611
  store i64 %_21.1, i64* %10, align 8, !dbg !7611
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !7613, metadata !DIExpression()), !dbg !7621
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !7599
  store [0 x i8]* %_21.0, [0 x i8]** %11, align 8, !dbg !7599
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !7599
  store i64 %_21.1, i64* %12, align 8, !dbg !7599
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !7623, metadata !DIExpression()), !dbg !7627
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !7627
  store [0 x i8]* %_21.0, [0 x i8]** %13, align 8, !dbg !7627
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !7627
  store i64 %_21.1, i64* %14, align 8, !dbg !7627
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !7628, metadata !DIExpression()), !dbg !7632
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !7632
  store [0 x i8]* %_21.0, [0 x i8]** %15, align 8, !dbg !7632
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !7632
  store i64 %_21.1, i64* %16, align 8, !dbg !7632
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !7632
  %_31.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !dbg !7632, !nonnull !23, !align !912, !noundef !23
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !7632
  %_31.1 = load i64, i64* %18, align 8, !dbg !7632
  br label %bb2, !dbg !7632

bb2:                                              ; preds = %bb1
  store i64 %_31.1, i64* %utf8_size.dbg.spill, align 8, !dbg !7627
  call void @llvm.dbg.declare(metadata i64* %utf8_size.dbg.spill, metadata !7593, metadata !DIExpression()), !dbg !7634
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !7635
  store [0 x i8]* %haystack.0, [0 x i8]** %19, align 8, !dbg !7635
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !7635
  store i64 %haystack.1, i64* %20, align 8, !dbg !7635
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !7636, metadata !DIExpression()), !dbg !7640
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !7640
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !7640
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !7640
  store i64 %haystack.1, i64* %22, align 8, !dbg !7640
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !7641, metadata !DIExpression()), !dbg !7645
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7645
  store [0 x i8]* %haystack.0, [0 x i8]** %23, align 8, !dbg !7645
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7645
  store i64 %haystack.1, i64* %24, align 8, !dbg !7645
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7645
  %_35.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !7645, !nonnull !23, !align !912, !noundef !23
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7645
  %_35.1 = load i64, i64* %26, align 8, !dbg !7645
  br label %bb3, !dbg !7645

bb3:                                              ; preds = %bb2
  %27 = bitcast [4 x i8]* %_16 to i8*, !dbg !7647
  %28 = bitcast [4 x i8]* %utf8_encoded to i8*, !dbg !7647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 4, i1 false), !dbg !7647
  %29 = bitcast %"core::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*, !dbg !7648
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !7648
  store [0 x i8]* %haystack.0, [0 x i8]** %30, align 8, !dbg !7648
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !7648
  store i64 %haystack.1, i64* %31, align 8, !dbg !7648
  %32 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 1, !dbg !7648
  store i64 0, i64* %32, align 8, !dbg !7648
  %33 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 2, !dbg !7648
  store i64 %_35.1, i64* %33, align 8, !dbg !7648
  %34 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 4, !dbg !7648
  store i32 %self, i32* %34, align 8, !dbg !7648
  %35 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 3, !dbg !7648
  store i64 %_31.1, i64* %35, align 8, !dbg !7648
  %36 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 5, !dbg !7648
  %37 = bitcast [4 x i8]* %36 to i8*, !dbg !7648
  %38 = bitcast [4 x i8]* %_16 to i8*, !dbg !7648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 1 %38, i64 4, i1 false), !dbg !7648
  ret void, !dbg !7649
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hb6967cc43833833dE"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %self, i32 %c) unnamed_addr #1 !dbg !7650 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]"*, align 8
  %_4 = alloca i32, align 4
  store %"[closure@core::str::<impl str>::trim::{closure#0}]"* %self, %"[closure@core::str::<impl str>::trim::{closure#0}]"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"** %self.dbg.spill, metadata !7656, metadata !DIExpression()), !dbg !7658
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !7657, metadata !DIExpression()), !dbg !7659
  store i32 %c, i32* %_4, align 4, !dbg !7660
  %0 = load i32, i32* %_4, align 4, !dbg !7660, !range !466, !noundef !23
; call core::str::<impl str>::trim::{{closure}}
  %1 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17h32988296079ff709E"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %self, i32 %0), !dbg !7660
  br label %bb1, !dbg !7660

bb1:                                              ; preds = %start
  ret i1 %1, !dbg !7661
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hc38e31bf05cc1c8dE"(%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* align 1 %self, i32 %c) unnamed_addr #1 !dbg !7662 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"*, align 8
  %_4 = alloca i32, align 4
  store %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* %self, %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"** %self.dbg.spill, metadata !7667, metadata !DIExpression()), !dbg !7669
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !7668, metadata !DIExpression()), !dbg !7670
  store i32 %c, i32* %_4, align 4, !dbg !7671
  %0 = load i32, i32* %_4, align 4, !dbg !7671, !range !466, !noundef !23
; call build_script_build::emcc_version_code::{{closure}}
  %1 = call zeroext i1 @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17hc81f91aa109c7b20E"(%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* align 1 %self, i32 %0), !dbg !7671
  br label %bb1, !dbg !7671

bb1:                                              ; preds = %start
  ret i1 %1, !dbg !7672
}

; <T as core::slice::cmp::SliceContains>::slice_contains
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h49c019e0642362a4E"({ [0 x i8]*, i64 }* align 8 %self, [0 x { [0 x i8]*, i64 }]* align 8 %x.0, i64 %x.1) unnamed_addr #0 !dbg !7673 {
start:
  %self.dbg.spill1 = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %x.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_6 = alloca i64*, align 8
  %_4 = alloca { i64*, i64* }, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !7678, metadata !DIExpression()), !dbg !7680
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %x.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %x.dbg.spill, metadata !7679, metadata !DIExpression()), !dbg !7681
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !7682
  store [0 x { [0 x i8]*, i64 }]* %x.0, [0 x { [0 x i8]*, i64 }]** %2, align 8, !dbg !7682
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !7682
  store i64 %x.1, i64* %3, align 8, !dbg !7682
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, metadata !7683, metadata !DIExpression()), !dbg !7687
; call core::slice::iter::Iter<T>::new
  %4 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7f11c3d66892abdeE"([0 x { [0 x i8]*, i64 }]* align 8 %x.0, i64 %x.1), !dbg !7687
  store { i64*, i64* } %4, { i64*, i64* }* %_4, align 8, !dbg !7687
  br label %bb2, !dbg !7687

bb2:                                              ; preds = %start
  %5 = bitcast i64** %_6 to { [0 x i8]*, i64 }**, !dbg !7688
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %5, align 8, !dbg !7688
  %6 = load i64*, i64** %_6, align 8, !dbg !7682, !nonnull !23, !align !378, !noundef !23
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %7 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hfc31898364bfccdcE"({ i64*, i64* }* align 8 %_4, i64* align 8 %6), !dbg !7682
  br label %bb1, !dbg !7682

bb1:                                              ; preds = %bb2
  ret i1 %7, !dbg !7689
}

; <T as core::slice::cmp::SliceContains>::slice_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd0a7c4d41da4d109E"(i64** align 8 %_1, { [0 x i8]*, i64 }* align 8 %y) unnamed_addr #1 !dbg !7690 {
start:
  %y.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !378, !noundef !23
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  %2 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !7700, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !7701
  store { [0 x i8]*, i64 }* %y, { [0 x i8]*, i64 }** %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %y.dbg.spill, metadata !7699, metadata !DIExpression()), !dbg !7702
  %3 = bitcast i64** %_1 to { [0 x i8]*, i64 }**, !dbg !7703
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !dbg !7703, !nonnull !23, !align !378, !noundef !23
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %4 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4d4a3809c8de9910E"({ [0 x i8]*, i64 }* align 8 %y, { [0 x i8]*, i64 }* align 8 %_5), !dbg !7704
  br label %bb1, !dbg !7704

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !7705
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h3a8ca7628401a7c4E"() unnamed_addr #1 !dbg !7706 {
start:
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !7711, metadata !DIExpression()), !dbg !7712
  ret i8 0, !dbg !7713
}

; <&T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h2c1a3208f1ea1b09E"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #0 !dbg !7714 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !7719, metadata !DIExpression()), !dbg !7720
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !7721
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !7721, !nonnull !23, !align !912, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !7721
  %_2.1 = load i64, i64* %1, align 8, !dbg !7721
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0, !dbg !7722
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_2.1, 1, !dbg !7722
  ret { [0 x i8]*, i64 } %3, !dbg !7722
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h603d2461e4ba1659E"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #1 !dbg !7723 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !7728, metadata !DIExpression()), !dbg !7731
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !7732
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !7732, !nonnull !23, !align !912, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !7732
  %_3.1 = load i64, i64* %1, align 8, !dbg !7732
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %2 = call { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h853104b9acaaf0b1E"([0 x i8]* align 1 %_3.0, i64 %_3.1), !dbg !7733
  %3 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 0, !dbg !7733
  %4 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 1, !dbg !7733
  br label %bb1, !dbg !7733

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %3, 0, !dbg !7734
  %6 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %5, i64 %4, 1, !dbg !7734
  ret { %"std::ffi::os_str::OsStr"*, i64 } %6, !dbg !7734
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hce23eb5c2272605cE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 !dbg !7735 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !7738, metadata !DIExpression()), !dbg !7740
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !7739, metadata !DIExpression()), !dbg !7741
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !7742
  store [0 x i8]* %haystack.0, [0 x i8]** %6, align 8, !dbg !7742
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !7742
  store i64 %haystack.1, i64* %7, align 8, !dbg !7742
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !7743, metadata !DIExpression()), !dbg !7747
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7747
  store [0 x i8]* %haystack.0, [0 x i8]** %8, align 8, !dbg !7747
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7747
  store i64 %haystack.1, i64* %9, align 8, !dbg !7747
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7747
  %_4.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7747, !nonnull !23, !align !912, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7747
  %_4.1 = load i64, i64* %11, align 8, !dbg !7747
  br label %bb2, !dbg !7747

bb2:                                              ; preds = %start
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !7748
  store [0 x i8]* %self.0, [0 x i8]** %12, align 8, !dbg !7748
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !7748
  store i64 %self.1, i64* %13, align 8, !dbg !7748
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !7749, metadata !DIExpression()), !dbg !7753
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !7753
  store [0 x i8]* %self.0, [0 x i8]** %14, align 8, !dbg !7753
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !7753
  store i64 %self.1, i64* %15, align 8, !dbg !7753
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !7753
  %_7.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !7753, !nonnull !23, !align !912, !noundef !23
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !7753
  %_7.1 = load i64, i64* %17, align 8, !dbg !7753
  br label %bb3, !dbg !7753

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::starts_with
  %18 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h5f141bcbd9e85e4cE"([0 x i8]* align 1 %_4.0, i64 %_4.1, [0 x i8]* align 1 %_7.0, i64 %_7.1), !dbg !7742
  br label %bb1, !dbg !7742

bb1:                                              ; preds = %bb3
  ret i1 %18, !dbg !7754
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h939ef3bcebe397e4E"(%"alloc::alloc::Global"* align 1 %self) unnamed_addr #1 !dbg !7755 {
start:
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !7762, metadata !DIExpression()), !dbg !7763
  ret void, !dbg !7764
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17ha553475e71c2f92aE({ i64, i64 }* align 8 %self) unnamed_addr #1 !dbg !7765 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_3 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !7770, metadata !DIExpression()), !dbg !7771
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !7772
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !7773, metadata !DIExpression()), !dbg !7784
  %1 = bitcast i64** %_3 to { i64, i64 }**, !dbg !7784
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8, !dbg !7784
  %2 = bitcast i64** %_3 to { i64, i64 }**, !dbg !7784
  %_11 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !dbg !7784, !nonnull !23, !align !378, !noundef !23
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !7784
  %4 = load i64, i64* %3, align 8, !dbg !7784, !range !1638, !noundef !23
  %5 = icmp eq i64 %4, 0, !dbg !7784
  %_5 = select i1 %5, i64 0, i64 1, !dbg !7784
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7784

bb2:                                              ; preds = %start
  unreachable, !dbg !7784

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7784
  store i64 0, i64* %6, align 8, !dbg !7784
  br label %bb4, !dbg !7784

bb1:                                              ; preds = %start
  %7 = bitcast i64** %_3 to { i64, i64 }**, !dbg !7784
  %_12 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !dbg !7784, !nonnull !23, !align !378, !noundef !23
  store { i64, i64 }* %_12, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !7784
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !7780, metadata !DIExpression()), !dbg !7785
  store { i64, i64 }* %_12, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !7785
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !7786, metadata !DIExpression()), !dbg !7793
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0, !dbg !7793
  %_8.0 = load i64, i64* %8, align 8, !dbg !7793
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1, !dbg !7793
  %_8.1 = load i64, i64* %9, align 8, !dbg !7793, !range !5753, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !7785
  store i64 %_8.0, i64* %10, align 8, !dbg !7785
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7785
  store i64 %_8.1, i64* %11, align 8, !dbg !7785
  br label %bb4, !dbg !7784

bb4:                                              ; preds = %bb3, %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !7795
  %13 = load i64, i64* %12, align 8, !dbg !7795
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7795
  %15 = load i64, i64* %14, align 8, !dbg !7795, !range !1638, !noundef !23
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !7795
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !7795
  ret { i64, i64 } %17, !dbg !7795
}

; alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h676a0c4979658543E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") %0, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 !dbg !7796 {
start:
  %self.dbg.spill = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !7813, metadata !DIExpression()), !dbg !7814
  %1 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, i32 0, i32 2, !dbg !7815
  %_2 = load i64, i64* %1, align 8, !dbg !7815
  %2 = icmp eq i64 %_2, 0, !dbg !7815
  br i1 %2, label %bb1, label %bb4, !dbg !7815

bb1:                                              ; preds = %start
  %_4 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !7816
  %_6 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::alloc::Global"*, !dbg !7817
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h939ef3bcebe397e4E"(%"alloc::alloc::Global"* align 1 %_6), !dbg !7817
  br label %bb2, !dbg !7817

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, i32 0, i32 2, !dbg !7818
  %4 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, i32 0, i32 2, !dbg !7818
  %5 = load i64, i64* %4, align 8, !dbg !7818
  %6 = sub i64 %5, 1, !dbg !7818
  store i64 %6, i64* %3, align 8, !dbg !7818
  %_8 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !7819
  %_10 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::alloc::Global"*, !dbg !7820
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h939ef3bcebe397e4E"(%"alloc::alloc::Global"* align 1 %_10), !dbg !7820
  br label %bb5, !dbg !7820

bb5:                                              ; preds = %bb4
; call alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_next_unchecked
  call void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17ha8e0d476af1cb7f6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %_7, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_8), !dbg !7819
  br label %bb6, !dbg !7819

bb6:                                              ; preds = %bb5
  %7 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"*, !dbg !7821
  %8 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"* %7 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !7821
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %8 to i8*, !dbg !7821
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_7 to i8*, !dbg !7821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !7821
  br label %bb7, !dbg !7822

bb7:                                              ; preds = %bb3, %bb6
  ret void, !dbg !7823

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_end
  call void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17h189b8894c8e0b502E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_4), !dbg !7816
  br label %bb3, !dbg !7816

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %0, i32 0, i32 1, !dbg !7824
  store {}* null, {}** %11, align 8, !dbg !7824
  br label %bb7, !dbg !7822
}

; alloc::collections::btree::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree3mem7replace17h6861aa1a30a4a6f3E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %ret, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %v) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7825 {
start:
  %dst.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, align 8
  %src.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %value.dbg.spill = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  %t.dbg.spill = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  %change.dbg.spill = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]", align 1
  %v.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8, !rawptr !418
  %_15 = alloca i8, align 1
  %src = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8, !rawptr !418
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }, align 8
  %_7 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, align 8
  %new_value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %guard = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %ret, metadata !7844, metadata !DIExpression()), !dbg !7849
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %v.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %v.dbg.spill, metadata !7836, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.declare(metadata %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %change.dbg.spill, metadata !7837, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"* %guard, metadata !7838, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value, metadata !7840, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value, metadata !7842, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src, metadata !7855, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"* %t.dbg.spill, metadata !7866, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp, metadata !7874, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self, metadata !7893, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %slot, metadata !7901, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"* %value.dbg.spill, metadata !7909, metadata !DIExpression()), !dbg !7916
  store i8 1, i8* %_15, align 1, !dbg !7918
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %src.dbg.spill, align 8, !dbg !7919
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %src.dbg.spill, metadata !7882, metadata !DIExpression()), !dbg !7920
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to {}*, !dbg !7921
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.dbg.spill, align 8, !dbg !7891
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.dbg.spill, metadata !7927, metadata !DIExpression()), !dbg !7934
  %_18 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7934, !rawptr !418
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_18 to i8*, !dbg !7891
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !7891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !7891
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self to i8*, !dbg !7891
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to i8*, !dbg !7891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !7891
  br label %bb7, !dbg !7899

bb7:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, !dbg !7899
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %slot to i8*, !dbg !7899
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %6 to i8*, !dbg !7899
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !7899
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %slot to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7907
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value to i8*, !dbg !7907
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %9 to i8*, !dbg !7907
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !7907
  store i8 0, i8* %_15, align 1, !dbg !7936
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*, !dbg !7937
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value to i8*, !dbg !7937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !7937
  %14 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }* %_9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7936
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %14 to i8*, !dbg !7936
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*, !dbg !7936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !7936
  %17 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }* %_9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7936
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::{{closure}}
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17he84729d45c6fad57E"({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* sret({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }) %_7, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %17)
          to label %bb1 unwind label %cleanup, !dbg !7936

bb5:                                              ; preds = %cleanup
  br i1 true, label %bb4, label %bb2, !dbg !7938

cleanup:                                          ; preds = %bb7
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  %23 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_7 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7939
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value to i8*, !dbg !7939
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %23 to i8*, !dbg !7939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !7939
  %26 = getelementptr inbounds { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_7, i32 0, i32 1, !dbg !7940
  %27 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %ret to i8*, !dbg !7940
  %28 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %26 to i8*, !dbg !7940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false), !dbg !7940
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %dst.dbg.spill, align 8, !dbg !7941
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %dst.dbg.spill, metadata !7862, metadata !DIExpression()), !dbg !7864
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*, !dbg !7942
  %30 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value to i8*, !dbg !7942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false), !dbg !7942
  %31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !7864
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*, !dbg !7864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !7864
  ret void, !dbg !7943

bb2:                                              ; preds = %bb4, %bb5
  %33 = load i8, i8* %_15, align 1, !dbg !7938, !range !298, !noundef !23
  %34 = trunc i8 %33 to i1, !dbg !7938
  br i1 %34, label %bb6, label %bb3, !dbg !7938

bb4:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17h9ed4a0baa34effa7E"(%"alloc::collections::btree::mem::replace::PanicGuard"* %guard) #19
          to label %bb2 unwind label %abort, !dbg !7938

abort:                                            ; preds = %bb4
  %35 = landingpad { i8*, i32 }
          cleanup, !dbg !7944
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !7944
  unreachable, !dbg !7944

bb3:                                              ; preds = %bb6, %bb2
  %36 = bitcast { i8*, i32 }* %0 to i8**, !dbg !7944
  %37 = load i8*, i8** %36, align 8, !dbg !7944
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !7944
  %39 = load i32, i32* %38, align 8, !dbg !7944
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !7944
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !7944
  resume { i8*, i32 } %41, !dbg !7944

bb6:                                              ; preds = %bb2
  br label %bb3, !dbg !7938
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h55014cf05e20a53cE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %ret, i64 %self.0, i64* %self.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7945 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill7 = alloca i64, align 8
  %size.dbg.spill6 = alloca i64, align 8
  %1 = alloca i64, align 8
  %align.dbg.spill5 = alloca i64, align 8
  %align.dbg.spill4 = alloca i64, align 8
  %size.dbg.spill3 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill1 = alloca i64*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %node.dbg.spill = alloca i64*, align 8
  %height.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %_16 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_11 = alloca { i64, i64 }, align 8
  %_9 = alloca i8*, align 8, !rawptr !418
  %self = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret, metadata !7956, metadata !DIExpression()), !dbg !7958
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !7950, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !7951, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self, metadata !7961, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x, metadata !7982, metadata !DIExpression()), !dbg !7990
  store i64 %self.0, i64* %height.dbg.spill, align 8, !dbg !7991
  call void @llvm.dbg.declare(metadata i64* %height.dbg.spill, metadata !7952, metadata !DIExpression()), !dbg !7992
  store i64* %self.1, i64** %node.dbg.spill, align 8, !dbg !7993
  call void @llvm.dbg.declare(metadata i64** %node.dbg.spill, metadata !7954, metadata !DIExpression()), !dbg !7994
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  invoke void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5101e9d6037fa8a5E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>") %self, i64 %self.0, i64* %self.1)
          to label %bb1 unwind label %cleanup, !dbg !7989

bb8:                                              ; preds = %cleanup
  br label %bb9, !dbg !7995

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to i64*, !dbg !7988
  %_14 = load i64, i64* %10, align 8, !dbg !7988, !range !3483, !noundef !23
  switch i64 %_14, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ], !dbg !7988

bb11:                                             ; preds = %bb1
  unreachable, !dbg !7988

bb12:                                             ; preds = %bb1
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"*, !dbg !7988
  %12 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"* %11, i32 0, i32 1, !dbg !7988
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*, !dbg !7988
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %12 to i8*, !dbg !7988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !7988
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*, !dbg !7990
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*, !dbg !7990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !7990
  %17 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !7990
  %18 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %17 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7990
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %18 to i8*, !dbg !7990
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*, !dbg !7990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !7990
  br label %bb2, !dbg !7988

bb10:                                             ; preds = %bb1
  %21 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret, i32 0, i32 1, !dbg !7996
  store {}* null, {}** %21, align 8, !dbg !7996
  br label %bb2, !dbg !7988

bb2:                                              ; preds = %bb12, %bb10
  store i64* %self.1, i64** %self.dbg.spill1, align 8, !dbg !7997
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill1, metadata !7998, metadata !DIExpression()), !dbg !8005
  store i64* %self.1, i64** %self.dbg.spill2, align 8, !dbg !8005
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8006, metadata !DIExpression()), !dbg !8013
  %_21 = bitcast i64* %self.1 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8013, !rawptr !418
  %ptr = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_21 to i8*, !dbg !8005, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !8005
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !8015, metadata !DIExpression()), !dbg !8019
  store i8* %ptr, i8** %_9, align 8, !dbg !8019
  %_12 = icmp ugt i64 %self.0, 0, !dbg !8021
  br i1 %_12, label %bb3, label %bb4, !dbg !8021

bb4:                                              ; preds = %bb2
; invoke core::alloc::layout::size_align
  %22 = invoke { i64, i64 } @_ZN4core5alloc6layout10size_align17hcc3107a128799684E()
          to label %bb15 unwind label %cleanup, !dbg !8022

bb3:                                              ; preds = %bb2
; invoke core::alloc::layout::size_align
  %23 = invoke { i64, i64 } @_ZN4core5alloc6layout10size_align17h6c87caed0a231971E()
          to label %bb13 unwind label %cleanup, !dbg !8033

bb13:                                             ; preds = %bb3
  %_27.0 = extractvalue { i64, i64 } %23, 0, !dbg !8033
  %_27.1 = extractvalue { i64, i64 } %23, 1, !dbg !8033
  store i64 %_27.0, i64* %size.dbg.spill, align 8, !dbg !8033
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !8037, metadata !DIExpression()), !dbg !8042
  store i64 %_27.1, i64* %align.dbg.spill, align 8, !dbg !8033
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !8040, metadata !DIExpression()), !dbg !8042
  store i64 %_27.0, i64* %size.dbg.spill3, align 8, !dbg !8042
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill3, metadata !8043, metadata !DIExpression()), !dbg !8048
  store i64 %_27.1, i64* %align.dbg.spill4, align 8, !dbg !8042
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill4, metadata !8047, metadata !DIExpression()), !dbg !8048
  store i64 %_27.1, i64* %align.dbg.spill5, align 8, !dbg !8048
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill5, metadata !8050, metadata !DIExpression()), !dbg !8054
  store i64 %_27.1, i64* %1, align 8, !dbg !8054
  %_31 = load i64, i64* %1, align 8, !dbg !8054, !range !5753, !noundef !23
  br label %bb14, !dbg !8054

bb14:                                             ; preds = %bb13
  %24 = bitcast { i64, i64 }* %_11 to i64*, !dbg !8048
  store i64 %_27.0, i64* %24, align 8, !dbg !8048
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !8048
  store i64 %_31, i64* %25, align 8, !dbg !8048
  br label %bb5, !dbg !8056

bb5:                                              ; preds = %bb16, %bb14
  %26 = load i8*, i8** %_9, align 8, !dbg !8058, !nonnull !23, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !8058
  %28 = load i64, i64* %27, align 8, !dbg !8058
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !8058
  %30 = load i64, i64* %29, align 8, !dbg !8058, !range !5753, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %26, i64 %28, i64 %30)
          to label %bb6 unwind label %cleanup, !dbg !8058

bb15:                                             ; preds = %bb4
  %_38.0 = extractvalue { i64, i64 } %22, 0, !dbg !8022
  %_38.1 = extractvalue { i64, i64 } %22, 1, !dbg !8022
  store i64 %_38.0, i64* %size.dbg.spill6, align 8, !dbg !8022
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill6, metadata !8028, metadata !DIExpression()), !dbg !8059
  store i64 %_38.1, i64* %align.dbg.spill7, align 8, !dbg !8022
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill7, metadata !8031, metadata !DIExpression()), !dbg !8059
  store i64 %_38.0, i64* %size.dbg.spill8, align 8, !dbg !8059
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !8060, metadata !DIExpression()), !dbg !8065
  store i64 %_38.1, i64* %align.dbg.spill9, align 8, !dbg !8059
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !8064, metadata !DIExpression()), !dbg !8065
  store i64 %_38.1, i64* %align.dbg.spill10, align 8, !dbg !8065
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !8067, metadata !DIExpression()), !dbg !8071
  store i64 %_38.1, i64* %0, align 8, !dbg !8071
  %_42 = load i64, i64* %0, align 8, !dbg !8071, !range !5753, !noundef !23
  br label %bb16, !dbg !8071

bb16:                                             ; preds = %bb15
  %31 = bitcast { i64, i64 }* %_11 to i64*, !dbg !8065
  store i64 %_38.0, i64* %31, align 8, !dbg !8065
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !8065
  store i64 %_42, i64* %32, align 8, !dbg !8065
  br label %bb5, !dbg !8056

bb6:                                              ; preds = %bb5
  br label %bb7, !dbg !7995

bb9:                                              ; preds = %bb8
  %33 = bitcast { i8*, i32 }* %2 to i8**, !dbg !8073
  %34 = load i8*, i8** %33, align 8, !dbg !8073
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !8073
  %36 = load i32, i32* %35, align 8, !dbg !8073
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0, !dbg !8073
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1, !dbg !8073
  resume { i8*, i32 } %38, !dbg !8073

bb7:                                              ; preds = %bb6
  ret void, !dbg !8074
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h3df91ba1d6c979d6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #0 !dbg !8075 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8085, metadata !DIExpression()), !dbg !8088
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8089
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8089
  %_2.0 = load i64, i64* %2, align 8, !dbg !8089
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8089
  %_2.1 = load i64*, i64** %3, align 8, !dbg !8089, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8090
  %_4 = load i64, i64* %4, align 8, !dbg !8090
  %_3 = add i64 %_4, 1, !dbg !8090
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf47f891c74077144E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_3), !dbg !8091
  br label %bb1, !dbg !8091

bb1:                                              ; preds = %start
  ret void, !dbg !8092
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17he8d8f2e1ee6776c6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #0 !dbg !8093 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8103, metadata !DIExpression()), !dbg !8106
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8107
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8107
  %_2.0 = load i64, i64* %2, align 8, !dbg !8107
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8107
  %_2.1 = load i64*, i64** %3, align 8, !dbg !8107, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8108
  %_4 = load i64, i64* %4, align 8, !dbg !8108
  %_3 = add i64 %_4, 1, !dbg !8108
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h815a005dcfafedc2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_3), !dbg !8109
  br label %bb1, !dbg !8109

bb1:                                              ; preds = %start
  ret void, !dbg !8110
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb9fdf2bfeab16f90E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #0 !dbg !8111 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8115, metadata !DIExpression()), !dbg !8119
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8116, metadata !DIExpression()), !dbg !8120
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to { i64, i64* }*, !dbg !8121
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8121
  store i64 %node.0, i64* %4, align 8, !dbg !8121
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8121
  store i64* %node.1, i64** %5, align 8, !dbg !8121
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 2, !dbg !8121
  store i64 %idx, i64* %6, align 8, !dbg !8121
  ret void, !dbg !8122
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h815a005dcfafedc2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #0 !dbg !8123 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8127, metadata !DIExpression()), !dbg !8129
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8128, metadata !DIExpression()), !dbg !8130
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8131
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8131
  store i64 %node.0, i64* %4, align 8, !dbg !8131
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8131
  store i64* %node.1, i64** %5, align 8, !dbg !8131
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8131
  store i64 %idx, i64* %6, align 8, !dbg !8131
  ret void, !dbg !8132
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf40e30eef10bb2a6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #0 !dbg !8133 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8143, metadata !DIExpression()), !dbg !8145
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8144, metadata !DIExpression()), !dbg !8146
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8147
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8147
  store i64 %node.0, i64* %4, align 8, !dbg !8147
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8147
  store i64* %node.1, i64** %5, align 8, !dbg !8147
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8147
  store i64 %idx, i64* %6, align 8, !dbg !8147
  ret void, !dbg !8148
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf47f891c74077144E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #0 !dbg !8149 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8153, metadata !DIExpression()), !dbg !8155
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8154, metadata !DIExpression()), !dbg !8156
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8157
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8157
  store i64 %node.0, i64* %4, align 8, !dbg !8157
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8157
  store i64* %node.1, i64** %5, align 8, !dbg !8157
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8157
  store i64 %idx, i64* %6, align 8, !dbg !8157
  ret void, !dbg !8158
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17h8390c123fb3000a4E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 !dbg !8159 {
start:
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8178, metadata !DIExpression()), !dbg !8179
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8180
  %_3 = load i64, i64* %1, align 8, !dbg !8180
  %_5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8181
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hdd6b5636bab39150E"({ i64, i64* }* align 8 %_5), !dbg !8181
  br label %bb1, !dbg !8181

bb1:                                              ; preds = %start
  %_2 = icmp ult i64 %_3, %_4, !dbg !8180
  br i1 %_2, label %bb2, label %bb4, !dbg !8180

bb4:                                              ; preds = %bb1
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*, !dbg !8182
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to i8*, !dbg !8182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !8182
  %4 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"*, !dbg !8183
  %5 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"* %4, i32 0, i32 1, !dbg !8183
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %5 to i8*, !dbg !8183
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*, !dbg !8183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !8183
  %8 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*, !dbg !8183
  store i64 1, i64* %8, align 8, !dbg !8183
  br label %bb5, !dbg !8184

bb2:                                              ; preds = %bb1
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8185
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 0, !dbg !8185
  %_7.0 = load i64, i64* %10, align 8, !dbg !8185
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 1, !dbg !8185
  %_7.1 = load i64*, i64** %11, align 8, !dbg !8185, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8186
  %_8 = load i64, i64* %12, align 8, !dbg !8186
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb9fdf2bfeab16f90E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %_6, i64 %_7.0, i64* %_7.1, i64 %_8), !dbg !8187
  br label %bb3, !dbg !8187

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"*, !dbg !8188
  %14 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %13, i32 0, i32 1, !dbg !8188
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %14 to i8*, !dbg !8188
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*, !dbg !8188
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !8188
  %17 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*, !dbg !8188
  store i64 0, i64* %17, align 8, !dbg !8188
  br label %bb5, !dbg !8184

bb5:                                              ; preds = %bb4, %bb3
  ret void, !dbg !8189
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,Type>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hcaf4a4e45042e3ebE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #0 !dbg !8190 {
start:
  %node.dbg.spill3 = alloca { i64, i64* }, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8210, metadata !DIExpression()), !dbg !8216
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8217
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8217
  %_3.0 = load i64, i64* %2, align 8, !dbg !8217
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8217
  %_3.1 = load i64*, i64** %3, align 8, !dbg !8217, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h09b40e64bc83d0e8E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>") %_2, i64 %_3.0, i64* %_3.1), !dbg !8217
  br label %bb1, !dbg !8217

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*, !dbg !8217
  %_4 = load i64, i64* %4, align 8, !dbg !8217, !range !3483, !noundef !23
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !8218

bb3:                                              ; preds = %bb1
  unreachable, !dbg !8217

bb4:                                              ; preds = %bb1
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*, !dbg !8219
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %5, i32 0, i32 1, !dbg !8219
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0, !dbg !8219
  %node.01 = load i64, i64* %7, align 8, !dbg !8219
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1, !dbg !8219
  %node.12 = load i64*, i64** %8, align 8, !dbg !8219, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill3, i32 0, i32 0, !dbg !8219
  store i64 %node.01, i64* %9, align 8, !dbg !8219
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill3, i32 0, i32 1, !dbg !8219
  store i64* %node.12, i64** %10, align 8, !dbg !8219
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill3, metadata !8211, metadata !DIExpression()), !dbg !8220
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8221
  %_8 = load i64, i64* %11, align 8, !dbg !8221
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to { i64, i64* }*, !dbg !8222
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %12, i32 0, i32 0, !dbg !8222
  store i64 %node.01, i64* %13, align 8, !dbg !8222
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %12, i32 0, i32 1, !dbg !8222
  store i64* %node.12, i64** %14, align 8, !dbg !8222
  %15 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6, i32 0, i32 2, !dbg !8222
  store i64 %_8, i64* %15, align 8, !dbg !8222
  %16 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"*, !dbg !8223
  %17 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"* %16, i32 0, i32 1, !dbg !8223
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %17 to i8*, !dbg !8223
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*, !dbg !8223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !8223
  %20 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to i64*, !dbg !8223
  store i64 0, i64* %20, align 8, !dbg !8223
  br label %bb5, !dbg !8224

bb2:                                              ; preds = %bb1
  %21 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*, !dbg !8225
  %22 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %21, i32 0, i32 1, !dbg !8225
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %22, i32 0, i32 0, !dbg !8225
  %node.0 = load i64, i64* %23, align 8, !dbg !8225
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %22, i32 0, i32 1, !dbg !8225
  %node.1 = load i64*, i64** %24, align 8, !dbg !8225, !nonnull !23, !noundef !23
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0, !dbg !8225
  store i64 %node.0, i64* %25, align 8, !dbg !8225
  %26 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1, !dbg !8225
  store i64* %node.1, i64** %26, align 8, !dbg !8225
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8213, metadata !DIExpression()), !dbg !8226
  %27 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8227
  %_12 = load i64, i64* %27, align 8, !dbg !8227
  %28 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to { i64, i64* }*, !dbg !8228
  %29 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %28, i32 0, i32 0, !dbg !8228
  store i64 %node.0, i64* %29, align 8, !dbg !8228
  %30 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %28, i32 0, i32 1, !dbg !8228
  store i64* %node.1, i64** %30, align 8, !dbg !8228
  %31 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10, i32 0, i32 2, !dbg !8228
  store i64 %_12, i64* %31, align 8, !dbg !8228
  %32 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"*, !dbg !8229
  %33 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"* %32, i32 0, i32 1, !dbg !8229
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %33 to i8*, !dbg !8229
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to i8*, !dbg !8229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !8229
  %36 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to i64*, !dbg !8229
  store i64 1, i64* %36, align 8, !dbg !8229
  br label %bb5, !dbg !8230

bb5:                                              ; preds = %bb4, %bb2
  ret void, !dbg !8231
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h3e78732f6afe1257E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #1 !dbg !8232 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8241
  %count.dbg.spill18 = alloca i64, align 8, !dbg !8241
  %self.dbg.spill17 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8241
  %count.dbg.spill16 = alloca i64, align 8, !dbg !8241
  %self.dbg.spill15 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8241
  %self.dbg.spill13 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, align 8, !dbg !8241
  %slice.dbg.spill12 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, align 8, !dbg !8241
  %self.dbg.spill11 = alloca i64, align 8, !dbg !8241
  %index.dbg.spill10 = alloca i64, align 8, !dbg !8241
  %self.dbg.spill8 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, align 8, !dbg !8241
  %1 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8, !dbg !8241
  %count.dbg.spill6 = alloca i64, align 8, !dbg !8241
  %self.dbg.spill5 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8, !dbg !8241
  %count.dbg.spill = alloca i64, align 8, !dbg !8241
  %self.dbg.spill4 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8, !dbg !8241
  %self.dbg.spill2 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, align 8, !dbg !8241
  %slice.dbg.spill = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, align 8, !dbg !8241
  %self.dbg.spill1 = alloca i64, align 8, !dbg !8241
  %index.dbg.spill = alloca i64, align 8, !dbg !8241
  %self.dbg.spill = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, align 8, !dbg !8241
  %leaf.dbg.spill = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8241
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8236, metadata !DIExpression()), !dbg !8241
  %_3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8242
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,Type>::as_leaf_dying
  %leaf = call align 8 %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$Type$GT$13as_leaf_dying17h1f2379036ae3410cE"({ i64, i64* }* align 8 %_3), !dbg !8242
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %leaf, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf.dbg.spill, align 8, !dbg !8242
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf.dbg.spill, metadata !8237, metadata !DIExpression()), !dbg !8243
  br label %bb1, !dbg !8242

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %leaf, i32 0, i32 1, !dbg !8244
  %self.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %_8 to [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, !dbg !8244, !rawptr !418
  %2 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !8244
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]** %2, align 8, !dbg !8244
  %3 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !8244
  store i64 11, i64* %3, align 8, !dbg !8244
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill, metadata !8245, metadata !DIExpression()), !dbg !8260
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8261
  %index = load i64, i64* %4, align 8, !dbg !8261, !rawptr !418
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !8261
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !8256, metadata !DIExpression()), !dbg !8260
  store i64 %index, i64* %self.dbg.spill1, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !8262, metadata !DIExpression()), !dbg !8285
  %5 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !8260
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]** %5, align 8, !dbg !8260
  %6 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !8260
  store i64 11, i64* %6, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %slice.dbg.spill, metadata !8274, metadata !DIExpression()), !dbg !8285
  %7 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !8285
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]** %7, align 8, !dbg !8285
  %8 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !8285
  store i64 11, i64* %8, align 8, !dbg !8285
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill2, metadata !8287, metadata !DIExpression()), !dbg !8293
  %self3 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0 to %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, !dbg !8293, !rawptr !418
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self3, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill4, align 8, !dbg !8293
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill4, metadata !8295, metadata !DIExpression()), !dbg !8302
  store i64 %index, i64* %count.dbg.spill, align 8, !dbg !8285
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !8301, metadata !DIExpression()), !dbg !8302
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self3, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill5, align 8, !dbg !8302
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill5, metadata !8303, metadata !DIExpression()), !dbg !8310
  store i64 %index, i64* %count.dbg.spill6, align 8, !dbg !8302
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !8309, metadata !DIExpression()), !dbg !8310
  %9 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self3, i64 %index, !dbg !8310
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %9, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %1, align 8, !dbg !8310
  %_30 = load %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %1, align 8, !dbg !8310, !rawptr !418
  br label %bb4, !dbg !8310

bb4:                                              ; preds = %bb1
; call core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h4d58a7e204cdda1dE"(%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* align 8 %_30), !dbg !8244
  br label %bb2, !dbg !8244

bb2:                                              ; preds = %bb4
  %_14 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %leaf, i32 0, i32 2, !dbg !8312
  %self.07 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %_14 to [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, !dbg !8312, !rawptr !418
  %10 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill8, i32 0, i32 0, !dbg !8312
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07, [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]** %10, align 8, !dbg !8312
  %11 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill8, i32 0, i32 1, !dbg !8312
  store i64 11, i64* %11, align 8, !dbg !8312
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill8, metadata !8313, metadata !DIExpression()), !dbg !8327
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8328
  %index9 = load i64, i64* %12, align 8, !dbg !8328, !rawptr !418
  store i64 %index9, i64* %index.dbg.spill10, align 8, !dbg !8328
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill10, metadata !8324, metadata !DIExpression()), !dbg !8327
  store i64 %index9, i64* %self.dbg.spill11, align 8, !dbg !8327
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill11, metadata !8329, metadata !DIExpression()), !dbg !8350
  %13 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %slice.dbg.spill12, i32 0, i32 0, !dbg !8327
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07, [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]** %13, align 8, !dbg !8327
  %14 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %slice.dbg.spill12, i32 0, i32 1, !dbg !8327
  store i64 11, i64* %14, align 8, !dbg !8327
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %slice.dbg.spill12, metadata !8340, metadata !DIExpression()), !dbg !8350
  %15 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !8350
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07, [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]** %15, align 8, !dbg !8350
  %16 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !8350
  store i64 11, i64* %16, align 8, !dbg !8350
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill13, metadata !8352, metadata !DIExpression()), !dbg !8358
  %self14 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07 to %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8358, !rawptr !418
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self14, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill15, align 8, !dbg !8358
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill15, metadata !8360, metadata !DIExpression()), !dbg !8367
  store i64 %index9, i64* %count.dbg.spill16, align 8, !dbg !8350
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill16, metadata !8366, metadata !DIExpression()), !dbg !8367
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self14, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill17, align 8, !dbg !8367
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill17, metadata !8368, metadata !DIExpression()), !dbg !8375
  store i64 %index9, i64* %count.dbg.spill18, align 8, !dbg !8367
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill18, metadata !8374, metadata !DIExpression()), !dbg !8375
  %17 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self14, i64 %index9, !dbg !8375
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %17, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %0, align 8, !dbg !8375
  %_48 = load %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %0, align 8, !dbg !8375, !rawptr !418
  br label %bb5, !dbg !8375

bb5:                                              ; preds = %bb2
; call core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h15d11afacc377d43E"(%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_48), !dbg !8312
  br label %bb3, !dbg !8312

bb3:                                              ; preds = %bb5
  ret void, !dbg !8377
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h50a5750fb4f55baeE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 !dbg !8378 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8382, metadata !DIExpression()), !dbg !8383
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8384
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8384
  %_3.0 = load i64, i64* %2, align 8, !dbg !8384
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8384
  %_3.1 = load i64*, i64** %3, align 8, !dbg !8384, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17h3256c35dca3acab9E"(i64 %_3.0, i64* %_3.1), !dbg !8384
  %_2.0 = extractvalue { i64, i64* } %4, 0, !dbg !8384
  %_2.1 = extractvalue { i64, i64* } %4, 1, !dbg !8384
  br label %bb1, !dbg !8384

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8385
  %_4 = load i64, i64* %5, align 8, !dbg !8385
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf40e30eef10bb2a6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_4), !dbg !8386
  br label %bb2, !dbg !8386

bb2:                                              ; preds = %bb1
  ret void, !dbg !8387
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hc795042e42c23f11E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 !dbg !8388 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8392, metadata !DIExpression()), !dbg !8393
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8394
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8394
  %_3.0 = load i64, i64* %2, align 8, !dbg !8394
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8394
  %_3.1 = load i64*, i64** %3, align 8, !dbg !8394, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17hf0d4364e798a6935E"(i64 %_3.0, i64* %_3.1), !dbg !8394
  %_2.0 = extractvalue { i64, i64* } %4, 0, !dbg !8394
  %_2.1 = extractvalue { i64, i64* } %4, 1, !dbg !8394
  br label %bb1, !dbg !8394

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8395
  %_4 = load i64, i64* %5, align 8, !dbg !8395
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf40e30eef10bb2a6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_4), !dbg !8396
  br label %bb2, !dbg !8396

bb2:                                              ; preds = %bb1
  ret void, !dbg !8397
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h278c88ab0b769b59E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 !dbg !8398 {
start:
  %node.dbg.spill = alloca i64*, align 8
  %slot.dbg.spill = alloca i64*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill11 = alloca i8**, align 8
  %src.dbg.spill = alloca i64**, align 8
  %self.dbg.spill10 = alloca i64**, align 8
  %self.dbg.spill8 = alloca i8**, align 8
  %self.dbg.spill7 = alloca i8**, align 8
  %0 = alloca i8**, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8**, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca i8**, align 8
  %self.dbg.spill2 = alloca { [0 x i8*]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8*]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8*]*, i64 }, align 8
  %parent_ptr.dbg.spill = alloca %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %tmp = alloca i8*, align 8, !rawptr !418
  %1 = alloca { i64, i64* }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8402, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !8409, metadata !DIExpression()), !dbg !8419
  br i1 false, label %bb1, label %bb2, !dbg !8434

bb2:                                              ; preds = %start
  %_6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8435, !rawptr !418
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_ptr
  %parent_ptr = call %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17h890b3620526f2a76E"({ i64, i64* }* align 8 %_6), !dbg !8436
  store %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %parent_ptr, %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %parent_ptr.dbg.spill, align 8, !dbg !8436
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %parent_ptr.dbg.spill, metadata !8403, metadata !DIExpression()), !dbg !8437
  br label %bb3, !dbg !8436

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [47 x i8] }>* @alloc464 to [0 x i8]*), i64 47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc463 to %"core::panic::location::Location"*)) #18, !dbg !8434
  unreachable, !dbg !8434

bb3:                                              ; preds = %bb2
  %_11 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %parent_ptr, i32 0, i32 1, !dbg !8433
  %self.0 = bitcast [12 x i8*]* %_11 to [0 x i8*]*, !dbg !8433, !rawptr !418
  %2 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !8433
  store [0 x i8*]* %self.0, [0 x i8*]** %2, align 8, !dbg !8433
  %3 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !8433
  store i64 12, i64* %3, align 8, !dbg !8433
  call void @llvm.dbg.declare(metadata { [0 x i8*]*, i64 }* %self.dbg.spill, metadata !8438, metadata !DIExpression()), !dbg !8452
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8453
  %index = load i64, i64* %4, align 8, !dbg !8453, !rawptr !418
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !8453
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !8449, metadata !DIExpression()), !dbg !8452
  store i64 %index, i64* %self.dbg.spill1, align 8, !dbg !8452
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !8454, metadata !DIExpression()), !dbg !8476
  %5 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !8452
  store [0 x i8*]* %self.0, [0 x i8*]** %5, align 8, !dbg !8452
  %6 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !8452
  store i64 12, i64* %6, align 8, !dbg !8452
  call void @llvm.dbg.declare(metadata { [0 x i8*]*, i64 }* %slice.dbg.spill, metadata !8465, metadata !DIExpression()), !dbg !8476
  %7 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !8476
  store [0 x i8*]* %self.0, [0 x i8*]** %7, align 8, !dbg !8476
  %8 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !8476
  store i64 12, i64* %8, align 8, !dbg !8476
  call void @llvm.dbg.declare(metadata { [0 x i8*]*, i64 }* %self.dbg.spill2, metadata !8478, metadata !DIExpression()), !dbg !8484
  %self3 = bitcast [0 x i8*]* %self.0 to i8**, !dbg !8484, !rawptr !418
  store i8** %self3, i8*** %self.dbg.spill4, align 8, !dbg !8484
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill4, metadata !8486, metadata !DIExpression()), !dbg !8493
  store i64 %index, i64* %count.dbg.spill, align 8, !dbg !8476
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i8** %self3, i8*** %self.dbg.spill5, align 8, !dbg !8493
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill5, metadata !8494, metadata !DIExpression()), !dbg !8501
  store i64 %index, i64* %count.dbg.spill6, align 8, !dbg !8493
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !8500, metadata !DIExpression()), !dbg !8501
  %9 = getelementptr inbounds i8*, i8** %self3, i64 %index, !dbg !8501
  store i8** %9, i8*** %0, align 8, !dbg !8501
  %_16 = load i8**, i8*** %0, align 8, !dbg !8501, !rawptr !418
  br label %bb4, !dbg !8501

bb4:                                              ; preds = %bb3
  store i8** %_16, i8*** %self.dbg.spill7, align 8, !dbg !8433
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill7, metadata !8431, metadata !DIExpression()), !dbg !8503
  br label %bb5, !dbg !8503

bb5:                                              ; preds = %bb4
  store i8** %_16, i8*** %self.dbg.spill8, align 8, !dbg !8503
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill8, metadata !8504, metadata !DIExpression()), !dbg !8510
  %self9 = bitcast i8** %_16 to i64**, !dbg !8510, !rawptr !418
  store i64** %self9, i64*** %self.dbg.spill10, align 8, !dbg !8510
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill10, metadata !8423, metadata !DIExpression()), !dbg !8511
  store i64** %self9, i64*** %src.dbg.spill, align 8, !dbg !8511
  call void @llvm.dbg.declare(metadata i64*** %src.dbg.spill, metadata !8417, metadata !DIExpression()), !dbg !8512
  %10 = bitcast i8** %tmp to {}*, !dbg !8513
  store i8** %tmp, i8*** %self.dbg.spill11, align 8, !dbg !8419
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill11, metadata !8519, metadata !DIExpression()), !dbg !8527
  %_37 = bitcast i8** %tmp to i64**, !dbg !8527, !rawptr !418
  %11 = bitcast i64** %_37 to i8*, !dbg !8419
  %12 = bitcast i64** %self9 to i8*, !dbg !8419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !8419
  %self12 = load i8*, i8** %tmp, align 8, !dbg !8419
  store i8* %self12, i8** %self.dbg.spill13, align 8, !dbg !8419
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !8529, metadata !DIExpression()), !dbg !8535
  br label %bb6, !dbg !8535

bb6:                                              ; preds = %bb5
  %slot = bitcast i8* %self12 to i64*, !dbg !8535
  store i64* %slot, i64** %slot.dbg.spill, align 8, !dbg !8535
  call void @llvm.dbg.declare(metadata i64** %slot.dbg.spill, metadata !8537, metadata !DIExpression()), !dbg !8543
  store i64* %slot, i64** %node.dbg.spill, align 8, !dbg !8543
  call void @llvm.dbg.declare(metadata i64** %node.dbg.spill, metadata !8406, metadata !DIExpression()), !dbg !8545
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8546
  %14 = bitcast { i64, i64* }* %13 to i64*, !dbg !8546
  %_15 = load i64, i64* %14, align 8, !dbg !8546
  %_14 = sub i64 %_15, 1, !dbg !8546
  %15 = bitcast { i64, i64* }* %1 to i64*, !dbg !8547
  store i64 %_14, i64* %15, align 8, !dbg !8547
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8547
  store i64* %slot, i64** %16, align 8, !dbg !8547
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8548
  %18 = load i64, i64* %17, align 8, !dbg !8548
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8548
  %20 = load i64*, i64** %19, align 8, !dbg !8548, !nonnull !23, !noundef !23
  %21 = insertvalue { i64, i64* } undef, i64 %18, 0, !dbg !8548
  %22 = insertvalue { i64, i64* } %21, i64* %20, 1, !dbg !8548
  ret { i64, i64* } %22, !dbg !8548
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17he7e683b6a64520d4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 !dbg !8549 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8555
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8555
  %2 = load i64, i64* %1, align 8, !dbg !8555
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8555
  %4 = load i64*, i64** %3, align 8, !dbg !8555, !nonnull !23, !noundef !23
  %5 = insertvalue { i64, i64* } undef, i64 %2, 0, !dbg !8556
  %6 = insertvalue { i64, i64* } %5, i64* %4, 1, !dbg !8556
  ret { i64, i64* } %6, !dbg !8556
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h5c24819afbbba3bbE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8557 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8561, metadata !DIExpression()), !dbg !8562
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h815a005dcfafedc2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1, i64 0), !dbg !8563
  br label %bb1, !dbg !8563

bb1:                                              ; preds = %start
  ret void, !dbg !8564
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17hd457110759ca66abE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8565 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8569, metadata !DIExpression()), !dbg !8570
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf47f891c74077144E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1, i64 0), !dbg !8571
  br label %bb1, !dbg !8571

bb1:                                              ; preds = %start
  ret void, !dbg !8572
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hb2b340a320916b6dE"({ i64, i64* }* align 8 %this) unnamed_addr #0 !dbg !8573 {
start:
  %self.dbg.spill = alloca i64*, align 8
  %this.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %this, { i64, i64* }** %this.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %this.dbg.spill, metadata !8578, metadata !DIExpression()), !dbg !8579
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1, !dbg !8580
  %self = load i64*, i64** %0, align 8, !dbg !8580, !nonnull !23, !noundef !23
  store i64* %self, i64** %self.dbg.spill, align 8, !dbg !8580
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8581, metadata !DIExpression()), !dbg !8585
  %_3 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8585, !rawptr !418
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3, !dbg !8586
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hdd6b5636bab39150E"({ i64, i64* }* align 8 %self) unnamed_addr #0 !dbg !8587 {
start:
  %small.dbg.spill = alloca i16, align 2
  %self.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %self, { i64, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %self.dbg.spill, metadata !8591, metadata !DIExpression()), !dbg !8592
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %_3 = call %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hb2b340a320916b6dE"({ i64, i64* }* align 8 %self), !dbg !8593
  br label %bb1, !dbg !8593

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3, i32 0, i32 4, !dbg !8594
  %small = load i16, i16* %0, align 2, !dbg !8594
  store i16 %small, i16* %small.dbg.spill, align 2, !dbg !8594
  call void @llvm.dbg.declare(metadata i16* %small.dbg.spill, metadata !8595, metadata !DIExpression()), !dbg !8604
  %1 = zext i16 %small to i64, !dbg !8604
  ret i64 %1, !dbg !8606
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5101e9d6037fa8a5E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>") %0, i64 %1, i64* %2) unnamed_addr #0 !dbg !8607 {
start:
  %err.dbg.spill = alloca { i64, i64* }, align 8
  %x.dbg.spill = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_21 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %v = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca { i64*, i64* }, align 8
  %_11 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  %self1 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %leaf_ptr = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !rawptr !418
  %self = alloca { i64, i64* }, align 8, !rawptr !418
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self, metadata !8611, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, metadata !8612, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self1, metadata !8616, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v, metadata !8623, metadata !DIExpression()), !dbg !8628
  br i1 false, label %bb1, label %bb2, !dbg !8629

bb2:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %_5 = call %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hb2b340a320916b6dE"({ i64, i64* }* align 8 %self), !dbg !8630, !rawptr !418
  br label %bb3, !dbg !8630

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [47 x i8] }>* @alloc464 to [0 x i8]*), i64 47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc466 to %"core::panic::location::Location"*)) #18, !dbg !8629
  unreachable, !dbg !8629

bb3:                                              ; preds = %bb2
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_5, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, align 8, !dbg !8630
  %5 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, align 8, !dbg !8631
  %6 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %5 to i64**, !dbg !8631
  %7 = load i64*, i64** %6, align 8, !dbg !8631
  store i64* %7, i64** %_11, align 8, !dbg !8631
  store i64** %_11, i64*** %self.dbg.spill, align 8, !dbg !8627
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8632, metadata !DIExpression()), !dbg !8642
  %8 = bitcast i64** %_11 to {}**, !dbg !8642
  %9 = load {}*, {}** %8, align 8, !dbg !8642
  %10 = icmp eq {}* %9, null, !dbg !8642
  %_16 = select i1 %10, i64 0, i64 1, !dbg !8642
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !8642

bb7:                                              ; preds = %bb3
  unreachable, !dbg !8642

bb6:                                              ; preds = %bb3
  %11 = bitcast i64** %_9 to {}**, !dbg !8642
  store {}* null, {}** %11, align 8, !dbg !8642
  br label %bb4, !dbg !8642

bb8:                                              ; preds = %bb3
  store i64** %_11, i64*** %x.dbg.spill, align 8, !dbg !8642
  call void @llvm.dbg.declare(metadata i64*** %x.dbg.spill, metadata !8639, metadata !DIExpression()), !dbg !8643
  %12 = bitcast i64** %_9 to i64***, !dbg !8643
  store i64** %_11, i64*** %12, align 8, !dbg !8643
  br label %bb4, !dbg !8642

bb4:                                              ; preds = %bb6, %bb8
  %_13 = bitcast { i64, i64* }* %self to i64*, !dbg !8644
  %13 = bitcast { i64*, i64* }* %_12 to i64**, !dbg !8644
  store i64* %_13, i64** %13, align 8, !dbg !8644
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !8644
  %15 = bitcast i64** %14 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"***, !dbg !8644
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*** %15, align 8, !dbg !8644
  %16 = load i64*, i64** %_9, align 8, !dbg !8627, !align !378
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 0, !dbg !8627
  %18 = load i64*, i64** %17, align 8, !dbg !8627, !nonnull !23, !align !378, !noundef !23
  %19 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !8627
  %20 = load i64*, i64** %19, align 8, !dbg !8627, !nonnull !23, !align !378, !noundef !23
; call core::option::Option<T>::map
  call void @"_ZN4core6option15Option$LT$T$GT$3map17he55e82bfcd2f51a5E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %self1, i64* align 8 %16, i64* align 8 %18, i64* align 8 %20), !dbg !8627
  br label %bb5, !dbg !8627

bb5:                                              ; preds = %bb4
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0, !dbg !8645
  %err.0 = load i64, i64* %21, align 8, !dbg !8645
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1, !dbg !8645
  %err.1 = load i64*, i64** %22, align 8, !dbg !8645, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %err.dbg.spill, i32 0, i32 0, !dbg !8645
  store i64 %err.0, i64* %23, align 8, !dbg !8645
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %err.dbg.spill, i32 0, i32 1, !dbg !8645
  store i64* %err.1, i64** %24, align 8, !dbg !8645
  call void @llvm.dbg.declare(metadata { i64, i64* }* %err.dbg.spill, metadata !8622, metadata !DIExpression()), !dbg !8626
  %25 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self1, i32 0, i32 1, !dbg !8626
  %26 = load {}*, {}** %25, align 8, !dbg !8626
  %27 = icmp eq {}* %26, null, !dbg !8626
  %_19 = select i1 %27, i64 0, i64 1, !dbg !8626
  switch i64 %_19, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !8626

bb10:                                             ; preds = %bb5
  unreachable, !dbg !8626

bb9:                                              ; preds = %bb5
  %28 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err"*, !dbg !8626
  %29 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err"* %28, i32 0, i32 1, !dbg !8626
  %30 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %29, i32 0, i32 0, !dbg !8626
  store i64 %err.0, i64* %30, align 8, !dbg !8626
  %31 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %29, i32 0, i32 1, !dbg !8626
  store i64* %err.1, i64** %31, align 8, !dbg !8626
  %32 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to i64*, !dbg !8626
  store i64 1, i64* %32, align 8, !dbg !8626
  br label %bb12, !dbg !8626

bb11:                                             ; preds = %bb5
  %33 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self1 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !8626
  %34 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %33 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8626
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !8626
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %34 to i8*, !dbg !8626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !8626
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_21 to i8*, !dbg !8628
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !8628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false), !dbg !8628
  %39 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"*, !dbg !8628
  %40 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"* %39, i32 0, i32 1, !dbg !8628
  %41 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %40 to i8*, !dbg !8628
  %42 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_21 to i8*, !dbg !8628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !8628
  %43 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to i64*, !dbg !8628
  store i64 0, i64* %43, align 8, !dbg !8628
  br label %bb12, !dbg !8626

bb12:                                             ; preds = %bb9, %bb11
  ret void, !dbg !8646
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hd294fbed258e1537E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64* align 8 %_1.0, i64* align 8 %_1.1, i64** align 8 %parent) unnamed_addr #1 !dbg !8647 {
start:
  %small.dbg.spill = alloca i16, align 2
  %slot.dbg.spill = alloca i16, align 2
  %self.dbg.spill = alloca i16, align 2
  %parent.dbg.spill = alloca i64**, align 8
  %_1.dbg.spill = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1.dbg.spill, i32 0, i32 0
  store i64* %_1.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1.dbg.spill, i32 0, i32 1
  store i64* %_1.1, i64** %2, align 8
  %3 = bitcast { i64*, i64* }* %_1.dbg.spill to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1.dbg.spill, metadata !8652, metadata !DIExpression(DW_OP_deref)), !dbg !8654
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1.dbg.spill, i32 0, i32 1
  %6 = bitcast i64** %5 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"***
  %7 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*** %6, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1.dbg.spill, metadata !8653, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !8655
  store i64** %parent, i64*** %parent.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %parent.dbg.spill, metadata !8651, metadata !DIExpression()), !dbg !8656
  %_4 = load i64*, i64** %parent, align 8, !dbg !8657, !nonnull !23, !noundef !23
  %_6 = load i64, i64* %_1.0, align 8, !dbg !8658
  %_5 = add i64 %_6, 1, !dbg !8658
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::from_internal
  %8 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17h28781281238a36c7E"(i64* %_4, i64 %_5), !dbg !8659
  %_3.0 = extractvalue { i64, i64* } %8, 0, !dbg !8659
  %_3.1 = extractvalue { i64, i64* } %8, 1, !dbg !8659
  br label %bb1, !dbg !8659

bb1:                                              ; preds = %start
  %_11 = bitcast i64* %_1.1 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !8660
  %_12 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_11, align 8, !dbg !8660, !rawptr !418
  %9 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_12, i32 0, i32 3, !dbg !8660
  %self = load i16, i16* %9, align 8, !dbg !8660
  store i16 %self, i16* %self.dbg.spill, align 2, !dbg !8660
  call void @llvm.dbg.declare(metadata i16* %self.dbg.spill, metadata !8661, metadata !DIExpression()), !dbg !8667
  br label %bb2, !dbg !8667

bb2:                                              ; preds = %bb1
  store i16 %self, i16* %slot.dbg.spill, align 2, !dbg !8667
  call void @llvm.dbg.declare(metadata i16* %slot.dbg.spill, metadata !8668, metadata !DIExpression()), !dbg !8674
  store i16 %self, i16* %small.dbg.spill, align 2, !dbg !8674
  call void @llvm.dbg.declare(metadata i16* %small.dbg.spill, metadata !8676, metadata !DIExpression()), !dbg !8680
  %_7 = zext i16 %self to i64, !dbg !8680
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8682
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 0, !dbg !8682
  store i64 %_3.0, i64* %11, align 8, !dbg !8682
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 1, !dbg !8682
  store i64* %_3.1, i64** %12, align 8, !dbg !8682
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8682
  store i64 %_7, i64* %13, align 8, !dbg !8682
  ret void, !dbg !8683
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,Type>::as_leaf_dying
; Function Attrs: nonlazybind uwtable
define internal align 8 %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$Type$GT$13as_leaf_dying17h1f2379036ae3410cE"({ i64, i64* }* align 8 %self) unnamed_addr #0 !dbg !8684 {
start:
  %ptr.dbg.spill = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %self, { i64, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %self.dbg.spill, metadata !8689, metadata !DIExpression()), !dbg !8693
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %ptr = call %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hb2b340a320916b6dE"({ i64, i64* }* align 8 %self), !dbg !8694
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, align 8, !dbg !8694
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, metadata !8690, metadata !DIExpression()), !dbg !8695
  br label %bb1, !dbg !8694

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, !dbg !8696
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,Type>::into_dying
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$Type$GT$10into_dying17h848264588b0c6279E"(i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8697 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8701, metadata !DIExpression()), !dbg !8702
  %3 = bitcast { i64, i64* }* %0 to i64*, !dbg !8703
  store i64 %self.0, i64* %3, align 8, !dbg !8703
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8703
  store i64* %self.1, i64** %4, align 8, !dbg !8703
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8704
  %6 = load i64, i64* %5, align 8, !dbg !8704
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8704
  %8 = load i64*, i64** %7, align 8, !dbg !8704, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8704
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8704
  ret { i64, i64* } %10, !dbg !8704
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17h3256c35dca3acab9E"(i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8705 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8709, metadata !DIExpression()), !dbg !8710
  %3 = bitcast { i64, i64* }* %0 to i64*, !dbg !8711
  store i64 %self.0, i64* %3, align 8, !dbg !8711
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8711
  store i64* %self.1, i64** %4, align 8, !dbg !8711
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8712
  %6 = load i64, i64* %5, align 8, !dbg !8712
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8712
  %8 = load i64*, i64** %7, align 8, !dbg !8712, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8712
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8712
  ret { i64, i64* } %10, !dbg !8712
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17hf0d4364e798a6935E"(i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8713 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8717, metadata !DIExpression()), !dbg !8718
  %3 = bitcast { i64, i64* }* %0 to i64*, !dbg !8719
  store i64 %self.0, i64* %3, align 8, !dbg !8719
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8719
  store i64* %self.1, i64** %4, align 8, !dbg !8719
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8720
  %6 = load i64, i64* %5, align 8, !dbg !8720
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8720
  %8 = load i64*, i64** %7, align 8, !dbg !8720, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8720
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8720
  ret { i64, i64* } %10, !dbg !8720
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::from_internal
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17h28781281238a36c7E"(i64* %node, i64 %height) unnamed_addr #0 !dbg !8721 {
start:
  %ptr.dbg.spill = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill1 = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %height.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %0 = alloca { i64, i64* }, align 8
  store i64* %node, i64** %node.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %node.dbg.spill, metadata !8725, metadata !DIExpression()), !dbg !8727
  store i64 %height, i64* %height.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %height.dbg.spill, metadata !8726, metadata !DIExpression()), !dbg !8728
  store i64* %node, i64** %self.dbg.spill, align 8, !dbg !8729
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8730, metadata !DIExpression()), !dbg !8738
  store i64* %node, i64** %self.dbg.spill1, align 8, !dbg !8738
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill1, metadata !8739, metadata !DIExpression()), !dbg !8745
  %_9 = bitcast i64* %node to %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8745, !rawptr !418
  %ptr = bitcast %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_9 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8738, !rawptr !418
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, align 8, !dbg !8738
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, metadata !8747, metadata !DIExpression()), !dbg !8753
  %1 = bitcast i64** %_4 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !8753, !rawptr !418
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %1, align 8, !dbg !8753
  %2 = bitcast { i64, i64* }* %0 to i64*, !dbg !8755
  store i64 %height, i64* %2, align 8, !dbg !8755
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8755
  %4 = load i64*, i64** %_4, align 8, !dbg !8755, !nonnull !23, !noundef !23
  store i64* %4, i64** %3, align 8, !dbg !8755
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8756
  %6 = load i64, i64* %5, align 8, !dbg !8756
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8756
  %8 = load i64*, i64** %7, align 8, !dbg !8756, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8756
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8756
  ret { i64, i64* } %10, !dbg !8756
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17h890b3620526f2a76E"({ i64, i64* }* align 8 %this) unnamed_addr #0 !dbg !8757 {
start:
  %self.dbg.spill = alloca i64*, align 8
  %this.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %this, { i64, i64* }** %this.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %this.dbg.spill, metadata !8762, metadata !DIExpression()), !dbg !8763
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1, !dbg !8764
  %self = load i64*, i64** %0, align 8, !dbg !8764, !nonnull !23, !noundef !23
  store i64* %self, i64** %self.dbg.spill, align 8, !dbg !8764
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8765, metadata !DIExpression()), !dbg !8769
  %_4 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8769, !rawptr !418
  %1 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8764, !rawptr !418
  ret %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %1, !dbg !8770
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h09b40e64bc83d0e8E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>") %0, i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8771 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %_6 = alloca { i64, i64* }, align 8
  %_3 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8791, metadata !DIExpression()), !dbg !8792
  %3 = icmp eq i64 %self.0, 0, !dbg !8793
  br i1 %3, label %bb1, label %bb2, !dbg !8793

bb1:                                              ; preds = %start
  %4 = bitcast { i64, i64* }* %_3 to i64*, !dbg !8794
  store i64 %self.0, i64* %4, align 8, !dbg !8794
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 1, !dbg !8794
  store i64* %self.1, i64** %5, align 8, !dbg !8794
  %6 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*, !dbg !8795
  %7 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %6, i32 0, i32 1, !dbg !8795
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 0, !dbg !8795
  %9 = load i64, i64* %8, align 8, !dbg !8795
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 1, !dbg !8795
  %11 = load i64*, i64** %10, align 8, !dbg !8795, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %7, i32 0, i32 0, !dbg !8795
  store i64 %9, i64* %12, align 8, !dbg !8795
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %7, i32 0, i32 1, !dbg !8795
  store i64* %11, i64** %13, align 8, !dbg !8795
  %14 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*, !dbg !8795
  store i64 0, i64* %14, align 8, !dbg !8795
  br label %bb3, !dbg !8796

bb2:                                              ; preds = %start
  %15 = bitcast { i64, i64* }* %_6 to i64*, !dbg !8797
  store i64 %self.0, i64* %15, align 8, !dbg !8797
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 1, !dbg !8797
  store i64* %self.1, i64** %16, align 8, !dbg !8797
  %17 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*, !dbg !8798
  %18 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %17, i32 0, i32 1, !dbg !8798
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 0, !dbg !8798
  %20 = load i64, i64* %19, align 8, !dbg !8798
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 1, !dbg !8798
  %22 = load i64*, i64** %21, align 8, !dbg !8798, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %18, i32 0, i32 0, !dbg !8798
  store i64 %20, i64* %23, align 8, !dbg !8798
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %18, i32 0, i32 1, !dbg !8798
  store i64* %22, i64** %24, align 8, !dbg !8798
  %25 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*, !dbg !8798
  store i64 1, i64* %25, align 8, !dbg !8798
  br label %bb3, !dbg !8796

bb3:                                              ; preds = %bb1, %bb2
  ret void, !dbg !8799
}

; alloc::collections::btree::navigate::full_range
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree8navigate10full_range17h1a89ec6e9fc01634E(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, i64 %root1.0, i64* %root1.1, i64 %root2.0, i64* %root2.1) unnamed_addr #0 !dbg !8800 {
start:
  %root2.dbg.spill = alloca { i64, i64* }, align 8
  %root1.dbg.spill = alloca { i64, i64* }, align 8
  %_7 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_6 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_4 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_3 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root1.dbg.spill, i32 0, i32 0
  store i64 %root1.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root1.dbg.spill, i32 0, i32 1
  store i64* %root1.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root1.dbg.spill, metadata !8805, metadata !DIExpression()), !dbg !8807
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root2.dbg.spill, i32 0, i32 0
  store i64 %root2.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root2.dbg.spill, i32 0, i32 1
  store i64* %root2.1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root2.dbg.spill, metadata !8806, metadata !DIExpression()), !dbg !8808
  %5 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !8809
  %6 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %5, i32 0, i32 1, !dbg !8809
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0, !dbg !8809
  store i64 %root1.0, i64* %7, align 8, !dbg !8809
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1, !dbg !8809
  store i64* %root1.1, i64** %8, align 8, !dbg !8809
  %9 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to i64*, !dbg !8809
  store i64 0, i64* %9, align 8, !dbg !8809
  %10 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !8810
  %11 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %10 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8810
  %12 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %11 to i8*, !dbg !8810
  %13 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to i8*, !dbg !8810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !8810
  %14 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !8811
  %15 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %14, i32 0, i32 1, !dbg !8811
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 0, !dbg !8811
  store i64 %root2.0, i64* %16, align 8, !dbg !8811
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 1, !dbg !8811
  store i64* %root2.1, i64** %17, align 8, !dbg !8811
  %18 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i64*, !dbg !8811
  store i64 0, i64* %18, align 8, !dbg !8811
  %19 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !8812
  %20 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %19 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8812
  %21 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %20 to i8*, !dbg !8812
  %22 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i8*, !dbg !8812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false), !dbg !8812
  %23 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !8813
  %24 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %23 to i8*, !dbg !8813
  %25 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to i8*, !dbg !8813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false), !dbg !8813
  %26 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 1, !dbg !8813
  %27 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %26 to i8*, !dbg !8813
  %28 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to i8*, !dbg !8813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false), !dbg !8813
  ret void, !dbg !8814
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h31736a08cfb9f009E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8815 {
start:
  %leaf.dbg.spill = alloca { i64, i64* }, align 8
  %internal.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  %node = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8819, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node, metadata !8820, metadata !DIExpression()), !dbg !8827
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0, !dbg !8828
  store i64 %self.0, i64* %3, align 8, !dbg !8828
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1, !dbg !8828
  store i64* %self.1, i64** %4, align 8, !dbg !8828
  br label %bb1, !dbg !8829

bb1:                                              ; preds = %bb8, %start
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0, !dbg !8830
  %_4.0 = load i64, i64* %5, align 8, !dbg !8830
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1, !dbg !8830
  %_4.1 = load i64*, i64** %6, align 8, !dbg !8830, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h09b40e64bc83d0e8E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>") %_3, i64 %_4.0, i64* %_4.1), !dbg !8830
  br label %bb2, !dbg !8830

bb2:                                              ; preds = %bb1
  %7 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to i64*, !dbg !8830
  %_5 = load i64, i64* %7, align 8, !dbg !8830, !range !3483, !noundef !23
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ], !dbg !8831

bb4:                                              ; preds = %bb2
  unreachable, !dbg !8830

bb5:                                              ; preds = %bb2
  %8 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*, !dbg !8832
  %9 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %8, i32 0, i32 1, !dbg !8832
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 0, !dbg !8832
  %leaf.0 = load i64, i64* %10, align 8, !dbg !8832
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 1, !dbg !8832
  %leaf.1 = load i64*, i64** %11, align 8, !dbg !8832, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %leaf.dbg.spill, i32 0, i32 0, !dbg !8832
  store i64 %leaf.0, i64* %12, align 8, !dbg !8832
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %leaf.dbg.spill, i32 0, i32 1, !dbg !8832
  store i64* %leaf.1, i64** %13, align 8, !dbg !8832
  call void @llvm.dbg.declare(metadata { i64, i64* }* %leaf.dbg.spill, metadata !8822, metadata !DIExpression()), !dbg !8833
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17hd457110759ca66abE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %leaf.0, i64* %leaf.1), !dbg !8834
  br label %bb6, !dbg !8834

bb3:                                              ; preds = %bb2
  %14 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*, !dbg !8835
  %15 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %14, i32 0, i32 1, !dbg !8835
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 0, !dbg !8835
  %internal.0 = load i64, i64* %16, align 8, !dbg !8835
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 1, !dbg !8835
  %internal.1 = load i64*, i64** %17, align 8, !dbg !8835, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %internal.dbg.spill, i32 0, i32 0, !dbg !8835
  store i64 %internal.0, i64* %18, align 8, !dbg !8835
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %internal.dbg.spill, i32 0, i32 1, !dbg !8835
  store i64* %internal.1, i64** %19, align 8, !dbg !8835
  call void @llvm.dbg.declare(metadata { i64, i64* }* %internal.dbg.spill, metadata !8824, metadata !DIExpression()), !dbg !8836
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h5c24819afbbba3bbE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %_10, i64 %internal.0, i64* %internal.1), !dbg !8837
  br label %bb7, !dbg !8837

bb7:                                              ; preds = %bb3
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %20 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h278c88ab0b769b59E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10), !dbg !8837
  %_9.0 = extractvalue { i64, i64* } %20, 0, !dbg !8837
  %_9.1 = extractvalue { i64, i64* } %20, 1, !dbg !8837
  br label %bb8, !dbg !8837

bb8:                                              ; preds = %bb7
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0, !dbg !8838
  store i64 %_9.0, i64* %21, align 8, !dbg !8838
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1, !dbg !8838
  store i64* %_9.1, i64** %22, align 8, !dbg !8838
  br label %bb1, !dbg !8829

bb6:                                              ; preds = %bb5
  ret void, !dbg !8839
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::full_range
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17hc1846c3e5363f932E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, i64 %1, i64* %2) unnamed_addr #0 !dbg !8840 {
start:
  %self2.dbg.spill = alloca { i64, i64* }, align 8
  %slot.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill1 = alloca { i64, i8* }, align 8
  %self.dbg.spill = alloca { i64, i8* }*, align 8
  %src.dbg.spill = alloca { i64, i64* }*, align 8
  %tmp = alloca { i64, i8* }, align 8, !rawptr !418
  %self = alloca { i64, i64* }, align 8, !rawptr !418
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self, metadata !8844, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.declare(metadata { i64, i8* }* %tmp, metadata !8848, metadata !DIExpression()), !dbg !8867
  store { i64, i64* }* %self, { i64, i64* }** %src.dbg.spill, align 8, !dbg !8869
  call void @llvm.dbg.declare(metadata { i64, i64* }** %src.dbg.spill, metadata !8856, metadata !DIExpression()), !dbg !8870
  %5 = bitcast { i64, i8* }* %tmp to {}*, !dbg !8871
  store { i64, i8* }* %tmp, { i64, i8* }** %self.dbg.spill, align 8, !dbg !8867
  call void @llvm.dbg.declare(metadata { i64, i8* }** %self.dbg.spill, metadata !8877, metadata !DIExpression()), !dbg !8885
  %_9 = bitcast { i64, i8* }* %tmp to { i64, i64* }*, !dbg !8885, !rawptr !418
  %6 = bitcast { i64, i64* }* %_9 to i8*, !dbg !8867
  %7 = bitcast { i64, i64* }* %self to i8*, !dbg !8867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false), !dbg !8867
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0, !dbg !8867
  %self.0 = load i64, i64* %8, align 8, !dbg !8867
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1, !dbg !8867
  %self.1 = load i8*, i8** %9, align 8, !dbg !8867
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill1, i32 0, i32 0, !dbg !8867
  store i64 %self.0, i64* %10, align 8, !dbg !8867
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill1, i32 0, i32 1, !dbg !8867
  store i8* %self.1, i8** %11, align 8, !dbg !8867
  call void @llvm.dbg.declare(metadata { i64, i8* }* %self.dbg.spill1, metadata !8887, metadata !DIExpression()), !dbg !8893
  br label %bb2, !dbg !8893

bb2:                                              ; preds = %start
  %slot.1 = bitcast i8* %self.1 to i64*, !dbg !8893
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 0, !dbg !8893
  store i64 %self.0, i64* %12, align 8, !dbg !8893
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 1, !dbg !8893
  store i64* %slot.1, i64** %13, align 8, !dbg !8893
  call void @llvm.dbg.declare(metadata { i64, i64* }* %slot.dbg.spill, metadata !8895, metadata !DIExpression()), !dbg !8901
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self2.dbg.spill, i32 0, i32 0, !dbg !8901
  store i64 %self.0, i64* %14, align 8, !dbg !8901
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self2.dbg.spill, i32 0, i32 1, !dbg !8901
  store i64* %slot.1, i64** %15, align 8, !dbg !8901
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self2.dbg.spill, metadata !8845, metadata !DIExpression()), !dbg !8903
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0, !dbg !8904
  %_5.0 = load i64, i64* %16, align 8, !dbg !8904
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1, !dbg !8904
  %_5.1 = load i64*, i64** %17, align 8, !dbg !8904, !nonnull !23, !noundef !23
; call alloc::collections::btree::navigate::full_range
  call void @_ZN5alloc11collections5btree8navigate10full_range17h1a89ec6e9fc01634E(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, i64 %_5.0, i64* %_5.1, i64 %self.0, i64* %slot.1), !dbg !8905
  br label %bb1, !dbg !8905

bb1:                                              ; preds = %bb2
  ret void, !dbg !8906
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h18f48e8ddc73bee9E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #0 !dbg !8907 {
start:
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %next_internal_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %internal_kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %leaf_kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_3 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8911, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv, metadata !8912, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv, metadata !8914, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %next_internal_edge, metadata !8916, metadata !DIExpression()), !dbg !8921
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_3 to i8*, !dbg !8922
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to i8*, !dbg !8922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !8922
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,Type>::force
  call void @"_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hcaf4a4e45042e3ebE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>") %_2, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_3), !dbg !8922
  br label %bb1, !dbg !8922

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to i64*, !dbg !8922
  %_4 = load i64, i64* %3, align 8, !dbg !8922, !range !3483, !noundef !23
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !8923

bb3:                                              ; preds = %bb1
  unreachable, !dbg !8922

bb4:                                              ; preds = %bb1
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"*, !dbg !8924
  %5 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"* %4, i32 0, i32 1, !dbg !8924
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv to i8*, !dbg !8924
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %5 to i8*, !dbg !8924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !8924
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*, !dbg !8925
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv to i8*, !dbg !8925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !8925
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h3df91ba1d6c979d6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6), !dbg !8925
  br label %bb5, !dbg !8925

bb2:                                              ; preds = %bb1
  %10 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"*, !dbg !8926
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"* %10, i32 0, i32 1, !dbg !8926
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*, !dbg !8926
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %11 to i8*, !dbg !8926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !8926
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_9 to i8*, !dbg !8927
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*, !dbg !8927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !8927
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17he8d8f2e1ee6776c6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %next_internal_edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_9), !dbg !8927
  br label %bb6, !dbg !8927

bb6:                                              ; preds = %bb2
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*, !dbg !8928
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %next_internal_edge to i8*, !dbg !8928
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false), !dbg !8928
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %18 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h278c88ab0b769b59E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11), !dbg !8928
  %_10.0 = extractvalue { i64, i64* } %18, 0, !dbg !8928
  %_10.1 = extractvalue { i64, i64* } %18, 1, !dbg !8928
  br label %bb7, !dbg !8928

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h31736a08cfb9f009E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_10.0, i64* %_10.1), !dbg !8928
  br label %bb8, !dbg !8928

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !8929

bb9:                                              ; preds = %bb5, %bb8
  ret void, !dbg !8930

bb5:                                              ; preds = %bb4
  br label %bb9, !dbg !8931
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_end
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17hec1c06f48a7b3557E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8932 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_5 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8936, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !8937, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge, metadata !8938, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge, metadata !8940, metadata !DIExpression()), !dbg !8945
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*, !dbg !8946
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to i8*, !dbg !8946
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !8946
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h50a5750fb4f55baeE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4)
          to label %bb1 unwind label %cleanup, !dbg !8946

bb10:                                             ; preds = %cleanup
  br label %bb11, !dbg !8947

cleanup:                                          ; preds = %bb6, %bb4, %bb3, %bb2, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb1:                                              ; preds = %start
  br label %bb2, !dbg !8948

bb2:                                              ; preds = %bb7, %bb1
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7 to i8*, !dbg !8949
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !8949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !8949
; invoke alloc::collections::btree::node::Handle<Node,Type>::into_node
  %10 = invoke { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17he7e683b6a64520d4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7)
          to label %bb3 unwind label %cleanup, !dbg !8949

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { i64, i64* } %10, 0, !dbg !8949
  %_6.1 = extractvalue { i64, i64* } %10, 1, !dbg !8949
; invoke <alloc::alloc::Global as core::clone::Clone>::clone
  invoke void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h939ef3bcebe397e4E"(%"alloc::alloc::Global"* align 1 %alloc)
          to label %bb4 unwind label %cleanup, !dbg !8950

bb4:                                              ; preds = %bb3
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  invoke void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h55014cf05e20a53cE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %_5, i64 %_6.0, i64* %_6.1)
          to label %bb5 unwind label %cleanup, !dbg !8949

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_5, i32 0, i32 1, !dbg !8951
  %12 = load {}*, {}** %11, align 8, !dbg !8951
  %13 = icmp eq {}* %12, null, !dbg !8951
  %_10 = select i1 %13, i64 0, i64 1, !dbg !8951
  %14 = icmp eq i64 %_10, 1, !dbg !8951
  br i1 %14, label %bb6, label %bb8, !dbg !8951

bb6:                                              ; preds = %bb5
  %15 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_5 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !8945
  %16 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %15 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8945
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !8945
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*, !dbg !8945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !8945
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_13 to i8*, !dbg !8952
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !8952
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !8952
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hc795042e42c23f11E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %_12, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_13)
          to label %bb7 unwind label %cleanup, !dbg !8952

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !8947

bb9:                                              ; preds = %bb8
  ret void, !dbg !8953

bb7:                                              ; preds = %bb6
  %21 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !8954
  %22 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*, !dbg !8954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false), !dbg !8954
  br label %bb2, !dbg !8948

bb11:                                             ; preds = %bb10
  %23 = bitcast { i8*, i32 }* %0 to i8**, !dbg !8955
  %24 = load i8*, i8** %23, align 8, !dbg !8955
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !8955
  %26 = load i32, i32* %25, align 8, !dbg !8955
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0, !dbg !8955
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1, !dbg !8955
  resume { i8*, i32 } %28, !dbg !8955
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17h426aa1ed3198066fE"(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* sret(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8956 {
start:
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"*, align 8
  %src.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  %self1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8, !rawptr !418
  %_24 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_19 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_17 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %last_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8, !rawptr !418
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8977, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !8978, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge, metadata !8979, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, metadata !8981, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge, metadata !8983, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge, metadata !8985, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp, metadata !8993, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %self1, metadata !9012, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %slot, metadata !9020, metadata !DIExpression()), !dbg !9026
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*, !dbg !9028
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to i8*, !dbg !9028
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !9028
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h50a5750fb4f55baeE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4)
          to label %bb1 unwind label %cleanup, !dbg !9028

bb17:                                             ; preds = %cleanup
  br label %bb18, !dbg !9029

cleanup:                                          ; preds = %bb19, %bb13, %bb9, %bb8, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb17

bb1:                                              ; preds = %start
  br label %bb2, !dbg !9030

bb2:                                              ; preds = %bb14, %bb1
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7 to i8*, !dbg !9031
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !9031
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17h8390c123fb3000a4E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>") %_6, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7)
          to label %bb3 unwind label %cleanup, !dbg !9031

bb3:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_6 to i64*, !dbg !9031
  %_8 = load i64, i64* %11, align 8, !dbg !9031, !range !3483, !noundef !23
  switch i64 %_8, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !9032

bb5:                                              ; preds = %bb3
  unreachable, !dbg !9031

bb6:                                              ; preds = %bb3
  %12 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_6 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"*, !dbg !9033
  %13 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %12, i32 0, i32 1, !dbg !9033
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !9033
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %13 to i8*, !dbg !9033
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !9033
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %src.dbg.spill, align 8, !dbg !9034
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %src.dbg.spill, metadata !9001, metadata !DIExpression()), !dbg !9035
  %16 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp to {}*, !dbg !9036
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"** %self.dbg.spill, align 8, !dbg !9010
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"** %self.dbg.spill, metadata !9042, metadata !DIExpression()), !dbg !9050
  %_27 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !9050, !rawptr !418
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_27 to i8*, !dbg !9010
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !9010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !9010
  %19 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %self1 to i8*, !dbg !9010
  %20 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp to i8*, !dbg !9010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !9010
  br label %bb19, !dbg !9018

bb4:                                              ; preds = %bb3
  %21 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_6 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"*, !dbg !9052
  %22 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"* %21, i32 0, i32 1, !dbg !9052
  %23 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*, !dbg !9052
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %22 to i8*, !dbg !9052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false), !dbg !9052
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_19 to i8*, !dbg !9053
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*, !dbg !9053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !9053
; invoke alloc::collections::btree::node::Handle<Node,Type>::into_node
  %27 = invoke { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17he7e683b6a64520d4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_19)
          to label %bb8 unwind label %cleanup, !dbg !9053

bb8:                                              ; preds = %bb4
  %_18.0 = extractvalue { i64, i64* } %27, 0, !dbg !9053
  %_18.1 = extractvalue { i64, i64* } %27, 1, !dbg !9053
; invoke <alloc::alloc::Global as core::clone::Clone>::clone
  invoke void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h939ef3bcebe397e4E"(%"alloc::alloc::Global"* align 1 %alloc)
          to label %bb9 unwind label %cleanup, !dbg !9054

bb9:                                              ; preds = %bb8
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  invoke void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h55014cf05e20a53cE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %_17, i64 %_18.0, i64* %_18.1)
          to label %bb10 unwind label %cleanup, !dbg !9053

bb10:                                             ; preds = %bb9
  %28 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_17, i32 0, i32 1, !dbg !9055
  %29 = load {}*, {}** %28, align 8, !dbg !9055
  %30 = icmp eq {}* %29, null, !dbg !9055
  %_22 = select i1 %30, i64 0, i64 1, !dbg !9055
  switch i64 %_22, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ], !dbg !9056

bb12:                                             ; preds = %bb10
  unreachable, !dbg !9055

bb11:                                             ; preds = %bb10
  %31 = getelementptr inbounds %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %0, i32 0, i32 1, !dbg !9057
  store {}* null, {}** %31, align 8, !dbg !9057
  br label %bb15, !dbg !9058

bb13:                                             ; preds = %bb10
  %32 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_17 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9060
  %33 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %32 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9060
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !9060
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %33 to i8*, !dbg !9060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !9060
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_24 to i8*, !dbg !9061
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !9061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false), !dbg !9061
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hc795042e42c23f11E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %_5, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_24)
          to label %bb14 unwind label %cleanup, !dbg !9061

bb14:                                             ; preds = %bb13
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9062
  %39 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*, !dbg !9062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !9062
  br label %bb2, !dbg !9030

bb15:                                             ; preds = %bb7, %bb11
  br label %bb16, !dbg !9029

bb19:                                             ; preds = %bb6
  %40 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %self1 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"*, !dbg !9018
  %41 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %slot to i8*, !dbg !9018
  %42 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %40 to i8*, !dbg !9018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !9018
  %43 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %slot to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !9026
  %44 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_12 to i8*, !dbg !9026
  %45 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %43 to i8*, !dbg !9026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false), !dbg !9026
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
  invoke void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h18f48e8ddc73bee9E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %_11, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_12)
          to label %bb7 unwind label %cleanup, !dbg !9063

bb7:                                              ; preds = %bb19
  %46 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_15 to i8*, !dbg !9064
  %47 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !9064
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !9064
  %48 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_10 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9065
  %49 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %48 to i8*, !dbg !9065
  %50 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*, !dbg !9065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false), !dbg !9065
  %51 = getelementptr inbounds { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_10, i32 0, i32 1, !dbg !9065
  %52 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %51 to i8*, !dbg !9065
  %53 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_15 to i8*, !dbg !9065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false), !dbg !9065
  %54 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %0 to %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"*, !dbg !9066
  %55 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"* %54 to { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }*, !dbg !9066
  %56 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %55 to i8*, !dbg !9066
  %57 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_10 to i8*, !dbg !9066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 48, i1 false), !dbg !9066
  br label %bb15, !dbg !9058

bb18:                                             ; preds = %bb17
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9067
  %59 = load i8*, i8** %58, align 8, !dbg !9067
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9067
  %61 = load i32, i32* %60, align 8, !dbg !9067
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !9067
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !9067
  resume { i8*, i32 } %63, !dbg !9067

bb16:                                             ; preds = %bb15
  ret void, !dbg !9068
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked17h6f18ca69ff8e33b2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %self) unnamed_addr #0 !dbg !9069 {
start:
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %_4 = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]", align 1
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self.dbg.spill, metadata !9073, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9074, metadata !DIExpression()), !dbg !9076
  %1 = bitcast %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %_4 to %"alloc::alloc::Global"*, !dbg !9077
; call alloc::collections::btree::mem::replace
  call void @_ZN5alloc11collections5btree3mem7replace17h6861aa1a30a4a6f3E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %self), !dbg !9078
  br label %bb1, !dbg !9078

bb1:                                              ; preds = %start
  ret void, !dbg !9079
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17he84729d45c6fad57E"({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* sret({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge) unnamed_addr #1 !dbg !9080 {
start:
  %_1.dbg.spill = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]", align 1
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", align 8
  %1 = bitcast %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill to %"alloc::alloc::Global"*
  call void @llvm.dbg.declare(metadata %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge, metadata !9084, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.declare(metadata %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %self, metadata !9088, metadata !DIExpression()), !dbg !9097
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*, !dbg !9098
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge to i8*, !dbg !9098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !9098
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next
  call void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17h426aa1ed3198066fE"(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* sret(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>") %self, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4), !dbg !9098
  br label %bb1, !dbg !9098

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %self, i32 0, i32 1, !dbg !9097
  %5 = load {}*, {}** %4, align 8, !dbg !9097
  %6 = icmp eq {}* %5, null, !dbg !9097
  %_6 = select i1 %6, i64 0, i64 1, !dbg !9097
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !9097

bb3:                                              ; preds = %bb1
  unreachable, !dbg !9097

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc470 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc469 to %"core::panic::location::Location"*)) #18, !dbg !9097
  unreachable, !dbg !9097

bb4:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %self to %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"*, !dbg !9097
  %8 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"* %7 to { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }*, !dbg !9097
  %9 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %0 to i8*, !dbg !9097
  %10 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %8 to i8*, !dbg !9097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 48, i1 false), !dbg !9097
  ret void, !dbg !9099
}

; alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::init_front
; Function Attrs: nonlazybind uwtable
define internal align 8 i64* @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h4610506af1dc0bd3E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 !dbg !9100 {
start:
  %edge.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %slot.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill2 = alloca { i64, i8* }, align 8
  %self.dbg.spill1 = alloca { i64, i8* }*, align 8
  %src.dbg.spill = alloca { i64, i64* }*, align 8
  %root.dbg.spill = alloca { i64, i64* }*, align 8
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %tmp = alloca { i64, i8* }, align 8, !rawptr !418
  %_8 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_7 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_6 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %0 = alloca i64*, align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9118, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.declare(metadata { i64, i8* }* %tmp, metadata !9124, metadata !DIExpression()), !dbg !9131
  %_2 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9133
  %1 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to i64*, !dbg !9134
  %2 = load i64, i64* %1, align 8, !dbg !9134, !range !5035, !noundef !23
  %3 = sub i64 %2, 2, !dbg !9134
  %4 = icmp eq i64 %3, 0, !dbg !9134
  %_4 = select i1 %4, i64 0, i64 1, !dbg !9134
  %5 = icmp eq i64 %_4, 1, !dbg !9134
  br i1 %5, label %bb1, label %bb4, !dbg !9134

bb1:                                              ; preds = %start
  %6 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9134
  %7 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %6 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9134
  %8 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %7 to i64*, !dbg !9134
  %_3 = load i64, i64* %8, align 8, !dbg !9134, !range !3483, !noundef !23
  %9 = icmp eq i64 %_3, 0, !dbg !9134
  br i1 %9, label %bb2, label %bb4, !dbg !9134

bb4:                                              ; preds = %bb3, %bb1, %start
  %_11 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9135
  %10 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_11 to i64*, !dbg !9135
  %11 = load i64, i64* %10, align 8, !dbg !9135, !range !5035, !noundef !23
  %12 = sub i64 %11, 2, !dbg !9135
  %13 = icmp eq i64 %12, 0, !dbg !9135
  %_13 = select i1 %13, i64 0, i64 1, !dbg !9135
  switch i64 %_13, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb5
  ], !dbg !9136

bb2:                                              ; preds = %bb1
  %14 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9137
  %15 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %14 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9137
  %16 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %15 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !9137
  %root = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %16, i32 0, i32 1, !dbg !9137, !rawptr !418
  store { i64, i64* }* %root, { i64, i64* }** %root.dbg.spill, align 8, !dbg !9137
  call void @llvm.dbg.declare(metadata { i64, i64* }** %root.dbg.spill, metadata !9119, metadata !DIExpression()), !dbg !9137
  store { i64, i64* }* %root, { i64, i64* }** %src.dbg.spill, align 8, !dbg !9138
  call void @llvm.dbg.declare(metadata { i64, i64* }** %src.dbg.spill, metadata !9129, metadata !DIExpression()), !dbg !9139
  %17 = bitcast { i64, i8* }* %tmp to {}*, !dbg !9140
  store { i64, i8* }* %tmp, { i64, i8* }** %self.dbg.spill1, align 8, !dbg !9131
  call void @llvm.dbg.declare(metadata { i64, i8* }** %self.dbg.spill1, metadata !9144, metadata !DIExpression()), !dbg !9148
  %_18 = bitcast { i64, i8* }* %tmp to { i64, i64* }*, !dbg !9148, !rawptr !418
  %18 = bitcast { i64, i64* }* %_18 to i8*, !dbg !9131
  %19 = bitcast { i64, i64* }* %root to i8*, !dbg !9131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !9131
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0, !dbg !9131
  %self.0 = load i64, i64* %20, align 8, !dbg !9131
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1, !dbg !9131
  %self.1 = load i8*, i8** %21, align 8, !dbg !9131
  %22 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 0, !dbg !9131
  store i64 %self.0, i64* %22, align 8, !dbg !9131
  %23 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 1, !dbg !9131
  store i8* %self.1, i8** %23, align 8, !dbg !9131
  call void @llvm.dbg.declare(metadata { i64, i8* }* %self.dbg.spill2, metadata !9150, metadata !DIExpression()), !dbg !9154
  br label %bb11, !dbg !9154

bb11:                                             ; preds = %bb2
  %slot.1 = bitcast i8* %self.1 to i64*, !dbg !9154
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 0, !dbg !9154
  store i64 %self.0, i64* %24, align 8, !dbg !9154
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 1, !dbg !9154
  store i64* %slot.1, i64** %25, align 8, !dbg !9154
  call void @llvm.dbg.declare(metadata { i64, i64* }* %slot.dbg.spill, metadata !9156, metadata !DIExpression()), !dbg !9160
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h31736a08cfb9f009E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %_8, i64 %self.0, i64* %slot.1), !dbg !9162
  br label %bb3, !dbg !9162

bb3:                                              ; preds = %bb11
  %26 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"*, !dbg !9163
  %27 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"* %26, i32 0, i32 1, !dbg !9163
  %28 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %27 to i8*, !dbg !9163
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_8 to i8*, !dbg !9163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false), !dbg !9163
  %30 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i64*, !dbg !9163
  store i64 1, i64* %30, align 8, !dbg !9163
  %31 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9164
  %32 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %31 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9164
  %33 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %32 to i8*, !dbg !9164
  %34 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i8*, !dbg !9164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false), !dbg !9164
  %35 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9165
  %36 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %35 to i8*, !dbg !9165
  %37 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to i8*, !dbg !9165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false), !dbg !9165
  br label %bb4, !dbg !9166

bb7:                                              ; preds = %bb5, %bb4
  unreachable, !dbg !9135

bb8:                                              ; preds = %bb4
  %38 = bitcast i64** %0 to {}**, !dbg !9167
  store {}* null, {}** %38, align 8, !dbg !9167
  br label %bb10, !dbg !9167

bb5:                                              ; preds = %bb4
  %39 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_11 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9135
  %40 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %39 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9135
  %41 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %40 to i64*, !dbg !9135
  %_12 = load i64, i64* %41, align 8, !dbg !9135, !range !3483, !noundef !23
  switch i64 %_12, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb9
  ], !dbg !9136

bb6:                                              ; preds = %bb5
  unreachable, !dbg !9168

bb9:                                              ; preds = %bb5
  %42 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_11 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9172
  %43 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %42 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9172
  %44 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %43 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"*, !dbg !9172
  %edge = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"* %44, i32 0, i32 1, !dbg !9172
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %edge.dbg.spill, align 8, !dbg !9172
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %edge.dbg.spill, metadata !9121, metadata !DIExpression()), !dbg !9173
  %45 = bitcast i64** %0 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"**, !dbg !9174
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %45, align 8, !dbg !9174
  br label %bb10, !dbg !9175

bb10:                                             ; preds = %bb8, %bb9
  %46 = load i64*, i64** %0, align 8, !dbg !9176, !align !378
  ret i64* %46, !dbg !9176
}

; alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::none
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$4none17h98716b5a8b6b4e9fE"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0) unnamed_addr #0 !dbg !9177 {
start:
  %_2 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_1 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %1 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_1 to i64*, !dbg !9180
  store i64 2, i64* %1, align 8, !dbg !9180
  %2 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to i64*, !dbg !9181
  store i64 2, i64* %2, align 8, !dbg !9181
  %3 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9182
  %4 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %3 to i8*, !dbg !9182
  %5 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_1 to i8*, !dbg !9182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false), !dbg !9182
  %6 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 1, !dbg !9182
  %7 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %6 to i8*, !dbg !9182
  %8 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to i8*, !dbg !9182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !9182
  ret void, !dbg !9183
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::take_front
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17h4115b0d485ebae6fE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>") %0, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 !dbg !9184 {
start:
  %root.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill4 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_20 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %v = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_17 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %val = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %self1 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_3 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_2 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9199, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1, metadata !9209, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !9200, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !9236, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %val, metadata !9202, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge, metadata !9206, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %v, metadata !9230, metadata !DIExpression()), !dbg !9246
  %self3 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9234
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self3, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, metadata !9247, metadata !DIExpression()), !dbg !9253
  %1 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_17 to i64*, !dbg !9253
  store i64 2, i64* %1, align 8, !dbg !9253
; call core::mem::replace
  call void @_ZN4core3mem7replace17h22a454e450d8beccE(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* sret(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>") %self1, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* align 8 %self3, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_17), !dbg !9253
  br label %bb11, !dbg !9253

bb11:                                             ; preds = %start
  %2 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to i64*, !dbg !9233
  %3 = load i64, i64* %2, align 8, !dbg !9233, !range !5035, !noundef !23
  %4 = sub i64 %3, 2, !dbg !9233
  %5 = icmp eq i64 %4, 0, !dbg !9233
  %_18 = select i1 %5, i64 0, i64 1, !dbg !9233
  switch i64 %_18, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ], !dbg !9233

bb13:                                             ; preds = %bb11
  unreachable, !dbg !9233

bb12:                                             ; preds = %bb11
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to i64*, !dbg !9233
  store i64 2, i64* %6, align 8, !dbg !9233
  br label %bb1, !dbg !9233

bb14:                                             ; preds = %bb11
  %7 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9233
  %8 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %7 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9233
  %9 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %v to i8*, !dbg !9233
  %10 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %8 to i8*, !dbg !9233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !9233
  %11 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_20 to i8*, !dbg !9246
  %12 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %v to i8*, !dbg !9246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false), !dbg !9246
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"*, !dbg !9246
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"* %13 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9246
  %15 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %14 to i8*, !dbg !9246
  %16 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_20 to i8*, !dbg !9246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !dbg !9246
  br label %bb1, !dbg !9233

bb1:                                              ; preds = %bb12, %bb14
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to i64*, !dbg !9234
  %18 = load i64, i64* %17, align 8, !dbg !9234, !range !5035, !noundef !23
  %19 = sub i64 %18, 2, !dbg !9234
  %20 = icmp eq i64 %19, 0, !dbg !9234
  %_6 = select i1 %20, i64 1, i64 0, !dbg !9234
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !9234

bb3:                                              ; preds = %bb1
  unreachable, !dbg !9234

bb2:                                              ; preds = %bb1
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"*, !dbg !9234
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"* %21 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9234
  %23 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %val to i8*, !dbg !9234
  %24 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %22 to i8*, !dbg !9234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false), !dbg !9234
  %25 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to i8*, !dbg !9244
  %26 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %val to i8*, !dbg !9244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false), !dbg !9244
  %27 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to i64*, !dbg !9234
  %_10 = load i64, i64* %27, align 8, !dbg !9234, !range !3483, !noundef !23
  switch i64 %_10, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ], !dbg !9254

bb4:                                              ; preds = %bb1
  %28 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1, !dbg !9242
  store {}* null, {}** %28, align 8, !dbg !9242
  br label %bb10, !dbg !9255

bb10:                                             ; preds = %bb9, %bb4
  ret void, !dbg !9255

bb6:                                              ; preds = %bb2
  unreachable, !dbg !9234

bb7:                                              ; preds = %bb2
  %29 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !9256
  %30 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %29, i32 0, i32 1, !dbg !9256
  %31 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %30, i32 0, i32 0, !dbg !9256
  %root.0 = load i64, i64* %31, align 8, !dbg !9256
  %32 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %30, i32 0, i32 1, !dbg !9256
  %root.1 = load i64*, i64** %32, align 8, !dbg !9256, !nonnull !23, !noundef !23
  %33 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 0, !dbg !9256
  store i64 %root.0, i64* %33, align 8, !dbg !9256
  %34 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 1, !dbg !9256
  store i64* %root.1, i64** %34, align 8, !dbg !9256
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root.dbg.spill, metadata !9204, metadata !DIExpression()), !dbg !9257
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h31736a08cfb9f009E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %_12, i64 %root.0, i64* %root.1), !dbg !9258
  br label %bb8, !dbg !9258

bb5:                                              ; preds = %bb2
  %35 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"*, !dbg !9259
  %36 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"* %35, i32 0, i32 1, !dbg !9259
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9259
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %36 to i8*, !dbg !9259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false), !dbg !9259
  %39 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_15 to i8*, !dbg !9260
  %40 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false), !dbg !9260
  %41 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9261
  %42 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %41 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9261
  %43 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %42 to i8*, !dbg !9261
  %44 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_15 to i8*, !dbg !9261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false), !dbg !9261
  br label %bb9, !dbg !9262

bb9:                                              ; preds = %bb8, %bb5
  br label %bb10, !dbg !9255

bb8:                                              ; preds = %bb7
  %45 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9263
  %46 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %45 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9263
  %47 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %46 to i8*, !dbg !9263
  %48 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*, !dbg !9263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !9263
  br label %bb9, !dbg !9264
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17h189b8894c8e0b502E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9265 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %front = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9269, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9270, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front, metadata !9271, metadata !DIExpression()), !dbg !9275
  store i8 1, i8* %_9, align 1, !dbg !9276
; invoke alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::take_front
  invoke void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17h4115b0d485ebae6fE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>") %_3, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self)
          to label %bb1 unwind label %cleanup, !dbg !9276

bb9:                                              ; preds = %cleanup
  %1 = load i8, i8* %_9, align 1, !dbg !9277, !range !298, !noundef !23
  %2 = trunc i8 %1 to i1, !dbg !9277
  br i1 %2, label %bb8, label %bb6, !dbg !9277

cleanup:                                          ; preds = %bb2, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3, i32 0, i32 1, !dbg !9278
  %9 = load {}*, {}** %8, align 8, !dbg !9278
  %10 = icmp eq {}* %9, null, !dbg !9278
  %_5 = select i1 %10, i64 0, i64 1, !dbg !9278
  %11 = icmp eq i64 %_5, 1, !dbg !9278
  br i1 %11, label %bb2, label %bb4, !dbg !9278

bb2:                                              ; preds = %bb1
  %12 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9275
  %13 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %12 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9275
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front to i8*, !dbg !9275
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %13 to i8*, !dbg !9275
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !9275
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_7 to i8*, !dbg !9279
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front to i8*, !dbg !9279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false), !dbg !9279
  store i8 0, i8* %_9, align 1, !dbg !9280
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_end
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17hec1c06f48a7b3557E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_7)
          to label %bb3 unwind label %cleanup, !dbg !9279

bb4:                                              ; preds = %bb3, %bb1
  %18 = load i8, i8* %_9, align 1, !dbg !9277, !range !298, !noundef !23
  %19 = trunc i8 %18 to i1, !dbg !9277
  br i1 %19, label %bb7, label %bb5, !dbg !9277

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !9281

bb6:                                              ; preds = %bb8, %bb9
  %20 = bitcast { i8*, i32 }* %0 to i8**, !dbg !9282
  %21 = load i8*, i8** %20, align 8, !dbg !9282
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !9282
  %23 = load i32, i32* %22, align 8, !dbg !9282
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !9282
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !9282
  resume { i8*, i32 } %25, !dbg !9282

bb8:                                              ; preds = %bb9
  br label %bb6, !dbg !9277

bb5:                                              ; preds = %bb7, %bb4
  ret void, !dbg !9283

bb7:                                              ; preds = %bb4
  br label %bb5, !dbg !9277
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_next_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17ha8e0d476af1cb7f6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9284 {
start:
  %front.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_9 = alloca i8, align 1
  %self1 = alloca i64*, align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9288, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9289, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !9294, metadata !DIExpression()), !dbg !9303
  store i8 1, i8* %_9, align 1, !dbg !9305
; invoke alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::init_front
  %2 = invoke align 8 i64* @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h4610506af1dc0bd3E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self)
          to label %bb1 unwind label %cleanup, !dbg !9304

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_9, align 1, !dbg !9306, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !9306
  br i1 %4, label %bb4, label %bb3, !dbg !9306

cleanup:                                          ; preds = %bb6, %bb8, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i64* %2, i64** %self1, align 8, !dbg !9304
  %10 = bitcast i64** %self1 to {}**, !dbg !9303
  %11 = load {}*, {}** %10, align 8, !dbg !9303
  %12 = icmp eq {}* %11, null, !dbg !9303
  %_10 = select i1 %12, i64 0, i64 1, !dbg !9303
  switch i64 %_10, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !9303

bb7:                                              ; preds = %bb1
  unreachable, !dbg !9303

bb6:                                              ; preds = %bb1
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc470 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc472 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !9303

bb8:                                              ; preds = %bb1
  %13 = bitcast i64** %self1 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"**, !dbg !9303
  %front = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %13, align 8, !dbg !9303, !nonnull !23, !align !378, !noundef !23
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %front.dbg.spill, align 8, !dbg !9303
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %front.dbg.spill, metadata !9290, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %front.dbg.spill, metadata !9300, metadata !DIExpression()), !dbg !9308
  store i8 0, i8* %_9, align 1, !dbg !9309
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked17h6f18ca69ff8e33b2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %front)
          to label %bb2 unwind label %cleanup, !dbg !9310

bb2:                                              ; preds = %bb8
  ret void, !dbg !9311

unreachable:                                      ; preds = %bb6
  unreachable

bb3:                                              ; preds = %bb4, %bb5
  %14 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9312
  %15 = load i8*, i8** %14, align 8, !dbg !9312
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9312
  %17 = load i32, i32* %16, align 8, !dbg !9312
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !9312
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !9312
  resume { i8*, i32 } %19, !dbg !9312

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !9306
}

; alloc::str::join_generic_copy
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3str17join_generic_copy17ha89ebacfef04eb8dE(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9313 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill182 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %result_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill181 = alloca { [0 x i8]*, i64 }, align 8
  %remain.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill180 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill177 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill174 = alloca i64, align 8
  %self.dbg.spill172 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill171 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill168 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill165 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill162 = alloca i64, align 8
  %self.dbg.spill160 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill159 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill156 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill155 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill154 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill151 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill148 = alloca i64, align 8
  %self.dbg.spill146 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill145 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill142 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill139 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill136 = alloca i64, align 8
  %self.dbg.spill134 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill133 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill130 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill129 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill128 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill125 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill122 = alloca i64, align 8
  %self.dbg.spill120 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill119 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill116 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill113 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill110 = alloca i64, align 8
  %self.dbg.spill108 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill107 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill104 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill103 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill102 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill99 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill96 = alloca i64, align 8
  %self.dbg.spill94 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill93 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill90 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill87 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill84 = alloca i64, align 8
  %self.dbg.spill82 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill81 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill78 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill77 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill76 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill73 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill70 = alloca i64, align 8
  %self.dbg.spill68 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill67 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill64 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill61 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill58 = alloca i64, align 8
  %self.dbg.spill56 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill55 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill52 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill51 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill47 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill44 = alloca i64, align 8
  %self.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill41 = alloca i64, align 8
  %self.dbg.spill39 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill38 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill37 = alloca { i64*, i64* }, align 8
  %self.dbg.spill36 = alloca { [0 x i8]*, i64 }, align 8
  %sep_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %iter_uninit.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill35 = alloca { i64*, i64* }, align 8
  %sep_uninit.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill34 = alloca i8*, align 8
  %len.dbg.spill33 = alloca i64, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill31 = alloca { [0 x i8]*, i64 }, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill30 = alloca i8*, align 8
  %self.dbg.spill28 = alloca { [0 x i8]*, i64 }, align 8
  %target.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill27 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill26 = alloca i64, align 8
  %self.dbg.spill24 = alloca { [0 x i8]*, i64 }, align 8
  %pos.dbg.spill = alloca i64, align 8
  %self.dbg.spill23 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill22 = alloca i64, align 8
  %capacity.dbg.spill21 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %reserved_len.dbg.spill = alloca i64, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill20 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill18 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca { [0 x i8]*, i64 }*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill12 = alloca { [0 x i8]*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64*, align 8
  %self.dbg.spill9 = alloca { i64*, i64* }*, align 8
  %first.dbg.spill8 = alloca { [0 x i8]*, i64 }*, align 8
  %first.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %sep_len.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill7 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]", align 1
  %sep.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_390 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_388 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_386 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_381 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_379 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_374 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_372 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_367 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_365 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_360 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_358 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_353 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_351 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_346 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_341 = alloca { i8*, i64 }, align 8
  %_340 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_330 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_325 = alloca { i64, i64 }, align 8
  %_316 = alloca i8, align 1
  %_266 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_250 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_241 = alloca { i8*, i64 }, align 8
  %iter6 = alloca { i64*, i64* }, align 8
  %_230 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_214 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_205 = alloca { i8*, i64 }, align 8
  %iter5 = alloca { i64*, i64* }, align 8
  %_194 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_178 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_169 = alloca { i8*, i64 }, align 8
  %iter4 = alloca { i64*, i64* }, align 8
  %_158 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_142 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_133 = alloca { i8*, i64 }, align 8
  %iter3 = alloca { i64*, i64* }, align 8
  %_122 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_106 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_97 = alloca { i8*, i64 }, align 8
  %iter2 = alloca { i64*, i64* }, align 8
  %_86 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_70 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_61 = alloca { i8*, i64 }, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %target = alloca { [0 x i8]*, i64 }, align 8
  %index = alloca i64, align 8
  %result = alloca %"alloc::vec::Vec<u8>", align 8
  %_18 = alloca { i64*, i64 }, align 8
  %_16 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %_8 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %7, align 8
  %8 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !9318, metadata !DIExpression()), !dbg !9447
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 1
  store i64 %sep.1, i64* %10, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep.dbg.spill, metadata !9319, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter, metadata !9322, metadata !DIExpression()), !dbg !9449
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !9450, metadata !DIExpression()), !dbg !9460
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %result, metadata !9330, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.declare(metadata i64* %index, metadata !9463, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %f.dbg.spill, metadata !9473, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %target, metadata !9342, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter1, metadata !9348, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter2, metadata !9364, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter3, metadata !9380, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter4, metadata !9396, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter5, metadata !9412, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter6, metadata !9428, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9489, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill7, metadata !9505, metadata !DIExpression()), !dbg !9513
  store i64 %sep.1, i64* %sep_len.dbg.spill, align 8, !dbg !9515
  call void @llvm.dbg.declare(metadata i64* %sep_len.dbg.spill, metadata !9320, metadata !DIExpression()), !dbg !9516
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !9517
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %11, align 8, !dbg !9517
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !9517
  store i64 %slice.1, i64* %12, align 8, !dbg !9517
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !9518, metadata !DIExpression()), !dbg !9522
; call core::slice::iter::Iter<T>::new
  %13 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7f11c3d66892abdeE"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1), !dbg !9522
  store { i64*, i64* } %13, { i64*, i64* }* %iter, align 8, !dbg !9522
  br label %bb80, !dbg !9522

bb80:                                             ; preds = %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %14 = call align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter), !dbg !9523
  store i64* %14, i64** %_8, align 8, !dbg !9523
  br label %bb1, !dbg !9523

bb1:                                              ; preds = %bb80
  %15 = bitcast i64** %_8 to {}**, !dbg !9523
  %16 = load {}*, {}** %15, align 8, !dbg !9523
  %17 = icmp eq {}* %16, null, !dbg !9523
  %_10 = select i1 %17, i64 0, i64 1, !dbg !9523
  switch i64 %_10, label %bb2 [
    i64 0, label %bb81
    i64 1, label %bb3
  ], !dbg !9524

bb2:                                              ; preds = %bb1
  unreachable, !dbg !9523

bb81:                                             ; preds = %bb1
  %_281.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !9525, !nonnull !23, !noundef !23
  %_281.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !9525
  %18 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*, !dbg !9525
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 0, !dbg !9525
  store i8* %_281.0, i8** %19, align 8, !dbg !9525
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 1, !dbg !9525
  store i64 %_281.1, i64* %20, align 8, !dbg !9525
  %21 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1, !dbg !9525
  store i64 0, i64* %21, align 8, !dbg !9525
  br label %bb77, !dbg !9533

bb3:                                              ; preds = %bb1
  %22 = bitcast i64** %_8 to { [0 x i8]*, i64 }**, !dbg !9534
  %first = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %22, align 8, !dbg !9534, !nonnull !23, !align !378, !noundef !23
  store { [0 x i8]*, i64 }* %first, { [0 x i8]*, i64 }** %first.dbg.spill, align 8, !dbg !9534
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %first.dbg.spill, metadata !9326, metadata !DIExpression()), !dbg !9535
  store { [0 x i8]*, i64 }* %first, { [0 x i8]*, i64 }** %first.dbg.spill8, align 8, !dbg !9536
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %first.dbg.spill8, metadata !9324, metadata !DIExpression()), !dbg !9537
  store { i64*, i64* }* %iter, { i64*, i64* }** %self.dbg.spill9, align 8, !dbg !9538
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill9, metadata !9539, metadata !DIExpression()), !dbg !9555
  %23 = bitcast { i64*, i64* }* %iter to i64**, !dbg !9555
  %start10 = load i64*, i64** %23, align 8, !dbg !9555, !nonnull !23, !noundef !23
  store i64* %start10, i64** %start.dbg.spill, align 8, !dbg !9555
  call void @llvm.dbg.declare(metadata i64** %start.dbg.spill, metadata !9546, metadata !DIExpression()), !dbg !9556
  store i64 16, i64* %size.dbg.spill, align 8, !dbg !9557
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !9549, metadata !DIExpression()), !dbg !9565
  br i1 false, label %bb82, label %bb83, !dbg !9565

bb82:                                             ; preds = %bb3
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !9565
  %25 = bitcast i64** %24 to { [0 x i8]*, i64 }**, !dbg !9565
  %self15 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %25, align 8, !dbg !9565, !rawptr !418
  store { [0 x i8]*, i64 }* %self15, { [0 x i8]*, i64 }** %self.dbg.spill16, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill16, metadata !9566, metadata !DIExpression()), !dbg !9570
  %26 = bitcast i64* %3 to { [0 x i8]*, i64 }**, !dbg !9570
  store { [0 x i8]*, i64 }* %self15, { [0 x i8]*, i64 }** %26, align 8, !dbg !9570
  %self17 = load i64, i64* %3, align 8, !dbg !9570
  store i64 %self17, i64* %self.dbg.spill18, align 8, !dbg !9570
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill18, metadata !9572, metadata !DIExpression()), !dbg !9577
  br label %bb87, !dbg !9570

bb83:                                             ; preds = %bb3
  %27 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !9565
  %28 = bitcast i64** %27 to { [0 x i8]*, i64 }**, !dbg !9565
  %self11 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %28, align 8, !dbg !9565, !rawptr !418
  store { [0 x i8]*, i64 }* %self11, { [0 x i8]*, i64 }** %self.dbg.spill12, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill12, metadata !9578, metadata !DIExpression()), !dbg !9582
  %29 = bitcast i64* %6 to { [0 x i8]*, i64 }**, !dbg !9582
  store { [0 x i8]*, i64 }* %self11, { [0 x i8]*, i64 }** %29, align 8, !dbg !9582
  %_292 = load i64, i64* %6, align 8, !dbg !9582
  br label %bb89, !dbg !9582

bb89:                                             ; preds = %bb83
  store i64* %start10, i64** %self.dbg.spill13, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !9584, metadata !DIExpression()), !dbg !9590
  %_305 = bitcast i64* %start10 to { [0 x i8]*, i64 }*, !dbg !9590, !rawptr !418
  store { [0 x i8]*, i64 }* %_305, { [0 x i8]*, i64 }** %self.dbg.spill14, align 8, !dbg !9590
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill14, metadata !9592, metadata !DIExpression()), !dbg !9598
  %30 = bitcast i64* %5 to { [0 x i8]*, i64 }**, !dbg !9598
  store { [0 x i8]*, i64 }* %_305, { [0 x i8]*, i64 }** %30, align 8, !dbg !9598
  %_294 = load i64, i64* %5, align 8, !dbg !9598
  br label %bb90, !dbg !9598

bb90:                                             ; preds = %bb89
  %31 = sub nuw i64 %_292, %_294, !dbg !9565
  store i64 %31, i64* %4, align 8, !dbg !9565
  %diff = load i64, i64* %4, align 8, !dbg !9565
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !9552, metadata !DIExpression()), !dbg !9599
  br label %bb84, !dbg !9565

bb84:                                             ; preds = %bb90
  %32 = udiv exact i64 %diff, 16, !dbg !9599
  store i64 %32, i64* %_16, align 8, !dbg !9599
  br label %bb85, !dbg !9599

bb85:                                             ; preds = %bb84
  br label %bb86, !dbg !9565

bb86:                                             ; preds = %bb88, %bb85
  %33 = load i64, i64* %_16, align 8, !dbg !9461
; call core::num::<impl usize>::checked_mul
  %34 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE"(i64 %sep.1, i64 %33), !dbg !9461
  %_14.0 = extractvalue { i64, i64 } %34, 0, !dbg !9461
  %_14.1 = extractvalue { i64, i64 } %34, 1, !dbg !9461
  br label %bb4, !dbg !9461

bb87:                                             ; preds = %bb82
  store i64* %start10, i64** %self.dbg.spill19, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !9600, metadata !DIExpression()), !dbg !9604
  %_300 = bitcast i64* %start10 to { [0 x i8]*, i64 }*, !dbg !9604, !rawptr !418
  store { [0 x i8]*, i64 }* %_300, { [0 x i8]*, i64 }** %self.dbg.spill20, align 8, !dbg !9604
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill20, metadata !9606, metadata !DIExpression()), !dbg !9610
  %35 = bitcast i64* %2 to { [0 x i8]*, i64 }**, !dbg !9610
  store { [0 x i8]*, i64 }* %_300, { [0 x i8]*, i64 }** %35, align 8, !dbg !9610
  %rhs = load i64, i64* %2, align 8, !dbg !9610
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !9610
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !9576, metadata !DIExpression()), !dbg !9577
  br label %bb88, !dbg !9610

bb88:                                             ; preds = %bb87
  %36 = sub i64 %self17, %rhs, !dbg !9577
  store i64 %36, i64* %_16, align 8, !dbg !9577
  br label %bb86, !dbg !9565

bb4:                                              ; preds = %bb86
  %37 = bitcast { i64*, i64 }* %_18 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !9611
  %38 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %37, i32 0, i32 0, !dbg !9611
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %38, align 8, !dbg !9611
  %39 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %37, i32 0, i32 1, !dbg !9611
  store i64 %slice.1, i64* %39, align 8, !dbg !9611
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 0, !dbg !9461
  %41 = load i64*, i64** %40, align 8, !dbg !9461, !nonnull !23, !align !378, !noundef !23
  %42 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 1, !dbg !9461
  %43 = load i64, i64* %42, align 8, !dbg !9461
; call core::option::Option<T>::and_then
  %44 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h3923e9e4c6ee51b6E"(i64 %_14.0, i64 %_14.1, i64* align 8 %41, i64 %43), !dbg !9461
  store { i64, i64 } %44, { i64, i64 }* %self, align 8, !dbg !9461
  br label %bb5, !dbg !9461

bb5:                                              ; preds = %bb4
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0, !dbg !9612
  store [0 x i8]* bitcast (<{ [53 x i8] }>* @alloc473 to [0 x i8]*), [0 x i8]** %45, align 8, !dbg !9612
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1, !dbg !9612
  store i64 53, i64* %46, align 8, !dbg !9612
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !9456, metadata !DIExpression()), !dbg !9460
  %47 = bitcast { i64, i64 }* %self to i64*, !dbg !9460
  %_307 = load i64, i64* %47, align 8, !dbg !9460, !range !3483, !noundef !23
  switch i64 %_307, label %bb92 [
    i64 0, label %bb91
    i64 1, label %bb93
  ], !dbg !9460

bb92:                                             ; preds = %bb5
  unreachable, !dbg !9460

bb91:                                             ; preds = %bb5
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h88d530fef2e585ceE([0 x i8]* align 1 bitcast (<{ [53 x i8] }>* @alloc473 to [0 x i8]*), i64 53, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc477 to %"core::panic::location::Location"*)) #18, !dbg !9460
  unreachable, !dbg !9460

bb93:                                             ; preds = %bb5
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !9460
  %reserved_len = load i64, i64* %48, align 8, !dbg !9460
  store i64 %reserved_len, i64* %reserved_len.dbg.spill, align 8, !dbg !9460
  call void @llvm.dbg.declare(metadata i64* %reserved_len.dbg.spill, metadata !9328, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.declare(metadata i64* %reserved_len.dbg.spill, metadata !9457, metadata !DIExpression()), !dbg !9614
  store i64 %reserved_len, i64* %capacity.dbg.spill, align 8, !dbg !9615
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !9502, metadata !DIExpression()), !dbg !9616
  store i64 %reserved_len, i64* %capacity.dbg.spill21, align 8, !dbg !9616
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill21, metadata !9495, metadata !DIExpression()), !dbg !9496
  store i64 %reserved_len, i64* %capacity.dbg.spill22, align 8, !dbg !9496
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill22, metadata !9512, metadata !DIExpression()), !dbg !9513
  store i8 0, i8* %_316, align 1, !dbg !9513
  %49 = load i8, i8* %_316, align 1, !dbg !9513, !range !298, !noundef !23
  %50 = trunc i8 %49 to i1, !dbg !9513
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %51 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8c7f42ca41dd72deE"(i64 %reserved_len, i1 zeroext %50), !dbg !9513
  %_312.0 = extractvalue { i8*, i64 } %51, 0, !dbg !9513
  %_312.1 = extractvalue { i8*, i64 } %51, 1, !dbg !9513
  br label %bb94, !dbg !9513

bb94:                                             ; preds = %bb93
  %52 = bitcast %"alloc::vec::Vec<u8>"* %result to { i8*, i64 }*, !dbg !9496
  %53 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %52, i32 0, i32 0, !dbg !9496
  store i8* %_312.0, i8** %53, align 8, !dbg !9496
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %52, i32 0, i32 1, !dbg !9496
  store i64 %_312.1, i64* %54, align 8, !dbg !9496
  %55 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %result, i32 0, i32 1, !dbg !9496
  store i64 0, i64* %55, align 8, !dbg !9496
; invoke <&T as core::borrow::Borrow<T>>::borrow
  %56 = invoke { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h2c1a3208f1ea1b09E"({ [0 x i8]*, i64 }* align 8 %first)
          to label %bb6 unwind label %cleanup, !dbg !9617

bb78:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %result) #19
          to label %bb79 unwind label %abort, !dbg !9618

cleanup:                                          ; preds = %bb20, %bb19, %bb18, %bb17, %bb16, %bb13, %bb97, %bb12, %bb31, %bb30, %bb29, %bb28, %bb27, %bb24, %bb99, %bb23, %bb42, %bb41, %bb40, %bb39, %bb38, %bb35, %bb101, %bb34, %bb53, %bb52, %bb51, %bb50, %bb49, %bb46, %bb103, %bb45, %bb64, %bb63, %bb62, %bb61, %bb60, %bb57, %bb105, %bb56, %bb74, %bb73, %bb72, %bb71, %bb70, %bb67, %bb107, %bb66, %bb95, %bb9, %bb8, %bb7, %bb6, %bb94
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %58, i8** %60, align 8
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %59, i32* %61, align 8
  br label %bb78

bb6:                                              ; preds = %bb94
  %_30.0 = extractvalue { [0 x i8]*, i64 } %56, 0, !dbg !9617
  %_30.1 = extractvalue { [0 x i8]*, i64 } %56, 1, !dbg !9617
; invoke core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %62 = invoke { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17h3da7e002de0456c6E"([0 x i8]* align 1 %_30.0, i64 %_30.1)
          to label %bb7 unwind label %cleanup, !dbg !9617

bb7:                                              ; preds = %bb6
  %_28.0 = extractvalue { [0 x i8]*, i64 } %62, 0, !dbg !9617
  %_28.1 = extractvalue { [0 x i8]*, i64 } %62, 1, !dbg !9617
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h6a8d930349aa9529E"(%"alloc::vec::Vec<u8>"* align 8 %result, [0 x i8]* align 1 %_28.0, i64 %_28.1)
          to label %bb8 unwind label %cleanup, !dbg !9619

bb8:                                              ; preds = %bb7
  store %"alloc::vec::Vec<u8>"* %result, %"alloc::vec::Vec<u8>"** %self.dbg.spill23, align 8, !dbg !9620
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill23, metadata !9621, metadata !DIExpression()), !dbg !9627
  %63 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %result, i32 0, i32 1, !dbg !9627
  %pos = load i64, i64* %63, align 8, !dbg !9627
  store i64 %pos, i64* %pos.dbg.spill, align 8, !dbg !9627
  call void @llvm.dbg.declare(metadata i64* %pos.dbg.spill, metadata !9332, metadata !DIExpression()), !dbg !9628
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %64 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hdca49d03d486226dE"(%"alloc::vec::Vec<u8>"* align 8 %result)
          to label %bb9 unwind label %cleanup, !dbg !9472

bb9:                                              ; preds = %bb8
  %_36.0 = extractvalue { [0 x i8]*, i64 } %64, 0, !dbg !9472, !rawptr !418
  %_36.1 = extractvalue { [0 x i8]*, i64 } %64, 1, !dbg !9472, !rawptr !418
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill24, i32 0, i32 0, !dbg !9472
  store [0 x i8]* %_36.0, [0 x i8]** %65, align 8, !dbg !9472
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill24, i32 0, i32 1, !dbg !9472
  store i64 %_36.1, i64* %66, align 8, !dbg !9472
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill24, metadata !9469, metadata !DIExpression()), !dbg !9471
  %_39 = sub i64 %reserved_len, %pos, !dbg !9629
  store i64 %_39, i64* %index, align 8, !dbg !9630
  %self25 = load i64, i64* %index, align 8, !dbg !9471
  store i64 %self25, i64* %self.dbg.spill26, align 8, !dbg !9471
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill26, metadata !9631, metadata !DIExpression()), !dbg !9638
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill27, i32 0, i32 0, !dbg !9471
  store [0 x i8]* %_36.0, [0 x i8]** %67, align 8, !dbg !9471
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill27, i32 0, i32 1, !dbg !9471
  store i64 %_36.1, i64* %68, align 8, !dbg !9471
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill27, metadata !9637, metadata !DIExpression()), !dbg !9638
  %69 = bitcast { i64, i64 }* %_325 to i64*, !dbg !9638
  store i64 0, i64* %69, align 8, !dbg !9638
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_325, i32 0, i32 1, !dbg !9638
  store i64 %self25, i64* %70, align 8, !dbg !9638
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_325, i32 0, i32 0, !dbg !9638
  %72 = load i64, i64* %71, align 8, !dbg !9638, !rawptr !418
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_325, i32 0, i32 1, !dbg !9638
  %74 = load i64, i64* %73, align 8, !dbg !9638, !rawptr !418
; invoke <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %75 = invoke { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he72d74f046ab17e7E"(i64 %72, i64 %74, [0 x i8]* %_36.0, i64 %_36.1)
          to label %bb95 unwind label %cleanup, !dbg !9638

bb95:                                             ; preds = %bb9
  %_322.0 = extractvalue { [0 x i8]*, i64 } %75, 0, !dbg !9638
  %_322.1 = extractvalue { [0 x i8]*, i64 } %75, 1, !dbg !9638
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target.dbg.spill, i32 0, i32 0, !dbg !9471
  store [0 x i8]* %_322.0, [0 x i8]** %76, align 8, !dbg !9471
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target.dbg.spill, i32 0, i32 1, !dbg !9471
  store i64 %_322.1, i64* %77, align 8, !dbg !9471
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %target.dbg.spill, metadata !9334, metadata !DIExpression()), !dbg !9640
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill28, i32 0, i32 0, !dbg !9641
  store [0 x i8]* %sep.0, [0 x i8]** %78, align 8, !dbg !9641
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill28, i32 0, i32 1, !dbg !9641
  store i64 %sep.1, i64* %79, align 8, !dbg !9641
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill28, metadata !9642, metadata !DIExpression()), !dbg !9646
  %self29 = bitcast [0 x i8]* %sep.0 to i8*, !dbg !9646, !rawptr !418
  store i8* %self29, i8** %self.dbg.spill30, align 8, !dbg !9646
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill30, metadata !9647, metadata !DIExpression()), !dbg !9655
  store i8* %self29, i8** %data.dbg.spill, align 8, !dbg !9655
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !9656, metadata !DIExpression()), !dbg !9670
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill31, i32 0, i32 0, !dbg !9672
  store [0 x i8]* %sep.0, [0 x i8]** %80, align 8, !dbg !9672
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill31, i32 0, i32 1, !dbg !9672
  store i64 %sep.1, i64* %81, align 8, !dbg !9672
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill31, metadata !9673, metadata !DIExpression()), !dbg !9679
  %82 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_330 to { [0 x i8]*, i64 }*, !dbg !9679, !rawptr !418
  %83 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %82, i32 0, i32 0, !dbg !9679
  store [0 x i8]* %sep.0, [0 x i8]** %83, align 8, !dbg !9679
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %82, i32 0, i32 1, !dbg !9679
  store i64 %sep.1, i64* %84, align 8, !dbg !9679
  %85 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_330 to { i8*, i64 }*, !dbg !9679
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %85, i32 0, i32 1, !dbg !9679
  %len = load i64, i64* %86, align 8, !dbg !9679
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !9679
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !9662, metadata !DIExpression()), !dbg !9670
  store i8* %self29, i8** %data.dbg.spill32, align 8, !dbg !9670
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !9680, metadata !DIExpression()), !dbg !9691
  store i64 %len, i64* %len.dbg.spill33, align 8, !dbg !9670
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill33, metadata !9690, metadata !DIExpression()), !dbg !9691
  store i8* %self29, i8** %self.dbg.spill34, align 8, !dbg !9691
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill34, metadata !9693, metadata !DIExpression()), !dbg !9699
  %data_address = bitcast i8* %self29 to {}*, !dbg !9699, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !9699
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !9701, metadata !DIExpression()), !dbg !9708
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !9691
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !9707, metadata !DIExpression()), !dbg !9708
  %87 = bitcast { i8*, i64 }* %_341 to {}**, !dbg !9708, !rawptr !418
  store {}* %data_address, {}** %87, align 8, !dbg !9708
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_341, i32 0, i32 1, !dbg !9708
  store i64 %len, i64* %88, align 8, !dbg !9708
  %89 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_340 to { i8*, i64 }*, !dbg !9708
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_341, i32 0, i32 0, !dbg !9708
  %91 = load i8*, i8** %90, align 8, !dbg !9708
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_341, i32 0, i32 1, !dbg !9708
  %93 = load i64, i64* %92, align 8, !dbg !9708
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %89, i32 0, i32 0, !dbg !9708
  store i8* %91, i8** %94, align 8, !dbg !9708
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %89, i32 0, i32 1, !dbg !9708
  store i64 %93, i64* %95, align 8, !dbg !9708
  %96 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_340 to { [0 x i8]*, i64 }*, !dbg !9708
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %96, i32 0, i32 0, !dbg !9708
  %_333.0 = load [0 x i8]*, [0 x i8]** %97, align 8, !dbg !9708, !rawptr !418
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %96, i32 0, i32 1, !dbg !9708
  %_333.1 = load i64, i64* %98, align 8, !dbg !9708, !rawptr !418
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_uninit.dbg.spill, i32 0, i32 0, !dbg !9670
  store [0 x i8]* %_333.0, [0 x i8]** %99, align 8, !dbg !9670
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_uninit.dbg.spill, i32 0, i32 1, !dbg !9670
  store i64 %_333.1, i64* %100, align 8, !dbg !9670
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep_uninit.dbg.spill, metadata !9336, metadata !DIExpression()), !dbg !9710
  %101 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0, !dbg !9481
  %self.0 = load i64*, i64** %101, align 8, !dbg !9481, !nonnull !23, !noundef !23
  %102 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !9481
  %self.1 = load i64*, i64** %102, align 8, !dbg !9481
  %103 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill35, i32 0, i32 0, !dbg !9481
  store i64* %self.0, i64** %103, align 8, !dbg !9481
  %104 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill35, i32 0, i32 1, !dbg !9481
  store i64* %self.1, i64** %104, align 8, !dbg !9481
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill35, metadata !9477, metadata !DIExpression()), !dbg !9480
; invoke core::iter::adapters::map::Map<I,F>::new
  %105 = invoke { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hee31dbf736bcd211E"(i64* %self.0, i64* %self.1)
          to label %bb96 unwind label %cleanup, !dbg !9480

bb96:                                             ; preds = %bb95
  %iter_uninit.0 = extractvalue { i64*, i64* } %105, 0, !dbg !9480
  %iter_uninit.1 = extractvalue { i64*, i64* } %105, 1, !dbg !9480
  %106 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter_uninit.dbg.spill, i32 0, i32 0, !dbg !9480
  store i64* %iter_uninit.0, i64** %106, align 8, !dbg !9480
  %107 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter_uninit.dbg.spill, i32 0, i32 1, !dbg !9480
  store i64* %iter_uninit.1, i64** %107, align 8, !dbg !9480
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter_uninit.dbg.spill, metadata !9338, metadata !DIExpression()), !dbg !9711
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9712
  store [0 x i8]* %_322.0, [0 x i8]** %108, align 8, !dbg !9712
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9712
  store i64 %_322.1, i64* %109, align 8, !dbg !9712
  %110 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0, !dbg !9713
  store i64* %iter_uninit.0, i64** %110, align 8, !dbg !9713
  %111 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1, !dbg !9713
  store i64* %iter_uninit.1, i64** %111, align 8, !dbg !9713
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !9344, metadata !DIExpression()), !dbg !9714
  %112 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_bytes.dbg.spill, i32 0, i32 0, !dbg !9715
  store [0 x i8]* %_333.0, [0 x i8]** %112, align 8, !dbg !9715
  %113 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_bytes.dbg.spill, i32 0, i32 1, !dbg !9715
  store i64 %_333.1, i64* %113, align 8, !dbg !9715
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep_bytes.dbg.spill, metadata !9346, metadata !DIExpression()), !dbg !9716
  %114 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill36, i32 0, i32 0, !dbg !9716
  store [0 x i8]* %_333.0, [0 x i8]** %114, align 8, !dbg !9716
  %115 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill36, i32 0, i32 1, !dbg !9716
  store i64 %_333.1, i64* %115, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill36, metadata !9717, metadata !DIExpression()), !dbg !9723
  %116 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_346 to { [0 x i8]*, i64 }*, !dbg !9723, !rawptr !418
  %117 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %116, i32 0, i32 0, !dbg !9723
  store [0 x i8]* %_333.0, [0 x i8]** %117, align 8, !dbg !9723
  %118 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %116, i32 0, i32 1, !dbg !9723
  store i64 %_333.1, i64* %118, align 8, !dbg !9723
  %119 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_346 to { i8*, i64 }*, !dbg !9723
  %120 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %119, i32 0, i32 1, !dbg !9723
  %_56 = load i64, i64* %120, align 8, !dbg !9723
  switch i64 %_56, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb22
    i64 2, label %bb33
    i64 3, label %bb44
    i64 4, label %bb55
  ], !dbg !9716

bb10:                                             ; preds = %bb96
  %121 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill37, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %121, align 8, !dbg !9716
  %122 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill37, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %122, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill37, metadata !9725, metadata !DIExpression()), !dbg !9733
  %123 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter6, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %123, align 8, !dbg !9716
  %124 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter6, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %124, align 8, !dbg !9716
  br label %bb66, !dbg !9488

bb11:                                             ; preds = %bb96
  %125 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill155, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %125, align 8, !dbg !9716
  %126 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill155, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %126, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill155, metadata !9735, metadata !DIExpression()), !dbg !9739
  %127 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %127, align 8, !dbg !9716
  %128 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %128, align 8, !dbg !9716
  br label %bb12, !dbg !9483

bb22:                                             ; preds = %bb96
  %129 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill129, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %129, align 8, !dbg !9716
  %130 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill129, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %130, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill129, metadata !9741, metadata !DIExpression()), !dbg !9745
  %131 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter2, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %131, align 8, !dbg !9716
  %132 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter2, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %132, align 8, !dbg !9716
  br label %bb23, !dbg !9484

bb33:                                             ; preds = %bb96
  %133 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill103, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %133, align 8, !dbg !9716
  %134 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill103, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %134, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill103, metadata !9746, metadata !DIExpression()), !dbg !9750
  %135 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter3, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %135, align 8, !dbg !9716
  %136 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter3, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %136, align 8, !dbg !9716
  br label %bb34, !dbg !9485

bb44:                                             ; preds = %bb96
  %137 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill77, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %137, align 8, !dbg !9716
  %138 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill77, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %138, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill77, metadata !9751, metadata !DIExpression()), !dbg !9755
  %139 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %139, align 8, !dbg !9716
  %140 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %140, align 8, !dbg !9716
  br label %bb45, !dbg !9486

bb55:                                             ; preds = %bb96
  %141 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill51, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %141, align 8, !dbg !9716
  %142 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill51, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %142, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill51, metadata !9756, metadata !DIExpression()), !dbg !9760
  %143 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter5, i32 0, i32 0, !dbg !9716
  store i64* %iter_uninit.0, i64** %143, align 8, !dbg !9716
  %144 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter5, i32 0, i32 1, !dbg !9716
  store i64* %iter_uninit.1, i64** %144, align 8, !dbg !9716
  br label %bb56, !dbg !9487

bb66:                                             ; preds = %bb75, %bb10
  store { i64*, i64* }* %iter6, { i64*, i64* }** %self.dbg.spill38, align 8, !dbg !9488
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill38, metadata !9761, metadata !DIExpression()), !dbg !9769
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_383 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter6)
          to label %bb107 unwind label %cleanup, !dbg !9769

bb107:                                            ; preds = %bb66
  %_385 = bitcast { i64*, i64* }* %iter6 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9769
; invoke core::option::Option<T>::map
  %145 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %_383, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_385)
          to label %bb108 unwind label %cleanup, !dbg !9769

bb108:                                            ; preds = %bb107
  store { i8*, i64 } %145, { i8*, i64 }* %_241, align 8, !dbg !9769
  %146 = bitcast { i8*, i64 }* %_241 to {}**, !dbg !9488
  %147 = load {}*, {}** %146, align 8, !dbg !9488
  %148 = icmp eq {}* %147, null, !dbg !9488
  %_244 = select i1 %148, i64 0, i64 1, !dbg !9488
  switch i64 %_244, label %bb68 [
    i64 0, label %bb69
    i64 1, label %bb67
  ], !dbg !9488

bb68:                                             ; preds = %bb108
  unreachable, !dbg !9488

bb69:                                             ; preds = %bb108
  br label %bb76, !dbg !9716

bb67:                                             ; preds = %bb108
  %149 = bitcast { i8*, i64 }* %_241 to { [0 x i8]*, i64 }*, !dbg !9488
  %150 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %149, i32 0, i32 0, !dbg !9488
  %s.0 = load [0 x i8]*, [0 x i8]** %150, align 8, !dbg !9488, !nonnull !23, !align !912, !noundef !23
  %151 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %149, i32 0, i32 1, !dbg !9488
  %s.1 = load i64, i64* %151, align 8, !dbg !9488
  %152 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !9488
  store [0 x i8]* %s.0, [0 x i8]** %152, align 8, !dbg !9488
  %153 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !9488
  store i64 %s.1, i64* %153, align 8, !dbg !9488
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !9430, metadata !DIExpression()), !dbg !9771
  %154 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill39, i32 0, i32 0, !dbg !9771
  store [0 x i8]* %_333.0, [0 x i8]** %154, align 8, !dbg !9771
  %155 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill39, i32 0, i32 1, !dbg !9771
  store i64 %_333.1, i64* %155, align 8, !dbg !9771
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill39, metadata !9772, metadata !DIExpression()), !dbg !9776
  %156 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_386 to { [0 x i8]*, i64 }*, !dbg !9776, !rawptr !418
  %157 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %156, i32 0, i32 0, !dbg !9776
  store [0 x i8]* %_333.0, [0 x i8]** %157, align 8, !dbg !9776
  %158 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %156, i32 0, i32 1, !dbg !9776
  store i64 %_333.1, i64* %158, align 8, !dbg !9776
  %159 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_386 to { i8*, i64 }*, !dbg !9776
  %160 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %159, i32 0, i32 1, !dbg !9776
  %len40 = load i64, i64* %160, align 8, !dbg !9776
  store i64 %len40, i64* %len.dbg.spill41, align 8, !dbg !9776
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill41, metadata !9432, metadata !DIExpression()), !dbg !9778
  %161 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9778
  %_252.0 = load [0 x i8]*, [0 x i8]** %161, align 8, !dbg !9778, !nonnull !23, !align !912, !noundef !23
  %162 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9778
  %_252.1 = load i64, i64* %162, align 8, !dbg !9778
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_250, [0 x i8]* align 1 %_252.0, i64 %_252.1, i64 %len40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb70 unwind label %cleanup, !dbg !9778

bb70:                                             ; preds = %bb67
  %163 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_250 to { [0 x i8]*, i64 }*, !dbg !9778
  %164 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %163, i32 0, i32 0, !dbg !9778
  %head.0 = load [0 x i8]*, [0 x i8]** %164, align 8, !dbg !9778, !nonnull !23, !align !912, !noundef !23
  %165 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %163, i32 0, i32 1, !dbg !9778
  %head.1 = load i64, i64* %165, align 8, !dbg !9778
  %166 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill, i32 0, i32 0, !dbg !9778
  store [0 x i8]* %head.0, [0 x i8]** %166, align 8, !dbg !9778
  %167 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill, i32 0, i32 1, !dbg !9778
  store i64 %head.1, i64* %167, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill, metadata !9434, metadata !DIExpression()), !dbg !9779
  %168 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_250, i32 0, i32 1, !dbg !9778
  %169 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %168, i32 0, i32 0, !dbg !9778
  %tail.0 = load [0 x i8]*, [0 x i8]** %169, align 8, !dbg !9778, !nonnull !23, !align !912, !noundef !23
  %170 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %168, i32 0, i32 1, !dbg !9778
  %tail.1 = load i64, i64* %170, align 8, !dbg !9778
  %171 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill, i32 0, i32 0, !dbg !9778
  store [0 x i8]* %tail.0, [0 x i8]** %171, align 8, !dbg !9778
  %172 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill, i32 0, i32 1, !dbg !9778
  store i64 %tail.1, i64* %172, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill, metadata !9436, metadata !DIExpression()), !dbg !9779
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0, i64 %head.1, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb71 unwind label %cleanup, !dbg !9779

bb71:                                             ; preds = %bb70
  %173 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9779
  store [0 x i8]* %tail.0, [0 x i8]** %173, align 8, !dbg !9779
  %174 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9779
  store i64 %tail.1, i64* %174, align 8, !dbg !9779
; invoke <T as core::borrow::Borrow<T>>::borrow
  %175 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb72 unwind label %cleanup, !dbg !9779

bb72:                                             ; preds = %bb71
  %_260.0 = extractvalue { [0 x i8]*, i64 } %175, 0, !dbg !9779
  %_260.1 = extractvalue { [0 x i8]*, i64 } %175, 1, !dbg !9779
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %176 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %_260.0, i64 %_260.1)
          to label %bb73 unwind label %cleanup, !dbg !9779

bb73:                                             ; preds = %bb72
  %content_bytes.0 = extractvalue { [0 x i8]*, i64 } %176, 0, !dbg !9779, !rawptr !418
  %content_bytes.1 = extractvalue { [0 x i8]*, i64 } %176, 1, !dbg !9779, !rawptr !418
  %177 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill, i32 0, i32 0, !dbg !9779
  store [0 x i8]* %content_bytes.0, [0 x i8]** %177, align 8, !dbg !9779
  %178 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill, i32 0, i32 1, !dbg !9779
  store i64 %content_bytes.1, i64* %178, align 8, !dbg !9779
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill, metadata !9437, metadata !DIExpression()), !dbg !9780
  %179 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill42, i32 0, i32 0, !dbg !9780
  store [0 x i8]* %content_bytes.0, [0 x i8]** %179, align 8, !dbg !9780
  %180 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill42, i32 0, i32 1, !dbg !9780
  store i64 %content_bytes.1, i64* %180, align 8, !dbg !9780
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill42, metadata !9781, metadata !DIExpression()), !dbg !9785
  %181 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_388 to { [0 x i8]*, i64 }*, !dbg !9785, !rawptr !418
  %182 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %181, i32 0, i32 0, !dbg !9785
  store [0 x i8]* %content_bytes.0, [0 x i8]** %182, align 8, !dbg !9785
  %183 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %181, i32 0, i32 1, !dbg !9785
  store i64 %content_bytes.1, i64* %183, align 8, !dbg !9785
  %184 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_388 to { i8*, i64 }*, !dbg !9785
  %185 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %184, i32 0, i32 1, !dbg !9785
  %len43 = load i64, i64* %185, align 8, !dbg !9785
  store i64 %len43, i64* %len.dbg.spill44, align 8, !dbg !9785
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill44, metadata !9439, metadata !DIExpression()), !dbg !9787
  %186 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9787
  %_268.0 = load [0 x i8]*, [0 x i8]** %186, align 8, !dbg !9787, !nonnull !23, !align !912, !noundef !23
  %187 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9787
  %_268.1 = load i64, i64* %187, align 8, !dbg !9787
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_266, [0 x i8]* align 1 %_268.0, i64 %_268.1, i64 %len43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb74 unwind label %cleanup, !dbg !9787

bb74:                                             ; preds = %bb73
  %188 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_266 to { [0 x i8]*, i64 }*, !dbg !9787
  %189 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %188, i32 0, i32 0, !dbg !9787
  %head.045 = load [0 x i8]*, [0 x i8]** %189, align 8, !dbg !9787, !nonnull !23, !align !912, !noundef !23
  %190 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %188, i32 0, i32 1, !dbg !9787
  %head.146 = load i64, i64* %190, align 8, !dbg !9787
  %191 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill47, i32 0, i32 0, !dbg !9787
  store [0 x i8]* %head.045, [0 x i8]** %191, align 8, !dbg !9787
  %192 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill47, i32 0, i32 1, !dbg !9787
  store i64 %head.146, i64* %192, align 8, !dbg !9787
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill47, metadata !9441, metadata !DIExpression()), !dbg !9788
  %193 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_266, i32 0, i32 1, !dbg !9787
  %194 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %193, i32 0, i32 0, !dbg !9787
  %tail.048 = load [0 x i8]*, [0 x i8]** %194, align 8, !dbg !9787, !nonnull !23, !align !912, !noundef !23
  %195 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %193, i32 0, i32 1, !dbg !9787
  %tail.149 = load i64, i64* %195, align 8, !dbg !9787
  %196 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill50, i32 0, i32 0, !dbg !9787
  store [0 x i8]* %tail.048, [0 x i8]** %196, align 8, !dbg !9787
  %197 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill50, i32 0, i32 1, !dbg !9787
  store i64 %tail.149, i64* %197, align 8, !dbg !9787
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill50, metadata !9443, metadata !DIExpression()), !dbg !9788
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.045, i64 %head.146, [0 x i8]* align 1 %content_bytes.0, i64 %content_bytes.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb75 unwind label %cleanup, !dbg !9788

bb75:                                             ; preds = %bb74
  %198 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9788
  store [0 x i8]* %tail.048, [0 x i8]** %198, align 8, !dbg !9788
  %199 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9788
  store i64 %tail.149, i64* %199, align 8, !dbg !9788
  br label %bb66, !dbg !9488

bb76:                                             ; preds = %bb15, %bb26, %bb37, %bb48, %bb59, %bb69
  %200 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9716
  %_52.0 = load [0 x i8]*, [0 x i8]** %200, align 8, !dbg !9716, !nonnull !23, !align !912, !noundef !23, !rawptr !418
  %201 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9716
  %_52.1 = load i64, i64* %201, align 8, !dbg !9716, !rawptr !418
  %202 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %remain.dbg.spill, i32 0, i32 0, !dbg !9789
  store [0 x i8]* %_52.0, [0 x i8]** %202, align 8, !dbg !9789
  %203 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %remain.dbg.spill, i32 0, i32 1, !dbg !9789
  store i64 %_52.1, i64* %203, align 8, !dbg !9789
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %remain.dbg.spill, metadata !9340, metadata !DIExpression()), !dbg !9790
  %204 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill181, i32 0, i32 0, !dbg !9791
  store [0 x i8]* %_52.0, [0 x i8]** %204, align 8, !dbg !9791
  %205 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill181, i32 0, i32 1, !dbg !9791
  store i64 %_52.1, i64* %205, align 8, !dbg !9791
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill181, metadata !9792, metadata !DIExpression()), !dbg !9796
  %206 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_390 to { [0 x i8]*, i64 }*, !dbg !9796, !rawptr !418
  %207 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %206, i32 0, i32 0, !dbg !9796
  store [0 x i8]* %_52.0, [0 x i8]** %207, align 8, !dbg !9796
  %208 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %206, i32 0, i32 1, !dbg !9796
  store i64 %_52.1, i64* %208, align 8, !dbg !9796
  %209 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_390 to { i8*, i64 }*, !dbg !9796
  %210 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %209, i32 0, i32 1, !dbg !9796
  %_276 = load i64, i64* %210, align 8, !dbg !9796
  %result_len = sub i64 %reserved_len, %_276, !dbg !9797
  store i64 %result_len, i64* %result_len.dbg.spill, align 8, !dbg !9797
  call void @llvm.dbg.declare(metadata i64* %result_len.dbg.spill, metadata !9444, metadata !DIExpression()), !dbg !9798
  store %"alloc::vec::Vec<u8>"* %result, %"alloc::vec::Vec<u8>"** %self.dbg.spill182, align 8, !dbg !9799
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill182, metadata !9800, metadata !DIExpression()), !dbg !9807
  store i64 %result_len, i64* %new_len.dbg.spill, align 8, !dbg !9808
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !9806, metadata !DIExpression()), !dbg !9807
  %211 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %result, i32 0, i32 1, !dbg !9807
  store i64 %result_len, i64* %211, align 8, !dbg !9807
  %212 = bitcast %"alloc::vec::Vec<u8>"* %0 to i8*, !dbg !9809
  %213 = bitcast %"alloc::vec::Vec<u8>"* %result to i8*, !dbg !9809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 24, i1 false), !dbg !9809
  br label %bb77, !dbg !9533

bb56:                                             ; preds = %bb65, %bb55
  store { i64*, i64* }* %iter5, { i64*, i64* }** %self.dbg.spill52, align 8, !dbg !9487
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill52, metadata !9810, metadata !DIExpression()), !dbg !9814
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_376 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter5)
          to label %bb105 unwind label %cleanup, !dbg !9814

bb105:                                            ; preds = %bb56
  %_378 = bitcast { i64*, i64* }* %iter5 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9814
; invoke core::option::Option<T>::map
  %214 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %_376, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_378)
          to label %bb106 unwind label %cleanup, !dbg !9814

bb106:                                            ; preds = %bb105
  store { i8*, i64 } %214, { i8*, i64 }* %_205, align 8, !dbg !9814
  %215 = bitcast { i8*, i64 }* %_205 to {}**, !dbg !9487
  %216 = load {}*, {}** %215, align 8, !dbg !9487
  %217 = icmp eq {}* %216, null, !dbg !9487
  %_208 = select i1 %217, i64 0, i64 1, !dbg !9487
  switch i64 %_208, label %bb58 [
    i64 0, label %bb59
    i64 1, label %bb57
  ], !dbg !9487

bb58:                                             ; preds = %bb106
  unreachable, !dbg !9487

bb59:                                             ; preds = %bb106
  br label %bb76, !dbg !9716

bb57:                                             ; preds = %bb106
  %218 = bitcast { i8*, i64 }* %_205 to { [0 x i8]*, i64 }*, !dbg !9487
  %219 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %218, i32 0, i32 0, !dbg !9487
  %s.053 = load [0 x i8]*, [0 x i8]** %219, align 8, !dbg !9487, !nonnull !23, !align !912, !noundef !23
  %220 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %218, i32 0, i32 1, !dbg !9487
  %s.154 = load i64, i64* %220, align 8, !dbg !9487
  %221 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill55, i32 0, i32 0, !dbg !9487
  store [0 x i8]* %s.053, [0 x i8]** %221, align 8, !dbg !9487
  %222 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill55, i32 0, i32 1, !dbg !9487
  store i64 %s.154, i64* %222, align 8, !dbg !9487
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill55, metadata !9414, metadata !DIExpression()), !dbg !9816
  %223 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill56, i32 0, i32 0, !dbg !9816
  store [0 x i8]* %_333.0, [0 x i8]** %223, align 8, !dbg !9816
  %224 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill56, i32 0, i32 1, !dbg !9816
  store i64 %_333.1, i64* %224, align 8, !dbg !9816
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill56, metadata !9817, metadata !DIExpression()), !dbg !9821
  %225 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_379 to { [0 x i8]*, i64 }*, !dbg !9821, !rawptr !418
  %226 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %225, i32 0, i32 0, !dbg !9821
  store [0 x i8]* %_333.0, [0 x i8]** %226, align 8, !dbg !9821
  %227 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %225, i32 0, i32 1, !dbg !9821
  store i64 %_333.1, i64* %227, align 8, !dbg !9821
  %228 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_379 to { i8*, i64 }*, !dbg !9821
  %229 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %228, i32 0, i32 1, !dbg !9821
  %len57 = load i64, i64* %229, align 8, !dbg !9821
  store i64 %len57, i64* %len.dbg.spill58, align 8, !dbg !9821
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill58, metadata !9416, metadata !DIExpression()), !dbg !9823
  %230 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9823
  %_216.0 = load [0 x i8]*, [0 x i8]** %230, align 8, !dbg !9823, !nonnull !23, !align !912, !noundef !23
  %231 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9823
  %_216.1 = load i64, i64* %231, align 8, !dbg !9823
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_214, [0 x i8]* align 1 %_216.0, i64 %_216.1, i64 %len57, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb60 unwind label %cleanup, !dbg !9823

bb60:                                             ; preds = %bb57
  %232 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_214 to { [0 x i8]*, i64 }*, !dbg !9823
  %233 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %232, i32 0, i32 0, !dbg !9823
  %head.059 = load [0 x i8]*, [0 x i8]** %233, align 8, !dbg !9823, !nonnull !23, !align !912, !noundef !23
  %234 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %232, i32 0, i32 1, !dbg !9823
  %head.160 = load i64, i64* %234, align 8, !dbg !9823
  %235 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill61, i32 0, i32 0, !dbg !9823
  store [0 x i8]* %head.059, [0 x i8]** %235, align 8, !dbg !9823
  %236 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill61, i32 0, i32 1, !dbg !9823
  store i64 %head.160, i64* %236, align 8, !dbg !9823
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill61, metadata !9418, metadata !DIExpression()), !dbg !9824
  %237 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_214, i32 0, i32 1, !dbg !9823
  %238 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %237, i32 0, i32 0, !dbg !9823
  %tail.062 = load [0 x i8]*, [0 x i8]** %238, align 8, !dbg !9823, !nonnull !23, !align !912, !noundef !23
  %239 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %237, i32 0, i32 1, !dbg !9823
  %tail.163 = load i64, i64* %239, align 8, !dbg !9823
  %240 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill64, i32 0, i32 0, !dbg !9823
  store [0 x i8]* %tail.062, [0 x i8]** %240, align 8, !dbg !9823
  %241 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill64, i32 0, i32 1, !dbg !9823
  store i64 %tail.163, i64* %241, align 8, !dbg !9823
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill64, metadata !9420, metadata !DIExpression()), !dbg !9824
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.059, i64 %head.160, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb61 unwind label %cleanup, !dbg !9824

bb61:                                             ; preds = %bb60
  %242 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9824
  store [0 x i8]* %tail.062, [0 x i8]** %242, align 8, !dbg !9824
  %243 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9824
  store i64 %tail.163, i64* %243, align 8, !dbg !9824
; invoke <T as core::borrow::Borrow<T>>::borrow
  %244 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %s.053, i64 %s.154)
          to label %bb62 unwind label %cleanup, !dbg !9824

bb62:                                             ; preds = %bb61
  %_224.0 = extractvalue { [0 x i8]*, i64 } %244, 0, !dbg !9824
  %_224.1 = extractvalue { [0 x i8]*, i64 } %244, 1, !dbg !9824
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %245 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %_224.0, i64 %_224.1)
          to label %bb63 unwind label %cleanup, !dbg !9824

bb63:                                             ; preds = %bb62
  %content_bytes.065 = extractvalue { [0 x i8]*, i64 } %245, 0, !dbg !9824, !rawptr !418
  %content_bytes.166 = extractvalue { [0 x i8]*, i64 } %245, 1, !dbg !9824, !rawptr !418
  %246 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill67, i32 0, i32 0, !dbg !9824
  store [0 x i8]* %content_bytes.065, [0 x i8]** %246, align 8, !dbg !9824
  %247 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill67, i32 0, i32 1, !dbg !9824
  store i64 %content_bytes.166, i64* %247, align 8, !dbg !9824
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill67, metadata !9421, metadata !DIExpression()), !dbg !9825
  %248 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill68, i32 0, i32 0, !dbg !9825
  store [0 x i8]* %content_bytes.065, [0 x i8]** %248, align 8, !dbg !9825
  %249 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill68, i32 0, i32 1, !dbg !9825
  store i64 %content_bytes.166, i64* %249, align 8, !dbg !9825
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill68, metadata !9826, metadata !DIExpression()), !dbg !9830
  %250 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_381 to { [0 x i8]*, i64 }*, !dbg !9830, !rawptr !418
  %251 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %250, i32 0, i32 0, !dbg !9830
  store [0 x i8]* %content_bytes.065, [0 x i8]** %251, align 8, !dbg !9830
  %252 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %250, i32 0, i32 1, !dbg !9830
  store i64 %content_bytes.166, i64* %252, align 8, !dbg !9830
  %253 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_381 to { i8*, i64 }*, !dbg !9830
  %254 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %253, i32 0, i32 1, !dbg !9830
  %len69 = load i64, i64* %254, align 8, !dbg !9830
  store i64 %len69, i64* %len.dbg.spill70, align 8, !dbg !9830
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill70, metadata !9423, metadata !DIExpression()), !dbg !9832
  %255 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9832
  %_232.0 = load [0 x i8]*, [0 x i8]** %255, align 8, !dbg !9832, !nonnull !23, !align !912, !noundef !23
  %256 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9832
  %_232.1 = load i64, i64* %256, align 8, !dbg !9832
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_230, [0 x i8]* align 1 %_232.0, i64 %_232.1, i64 %len69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb64 unwind label %cleanup, !dbg !9832

bb64:                                             ; preds = %bb63
  %257 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_230 to { [0 x i8]*, i64 }*, !dbg !9832
  %258 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %257, i32 0, i32 0, !dbg !9832
  %head.071 = load [0 x i8]*, [0 x i8]** %258, align 8, !dbg !9832, !nonnull !23, !align !912, !noundef !23
  %259 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %257, i32 0, i32 1, !dbg !9832
  %head.172 = load i64, i64* %259, align 8, !dbg !9832
  %260 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill73, i32 0, i32 0, !dbg !9832
  store [0 x i8]* %head.071, [0 x i8]** %260, align 8, !dbg !9832
  %261 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill73, i32 0, i32 1, !dbg !9832
  store i64 %head.172, i64* %261, align 8, !dbg !9832
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill73, metadata !9425, metadata !DIExpression()), !dbg !9833
  %262 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_230, i32 0, i32 1, !dbg !9832
  %263 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %262, i32 0, i32 0, !dbg !9832
  %tail.074 = load [0 x i8]*, [0 x i8]** %263, align 8, !dbg !9832, !nonnull !23, !align !912, !noundef !23
  %264 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %262, i32 0, i32 1, !dbg !9832
  %tail.175 = load i64, i64* %264, align 8, !dbg !9832
  %265 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill76, i32 0, i32 0, !dbg !9832
  store [0 x i8]* %tail.074, [0 x i8]** %265, align 8, !dbg !9832
  %266 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill76, i32 0, i32 1, !dbg !9832
  store i64 %tail.175, i64* %266, align 8, !dbg !9832
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill76, metadata !9427, metadata !DIExpression()), !dbg !9833
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.071, i64 %head.172, [0 x i8]* align 1 %content_bytes.065, i64 %content_bytes.166, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb65 unwind label %cleanup, !dbg !9833

bb65:                                             ; preds = %bb64
  %267 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9833
  store [0 x i8]* %tail.074, [0 x i8]** %267, align 8, !dbg !9833
  %268 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9833
  store i64 %tail.175, i64* %268, align 8, !dbg !9833
  br label %bb56, !dbg !9487

bb45:                                             ; preds = %bb54, %bb44
  store { i64*, i64* }* %iter4, { i64*, i64* }** %self.dbg.spill78, align 8, !dbg !9486
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill78, metadata !9834, metadata !DIExpression()), !dbg !9838
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_369 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter4)
          to label %bb103 unwind label %cleanup, !dbg !9838

bb103:                                            ; preds = %bb45
  %_371 = bitcast { i64*, i64* }* %iter4 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9838
; invoke core::option::Option<T>::map
  %269 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %_369, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_371)
          to label %bb104 unwind label %cleanup, !dbg !9838

bb104:                                            ; preds = %bb103
  store { i8*, i64 } %269, { i8*, i64 }* %_169, align 8, !dbg !9838
  %270 = bitcast { i8*, i64 }* %_169 to {}**, !dbg !9486
  %271 = load {}*, {}** %270, align 8, !dbg !9486
  %272 = icmp eq {}* %271, null, !dbg !9486
  %_172 = select i1 %272, i64 0, i64 1, !dbg !9486
  switch i64 %_172, label %bb47 [
    i64 0, label %bb48
    i64 1, label %bb46
  ], !dbg !9486

bb47:                                             ; preds = %bb104
  unreachable, !dbg !9486

bb48:                                             ; preds = %bb104
  br label %bb76, !dbg !9716

bb46:                                             ; preds = %bb104
  %273 = bitcast { i8*, i64 }* %_169 to { [0 x i8]*, i64 }*, !dbg !9486
  %274 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %273, i32 0, i32 0, !dbg !9486
  %s.079 = load [0 x i8]*, [0 x i8]** %274, align 8, !dbg !9486, !nonnull !23, !align !912, !noundef !23
  %275 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %273, i32 0, i32 1, !dbg !9486
  %s.180 = load i64, i64* %275, align 8, !dbg !9486
  %276 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill81, i32 0, i32 0, !dbg !9486
  store [0 x i8]* %s.079, [0 x i8]** %276, align 8, !dbg !9486
  %277 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill81, i32 0, i32 1, !dbg !9486
  store i64 %s.180, i64* %277, align 8, !dbg !9486
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill81, metadata !9398, metadata !DIExpression()), !dbg !9840
  %278 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill82, i32 0, i32 0, !dbg !9840
  store [0 x i8]* %_333.0, [0 x i8]** %278, align 8, !dbg !9840
  %279 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill82, i32 0, i32 1, !dbg !9840
  store i64 %_333.1, i64* %279, align 8, !dbg !9840
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill82, metadata !9841, metadata !DIExpression()), !dbg !9845
  %280 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_372 to { [0 x i8]*, i64 }*, !dbg !9845, !rawptr !418
  %281 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %280, i32 0, i32 0, !dbg !9845
  store [0 x i8]* %_333.0, [0 x i8]** %281, align 8, !dbg !9845
  %282 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %280, i32 0, i32 1, !dbg !9845
  store i64 %_333.1, i64* %282, align 8, !dbg !9845
  %283 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_372 to { i8*, i64 }*, !dbg !9845
  %284 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %283, i32 0, i32 1, !dbg !9845
  %len83 = load i64, i64* %284, align 8, !dbg !9845
  store i64 %len83, i64* %len.dbg.spill84, align 8, !dbg !9845
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill84, metadata !9400, metadata !DIExpression()), !dbg !9847
  %285 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9847
  %_180.0 = load [0 x i8]*, [0 x i8]** %285, align 8, !dbg !9847, !nonnull !23, !align !912, !noundef !23
  %286 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9847
  %_180.1 = load i64, i64* %286, align 8, !dbg !9847
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_178, [0 x i8]* align 1 %_180.0, i64 %_180.1, i64 %len83, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb49 unwind label %cleanup, !dbg !9847

bb49:                                             ; preds = %bb46
  %287 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_178 to { [0 x i8]*, i64 }*, !dbg !9847
  %288 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %287, i32 0, i32 0, !dbg !9847
  %head.085 = load [0 x i8]*, [0 x i8]** %288, align 8, !dbg !9847, !nonnull !23, !align !912, !noundef !23
  %289 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %287, i32 0, i32 1, !dbg !9847
  %head.186 = load i64, i64* %289, align 8, !dbg !9847
  %290 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill87, i32 0, i32 0, !dbg !9847
  store [0 x i8]* %head.085, [0 x i8]** %290, align 8, !dbg !9847
  %291 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill87, i32 0, i32 1, !dbg !9847
  store i64 %head.186, i64* %291, align 8, !dbg !9847
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill87, metadata !9402, metadata !DIExpression()), !dbg !9848
  %292 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_178, i32 0, i32 1, !dbg !9847
  %293 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %292, i32 0, i32 0, !dbg !9847
  %tail.088 = load [0 x i8]*, [0 x i8]** %293, align 8, !dbg !9847, !nonnull !23, !align !912, !noundef !23
  %294 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %292, i32 0, i32 1, !dbg !9847
  %tail.189 = load i64, i64* %294, align 8, !dbg !9847
  %295 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill90, i32 0, i32 0, !dbg !9847
  store [0 x i8]* %tail.088, [0 x i8]** %295, align 8, !dbg !9847
  %296 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill90, i32 0, i32 1, !dbg !9847
  store i64 %tail.189, i64* %296, align 8, !dbg !9847
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill90, metadata !9404, metadata !DIExpression()), !dbg !9848
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.085, i64 %head.186, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb50 unwind label %cleanup, !dbg !9848

bb50:                                             ; preds = %bb49
  %297 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9848
  store [0 x i8]* %tail.088, [0 x i8]** %297, align 8, !dbg !9848
  %298 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9848
  store i64 %tail.189, i64* %298, align 8, !dbg !9848
; invoke <T as core::borrow::Borrow<T>>::borrow
  %299 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %s.079, i64 %s.180)
          to label %bb51 unwind label %cleanup, !dbg !9848

bb51:                                             ; preds = %bb50
  %_188.0 = extractvalue { [0 x i8]*, i64 } %299, 0, !dbg !9848
  %_188.1 = extractvalue { [0 x i8]*, i64 } %299, 1, !dbg !9848
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %300 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %_188.0, i64 %_188.1)
          to label %bb52 unwind label %cleanup, !dbg !9848

bb52:                                             ; preds = %bb51
  %content_bytes.091 = extractvalue { [0 x i8]*, i64 } %300, 0, !dbg !9848, !rawptr !418
  %content_bytes.192 = extractvalue { [0 x i8]*, i64 } %300, 1, !dbg !9848, !rawptr !418
  %301 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill93, i32 0, i32 0, !dbg !9848
  store [0 x i8]* %content_bytes.091, [0 x i8]** %301, align 8, !dbg !9848
  %302 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill93, i32 0, i32 1, !dbg !9848
  store i64 %content_bytes.192, i64* %302, align 8, !dbg !9848
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill93, metadata !9405, metadata !DIExpression()), !dbg !9849
  %303 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill94, i32 0, i32 0, !dbg !9849
  store [0 x i8]* %content_bytes.091, [0 x i8]** %303, align 8, !dbg !9849
  %304 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill94, i32 0, i32 1, !dbg !9849
  store i64 %content_bytes.192, i64* %304, align 8, !dbg !9849
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill94, metadata !9850, metadata !DIExpression()), !dbg !9854
  %305 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_374 to { [0 x i8]*, i64 }*, !dbg !9854, !rawptr !418
  %306 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %305, i32 0, i32 0, !dbg !9854
  store [0 x i8]* %content_bytes.091, [0 x i8]** %306, align 8, !dbg !9854
  %307 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %305, i32 0, i32 1, !dbg !9854
  store i64 %content_bytes.192, i64* %307, align 8, !dbg !9854
  %308 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_374 to { i8*, i64 }*, !dbg !9854
  %309 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %308, i32 0, i32 1, !dbg !9854
  %len95 = load i64, i64* %309, align 8, !dbg !9854
  store i64 %len95, i64* %len.dbg.spill96, align 8, !dbg !9854
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill96, metadata !9407, metadata !DIExpression()), !dbg !9856
  %310 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9856
  %_196.0 = load [0 x i8]*, [0 x i8]** %310, align 8, !dbg !9856, !nonnull !23, !align !912, !noundef !23
  %311 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9856
  %_196.1 = load i64, i64* %311, align 8, !dbg !9856
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_194, [0 x i8]* align 1 %_196.0, i64 %_196.1, i64 %len95, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb53 unwind label %cleanup, !dbg !9856

bb53:                                             ; preds = %bb52
  %312 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_194 to { [0 x i8]*, i64 }*, !dbg !9856
  %313 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %312, i32 0, i32 0, !dbg !9856
  %head.097 = load [0 x i8]*, [0 x i8]** %313, align 8, !dbg !9856, !nonnull !23, !align !912, !noundef !23
  %314 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %312, i32 0, i32 1, !dbg !9856
  %head.198 = load i64, i64* %314, align 8, !dbg !9856
  %315 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill99, i32 0, i32 0, !dbg !9856
  store [0 x i8]* %head.097, [0 x i8]** %315, align 8, !dbg !9856
  %316 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill99, i32 0, i32 1, !dbg !9856
  store i64 %head.198, i64* %316, align 8, !dbg !9856
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill99, metadata !9409, metadata !DIExpression()), !dbg !9857
  %317 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_194, i32 0, i32 1, !dbg !9856
  %318 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %317, i32 0, i32 0, !dbg !9856
  %tail.0100 = load [0 x i8]*, [0 x i8]** %318, align 8, !dbg !9856, !nonnull !23, !align !912, !noundef !23
  %319 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %317, i32 0, i32 1, !dbg !9856
  %tail.1101 = load i64, i64* %319, align 8, !dbg !9856
  %320 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill102, i32 0, i32 0, !dbg !9856
  store [0 x i8]* %tail.0100, [0 x i8]** %320, align 8, !dbg !9856
  %321 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill102, i32 0, i32 1, !dbg !9856
  store i64 %tail.1101, i64* %321, align 8, !dbg !9856
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill102, metadata !9411, metadata !DIExpression()), !dbg !9857
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.097, i64 %head.198, [0 x i8]* align 1 %content_bytes.091, i64 %content_bytes.192, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb54 unwind label %cleanup, !dbg !9857

bb54:                                             ; preds = %bb53
  %322 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9857
  store [0 x i8]* %tail.0100, [0 x i8]** %322, align 8, !dbg !9857
  %323 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9857
  store i64 %tail.1101, i64* %323, align 8, !dbg !9857
  br label %bb45, !dbg !9486

bb34:                                             ; preds = %bb43, %bb33
  store { i64*, i64* }* %iter3, { i64*, i64* }** %self.dbg.spill104, align 8, !dbg !9485
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill104, metadata !9858, metadata !DIExpression()), !dbg !9862
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_362 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter3)
          to label %bb101 unwind label %cleanup, !dbg !9862

bb101:                                            ; preds = %bb34
  %_364 = bitcast { i64*, i64* }* %iter3 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9862
; invoke core::option::Option<T>::map
  %324 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %_362, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_364)
          to label %bb102 unwind label %cleanup, !dbg !9862

bb102:                                            ; preds = %bb101
  store { i8*, i64 } %324, { i8*, i64 }* %_133, align 8, !dbg !9862
  %325 = bitcast { i8*, i64 }* %_133 to {}**, !dbg !9485
  %326 = load {}*, {}** %325, align 8, !dbg !9485
  %327 = icmp eq {}* %326, null, !dbg !9485
  %_136 = select i1 %327, i64 0, i64 1, !dbg !9485
  switch i64 %_136, label %bb36 [
    i64 0, label %bb37
    i64 1, label %bb35
  ], !dbg !9485

bb36:                                             ; preds = %bb102
  unreachable, !dbg !9485

bb37:                                             ; preds = %bb102
  br label %bb76, !dbg !9716

bb35:                                             ; preds = %bb102
  %328 = bitcast { i8*, i64 }* %_133 to { [0 x i8]*, i64 }*, !dbg !9485
  %329 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %328, i32 0, i32 0, !dbg !9485
  %s.0105 = load [0 x i8]*, [0 x i8]** %329, align 8, !dbg !9485, !nonnull !23, !align !912, !noundef !23
  %330 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %328, i32 0, i32 1, !dbg !9485
  %s.1106 = load i64, i64* %330, align 8, !dbg !9485
  %331 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill107, i32 0, i32 0, !dbg !9485
  store [0 x i8]* %s.0105, [0 x i8]** %331, align 8, !dbg !9485
  %332 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill107, i32 0, i32 1, !dbg !9485
  store i64 %s.1106, i64* %332, align 8, !dbg !9485
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill107, metadata !9382, metadata !DIExpression()), !dbg !9864
  %333 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill108, i32 0, i32 0, !dbg !9864
  store [0 x i8]* %_333.0, [0 x i8]** %333, align 8, !dbg !9864
  %334 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill108, i32 0, i32 1, !dbg !9864
  store i64 %_333.1, i64* %334, align 8, !dbg !9864
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill108, metadata !9865, metadata !DIExpression()), !dbg !9869
  %335 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_365 to { [0 x i8]*, i64 }*, !dbg !9869, !rawptr !418
  %336 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %335, i32 0, i32 0, !dbg !9869
  store [0 x i8]* %_333.0, [0 x i8]** %336, align 8, !dbg !9869
  %337 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %335, i32 0, i32 1, !dbg !9869
  store i64 %_333.1, i64* %337, align 8, !dbg !9869
  %338 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_365 to { i8*, i64 }*, !dbg !9869
  %339 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %338, i32 0, i32 1, !dbg !9869
  %len109 = load i64, i64* %339, align 8, !dbg !9869
  store i64 %len109, i64* %len.dbg.spill110, align 8, !dbg !9869
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill110, metadata !9384, metadata !DIExpression()), !dbg !9871
  %340 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9871
  %_144.0 = load [0 x i8]*, [0 x i8]** %340, align 8, !dbg !9871, !nonnull !23, !align !912, !noundef !23
  %341 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9871
  %_144.1 = load i64, i64* %341, align 8, !dbg !9871
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_142, [0 x i8]* align 1 %_144.0, i64 %_144.1, i64 %len109, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb38 unwind label %cleanup, !dbg !9871

bb38:                                             ; preds = %bb35
  %342 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_142 to { [0 x i8]*, i64 }*, !dbg !9871
  %343 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %342, i32 0, i32 0, !dbg !9871
  %head.0111 = load [0 x i8]*, [0 x i8]** %343, align 8, !dbg !9871, !nonnull !23, !align !912, !noundef !23
  %344 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %342, i32 0, i32 1, !dbg !9871
  %head.1112 = load i64, i64* %344, align 8, !dbg !9871
  %345 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill113, i32 0, i32 0, !dbg !9871
  store [0 x i8]* %head.0111, [0 x i8]** %345, align 8, !dbg !9871
  %346 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill113, i32 0, i32 1, !dbg !9871
  store i64 %head.1112, i64* %346, align 8, !dbg !9871
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill113, metadata !9386, metadata !DIExpression()), !dbg !9872
  %347 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_142, i32 0, i32 1, !dbg !9871
  %348 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %347, i32 0, i32 0, !dbg !9871
  %tail.0114 = load [0 x i8]*, [0 x i8]** %348, align 8, !dbg !9871, !nonnull !23, !align !912, !noundef !23
  %349 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %347, i32 0, i32 1, !dbg !9871
  %tail.1115 = load i64, i64* %349, align 8, !dbg !9871
  %350 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill116, i32 0, i32 0, !dbg !9871
  store [0 x i8]* %tail.0114, [0 x i8]** %350, align 8, !dbg !9871
  %351 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill116, i32 0, i32 1, !dbg !9871
  store i64 %tail.1115, i64* %351, align 8, !dbg !9871
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill116, metadata !9388, metadata !DIExpression()), !dbg !9872
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0111, i64 %head.1112, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb39 unwind label %cleanup, !dbg !9872

bb39:                                             ; preds = %bb38
  %352 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9872
  store [0 x i8]* %tail.0114, [0 x i8]** %352, align 8, !dbg !9872
  %353 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9872
  store i64 %tail.1115, i64* %353, align 8, !dbg !9872
; invoke <T as core::borrow::Borrow<T>>::borrow
  %354 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %s.0105, i64 %s.1106)
          to label %bb40 unwind label %cleanup, !dbg !9872

bb40:                                             ; preds = %bb39
  %_152.0 = extractvalue { [0 x i8]*, i64 } %354, 0, !dbg !9872
  %_152.1 = extractvalue { [0 x i8]*, i64 } %354, 1, !dbg !9872
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %355 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %_152.0, i64 %_152.1)
          to label %bb41 unwind label %cleanup, !dbg !9872

bb41:                                             ; preds = %bb40
  %content_bytes.0117 = extractvalue { [0 x i8]*, i64 } %355, 0, !dbg !9872, !rawptr !418
  %content_bytes.1118 = extractvalue { [0 x i8]*, i64 } %355, 1, !dbg !9872, !rawptr !418
  %356 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill119, i32 0, i32 0, !dbg !9872
  store [0 x i8]* %content_bytes.0117, [0 x i8]** %356, align 8, !dbg !9872
  %357 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill119, i32 0, i32 1, !dbg !9872
  store i64 %content_bytes.1118, i64* %357, align 8, !dbg !9872
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill119, metadata !9389, metadata !DIExpression()), !dbg !9873
  %358 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill120, i32 0, i32 0, !dbg !9873
  store [0 x i8]* %content_bytes.0117, [0 x i8]** %358, align 8, !dbg !9873
  %359 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill120, i32 0, i32 1, !dbg !9873
  store i64 %content_bytes.1118, i64* %359, align 8, !dbg !9873
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill120, metadata !9874, metadata !DIExpression()), !dbg !9878
  %360 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_367 to { [0 x i8]*, i64 }*, !dbg !9878, !rawptr !418
  %361 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %360, i32 0, i32 0, !dbg !9878
  store [0 x i8]* %content_bytes.0117, [0 x i8]** %361, align 8, !dbg !9878
  %362 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %360, i32 0, i32 1, !dbg !9878
  store i64 %content_bytes.1118, i64* %362, align 8, !dbg !9878
  %363 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_367 to { i8*, i64 }*, !dbg !9878
  %364 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %363, i32 0, i32 1, !dbg !9878
  %len121 = load i64, i64* %364, align 8, !dbg !9878
  store i64 %len121, i64* %len.dbg.spill122, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill122, metadata !9391, metadata !DIExpression()), !dbg !9880
  %365 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9880
  %_160.0 = load [0 x i8]*, [0 x i8]** %365, align 8, !dbg !9880, !nonnull !23, !align !912, !noundef !23
  %366 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9880
  %_160.1 = load i64, i64* %366, align 8, !dbg !9880
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_158, [0 x i8]* align 1 %_160.0, i64 %_160.1, i64 %len121, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb42 unwind label %cleanup, !dbg !9880

bb42:                                             ; preds = %bb41
  %367 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_158 to { [0 x i8]*, i64 }*, !dbg !9880
  %368 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %367, i32 0, i32 0, !dbg !9880
  %head.0123 = load [0 x i8]*, [0 x i8]** %368, align 8, !dbg !9880, !nonnull !23, !align !912, !noundef !23
  %369 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %367, i32 0, i32 1, !dbg !9880
  %head.1124 = load i64, i64* %369, align 8, !dbg !9880
  %370 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill125, i32 0, i32 0, !dbg !9880
  store [0 x i8]* %head.0123, [0 x i8]** %370, align 8, !dbg !9880
  %371 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill125, i32 0, i32 1, !dbg !9880
  store i64 %head.1124, i64* %371, align 8, !dbg !9880
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill125, metadata !9393, metadata !DIExpression()), !dbg !9881
  %372 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_158, i32 0, i32 1, !dbg !9880
  %373 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %372, i32 0, i32 0, !dbg !9880
  %tail.0126 = load [0 x i8]*, [0 x i8]** %373, align 8, !dbg !9880, !nonnull !23, !align !912, !noundef !23
  %374 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %372, i32 0, i32 1, !dbg !9880
  %tail.1127 = load i64, i64* %374, align 8, !dbg !9880
  %375 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill128, i32 0, i32 0, !dbg !9880
  store [0 x i8]* %tail.0126, [0 x i8]** %375, align 8, !dbg !9880
  %376 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill128, i32 0, i32 1, !dbg !9880
  store i64 %tail.1127, i64* %376, align 8, !dbg !9880
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill128, metadata !9395, metadata !DIExpression()), !dbg !9881
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0123, i64 %head.1124, [0 x i8]* align 1 %content_bytes.0117, i64 %content_bytes.1118, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb43 unwind label %cleanup, !dbg !9881

bb43:                                             ; preds = %bb42
  %377 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9881
  store [0 x i8]* %tail.0126, [0 x i8]** %377, align 8, !dbg !9881
  %378 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9881
  store i64 %tail.1127, i64* %378, align 8, !dbg !9881
  br label %bb34, !dbg !9485

bb23:                                             ; preds = %bb32, %bb22
  store { i64*, i64* }* %iter2, { i64*, i64* }** %self.dbg.spill130, align 8, !dbg !9484
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill130, metadata !9882, metadata !DIExpression()), !dbg !9886
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_355 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter2)
          to label %bb99 unwind label %cleanup, !dbg !9886

bb99:                                             ; preds = %bb23
  %_357 = bitcast { i64*, i64* }* %iter2 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9886
; invoke core::option::Option<T>::map
  %379 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %_355, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_357)
          to label %bb100 unwind label %cleanup, !dbg !9886

bb100:                                            ; preds = %bb99
  store { i8*, i64 } %379, { i8*, i64 }* %_97, align 8, !dbg !9886
  %380 = bitcast { i8*, i64 }* %_97 to {}**, !dbg !9484
  %381 = load {}*, {}** %380, align 8, !dbg !9484
  %382 = icmp eq {}* %381, null, !dbg !9484
  %_100 = select i1 %382, i64 0, i64 1, !dbg !9484
  switch i64 %_100, label %bb25 [
    i64 0, label %bb26
    i64 1, label %bb24
  ], !dbg !9484

bb25:                                             ; preds = %bb100
  unreachable, !dbg !9484

bb26:                                             ; preds = %bb100
  br label %bb76, !dbg !9716

bb24:                                             ; preds = %bb100
  %383 = bitcast { i8*, i64 }* %_97 to { [0 x i8]*, i64 }*, !dbg !9484
  %384 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %383, i32 0, i32 0, !dbg !9484
  %s.0131 = load [0 x i8]*, [0 x i8]** %384, align 8, !dbg !9484, !nonnull !23, !align !912, !noundef !23
  %385 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %383, i32 0, i32 1, !dbg !9484
  %s.1132 = load i64, i64* %385, align 8, !dbg !9484
  %386 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill133, i32 0, i32 0, !dbg !9484
  store [0 x i8]* %s.0131, [0 x i8]** %386, align 8, !dbg !9484
  %387 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill133, i32 0, i32 1, !dbg !9484
  store i64 %s.1132, i64* %387, align 8, !dbg !9484
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill133, metadata !9366, metadata !DIExpression()), !dbg !9888
  %388 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill134, i32 0, i32 0, !dbg !9888
  store [0 x i8]* %_333.0, [0 x i8]** %388, align 8, !dbg !9888
  %389 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill134, i32 0, i32 1, !dbg !9888
  store i64 %_333.1, i64* %389, align 8, !dbg !9888
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill134, metadata !9889, metadata !DIExpression()), !dbg !9893
  %390 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_358 to { [0 x i8]*, i64 }*, !dbg !9893, !rawptr !418
  %391 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %390, i32 0, i32 0, !dbg !9893
  store [0 x i8]* %_333.0, [0 x i8]** %391, align 8, !dbg !9893
  %392 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %390, i32 0, i32 1, !dbg !9893
  store i64 %_333.1, i64* %392, align 8, !dbg !9893
  %393 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_358 to { i8*, i64 }*, !dbg !9893
  %394 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %393, i32 0, i32 1, !dbg !9893
  %len135 = load i64, i64* %394, align 8, !dbg !9893
  store i64 %len135, i64* %len.dbg.spill136, align 8, !dbg !9893
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill136, metadata !9368, metadata !DIExpression()), !dbg !9895
  %395 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9895
  %_108.0 = load [0 x i8]*, [0 x i8]** %395, align 8, !dbg !9895, !nonnull !23, !align !912, !noundef !23
  %396 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9895
  %_108.1 = load i64, i64* %396, align 8, !dbg !9895
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_106, [0 x i8]* align 1 %_108.0, i64 %_108.1, i64 %len135, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb27 unwind label %cleanup, !dbg !9895

bb27:                                             ; preds = %bb24
  %397 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_106 to { [0 x i8]*, i64 }*, !dbg !9895
  %398 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %397, i32 0, i32 0, !dbg !9895
  %head.0137 = load [0 x i8]*, [0 x i8]** %398, align 8, !dbg !9895, !nonnull !23, !align !912, !noundef !23
  %399 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %397, i32 0, i32 1, !dbg !9895
  %head.1138 = load i64, i64* %399, align 8, !dbg !9895
  %400 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill139, i32 0, i32 0, !dbg !9895
  store [0 x i8]* %head.0137, [0 x i8]** %400, align 8, !dbg !9895
  %401 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill139, i32 0, i32 1, !dbg !9895
  store i64 %head.1138, i64* %401, align 8, !dbg !9895
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill139, metadata !9370, metadata !DIExpression()), !dbg !9896
  %402 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_106, i32 0, i32 1, !dbg !9895
  %403 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %402, i32 0, i32 0, !dbg !9895
  %tail.0140 = load [0 x i8]*, [0 x i8]** %403, align 8, !dbg !9895, !nonnull !23, !align !912, !noundef !23
  %404 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %402, i32 0, i32 1, !dbg !9895
  %tail.1141 = load i64, i64* %404, align 8, !dbg !9895
  %405 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill142, i32 0, i32 0, !dbg !9895
  store [0 x i8]* %tail.0140, [0 x i8]** %405, align 8, !dbg !9895
  %406 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill142, i32 0, i32 1, !dbg !9895
  store i64 %tail.1141, i64* %406, align 8, !dbg !9895
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill142, metadata !9372, metadata !DIExpression()), !dbg !9896
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0137, i64 %head.1138, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb28 unwind label %cleanup, !dbg !9896

bb28:                                             ; preds = %bb27
  %407 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9896
  store [0 x i8]* %tail.0140, [0 x i8]** %407, align 8, !dbg !9896
  %408 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9896
  store i64 %tail.1141, i64* %408, align 8, !dbg !9896
; invoke <T as core::borrow::Borrow<T>>::borrow
  %409 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %s.0131, i64 %s.1132)
          to label %bb29 unwind label %cleanup, !dbg !9896

bb29:                                             ; preds = %bb28
  %_116.0 = extractvalue { [0 x i8]*, i64 } %409, 0, !dbg !9896
  %_116.1 = extractvalue { [0 x i8]*, i64 } %409, 1, !dbg !9896
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %410 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %_116.0, i64 %_116.1)
          to label %bb30 unwind label %cleanup, !dbg !9896

bb30:                                             ; preds = %bb29
  %content_bytes.0143 = extractvalue { [0 x i8]*, i64 } %410, 0, !dbg !9896, !rawptr !418
  %content_bytes.1144 = extractvalue { [0 x i8]*, i64 } %410, 1, !dbg !9896, !rawptr !418
  %411 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill145, i32 0, i32 0, !dbg !9896
  store [0 x i8]* %content_bytes.0143, [0 x i8]** %411, align 8, !dbg !9896
  %412 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill145, i32 0, i32 1, !dbg !9896
  store i64 %content_bytes.1144, i64* %412, align 8, !dbg !9896
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill145, metadata !9373, metadata !DIExpression()), !dbg !9897
  %413 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill146, i32 0, i32 0, !dbg !9897
  store [0 x i8]* %content_bytes.0143, [0 x i8]** %413, align 8, !dbg !9897
  %414 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill146, i32 0, i32 1, !dbg !9897
  store i64 %content_bytes.1144, i64* %414, align 8, !dbg !9897
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill146, metadata !9898, metadata !DIExpression()), !dbg !9902
  %415 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_360 to { [0 x i8]*, i64 }*, !dbg !9902, !rawptr !418
  %416 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %415, i32 0, i32 0, !dbg !9902
  store [0 x i8]* %content_bytes.0143, [0 x i8]** %416, align 8, !dbg !9902
  %417 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %415, i32 0, i32 1, !dbg !9902
  store i64 %content_bytes.1144, i64* %417, align 8, !dbg !9902
  %418 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_360 to { i8*, i64 }*, !dbg !9902
  %419 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %418, i32 0, i32 1, !dbg !9902
  %len147 = load i64, i64* %419, align 8, !dbg !9902
  store i64 %len147, i64* %len.dbg.spill148, align 8, !dbg !9902
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill148, metadata !9375, metadata !DIExpression()), !dbg !9904
  %420 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9904
  %_124.0 = load [0 x i8]*, [0 x i8]** %420, align 8, !dbg !9904, !nonnull !23, !align !912, !noundef !23
  %421 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9904
  %_124.1 = load i64, i64* %421, align 8, !dbg !9904
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_122, [0 x i8]* align 1 %_124.0, i64 %_124.1, i64 %len147, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb31 unwind label %cleanup, !dbg !9904

bb31:                                             ; preds = %bb30
  %422 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_122 to { [0 x i8]*, i64 }*, !dbg !9904
  %423 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %422, i32 0, i32 0, !dbg !9904
  %head.0149 = load [0 x i8]*, [0 x i8]** %423, align 8, !dbg !9904, !nonnull !23, !align !912, !noundef !23
  %424 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %422, i32 0, i32 1, !dbg !9904
  %head.1150 = load i64, i64* %424, align 8, !dbg !9904
  %425 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill151, i32 0, i32 0, !dbg !9904
  store [0 x i8]* %head.0149, [0 x i8]** %425, align 8, !dbg !9904
  %426 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill151, i32 0, i32 1, !dbg !9904
  store i64 %head.1150, i64* %426, align 8, !dbg !9904
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill151, metadata !9377, metadata !DIExpression()), !dbg !9905
  %427 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_122, i32 0, i32 1, !dbg !9904
  %428 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %427, i32 0, i32 0, !dbg !9904
  %tail.0152 = load [0 x i8]*, [0 x i8]** %428, align 8, !dbg !9904, !nonnull !23, !align !912, !noundef !23
  %429 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %427, i32 0, i32 1, !dbg !9904
  %tail.1153 = load i64, i64* %429, align 8, !dbg !9904
  %430 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill154, i32 0, i32 0, !dbg !9904
  store [0 x i8]* %tail.0152, [0 x i8]** %430, align 8, !dbg !9904
  %431 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill154, i32 0, i32 1, !dbg !9904
  store i64 %tail.1153, i64* %431, align 8, !dbg !9904
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill154, metadata !9379, metadata !DIExpression()), !dbg !9905
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0149, i64 %head.1150, [0 x i8]* align 1 %content_bytes.0143, i64 %content_bytes.1144, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb32 unwind label %cleanup, !dbg !9905

bb32:                                             ; preds = %bb31
  %432 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9905
  store [0 x i8]* %tail.0152, [0 x i8]** %432, align 8, !dbg !9905
  %433 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9905
  store i64 %tail.1153, i64* %433, align 8, !dbg !9905
  br label %bb23, !dbg !9484

bb12:                                             ; preds = %bb21, %bb11
  store { i64*, i64* }* %iter1, { i64*, i64* }** %self.dbg.spill156, align 8, !dbg !9483
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill156, metadata !9906, metadata !DIExpression()), !dbg !9910
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_348 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter1)
          to label %bb97 unwind label %cleanup, !dbg !9910

bb97:                                             ; preds = %bb12
  %_350 = bitcast { i64*, i64* }* %iter1 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9910
; invoke core::option::Option<T>::map
  %434 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE"(i64* align 8 %_348, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_350)
          to label %bb98 unwind label %cleanup, !dbg !9910

bb98:                                             ; preds = %bb97
  store { i8*, i64 } %434, { i8*, i64 }* %_61, align 8, !dbg !9910
  %435 = bitcast { i8*, i64 }* %_61 to {}**, !dbg !9483
  %436 = load {}*, {}** %435, align 8, !dbg !9483
  %437 = icmp eq {}* %436, null, !dbg !9483
  %_64 = select i1 %437, i64 0, i64 1, !dbg !9483
  switch i64 %_64, label %bb14 [
    i64 0, label %bb15
    i64 1, label %bb13
  ], !dbg !9483

bb14:                                             ; preds = %bb98
  unreachable, !dbg !9483

bb15:                                             ; preds = %bb98
  br label %bb76, !dbg !9716

bb13:                                             ; preds = %bb98
  %438 = bitcast { i8*, i64 }* %_61 to { [0 x i8]*, i64 }*, !dbg !9483
  %439 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %438, i32 0, i32 0, !dbg !9483
  %s.0157 = load [0 x i8]*, [0 x i8]** %439, align 8, !dbg !9483, !nonnull !23, !align !912, !noundef !23
  %440 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %438, i32 0, i32 1, !dbg !9483
  %s.1158 = load i64, i64* %440, align 8, !dbg !9483
  %441 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill159, i32 0, i32 0, !dbg !9483
  store [0 x i8]* %s.0157, [0 x i8]** %441, align 8, !dbg !9483
  %442 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill159, i32 0, i32 1, !dbg !9483
  store i64 %s.1158, i64* %442, align 8, !dbg !9483
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill159, metadata !9350, metadata !DIExpression()), !dbg !9912
  %443 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill160, i32 0, i32 0, !dbg !9912
  store [0 x i8]* %_333.0, [0 x i8]** %443, align 8, !dbg !9912
  %444 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill160, i32 0, i32 1, !dbg !9912
  store i64 %_333.1, i64* %444, align 8, !dbg !9912
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill160, metadata !9913, metadata !DIExpression()), !dbg !9917
  %445 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_351 to { [0 x i8]*, i64 }*, !dbg !9917, !rawptr !418
  %446 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %445, i32 0, i32 0, !dbg !9917
  store [0 x i8]* %_333.0, [0 x i8]** %446, align 8, !dbg !9917
  %447 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %445, i32 0, i32 1, !dbg !9917
  store i64 %_333.1, i64* %447, align 8, !dbg !9917
  %448 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_351 to { i8*, i64 }*, !dbg !9917
  %449 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %448, i32 0, i32 1, !dbg !9917
  %len161 = load i64, i64* %449, align 8, !dbg !9917
  store i64 %len161, i64* %len.dbg.spill162, align 8, !dbg !9917
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill162, metadata !9352, metadata !DIExpression()), !dbg !9919
  %450 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9919
  %_72.0 = load [0 x i8]*, [0 x i8]** %450, align 8, !dbg !9919, !nonnull !23, !align !912, !noundef !23
  %451 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9919
  %_72.1 = load i64, i64* %451, align 8, !dbg !9919
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_70, [0 x i8]* align 1 %_72.0, i64 %_72.1, i64 %len161, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb16 unwind label %cleanup, !dbg !9919

bb16:                                             ; preds = %bb13
  %452 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_70 to { [0 x i8]*, i64 }*, !dbg !9919
  %453 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %452, i32 0, i32 0, !dbg !9919
  %head.0163 = load [0 x i8]*, [0 x i8]** %453, align 8, !dbg !9919, !nonnull !23, !align !912, !noundef !23
  %454 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %452, i32 0, i32 1, !dbg !9919
  %head.1164 = load i64, i64* %454, align 8, !dbg !9919
  %455 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill165, i32 0, i32 0, !dbg !9919
  store [0 x i8]* %head.0163, [0 x i8]** %455, align 8, !dbg !9919
  %456 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill165, i32 0, i32 1, !dbg !9919
  store i64 %head.1164, i64* %456, align 8, !dbg !9919
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill165, metadata !9354, metadata !DIExpression()), !dbg !9920
  %457 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_70, i32 0, i32 1, !dbg !9919
  %458 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %457, i32 0, i32 0, !dbg !9919
  %tail.0166 = load [0 x i8]*, [0 x i8]** %458, align 8, !dbg !9919, !nonnull !23, !align !912, !noundef !23
  %459 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %457, i32 0, i32 1, !dbg !9919
  %tail.1167 = load i64, i64* %459, align 8, !dbg !9919
  %460 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill168, i32 0, i32 0, !dbg !9919
  store [0 x i8]* %tail.0166, [0 x i8]** %460, align 8, !dbg !9919
  %461 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill168, i32 0, i32 1, !dbg !9919
  store i64 %tail.1167, i64* %461, align 8, !dbg !9919
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill168, metadata !9356, metadata !DIExpression()), !dbg !9920
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0163, i64 %head.1164, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup, !dbg !9920

bb17:                                             ; preds = %bb16
  %462 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9920
  store [0 x i8]* %tail.0166, [0 x i8]** %462, align 8, !dbg !9920
  %463 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9920
  store i64 %tail.1167, i64* %463, align 8, !dbg !9920
; invoke <T as core::borrow::Borrow<T>>::borrow
  %464 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E"([0 x i8]* align 1 %s.0157, i64 %s.1158)
          to label %bb18 unwind label %cleanup, !dbg !9920

bb18:                                             ; preds = %bb17
  %_80.0 = extractvalue { [0 x i8]*, i64 } %464, 0, !dbg !9920
  %_80.1 = extractvalue { [0 x i8]*, i64 } %464, 1, !dbg !9920
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %465 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %_80.0, i64 %_80.1)
          to label %bb19 unwind label %cleanup, !dbg !9920

bb19:                                             ; preds = %bb18
  %content_bytes.0169 = extractvalue { [0 x i8]*, i64 } %465, 0, !dbg !9920, !rawptr !418
  %content_bytes.1170 = extractvalue { [0 x i8]*, i64 } %465, 1, !dbg !9920, !rawptr !418
  %466 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill171, i32 0, i32 0, !dbg !9920
  store [0 x i8]* %content_bytes.0169, [0 x i8]** %466, align 8, !dbg !9920
  %467 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill171, i32 0, i32 1, !dbg !9920
  store i64 %content_bytes.1170, i64* %467, align 8, !dbg !9920
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill171, metadata !9357, metadata !DIExpression()), !dbg !9921
  %468 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill172, i32 0, i32 0, !dbg !9921
  store [0 x i8]* %content_bytes.0169, [0 x i8]** %468, align 8, !dbg !9921
  %469 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill172, i32 0, i32 1, !dbg !9921
  store i64 %content_bytes.1170, i64* %469, align 8, !dbg !9921
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill172, metadata !9922, metadata !DIExpression()), !dbg !9926
  %470 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_353 to { [0 x i8]*, i64 }*, !dbg !9926, !rawptr !418
  %471 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %470, i32 0, i32 0, !dbg !9926
  store [0 x i8]* %content_bytes.0169, [0 x i8]** %471, align 8, !dbg !9926
  %472 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %470, i32 0, i32 1, !dbg !9926
  store i64 %content_bytes.1170, i64* %472, align 8, !dbg !9926
  %473 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_353 to { i8*, i64 }*, !dbg !9926
  %474 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %473, i32 0, i32 1, !dbg !9926
  %len173 = load i64, i64* %474, align 8, !dbg !9926
  store i64 %len173, i64* %len.dbg.spill174, align 8, !dbg !9926
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill174, metadata !9359, metadata !DIExpression()), !dbg !9928
  %475 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9928
  %_88.0 = load [0 x i8]*, [0 x i8]** %475, align 8, !dbg !9928, !nonnull !23, !align !912, !noundef !23
  %476 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9928
  %_88.1 = load i64, i64* %476, align 8, !dbg !9928
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_86, [0 x i8]* align 1 %_88.0, i64 %_88.1, i64 %len173, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb20 unwind label %cleanup, !dbg !9928

bb20:                                             ; preds = %bb19
  %477 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_86 to { [0 x i8]*, i64 }*, !dbg !9928
  %478 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %477, i32 0, i32 0, !dbg !9928
  %head.0175 = load [0 x i8]*, [0 x i8]** %478, align 8, !dbg !9928, !nonnull !23, !align !912, !noundef !23
  %479 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %477, i32 0, i32 1, !dbg !9928
  %head.1176 = load i64, i64* %479, align 8, !dbg !9928
  %480 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill177, i32 0, i32 0, !dbg !9928
  store [0 x i8]* %head.0175, [0 x i8]** %480, align 8, !dbg !9928
  %481 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill177, i32 0, i32 1, !dbg !9928
  store i64 %head.1176, i64* %481, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill177, metadata !9361, metadata !DIExpression()), !dbg !9929
  %482 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_86, i32 0, i32 1, !dbg !9928
  %483 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %482, i32 0, i32 0, !dbg !9928
  %tail.0178 = load [0 x i8]*, [0 x i8]** %483, align 8, !dbg !9928, !nonnull !23, !align !912, !noundef !23
  %484 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %482, i32 0, i32 1, !dbg !9928
  %tail.1179 = load i64, i64* %484, align 8, !dbg !9928
  %485 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill180, i32 0, i32 0, !dbg !9928
  store [0 x i8]* %tail.0178, [0 x i8]** %485, align 8, !dbg !9928
  %486 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill180, i32 0, i32 1, !dbg !9928
  store i64 %tail.1179, i64* %486, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill180, metadata !9363, metadata !DIExpression()), !dbg !9929
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E"([0 x i8]* align 1 %head.0175, i64 %head.1176, [0 x i8]* align 1 %content_bytes.0169, i64 %content_bytes.1170, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*))
          to label %bb21 unwind label %cleanup, !dbg !9929

bb21:                                             ; preds = %bb20
  %487 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9929
  store [0 x i8]* %tail.0178, [0 x i8]** %487, align 8, !dbg !9929
  %488 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9929
  store i64 %tail.1179, i64* %488, align 8, !dbg !9929
  br label %bb12, !dbg !9483

abort:                                            ; preds = %bb78
  %489 = landingpad { i8*, i32 }
          cleanup, !dbg !9930
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !9930
  unreachable, !dbg !9930

bb79:                                             ; preds = %bb78
  %490 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9930
  %491 = load i8*, i8** %490, align 8, !dbg !9930
  %492 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9930
  %493 = load i32, i32* %492, align 8, !dbg !9930
  %494 = insertvalue { i8*, i32 } undef, i8* %491, 0, !dbg !9930
  %495 = insertvalue { i8*, i32 } %494, i32 %493, 1, !dbg !9930
  resume { i8*, i32 } %495, !dbg !9930

bb77:                                             ; preds = %bb81, %bb76
  ret void, !dbg !9533
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h9461ac78f0f5cd8dE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %it) unnamed_addr #1 !dbg !9931 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill4 = alloca i64, align 8
  %data.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %it.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %it.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, align 8
  %_23 = alloca { i8*, i64 }, align 8
  %_22 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %_1, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %_1.dbg.spill, metadata !9936, metadata !DIExpression()), !dbg !9937
  store { [0 x i8]*, i64 }* %it, { [0 x i8]*, i64 }** %it.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %it.dbg.spill, metadata !9933, metadata !DIExpression()), !dbg !9938
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h2c1a3208f1ea1b09E"({ [0 x i8]*, i64 }* align 8 %it), !dbg !9939
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !9939
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !9939
  br label %bb1, !dbg !9939

bb1:                                              ; preds = %start
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17h3da7e002de0456c6E"([0 x i8]* align 1 %_5.0, i64 %_5.1), !dbg !9939
  %it.0 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !9939, !rawptr !418
  %it.1 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !9939, !rawptr !418
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %it.dbg.spill1, i32 0, i32 0, !dbg !9939
  store [0 x i8]* %it.0, [0 x i8]** %2, align 8, !dbg !9939
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %it.dbg.spill1, i32 0, i32 1, !dbg !9939
  store i64 %it.1, i64* %3, align 8, !dbg !9939
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %it.dbg.spill1, metadata !9934, metadata !DIExpression()), !dbg !9940
  br label %bb2, !dbg !9939

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !9941
  store [0 x i8]* %it.0, [0 x i8]** %4, align 8, !dbg !9941
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !9941
  store i64 %it.1, i64* %5, align 8, !dbg !9941
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !9942, metadata !DIExpression()), !dbg !9946
  %self = bitcast [0 x i8]* %it.0 to i8*, !dbg !9946, !rawptr !418
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !9946
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !9947, metadata !DIExpression()), !dbg !9951
  store i8* %self, i8** %data.dbg.spill, align 8, !dbg !9951
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !9952, metadata !DIExpression()), !dbg !9960
  store i64 %it.1, i64* %len.dbg.spill, align 8, !dbg !9962
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !9956, metadata !DIExpression()), !dbg !9960
  store i8* %self, i8** %data.dbg.spill3, align 8, !dbg !9960
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill3, metadata !9963, metadata !DIExpression()), !dbg !9968
  store i64 %it.1, i64* %len.dbg.spill4, align 8, !dbg !9960
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill4, metadata !9967, metadata !DIExpression()), !dbg !9968
  store i8* %self, i8** %self.dbg.spill5, align 8, !dbg !9968
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !9970, metadata !DIExpression()), !dbg !9974
  %data_address = bitcast i8* %self to {}*, !dbg !9974, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !9974
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !9976, metadata !DIExpression()), !dbg !9981
  store i64 %it.1, i64* %metadata.dbg.spill, align 8, !dbg !9968
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !9980, metadata !DIExpression()), !dbg !9981
  %6 = bitcast { i8*, i64 }* %_23 to {}**, !dbg !9981, !rawptr !418
  store {}* %data_address, {}** %6, align 8, !dbg !9981
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_23, i32 0, i32 1, !dbg !9981
  store i64 %it.1, i64* %7, align 8, !dbg !9981
  %8 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_22 to { i8*, i64 }*, !dbg !9981
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_23, i32 0, i32 0, !dbg !9981
  %10 = load i8*, i8** %9, align 8, !dbg !9981
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_23, i32 0, i32 1, !dbg !9981
  %12 = load i64, i64* %11, align 8, !dbg !9981
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0, !dbg !9981
  store i8* %10, i8** %13, align 8, !dbg !9981
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1, !dbg !9981
  store i64 %12, i64* %14, align 8, !dbg !9981
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_22 to { [0 x i8]*, i64 }*, !dbg !9981
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !9981
  %_15.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !9981, !rawptr !418
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !9981
  %_15.1 = load i64, i64* %17, align 8, !dbg !9981, !rawptr !418
  %18 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0, !dbg !9983
  %19 = insertvalue { [0 x i8]*, i64 } %18, i64 %_15.1, 1, !dbg !9983
  ret { [0 x i8]*, i64 } %19, !dbg !9983
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hbf7dcdf19e5da596E"(i64* align 8 %_1.0, i64 %_1.1, i64 %n) unnamed_addr #1 !dbg !9984 {
start:
  %self.dbg.spill1 = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]", align 1
  %n.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca { i64*, i64 }, align 8
  %_4 = alloca { i64*, i64* }, align 8
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store i64* %_1.0, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %1, align 8
  %2 = bitcast { i64*, i64 }* %_1.dbg.spill to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %2, i32 0, i32 0
  %4 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %3, align 8, !nonnull !23, !align !378, !noundef !23
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %2, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %_1.dbg.spill, metadata !9989, metadata !DIExpression(DW_OP_deref)), !dbg !9990
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !9988, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f.dbg.spill, metadata !9992, metadata !DIExpression()), !dbg !9998
  %_9.0 = bitcast i64* %_1.0 to [0 x { [0 x i8]*, i64 }]*, !dbg !9999
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !9999
  store [0 x { [0 x i8]*, i64 }]* %_9.0, [0 x { [0 x i8]*, i64 }]** %7, align 8, !dbg !9999
  %8 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !9999
  store i64 %_1.1, i64* %8, align 8, !dbg !9999
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !10000, metadata !DIExpression()), !dbg !10004
; call core::slice::iter::Iter<T>::new
  %9 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7f11c3d66892abdeE"([0 x { [0 x i8]*, i64 }]* align 8 %_9.0, i64 %_1.1), !dbg !10004
  %self.0 = extractvalue { i64*, i64* } %9, 0, !dbg !10004
  %self.1 = extractvalue { i64*, i64* } %9, 1, !dbg !10004
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill1, i32 0, i32 0, !dbg !10004
  store i64* %self.0, i64** %10, align 8, !dbg !10004
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill1, i32 0, i32 1, !dbg !10004
  store i64* %self.1, i64** %11, align 8, !dbg !10004
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill1, metadata !9996, metadata !DIExpression()), !dbg !9998
  br label %bb2, !dbg !10004

bb2:                                              ; preds = %start
; call core::iter::adapters::map::Map<I,F>::new
  %12 = call { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3e8f9981f6b2038fE"(i64* %self.0, i64* %self.1), !dbg !9998
  store { i64*, i64* } %12, { i64*, i64* }* %_4, align 8, !dbg !9998
  br label %bb3, !dbg !9998

bb3:                                              ; preds = %bb2
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
  %13 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hde391a5afa9e9d5fE"({ i64*, i64* }* align 8 %_4, i64 %n), !dbg !9999
  %14 = extractvalue { i64, i64 } %13, 0, !dbg !9999
  %15 = extractvalue { i64, i64 } %13, 1, !dbg !9999
  br label %bb1, !dbg !9999

bb1:                                              ; preds = %bb3
  %16 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !10005
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !10005
  ret { i64, i64 } %17, !dbg !10005
}

; alloc::str::join_generic_copy::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9da2e48680bbcafaE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %s) unnamed_addr #1 !dbg !10006 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %_1, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %_1.dbg.spill, metadata !10011, metadata !DIExpression()), !dbg !10012
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %s.dbg.spill, metadata !10010, metadata !DIExpression()), !dbg !10013
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h2c1a3208f1ea1b09E"({ [0 x i8]*, i64 }* align 8 %s), !dbg !10014
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !10014
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !10014
  br label %bb1, !dbg !10014

bb1:                                              ; preds = %start
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17h3da7e002de0456c6E"([0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !10014
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !10014
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !10014
  br label %bb2, !dbg !10014

bb2:                                              ; preds = %bb1
  ret i64 %_4.1, !dbg !10015
}

; alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h8940c49ccfa13e56E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #0 !dbg !10016 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %sep.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_9 = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %2, align 8
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !10021, metadata !DIExpression()), !dbg !10023
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 1
  store i64 %sep.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep.dbg.spill, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %bytes, metadata !10025, metadata !DIExpression()), !dbg !10032
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !10034
  store [0 x i8]* %sep.0, [0 x i8]** %6, align 8, !dbg !10034
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !10034
  store i64 %sep.1, i64* %7, align 8, !dbg !10034
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !10035, metadata !DIExpression()), !dbg !10039
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !10039
  store [0 x i8]* %sep.0, [0 x i8]** %8, align 8, !dbg !10039
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !10039
  store i64 %sep.1, i64* %9, align 8, !dbg !10039
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !10039
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !10039, !nonnull !23, !align !912, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !10039
  %_6.1 = load i64, i64* %11, align 8, !dbg !10039
  br label %bb2, !dbg !10039

bb2:                                              ; preds = %start
; call alloc::str::join_generic_copy
  call void @_ZN5alloc3str17join_generic_copy17ha89ebacfef04eb8dE(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %bytes, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !10040
  br label %bb1, !dbg !10040

bb1:                                              ; preds = %bb2
  %12 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !10032
  %13 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !10032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !10032
  %14 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*, !dbg !10032
  %15 = bitcast %"alloc::vec::Vec<u8>"* %14 to i8*, !dbg !10032
  %16 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !10032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !10032
  ret void, !dbg !10041
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8** @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h17cff016fdc8b191E"(%"alloc::vec::Vec<*const i8>"* align 8 %self) unnamed_addr #1 !dbg !10042 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8**, align 8
  %ptr.dbg.spill = alloca i8**, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<*const i8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<*const i8>"* %self, %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, metadata !10048, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10052, metadata !DIExpression()), !dbg !10057
  %self1 = bitcast %"alloc::vec::Vec<*const i8>"* %self to { i64*, i64 }*, !dbg !10068
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10068
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10069, metadata !DIExpression()), !dbg !10076
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !10076
  %self3 = load i64*, i64** %2, align 8, !dbg !10076, !nonnull !23, !noundef !23
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !10076
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10077, metadata !DIExpression()), !dbg !10083
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !10083
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10085, metadata !DIExpression()), !dbg !10091
  %_9 = bitcast i64* %self3 to i8**, !dbg !10091, !rawptr !418
  store i8** %_9, i8*** %ptr.dbg.spill, align 8, !dbg !10091
  call void @llvm.dbg.declare(metadata i8*** %ptr.dbg.spill, metadata !10049, metadata !DIExpression()), !dbg !10093
  store i8** %_9, i8*** %self.dbg.spill6, align 8, !dbg !10067
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill6, metadata !10065, metadata !DIExpression()), !dbg !10094
  %self7 = bitcast i8** %_9 to i8*, !dbg !10094, !rawptr !418
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !10094
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !10095, metadata !DIExpression()), !dbg !10100
  %3 = bitcast {}** %1 to i64*, !dbg !10102
  store i64 0, i64* %3, align 8, !dbg !10102
  %data_address = load {}*, {}** %1, align 8, !dbg !10102, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10102
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10056, metadata !DIExpression()), !dbg !10057
  br label %bb2, !dbg !10102

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10057, !rawptr !418
  store {}* %data_address, {}** %4, align 8, !dbg !10057
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10057
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10057
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10057
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10057
  %other = load i8*, i8** %8, align 8, !dbg !10057, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10057
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10099, metadata !DIExpression()), !dbg !10100
  %9 = icmp eq i8* %self7, %other, !dbg !10100
  %10 = zext i1 %9 to i8, !dbg !10100
  store i8 %10, i8* %0, align 1, !dbg !10100
  %11 = load i8, i8* %0, align 1, !dbg !10100, !range !298, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10100
  br label %bb3, !dbg !10100

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10108
  call void @llvm.assume(i1 %_4), !dbg !10109
  br label %bb1, !dbg !10109

bb1:                                              ; preds = %bb3
  ret i8** %_9, !dbg !10110
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h4447c182711b94d6E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %self) unnamed_addr #1 !dbg !10111 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca { {}*, [3 x i64]* }*, align 8
  %ptr.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, metadata !10116, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10120, metadata !DIExpression()), !dbg !10125
  %self1 = bitcast %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self to { i64*, i64 }*, !dbg !10136
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10136
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10137, metadata !DIExpression()), !dbg !10144
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !10144
  %self3 = load i64*, i64** %2, align 8, !dbg !10144, !nonnull !23, !noundef !23
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !10144
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10145, metadata !DIExpression()), !dbg !10151
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !10151
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10153, metadata !DIExpression()), !dbg !10159
  %_9 = bitcast i64* %self3 to { {}*, [3 x i64]* }*, !dbg !10159, !rawptr !418
  store { {}*, [3 x i64]* }* %_9, { {}*, [3 x i64]* }** %ptr.dbg.spill, align 8, !dbg !10159
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %ptr.dbg.spill, metadata !10117, metadata !DIExpression()), !dbg !10161
  store { {}*, [3 x i64]* }* %_9, { {}*, [3 x i64]* }** %self.dbg.spill6, align 8, !dbg !10135
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %self.dbg.spill6, metadata !10133, metadata !DIExpression()), !dbg !10162
  %self7 = bitcast { {}*, [3 x i64]* }* %_9 to i8*, !dbg !10162, !rawptr !418
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !10162
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !10163, metadata !DIExpression()), !dbg !10168
  %3 = bitcast {}** %1 to i64*, !dbg !10170
  store i64 0, i64* %3, align 8, !dbg !10170
  %data_address = load {}*, {}** %1, align 8, !dbg !10170, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10170
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10124, metadata !DIExpression()), !dbg !10125
  br label %bb2, !dbg !10170

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10125, !rawptr !418
  store {}* %data_address, {}** %4, align 8, !dbg !10125
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10125
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10125
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10125
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10125
  %other = load i8*, i8** %8, align 8, !dbg !10125, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10125
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10167, metadata !DIExpression()), !dbg !10168
  %9 = icmp eq i8* %self7, %other, !dbg !10168
  %10 = zext i1 %9 to i8, !dbg !10168
  store i8 %10, i8* %0, align 1, !dbg !10168
  %11 = load i8, i8* %0, align 1, !dbg !10168, !range !298, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10168
  br label %bb3, !dbg !10168

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10176
  call void @llvm.assume(i1 %_4), !dbg !10177
  br label %bb1, !dbg !10177

bb1:                                              ; preds = %bb3
  ret { {}*, [3 x i64]* }* %_9, !dbg !10178
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6eaafedab3801778E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !10179 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10183, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10187, metadata !DIExpression()), !dbg !10192
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10201
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !10201
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !10202, metadata !DIExpression()), !dbg !10209
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !10209
  %self3 = load i8*, i8** %2, align 8, !dbg !10209, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !10209
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10210, metadata !DIExpression()), !dbg !10214
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !10214
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10216, metadata !DIExpression()), !dbg !10220
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !10220
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10184, metadata !DIExpression()), !dbg !10222
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !10200
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !10198, metadata !DIExpression()), !dbg !10223
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !10223
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !10224, metadata !DIExpression()), !dbg !10229
  %3 = bitcast {}** %1 to i64*, !dbg !10231
  store i64 0, i64* %3, align 8, !dbg !10231
  %data_address = load {}*, {}** %1, align 8, !dbg !10231, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10231
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10191, metadata !DIExpression()), !dbg !10192
  br label %bb2, !dbg !10231

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10192, !rawptr !418
  store {}* %data_address, {}** %4, align 8, !dbg !10192
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10192
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10192
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10192
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10192
  %other = load i8*, i8** %8, align 8, !dbg !10192, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10192
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10228, metadata !DIExpression()), !dbg !10229
  %9 = icmp eq i8* %self3, %other, !dbg !10229
  %10 = zext i1 %9 to i8, !dbg !10229
  store i8 %10, i8* %0, align 1, !dbg !10229
  %11 = load i8, i8* %0, align 1, !dbg !10229, !range !298, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10229
  br label %bb3, !dbg !10229

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10237
  call void @llvm.assume(i1 %_4), !dbg !10238
  br label %bb1, !dbg !10238

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !10239
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h95e8b847ca462c25E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %self) unnamed_addr #1 !dbg !10240 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }*, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::ffi::c_str::CString>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self, %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, metadata !10245, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10249, metadata !DIExpression()), !dbg !10254
  %self1 = bitcast %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self to { i64*, i64 }*, !dbg !10265
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10265
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10266, metadata !DIExpression()), !dbg !10273
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !10273
  %self3 = load i64*, i64** %2, align 8, !dbg !10273, !nonnull !23, !noundef !23
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !10273
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10274, metadata !DIExpression()), !dbg !10280
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !10280
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10282, metadata !DIExpression()), !dbg !10288
  %_9 = bitcast i64* %self3 to { i8*, i64 }*, !dbg !10288, !rawptr !418
  store { i8*, i64 }* %_9, { i8*, i64 }** %ptr.dbg.spill, align 8, !dbg !10288
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %ptr.dbg.spill, metadata !10246, metadata !DIExpression()), !dbg !10290
  store { i8*, i64 }* %_9, { i8*, i64 }** %self.dbg.spill6, align 8, !dbg !10264
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill6, metadata !10262, metadata !DIExpression()), !dbg !10291
  %self7 = bitcast { i8*, i64 }* %_9 to i8*, !dbg !10291, !rawptr !418
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !10291
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !10292, metadata !DIExpression()), !dbg !10297
  %3 = bitcast {}** %1 to i64*, !dbg !10299
  store i64 0, i64* %3, align 8, !dbg !10299
  %data_address = load {}*, {}** %1, align 8, !dbg !10299, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10299
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10253, metadata !DIExpression()), !dbg !10254
  br label %bb2, !dbg !10299

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10254, !rawptr !418
  store {}* %data_address, {}** %4, align 8, !dbg !10254
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10254
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10254
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10254
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10254
  %other = load i8*, i8** %8, align 8, !dbg !10254, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10254
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10296, metadata !DIExpression()), !dbg !10297
  %9 = icmp eq i8* %self7, %other, !dbg !10297
  %10 = zext i1 %9 to i8, !dbg !10297
  store i8 %10, i8* %0, align 1, !dbg !10297
  %11 = load i8, i8* %0, align 1, !dbg !10297, !range !298, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10297
  br label %bb3, !dbg !10297

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10305
  call void @llvm.assume(i1 %_4), !dbg !10306
  br label %bb1, !dbg !10306

bb1:                                              ; preds = %bb3
  ret { i8*, i64 }* %_9, !dbg !10307
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h0b9e3e99e6b97e3aE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #1 !dbg !10308 {
start:
  %count.dbg.spill7 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10312, metadata !DIExpression()), !dbg !10318
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !10313, metadata !DIExpression()), !dbg !10319
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !10320, metadata !DIExpression()), !dbg !10337
  store i64 %other.1, i64* %count.dbg.spill, align 8, !dbg !10339
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !10314, metadata !DIExpression()), !dbg !10340
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h7d1d769595d7f0ecE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %other.1), !dbg !10341
  br label %bb1, !dbg !10341

bb1:                                              ; preds = %start
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !10342
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !10343, metadata !DIExpression()), !dbg !10346
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10346
  %len = load i64, i64* %3, align 8, !dbg !10346, !rawptr !418
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !10346
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10316, metadata !DIExpression()), !dbg !10347
  %src = bitcast [0 x i8]* %other.0 to i8*, !dbg !10348, !rawptr !418
  store i8* %src, i8** %src.dbg.spill, align 8, !dbg !10348
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !10327, metadata !DIExpression()), !dbg !10349
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %self2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6eaafedab3801778E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !10350, !rawptr !418
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !10350
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !10351, metadata !DIExpression()), !dbg !10356
  br label %bb2, !dbg !10350

bb2:                                              ; preds = %bb1
  store i64 %len, i64* %count.dbg.spill4, align 8, !dbg !10357
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !10355, metadata !DIExpression()), !dbg !10356
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !10356
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10358, metadata !DIExpression()), !dbg !10363
  store i64 %len, i64* %count.dbg.spill6, align 8, !dbg !10356
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !10362, metadata !DIExpression()), !dbg !10363
  %4 = getelementptr inbounds i8, i8* %self2, i64 %len, !dbg !10363
  store i8* %4, i8** %0, align 8, !dbg !10363
  %_21 = load i8*, i8** %0, align 8, !dbg !10363, !rawptr !418
  br label %bb3, !dbg !10363

bb3:                                              ; preds = %bb2
  store i8* %_21, i8** %dst.dbg.spill, align 8, !dbg !10363
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !10329, metadata !DIExpression()), !dbg !10349
  store i64 %other.1, i64* %count.dbg.spill7, align 8, !dbg !10365
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !10330, metadata !DIExpression()), !dbg !10349
  %5 = mul i64 %other.1, 1, !dbg !10349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_21, i8* align 1 %src, i64 %5, i1 false), !dbg !10349
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10366
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10366
  %8 = load i64, i64* %7, align 8, !dbg !10366
  %9 = add i64 %8, %other.1, !dbg !10366
  store i64 %9, i64* %6, align 8, !dbg !10366
  ret void, !dbg !10367
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h6a8d930349aa9529E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !10368 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10372, metadata !DIExpression()), !dbg !10374
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !10373, metadata !DIExpression()), !dbg !10375
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !10376
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8, !dbg !10376
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !10376
  store i64 %other.1, i64* %3, align 8, !dbg !10376
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !10377, metadata !DIExpression()), !dbg !10381
; call core::slice::iter::Iter<T>::new
  %4 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8af76636c7f25d78E"([0 x i8]* align 1 %other.0, i64 %other.1), !dbg !10381
  %_4.0 = extractvalue { i8*, i8* } %4, 0, !dbg !10381
  %_4.1 = extractvalue { i8*, i8* } %4, 1, !dbg !10381
  br label %bb2, !dbg !10381

bb2:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hefa5c5f8ce8f522aE"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %_4.0, i8* %_4.1), !dbg !10382
  br label %bb1, !dbg !10382

bb1:                                              ; preds = %bb2
  ret void, !dbg !10383
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hdca49d03d486226dE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !10384 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %len.dbg.spill8 = alloca i64, align 8
  %data.dbg.spill7 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_33 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_11 = alloca i64, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10388, metadata !DIExpression()), !dbg !10389
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %self1 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6eaafedab3801778E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !10390, !rawptr !418
  store i8* %self1, i8** %self.dbg.spill2, align 8, !dbg !10390
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !10391, metadata !DIExpression()), !dbg !10396
  br label %bb1, !dbg !10390

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10397
  %count = load i64, i64* %1, align 8, !dbg !10397, !rawptr !418
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !10397
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !10395, metadata !DIExpression()), !dbg !10396
  store i8* %self1, i8** %self.dbg.spill3, align 8, !dbg !10396
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !10398, metadata !DIExpression()), !dbg !10403
  store i64 %count, i64* %count.dbg.spill4, align 8, !dbg !10396
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !10402, metadata !DIExpression()), !dbg !10403
  %2 = getelementptr inbounds i8, i8* %self1, i64 %count, !dbg !10403
  store i8* %2, i8** %0, align 8, !dbg !10403
  %_17 = load i8*, i8** %0, align 8, !dbg !10403, !rawptr !418
  br label %bb3, !dbg !10403

bb3:                                              ; preds = %bb1
  store i8* %_17, i8** %data.dbg.spill, align 8, !dbg !10390
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10405, metadata !DIExpression()), !dbg !10413
  %self5 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10415
  store { i8*, i64 }* %self5, { i8*, i64 }** %self.dbg.spill6, align 8, !dbg !10415
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill6, metadata !10416, metadata !DIExpression()), !dbg !10422
  br i1 false, label %bb4, label %bb5, !dbg !10422

bb4:                                              ; preds = %bb3
  store i64 -1, i64* %_11, align 8, !dbg !10422
  br label %bb2, !dbg !10422

bb5:                                              ; preds = %bb3
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self5, i32 0, i32 1, !dbg !10422
  %4 = load i64, i64* %3, align 8, !dbg !10422
  store i64 %4, i64* %_11, align 8, !dbg !10422
  br label %bb2, !dbg !10422

bb2:                                              ; preds = %bb4, %bb5
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10423
  %_13 = load i64, i64* %5, align 8, !dbg !10423
  %6 = load i64, i64* %_11, align 8, !dbg !10415
  %len = sub i64 %6, %_13, !dbg !10415
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !10415
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10409, metadata !DIExpression()), !dbg !10413
  store i8* %_17, i8** %data.dbg.spill7, align 8, !dbg !10413
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill7, metadata !10424, metadata !DIExpression()), !dbg !10429
  store i64 %len, i64* %len.dbg.spill8, align 8, !dbg !10413
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill8, metadata !10428, metadata !DIExpression()), !dbg !10429
  store i8* %_17, i8** %self.dbg.spill9, align 8, !dbg !10429
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !10431, metadata !DIExpression()), !dbg !10435
  %data_address = bitcast i8* %_17 to {}*, !dbg !10435, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10435
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10437, metadata !DIExpression()), !dbg !10442
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !10429
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10441, metadata !DIExpression()), !dbg !10442
  %7 = bitcast { i8*, i64 }* %_34 to {}**, !dbg !10442, !rawptr !418
  store {}* %data_address, {}** %7, align 8, !dbg !10442
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_34, i32 0, i32 1, !dbg !10442
  store i64 %len, i64* %8, align 8, !dbg !10442
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_33 to { i8*, i64 }*, !dbg !10442
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_34, i32 0, i32 0, !dbg !10442
  %11 = load i8*, i8** %10, align 8, !dbg !10442
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_34, i32 0, i32 1, !dbg !10442
  %13 = load i64, i64* %12, align 8, !dbg !10442
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !10442
  store i8* %11, i8** %14, align 8, !dbg !10442
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !10442
  store i64 %13, i64* %15, align 8, !dbg !10442
  %16 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_33 to { [0 x i8]*, i64 }*, !dbg !10442
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !10442
  %_26.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !dbg !10442, !rawptr !418
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !10442
  %_26.1 = load i64, i64* %18, align 8, !dbg !10442, !rawptr !418
  %19 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_26.0, 0, !dbg !10444
  %20 = insertvalue { [0 x i8]*, i64 } %19, i64 %_26.1, 1, !dbg !10444
  ret { [0 x i8]*, i64 } %20, !dbg !10444
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !10445 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10449, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10453, metadata !DIExpression()), !dbg !10458
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10467
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !10467
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !10468, metadata !DIExpression()), !dbg !10472
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !10472
  %self3 = load i8*, i8** %2, align 8, !dbg !10472, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !10472
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10473, metadata !DIExpression()), !dbg !10477
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !10477
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10479, metadata !DIExpression()), !dbg !10483
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !10483
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10450, metadata !DIExpression()), !dbg !10485
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !10466
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !10464, metadata !DIExpression()), !dbg !10486
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !10486
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !10487, metadata !DIExpression()), !dbg !10492
  %3 = bitcast {}** %1 to i64*, !dbg !10494
  store i64 0, i64* %3, align 8, !dbg !10494
  %data_address = load {}*, {}** %1, align 8, !dbg !10494, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10494
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10457, metadata !DIExpression()), !dbg !10458
  br label %bb2, !dbg !10494

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to {}**, !dbg !10458, !rawptr !418
  store {}* %data_address, {}** %4, align 8, !dbg !10458
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10458
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10458
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to i8*, !dbg !10458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10458
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to i8**, !dbg !10458
  %other = load i8*, i8** %8, align 8, !dbg !10458, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10458
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10491, metadata !DIExpression()), !dbg !10492
  %9 = icmp eq i8* %self3, %other, !dbg !10492
  %10 = zext i1 %9 to i8, !dbg !10492
  store i8 %10, i8* %0, align 1, !dbg !10492
  %11 = load i8, i8* %0, align 1, !dbg !10492, !range !298, !noundef !23
  %_6 = trunc i8 %11 to i1, !dbg !10492
  br label %bb3, !dbg !10492

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %_6, true, !dbg !10500
  call void @llvm.assume(i1 %_5), !dbg !10501
  br label %bb1, !dbg !10501

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !10502
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h7d1d769595d7f0ecE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10503 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10505, metadata !DIExpression()), !dbg !10507
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !10506, metadata !DIExpression()), !dbg !10508
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10509
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10510
  %_5 = load i64, i64* %0, align 8, !dbg !10510
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h1c9f411d14b580e6E"({ i8*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !10509
  br label %bb1, !dbg !10509

bb1:                                              ; preds = %start
  ret void, !dbg !10511
}

; alloc::vec::Vec<T,A>::as_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h772ad5b351a07f3cE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !10512 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_15 = alloca { i8*, i64 }, align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10514, metadata !DIExpression()), !dbg !10515
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !10516
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !10517, metadata !DIExpression()), !dbg !10520
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !10520, !rawptr !418
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !10520
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10521, metadata !DIExpression()), !dbg !10529
  br label %bb1, !dbg !10520

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10520
  %len = load i64, i64* %0, align 8, !dbg !10520
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !10520
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10525, metadata !DIExpression()), !dbg !10529
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !10529
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !10531, metadata !DIExpression()), !dbg !10536
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !10529
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !10535, metadata !DIExpression()), !dbg !10536
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !10536
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10538, metadata !DIExpression()), !dbg !10542
  %data_address = bitcast i8* %data to {}*, !dbg !10542, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10542
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10544, metadata !DIExpression()), !dbg !10549
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !10536
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10548, metadata !DIExpression()), !dbg !10549
  %1 = bitcast { i8*, i64 }* %_15 to {}**, !dbg !10549, !rawptr !418
  store {}* %data_address, {}** %1, align 8, !dbg !10549
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 1, !dbg !10549
  store i64 %len, i64* %2, align 8, !dbg !10549
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_14 to { i8*, i64 }*, !dbg !10549
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 0, !dbg !10549
  %5 = load i8*, i8** %4, align 8, !dbg !10549
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 1, !dbg !10549
  %7 = load i64, i64* %6, align 8, !dbg !10549
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10549
  store i8* %5, i8** %8, align 8, !dbg !10549
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10549
  store i64 %7, i64* %9, align 8, !dbg !10549
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_14 to { [0 x i8]*, i64 }*, !dbg !10549
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !10549
  %_7.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !10549, !rawptr !418
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !10549
  %_7.1 = load i64, i64* %12, align 8, !dbg !10549, !rawptr !418
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_7.0, 0, !dbg !10551
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %_7.1, 1, !dbg !10551
  ret { [0 x i8]*, i64 } %14, !dbg !10551
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h0ca87beeb65490c9E(i64 %size, i64 %align) unnamed_addr #1 !dbg !10552 {
start:
  %ptr.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }, align 8
  %self.dbg.spill5 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %0 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %align.dbg.spill2 = alloca i64, align 8
  %size.dbg.spill1 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %self = alloca i8*, align 8, !rawptr !418
  %_6 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !10556, metadata !DIExpression()), !dbg !10562
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !10557, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !10558, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.declare(metadata i8** %self, metadata !10565, metadata !DIExpression()), !dbg !10569
  store i64 %size, i64* %size.dbg.spill1, align 8, !dbg !10578
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill1, metadata !10579, metadata !DIExpression()), !dbg !10584
  store i64 %align, i64* %align.dbg.spill2, align 8, !dbg !10586
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill2, metadata !10583, metadata !DIExpression()), !dbg !10584
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !10584
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !10587, metadata !DIExpression()), !dbg !10591
  store i64 %align, i64* %0, align 8, !dbg !10591
  %_16 = load i64, i64* %0, align 8, !dbg !10591, !range !5753, !noundef !23
  br label %bb4, !dbg !10591

bb4:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %layout to i64*, !dbg !10584
  store i64 %size, i64* %1, align 8, !dbg !10584
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10584
  store i64 %_16, i64* %2, align 8, !dbg !10584
  store %"alloc::alloc::Global"* bitcast (<{}>* @alloc67 to %"alloc::alloc::Global"*), %"alloc::alloc::Global"** %self.dbg.spill, align 8, !dbg !10593
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !10594, metadata !DIExpression()), !dbg !10601
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10602
  %layout.0 = load i64, i64* %3, align 8, !dbg !10602
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10602
  %layout.1 = load i64, i64* %4, align 8, !dbg !10602, !range !5753, !noundef !23
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !10602
  store i64 %layout.0, i64* %5, align 8, !dbg !10602
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !10602
  store i64 %layout.1, i64* %6, align 8, !dbg !10602
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !10600, metadata !DIExpression()), !dbg !10601
; call alloc::alloc::Global::alloc_impl
  %7 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc67 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !10601
  store { i8*, i64 } %7, { i8*, i64 }* %_6, align 8, !dbg !10601
  br label %bb5, !dbg !10601

bb5:                                              ; preds = %bb4
  %8 = bitcast { i8*, i64 }* %_6 to {}**, !dbg !10593
  %9 = load {}*, {}** %8, align 8, !dbg !10593
  %10 = icmp eq {}* %9, null, !dbg !10593
  %_9 = select i1 %10, i64 1, i64 0, !dbg !10593
  switch i64 %_9, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !10603

bb2:                                              ; preds = %bb5
  unreachable, !dbg !10593

bb3:                                              ; preds = %bb5
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !10604
  %ptr.0 = load i8*, i8** %11, align 8, !dbg !10604, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !10604
  %ptr.1 = load i64, i64* %12, align 8, !dbg !10604, !rawptr !418
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !10604
  store i8* %ptr.0, i8** %13, align 8, !dbg !10604
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !10604
  store i64 %ptr.1, i64* %14, align 8, !dbg !10604
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !10560, metadata !DIExpression()), !dbg !10605
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !10577
  store i8* %ptr.0, i8** %15, align 8, !dbg !10577
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !10577
  store i64 %ptr.1, i64* %16, align 8, !dbg !10577
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill4, metadata !10575, metadata !DIExpression()), !dbg !10606
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !10606
  store i8* %ptr.0, i8** %17, align 8, !dbg !10606
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !10606
  store i64 %ptr.1, i64* %18, align 8, !dbg !10606
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill5, metadata !10607, metadata !DIExpression()), !dbg !10613
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !10613
  store i8* %ptr.0, i8** %19, align 8, !dbg !10613
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !10613
  store i64 %ptr.1, i64* %20, align 8, !dbg !10613
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill6, metadata !10614, metadata !DIExpression()), !dbg !10620
  %_28.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !10620, !rawptr !418
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !10620
  store [0 x i8]* %_28.0, [0 x i8]** %21, align 8, !dbg !10620
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !10620
  store i64 %ptr.1, i64* %22, align 8, !dbg !10620
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !10622, metadata !DIExpression()), !dbg !10626
  %ptr = bitcast [0 x i8]* %_28.0 to i8*, !dbg !10626, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill8, align 8, !dbg !10626
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill8, metadata !10627, metadata !DIExpression()), !dbg !10631
  store i8* %ptr, i8** %self, align 8, !dbg !10631
  %_33 = load i8*, i8** %self, align 8, !dbg !10569, !rawptr !418
  ret i8* %_33, !dbg !10633

bb1:                                              ; preds = %bb5
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10634
  %_13.0 = load i64, i64* %23, align 8, !dbg !10634
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10634
  %_13.1 = load i64, i64* %24, align 8, !dbg !10634, !range !5753, !noundef !23
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h58c56b8d3bfba88eE(i64 %_13.0, i64 %_13.1) #18, !dbg !10635
  unreachable, !dbg !10635
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #1 !dbg !10636 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8, !rawptr !418
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !10640, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !10641, metadata !DIExpression()), !dbg !10667
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !10642, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.declare(metadata i8** %data, metadata !10669, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !10645, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !10679, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !10686, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !10691, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !10735, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !10741, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !10649, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !10747, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !10760, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !10787, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !10794, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !10805, metadata !DIExpression()), !dbg !10809
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !10810, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !10821, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !10730, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !10753, metadata !DIExpression()), !dbg !10827
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !10828
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !10829, metadata !DIExpression()), !dbg !10833
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !10833
  %_4 = load i64, i64* %7, align 8, !dbg !10833
  %8 = icmp eq i64 %_4, 0, !dbg !10834
  br i1 %8, label %bb2, label %bb1, !dbg !10834

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !10786
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !10784, metadata !DIExpression()), !dbg !10835
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !10835
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !10777, metadata !DIExpression()), !dbg !10836
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10836
  %10 = load i64, i64* %9, align 8, !dbg !10836, !range !5753, !noundef !23
  store i64 %10, i64* %self7, align 8, !dbg !10836
  %_33 = load i64, i64* %self7, align 8, !dbg !10793, !range !5753, !noundef !23
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !10793
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !10837, metadata !DIExpression()), !dbg !10851
  store i64 %_33, i64* %self6, align 8, !dbg !10851
  %addr = load i64, i64* %self6, align 8, !dbg !10771
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !10771
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !10853, metadata !DIExpression()), !dbg !10859
  %11 = bitcast i8** %2 to i64*, !dbg !10859
  store i64 %addr, i64* %11, align 8, !dbg !10859
  %ptr = load i8*, i8** %2, align 8, !dbg !10859, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !10859
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !10861, metadata !DIExpression()), !dbg !10865
  br label %bb13, !dbg !10859

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !10867
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !10643, metadata !DIExpression()), !dbg !10868
  br i1 %zeroed, label %bb3, label %bb4, !dbg !10869

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10870
  %13 = load i64, i64* %12, align 8, !dbg !10870
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10870
  %15 = load i64, i64* %14, align 8, !dbg !10870, !range !5753, !noundef !23
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !10870
  store i64 %13, i64* %16, align 8, !dbg !10870
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !10870
  store i64 %15, i64* %17, align 8, !dbg !10870
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !10689
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !10871, metadata !DIExpression()), !dbg !10875
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !10875
  %_67 = load i64, i64* %18, align 8, !dbg !10875, !rawptr !418
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !10689
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !10818, metadata !DIExpression()), !dbg !10877
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !10877
  %20 = load i64, i64* %19, align 8, !dbg !10877, !range !5753, !noundef !23
  store i64 %20, i64* %self11, align 8, !dbg !10877
  %_74 = load i64, i64* %self11, align 8, !dbg !10825, !range !5753, !noundef !23
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !10825
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !10878, metadata !DIExpression()), !dbg !10885
  store i64 %_74, i64* %self10, align 8, !dbg !10885
  %_69 = load i64, i64* %self10, align 8, !dbg !10814, !rawptr !418
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #21, !dbg !10689
  store i8* %21, i8** %raw_ptr, align 8, !dbg !10689
  br label %bb15, !dbg !10689

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10887
  %23 = load i64, i64* %22, align 8, !dbg !10887
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10887
  %25 = load i64, i64* %24, align 8, !dbg !10887, !range !5753, !noundef !23
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !10887
  store i64 %23, i64* %26, align 8, !dbg !10887
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !10887
  store i64 %25, i64* %27, align 8, !dbg !10887
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !10684
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !10888, metadata !DIExpression()), !dbg !10892
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !10892
  %_57 = load i64, i64* %28, align 8, !dbg !10892, !rawptr !418
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !10684
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !10802, metadata !DIExpression()), !dbg !10894
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !10894
  %30 = load i64, i64* %29, align 8, !dbg !10894, !range !5753, !noundef !23
  store i64 %30, i64* %self9, align 8, !dbg !10894
  %_64 = load i64, i64* %self9, align 8, !dbg !10809, !range !5753, !noundef !23
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !10809
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !10895, metadata !DIExpression()), !dbg !10902
  store i64 %_64, i64* %self8, align 8, !dbg !10902
  %_59 = load i64, i64* %self8, align 8, !dbg !10798, !rawptr !418
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #21, !dbg !10684
  store i8* %31, i8** %raw_ptr, align 8, !dbg !10684
  br label %bb14, !dbg !10684

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !10904

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !10905, !rawptr !418
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h61d30803e960b676E"(i8* %_18), !dbg !10734
  store i8* %32, i8** %self4, align 8, !dbg !10734
  br label %bb6, !dbg !10734

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !10904

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !10745
  %34 = load {}*, {}** %33, align 8, !dbg !10745
  %35 = icmp eq {}* %34, null, !dbg !10745
  %_77 = select i1 %35, i64 0, i64 1, !dbg !10745
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !10745

bb17:                                             ; preds = %bb6
  unreachable, !dbg !10745

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !10745
  store {}* null, {}** %36, align 8, !dbg !10745
  br label %bb19, !dbg !10745

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !10745, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !10745
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !10742, metadata !DIExpression()), !dbg !10906
  store i8* %v, i8** %self3, align 8, !dbg !10906
  br label %bb19, !dbg !10745

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !10733
  %38 = load {}*, {}** %37, align 8, !dbg !10733
  %39 = icmp eq {}* %38, null, !dbg !10733
  %_80 = select i1 %39, i64 1, i64 0, !dbg !10733
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !10733

bb21:                                             ; preds = %bb19
  unreachable, !dbg !10733

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !10733, !nonnull !23, !noundef !23
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !10733
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !10727, metadata !DIExpression()), !dbg !10907
  store i8* %v19, i8** %_15, align 8, !dbg !10907
  br label %bb7, !dbg !10733

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !10826
  store {}* null, {}** %40, align 8, !dbg !10826
  br label %bb7, !dbg !10733

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !10734
  %42 = load {}*, {}** %41, align 8, !dbg !10734
  %43 = icmp eq {}* %42, null, !dbg !10734
  %_20 = select i1 %43, i64 1, i64 0, !dbg !10734
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !10734

bb9:                                              ; preds = %bb7
  unreachable, !dbg !10734

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !10734, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !10734
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !10664, metadata !DIExpression()), !dbg !10908
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !10908
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10647, metadata !DIExpression()), !dbg !10909
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !10910
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10911, metadata !DIExpression()), !dbg !10916
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !10918
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10915, metadata !DIExpression()), !dbg !10916
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !10916
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !10919, metadata !DIExpression()), !dbg !10923
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !10923
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !10925, metadata !DIExpression()), !dbg !10930
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !10916
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !10929, metadata !DIExpression()), !dbg !10930
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !10930
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !10932, metadata !DIExpression()), !dbg !10936
  %data_address = bitcast i8* %val to {}*, !dbg !10936, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10936
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10938, metadata !DIExpression()), !dbg !10943
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !10930
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10942, metadata !DIExpression()), !dbg !10943
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !10943, !rawptr !418
  store {}* %data_address, {}** %44, align 8, !dbg !10943
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !10943
  store i64 %_4, i64* %45, align 8, !dbg !10943
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !10943
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !10943
  %48 = load i8*, i8** %47, align 8, !dbg !10943
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !10943
  %50 = load i64, i64* %49, align 8, !dbg !10943
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !10943
  store i8* %48, i8** %51, align 8, !dbg !10943
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !10943
  store i64 %50, i64* %52, align 8, !dbg !10943
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !10943
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !10943
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !10943, !rawptr !418
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !10943
  %ptr.1 = load i64, i64* %55, align 8, !dbg !10943, !rawptr !418
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !10943
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !10943
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !10943
  store i64 %ptr.1, i64* %57, align 8, !dbg !10943
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !10945, metadata !DIExpression()), !dbg !10951
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !10951, !rawptr !418
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !10951
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !10951
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !10951
  store i64 %ptr.1, i64* %60, align 8, !dbg !10951
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !10953
  %62 = load i8*, i8** %61, align 8, !dbg !10953, !nonnull !23, !noundef !23
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !10953
  %64 = load i64, i64* %63, align 8, !dbg !10953
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10953
  store i8* %62, i8** %65, align 8, !dbg !10953
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10953
  store i64 %64, i64* %66, align 8, !dbg !10953
  br label %bb11, !dbg !10954

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha0555b3c59efcc3fE"(), !dbg !10827
  br label %bb23, !dbg !10827

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !10827
  store {}* null, {}** %67, align 8, !dbg !10827
  br label %bb12, !dbg !10955

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10955
  %69 = load i8*, i8** %68, align 8, !dbg !10955
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10955
  %71 = load i64, i64* %70, align 8, !dbg !10955
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !10955
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !10955
  ret { i8*, i64 } %73, !dbg !10955

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !10955

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !10865
  %self30 = load i8*, i8** %data, align 8, !dbg !10676, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !10676
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !10956, metadata !DIExpression()), !dbg !10960
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !10960
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !10962, metadata !DIExpression()), !dbg !10967
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !10967
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !10969, metadata !DIExpression()), !dbg !10973
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !10973, !rawptr !418
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !10973
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !10975, metadata !DIExpression()), !dbg !10980
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !10980, !rawptr !418
  store {}* %data_address34, {}** %74, align 8, !dbg !10980
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !10980
  store i64 0, i64* %75, align 8, !dbg !10980
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !10980
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !10980
  %78 = load i8*, i8** %77, align 8, !dbg !10980
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !10980
  %80 = load i64, i64* %79, align 8, !dbg !10980
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !10980
  store i8* %78, i8** %81, align 8, !dbg !10980
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !10980
  store i64 %80, i64* %82, align 8, !dbg !10980
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !10980
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !10980
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !10980, !rawptr !418
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !10980
  %ptr.137 = load i64, i64* %85, align 8, !dbg !10980, !rawptr !418
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !10980
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !10980
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !10980
  store i64 %ptr.137, i64* %87, align 8, !dbg !10980
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !10982, metadata !DIExpression()), !dbg !10986
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !10986, !rawptr !418
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !10986
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !10986
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !10986
  store i64 %ptr.137, i64* %90, align 8, !dbg !10986
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !10988
  %92 = load i8*, i8** %91, align 8, !dbg !10988, !nonnull !23, !noundef !23
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !10988
  %94 = load i64, i64* %93, align 8, !dbg !10988
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10988
  store i8* %92, i8** %95, align 8, !dbg !10988
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10988
  store i64 %94, i64* %96, align 8, !dbg !10988
  br label %bb11, !dbg !10989
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h3530581f4db6a6e9E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #1 !dbg !10990 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8, !rawptr !418
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !10994, metadata !DIExpression()), !dbg !11020
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10995, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !10996, metadata !DIExpression()), !dbg !11022
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !10997, metadata !DIExpression()), !dbg !11023
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !10998, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11025, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !11034, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !11046, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !11050, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !11008, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !11056, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !11065, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !11016, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !11095, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !11104, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !11115, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !11120, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !11131, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !11136, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !11041, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !11060, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !11089, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !11099, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !11156, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !11167, metadata !DIExpression()), !dbg !11176
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !11178
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !11179, metadata !DIExpression()), !dbg !11183
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !11183
  %_8 = load i64, i64* %11, align 8, !dbg !11183, !rawptr !418
  %12 = icmp eq i64 %_8, 0, !dbg !11184
  br i1 %12, label %bb1, label %bb3, !dbg !11184

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !11185
  %_11.0 = load i64, i64* %13, align 8, !dbg !11185
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !11185
  %_11.1 = load i64, i64* %14, align 8, !dbg !11185, !range !5753, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !11186
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !11186
  br label %bb2, !dbg !11186

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !11114
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !11112, metadata !DIExpression()), !dbg !11187
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !11187
  %17 = load i64, i64* %16, align 8, !dbg !11187, !range !5753, !noundef !23
  store i64 %17, i64* %self8, align 8, !dbg !11187
  %_78 = load i64, i64* %self8, align 8, !dbg !11119, !range !5753, !noundef !23
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !11119
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !11188, metadata !DIExpression()), !dbg !11195
  store i64 %_78, i64* %self7, align 8, !dbg !11195
  %_16 = load i64, i64* %self7, align 8, !dbg !11108
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !11130
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !11128, metadata !DIExpression()), !dbg !11197
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !11197
  %19 = load i64, i64* %18, align 8, !dbg !11197, !range !5753, !noundef !23
  store i64 %19, i64* %self10, align 8, !dbg !11197
  %_84 = load i64, i64* %self10, align 8, !dbg !11135, !range !5753, !noundef !23
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !11135
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !11198, metadata !DIExpression()), !dbg !11205
  store i64 %_84, i64* %self9, align 8, !dbg !11205
  %_18 = load i64, i64* %self9, align 8, !dbg !11124
  %_15 = icmp eq i64 %_16, %_18, !dbg !11114
  br i1 %_15, label %bb4, label %bb5, !dbg !11114

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !11207
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !11012, metadata !DIExpression()), !dbg !11208
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !11209
  %_58.0 = load i64, i64* %20, align 8, !dbg !11209
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !11209
  %_58.1 = load i64, i64* %21, align 8, !dbg !11209, !range !5753, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !11093
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !11093
  br label %bb14, !dbg !11093

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !11210
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !10999, metadata !DIExpression()), !dbg !11211
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !11212
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !11213, metadata !DIExpression()), !dbg !11217
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !11217
  %new_size = load i64, i64* %23, align 8, !dbg !11217, !rawptr !418
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !11217
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !11002, metadata !DIExpression()), !dbg !11218
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !11219
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !11220, metadata !DIExpression()), !dbg !11224
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !11224
  %_25 = load i64, i64* %24, align 8, !dbg !11224
  %_23 = icmp uge i64 %new_size, %_25, !dbg !11225
  call void @llvm.assume(i1 %_23), !dbg !11226
  br label %bb6, !dbg !11226

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !11227
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !11228, metadata !DIExpression()), !dbg !11232
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !11232
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !11030, metadata !DIExpression()), !dbg !11032
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !11233
  %26 = load i64, i64* %25, align 8, !dbg !11233
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !11233
  %28 = load i64, i64* %27, align 8, !dbg !11233, !range !5753, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11233
  store i64 %26, i64* %29, align 8, !dbg !11233
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11233
  store i64 %28, i64* %30, align 8, !dbg !11233
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !11234
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !11031, metadata !DIExpression()), !dbg !11032
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !11235, metadata !DIExpression()), !dbg !11239
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !11239
  %_89 = load i64, i64* %31, align 8, !dbg !11239, !rawptr !418
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !11144, metadata !DIExpression()), !dbg !11241
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11241
  %33 = load i64, i64* %32, align 8, !dbg !11241, !range !5753, !noundef !23
  store i64 %33, i64* %self12, align 8, !dbg !11241
  %_97 = load i64, i64* %self12, align 8, !dbg !11151, !range !5753, !noundef !23
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !11151
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !11242, metadata !DIExpression()), !dbg !11249
  store i64 %_97, i64* %self11, align 8, !dbg !11249
  %_91 = load i64, i64* %self11, align 8, !dbg !11140, !rawptr !418
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #21, !dbg !11032, !rawptr !418
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !11004, metadata !DIExpression()), !dbg !11251
  br label %bb23, !dbg !11032

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h61d30803e960b676E"(i8* %raw_ptr), !dbg !11045
  store i8* %34, i8** %self2, align 8, !dbg !11045
  br label %bb7, !dbg !11045

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !11054
  %36 = load {}*, {}** %35, align 8, !dbg !11054
  %37 = icmp eq {}* %36, null, !dbg !11054
  %_100 = select i1 %37, i64 0, i64 1, !dbg !11054
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !11054

bb25:                                             ; preds = %bb7
  unreachable, !dbg !11054

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !11054
  store {}* null, {}** %38, align 8, !dbg !11054
  br label %bb27, !dbg !11054

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !11054, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !11054
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !11051, metadata !DIExpression()), !dbg !11252
  store i8* %v, i8** %self1, align 8, !dbg !11252
  br label %bb27, !dbg !11054

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !11044
  %40 = load {}*, {}** %39, align 8, !dbg !11044
  %41 = icmp eq {}* %40, null, !dbg !11044
  %_103 = select i1 %41, i64 1, i64 0, !dbg !11044
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !11044

bb29:                                             ; preds = %bb27
  unreachable, !dbg !11044

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !11044, !nonnull !23, !noundef !23
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !11044
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !11038, metadata !DIExpression()), !dbg !11253
  store i8* %v29, i8** %_33, align 8, !dbg !11253
  br label %bb8, !dbg !11044

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !11152
  store {}* null, {}** %42, align 8, !dbg !11152
  br label %bb8, !dbg !11044

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !11045
  %44 = load {}*, {}** %43, align 8, !dbg !11045
  %45 = icmp eq {}* %44, null, !dbg !11045
  %_38 = select i1 %45, i64 1, i64 0, !dbg !11045
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !11045

bb10:                                             ; preds = %bb8
  unreachable, !dbg !11045

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !11045, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !11045
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !11010, metadata !DIExpression()), !dbg !11254
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !11254
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !11006, metadata !DIExpression()), !dbg !11255
  br i1 %zeroed, label %bb12, label %bb13, !dbg !11256

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha0555b3c59efcc3fE"(), !dbg !11153
  br label %bb31, !dbg !11153

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !11153
  store {}* null, {}** %46, align 8, !dbg !11153
  br label %bb21, !dbg !11257

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !11259

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !11260
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !11261, metadata !DIExpression()), !dbg !11266
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !11268
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !11265, metadata !DIExpression()), !dbg !11266
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !11266
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !11269, metadata !DIExpression()), !dbg !11273
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !11273
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !11275, metadata !DIExpression()), !dbg !11280
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !11266
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !11279, metadata !DIExpression()), !dbg !11280
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !11280
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !11282, metadata !DIExpression()), !dbg !11286
  %data_address = bitcast i8* %val to {}*, !dbg !11286, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !11286
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !11288, metadata !DIExpression()), !dbg !11293
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !11280
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !11292, metadata !DIExpression()), !dbg !11293
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !11293, !rawptr !418
  store {}* %data_address, {}** %47, align 8, !dbg !11293
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !11293
  store i64 %new_size, i64* %48, align 8, !dbg !11293
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !11293
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !11293
  %51 = load i8*, i8** %50, align 8, !dbg !11293
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !11293
  %53 = load i64, i64* %52, align 8, !dbg !11293
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !11293
  store i8* %51, i8** %54, align 8, !dbg !11293
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !11293
  store i64 %53, i64* %55, align 8, !dbg !11293
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !11293
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !11293
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !11293, !rawptr !418
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !11293
  %ptr.1 = load i64, i64* %58, align 8, !dbg !11293, !rawptr !418
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !11293
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !11293
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !11293
  store i64 %ptr.1, i64* %60, align 8, !dbg !11293
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !11295, metadata !DIExpression()), !dbg !11299
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !11299, !rawptr !418
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !11299
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !11299
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !11299
  store i64 %ptr.1, i64* %63, align 8, !dbg !11299
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !11301
  %65 = load i8*, i8** %64, align 8, !dbg !11301, !nonnull !23, !noundef !23
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !11301
  %67 = load i64, i64* %66, align 8, !dbg !11301
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !11301
  store i8* %65, i8** %68, align 8, !dbg !11301
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !11301
  store i64 %67, i64* %69, align 8, !dbg !11301
  br label %bb20, !dbg !11302

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !11303
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !11304, metadata !DIExpression()), !dbg !11309
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !11310
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !11308, metadata !DIExpression()), !dbg !11309
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !11309
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !11311, metadata !DIExpression()), !dbg !11316
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !11309
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !11315, metadata !DIExpression()), !dbg !11316
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !11316
  store i8* %70, i8** %4, align 8, !dbg !11316
  %_113 = load i8*, i8** %4, align 8, !dbg !11316, !rawptr !418
  br label %bb32, !dbg !11316

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !11316
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !11318, metadata !DIExpression()), !dbg !11326
  %count = sub i64 %new_size, %_8, !dbg !11327
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !11327
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !11325, metadata !DIExpression()), !dbg !11326
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !11328, metadata !DIExpression()), !dbg !11341
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !11333, metadata !DIExpression()), !dbg !11341
  %71 = mul i64 1, %count, !dbg !11341
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !11341
  br label %bb33, !dbg !11341

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !11343

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !11259

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !11092
  %73 = load {}*, {}** %72, align 8, !dbg !11092
  %74 = icmp eq {}* %73, null, !dbg !11092
  %_142 = select i1 %74, i64 1, i64 0, !dbg !11092
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !11092

bb35:                                             ; preds = %bb14
  unreachable, !dbg !11092

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !11092
  %v.0 = load i8*, i8** %75, align 8, !dbg !11092, !nonnull !23, !noundef !23
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !11092
  %v.1 = load i64, i64* %76, align 8, !dbg !11092
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !11092
  store i8* %v.0, i8** %77, align 8, !dbg !11092
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !11092
  store i64 %v.1, i64* %78, align 8, !dbg !11092
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !11086, metadata !DIExpression()), !dbg !11344
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !11344
  store i8* %v.0, i8** %79, align 8, !dbg !11344
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !11344
  store i64 %v.1, i64* %80, align 8, !dbg !11344
  br label %bb15, !dbg !11092

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !11154
  store {}* null, {}** %81, align 8, !dbg !11154
  br label %bb15, !dbg !11092

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !11093
  %83 = load {}*, {}** %82, align 8, !dbg !11093
  %84 = icmp eq {}* %83, null, !dbg !11093
  %_60 = select i1 %84, i64 1, i64 0, !dbg !11093
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !11093

bb17:                                             ; preds = %bb15
  unreachable, !dbg !11093

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !11093
  %val.0 = load i8*, i8** %85, align 8, !dbg !11093, !nonnull !23, !noundef !23
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !11093
  %val.1 = load i64, i64* %86, align 8, !dbg !11093, !rawptr !418
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !11093
  store i8* %val.0, i8** %87, align 8, !dbg !11093
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !11093
  store i64 %val.1, i64* %88, align 8, !dbg !11093
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !11018, metadata !DIExpression()), !dbg !11345
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !11345
  store i8* %val.0, i8** %89, align 8, !dbg !11345
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !11345
  store i64 %val.1, i64* %90, align 8, !dbg !11345
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !11014, metadata !DIExpression()), !dbg !11346
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !11347
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !11348, metadata !DIExpression()), !dbg !11352
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !11347
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !11172, metadata !DIExpression()), !dbg !11353
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !11166
  store i8* %val.0, i8** %91, align 8, !dbg !11166
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !11166
  store i64 %val.1, i64* %92, align 8, !dbg !11166
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !11164, metadata !DIExpression()), !dbg !11354
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !11354
  store i8* %val.0, i8** %93, align 8, !dbg !11354
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !11354
  store i64 %val.1, i64* %94, align 8, !dbg !11354
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !11355, metadata !DIExpression()), !dbg !11359
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !11359
  store i8* %val.0, i8** %95, align 8, !dbg !11359
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !11359
  store i64 %val.1, i64* %96, align 8, !dbg !11359
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !11360, metadata !DIExpression()), !dbg !11364
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !11364, !rawptr !418
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !11364
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !11364
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !11364
  store i64 %val.1, i64* %98, align 8, !dbg !11364
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !11366, metadata !DIExpression()), !dbg !11370
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !11370, !rawptr !418
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !11370
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !11371, metadata !DIExpression()), !dbg !11375
  store i8* %ptr51, i8** %self16, align 8, !dbg !11375
  %_160 = load i8*, i8** %self16, align 8, !dbg !11160, !rawptr !418
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !11160
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !11174, metadata !DIExpression()), !dbg !11353
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !11377
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !11175, metadata !DIExpression()), !dbg !11353
  %99 = mul i64 %_8, 1, !dbg !11353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !11353
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !11378
  %_73.0 = load i64, i64* %100, align 8, !dbg !11378
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !11378
  %_73.1 = load i64, i64* %101, align 8, !dbg !11378, !range !5753, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !11379
  br label %bb19, !dbg !11379

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha0555b3c59efcc3fE"(), !dbg !11155
  br label %bb37, !dbg !11155

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !11155
  store {}* null, {}** %102, align 8, !dbg !11155
  br label %bb21, !dbg !11257

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !11259
  %104 = load i8*, i8** %103, align 8, !dbg !11259
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !11259
  %106 = load i64, i64* %105, align 8, !dbg !11259
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !11259
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !11259
  ret { i8*, i64 } %108, !dbg !11259

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !11380
  store i8* %val.0, i8** %109, align 8, !dbg !11380
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !11380
  store i64 %val.1, i64* %110, align 8, !dbg !11380
  br label %bb20, !dbg !11381

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !11382
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h670519a61cb0e8f8E(i64* %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11383 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %self.dbg.spill12 = alloca i64*, align 8
  %self.dbg.spill11 = alloca i64*, align 8
  %2 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %align.dbg.spill8 = alloca i64, align 8
  %size.dbg.spill7 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64**, align 8
  %self.dbg.spill3 = alloca i64**, align 8
  %size.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8, !rawptr !418
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr, metadata !11396, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11397, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11402, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11408, metadata !DIExpression()), !dbg !11412
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11414, metadata !DIExpression()), !dbg !11421
  store i64** %ptr, i64*** %self.dbg.spill, align 8, !dbg !11431
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11432, metadata !DIExpression()), !dbg !11440
  store i64** %ptr, i64*** %self.dbg.spill1, align 8, !dbg !11440
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11441, metadata !DIExpression()), !dbg !11448
  %self = load i64*, i64** %ptr, align 8, !dbg !11448, !nonnull !23, !noundef !23
  store i64* %self, i64** %self.dbg.spill2, align 8, !dbg !11448
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !11450, metadata !DIExpression()), !dbg !11456
  %_22 = bitcast i64* %self to %"std::io::error::Custom"*, !dbg !11456, !rawptr !418
  store i64 24, i64* %4, align 8, !dbg !11458
  %size = load i64, i64* %4, align 8, !dbg !11458
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11458
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11398, metadata !DIExpression()), !dbg !11459
  br label %bb1, !dbg !11458

bb1:                                              ; preds = %start
  store i64** %ptr, i64*** %self.dbg.spill3, align 8, !dbg !11460
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill3, metadata !11461, metadata !DIExpression()), !dbg !11465
  store i64** %ptr, i64*** %self.dbg.spill4, align 8, !dbg !11465
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill4, metadata !11466, metadata !DIExpression()), !dbg !11470
  %self5 = load i64*, i64** %ptr, align 8, !dbg !11470, !nonnull !23, !noundef !23
  store i64* %self5, i64** %self.dbg.spill6, align 8, !dbg !11470
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !11472, metadata !DIExpression()), !dbg !11476
  %_26 = bitcast i64* %self5 to %"std::io::error::Custom"*, !dbg !11476, !rawptr !418
  store i64 8, i64* %3, align 8, !dbg !11478
  %align = load i64, i64* %3, align 8, !dbg !11478
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11478
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11400, metadata !DIExpression()), !dbg !11479
  br label %bb2, !dbg !11478

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill7, align 8, !dbg !11480
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill7, metadata !11481, metadata !DIExpression()), !dbg !11486
  store i64 %align, i64* %align.dbg.spill8, align 8, !dbg !11488
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill8, metadata !11485, metadata !DIExpression()), !dbg !11486
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11486
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11489, metadata !DIExpression()), !dbg !11493
  store i64 %align, i64* %2, align 8, !dbg !11493
  %_28 = load i64, i64* %2, align 8, !dbg !11493, !range !5753, !noundef !23
  br label %bb7, !dbg !11493

bb7:                                              ; preds = %bb2
  %5 = bitcast { i64, i64 }* %layout to i64*, !dbg !11486
  store i64 %size, i64* %5, align 8, !dbg !11486
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11486
  store i64 %_28, i64* %6, align 8, !dbg !11486
  %self10 = load i64*, i64** %ptr, align 8, !dbg !11430, !nonnull !23, !noundef !23
  store i64* %self10, i64** %self.dbg.spill11, align 8, !dbg !11430
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill11, metadata !11427, metadata !DIExpression()), !dbg !11495
  store i64* %self10, i64** %self.dbg.spill12, align 8, !dbg !11495
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill12, metadata !11496, metadata !DIExpression()), !dbg !11502
  store i64* %self10, i64** %self.dbg.spill13, align 8, !dbg !11502
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !11504, metadata !DIExpression()), !dbg !11508
  %_38 = bitcast i64* %self10 to %"std::io::error::Custom"*, !dbg !11508, !rawptr !418
  %ptr14 = bitcast %"std::io::error::Custom"* %_38 to i8*, !dbg !11502, !rawptr !418
  store i8* %ptr14, i8** %ptr.dbg.spill, align 8, !dbg !11502
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11510, metadata !DIExpression()), !dbg !11514
  store i8* %ptr14, i8** %pointer, align 8, !dbg !11514
  %_42 = load i8*, i8** %pointer, align 8, !dbg !11421, !nonnull !23, !noundef !23
  store i8* %_42, i8** %unique, align 8, !dbg !11421
  %self15 = load i8*, i8** %unique, align 8, !dbg !11412, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self15, i8** %self.dbg.spill16, align 8, !dbg !11412
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !11516, metadata !DIExpression()), !dbg !11520
  store i8* %self15, i8** %self.dbg.spill17, align 8, !dbg !11520
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11522, metadata !DIExpression()), !dbg !11526
  store i8* %self15, i8** %ptr.dbg.spill18, align 8, !dbg !11526
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill18, metadata !11528, metadata !DIExpression()), !dbg !11532
  store i8* %self15, i8** %_15, align 8, !dbg !11532
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11534
  %_18.0 = load i64, i64* %7, align 8, !dbg !11534
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11534
  %_18.1 = load i64, i64* %8, align 8, !dbg !11534, !range !5753, !noundef !23
  %9 = load i8*, i8** %_15, align 8, !dbg !11535, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %9, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !11535

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !11536

cleanup:                                          ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !11536

bb6:                                              ; preds = %bb5
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !11537
  %16 = load i8*, i8** %15, align 8, !dbg !11537
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !11537
  %18 = load i32, i32* %17, align 8, !dbg !11537
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !11537
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !11537
  resume { i8*, i32 } %20, !dbg !11537

bb4:                                              ; preds = %bb3
  ret void, !dbg !11538
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h8015f80a71312221E(i8* %0, i64* align 8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11539 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8, !rawptr !418
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !11555, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11556, metadata !DIExpression()), !dbg !11565
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11561, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11567, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11573, metadata !DIExpression()), !dbg !11577
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !11587
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !11588, metadata !DIExpression()), !dbg !11599
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !11599
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !11600, metadata !DIExpression()), !dbg !11607
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11607
  %self.0 = load i8*, i8** %8, align 8, !dbg !11607, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11607
  %self.1 = load i64*, i64** %9, align 8, !dbg !11607, !nonnull !23, !align !378, !noundef !23
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !11607
  store i8* %self.0, i8** %10, align 8, !dbg !11607
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !11607
  store i64* %self.1, i64** %11, align 8, !dbg !11607
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !11609, metadata !DIExpression()), !dbg !11615
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !11615, !rawptr !418
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !11615, !rawptr !418
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11617
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !11617
  %14 = load i64, i64* %13, align 8, !dbg !11617, !invariant.load !23
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11617
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !11617
  %17 = load i64, i64* %16, align 8, !dbg !11617, !range !11618, !invariant.load !23
  store i64 %14, i64* %5, align 8, !dbg !11617
  %size = load i64, i64* %5, align 8, !dbg !11617
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11617
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11557, metadata !DIExpression()), !dbg !11619
  br label %bb1, !dbg !11617

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !11620
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !11621, metadata !DIExpression()), !dbg !11625
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !11625
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !11626, metadata !DIExpression()), !dbg !11630
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11630
  %self.05 = load i8*, i8** %18, align 8, !dbg !11630, !nonnull !23, !noundef !23
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11630
  %self.16 = load i64*, i64** %19, align 8, !dbg !11630, !nonnull !23, !align !378, !noundef !23
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !11630
  store i8* %self.05, i8** %20, align 8, !dbg !11630
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !11630
  store i64* %self.16, i64** %21, align 8, !dbg !11630
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !11632, metadata !DIExpression()), !dbg !11636
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !11636, !rawptr !418
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !11636, !rawptr !418
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11638
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !11638
  %24 = load i64, i64* %23, align 8, !dbg !11638, !invariant.load !23
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11638
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !11638
  %27 = load i64, i64* %26, align 8, !dbg !11638, !range !11618, !invariant.load !23
  store i64 %27, i64* %4, align 8, !dbg !11638
  %align = load i64, i64* %4, align 8, !dbg !11638
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11638
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11559, metadata !DIExpression()), !dbg !11639
  br label %bb2, !dbg !11638

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !11640
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !11641, metadata !DIExpression()), !dbg !11646
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11648
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11645, metadata !DIExpression()), !dbg !11646
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !11646
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !11649, metadata !DIExpression()), !dbg !11653
  store i64 %align, i64* %3, align 8, !dbg !11653
  %_28 = load i64, i64* %3, align 8, !dbg !11653, !range !5753, !noundef !23
  br label %bb7, !dbg !11653

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !11646
  store i64 %size, i64* %28, align 8, !dbg !11646
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11646
  store i64 %_28, i64* %29, align 8, !dbg !11646
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11586
  %self.011 = load i8*, i8** %30, align 8, !dbg !11586, !nonnull !23, !noundef !23
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11586
  %self.112 = load i64*, i64** %31, align 8, !dbg !11586, !nonnull !23, !align !378, !noundef !23
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !11586
  store i8* %self.011, i8** %32, align 8, !dbg !11586
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !11586
  store i64* %self.112, i64** %33, align 8, !dbg !11586
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !11583, metadata !DIExpression()), !dbg !11655
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !11655
  store i8* %self.011, i8** %34, align 8, !dbg !11655
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !11655
  store i64* %self.112, i64** %35, align 8, !dbg !11655
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !11656, metadata !DIExpression()), !dbg !11662
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !11662
  store i8* %self.011, i8** %36, align 8, !dbg !11662
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !11662
  store i64* %self.112, i64** %37, align 8, !dbg !11662
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !11664, metadata !DIExpression()), !dbg !11668
  %_38.0 = bitcast i8* %self.011 to {}*, !dbg !11668, !rawptr !418
  %_38.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !11668, !rawptr !418
  %ptr16 = bitcast {}* %_38.0 to i8*, !dbg !11662, !rawptr !418
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !11662
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11670, metadata !DIExpression()), !dbg !11674
  store i8* %ptr16, i8** %pointer, align 8, !dbg !11674
  %_42 = load i8*, i8** %pointer, align 8, !dbg !11577, !nonnull !23, !noundef !23
  store i8* %_42, i8** %unique, align 8, !dbg !11577
  %self = load i8*, i8** %unique, align 8, !dbg !11571, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !11571
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11676, metadata !DIExpression()), !dbg !11680
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !11680
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !11682, metadata !DIExpression()), !dbg !11686
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !11686
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !11688, metadata !DIExpression()), !dbg !11692
  store i8* %self, i8** %_15, align 8, !dbg !11692
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11694
  %_18.0 = load i64, i64* %38, align 8, !dbg !11694
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11694
  %_18.1 = load i64, i64* %39, align 8, !dbg !11694, !range !5753, !noundef !23
  %40 = load i8*, i8** %_15, align 8, !dbg !11695, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !11695

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !11696

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !11696

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !11697
  %47 = load i8*, i8** %46, align 8, !dbg !11697
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !11697
  %49 = load i32, i32* %48, align 8, !dbg !11697
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !11697
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !11697
  resume { i8*, i32 } %51, !dbg !11697

bb4:                                              ; preds = %bb3
  ret void, !dbg !11698
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h956b22549fd78293E(i32* %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11699 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i32*, i64 }, align 8
  %self.dbg.spill14 = alloca { i32*, i64 }, align 8
  %self.dbg.spill13 = alloca { i32*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i32*, i64 }, align 8
  %self.dbg.spill4 = alloca { i32*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i32*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }, align 8
  %self.dbg.spill1 = alloca { i32*, i64 }*, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8, !rawptr !418
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i32*, i64 }, align 8
  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0
  store i32* %0, i32** %6, align 8
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %ptr, metadata !11715, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11716, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11721, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11727, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11733, metadata !DIExpression()), !dbg !11737
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill, align 8, !dbg !11747
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !11748, metadata !DIExpression()), !dbg !11759
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill1, align 8, !dbg !11759
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill1, metadata !11760, metadata !DIExpression()), !dbg !11767
  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0, !dbg !11767
  %self.0 = load i32*, i32** %8, align 8, !dbg !11767, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1, !dbg !11767
  %self.1 = load i64, i64* %9, align 8, !dbg !11767, !rawptr !418
  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !11767
  store i32* %self.0, i32** %10, align 8, !dbg !11767
  %11 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !11767
  store i64 %self.1, i64* %11, align 8, !dbg !11767
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill2, metadata !11769, metadata !DIExpression()), !dbg !11779
  %_22.0 = bitcast i32* %self.0 to [0 x i32]*, !dbg !11779, !rawptr !418
  %12 = mul nsw i64 %self.1, 4, !dbg !11781
  store i64 %12, i64* %5, align 8, !dbg !11781
  %size = load i64, i64* %5, align 8, !dbg !11781
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11781
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11717, metadata !DIExpression()), !dbg !11782
  br label %bb1, !dbg !11781

bb1:                                              ; preds = %start
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill3, align 8, !dbg !11783
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill3, metadata !11784, metadata !DIExpression()), !dbg !11788
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill4, align 8, !dbg !11788
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill4, metadata !11789, metadata !DIExpression()), !dbg !11793
  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0, !dbg !11793
  %self.05 = load i32*, i32** %13, align 8, !dbg !11793, !nonnull !23, !noundef !23
  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1, !dbg !11793
  %self.16 = load i64, i64* %14, align 8, !dbg !11793, !rawptr !418
  %15 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !11793
  store i32* %self.05, i32** %15, align 8, !dbg !11793
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !11793
  store i64 %self.16, i64* %16, align 8, !dbg !11793
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill7, metadata !11795, metadata !DIExpression()), !dbg !11799
  %_26.0 = bitcast i32* %self.05 to [0 x i32]*, !dbg !11799, !rawptr !418
  %17 = mul nsw i64 %self.16, 4, !dbg !11801
  store i64 4, i64* %4, align 8, !dbg !11801
  %align = load i64, i64* %4, align 8, !dbg !11801
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11801
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11719, metadata !DIExpression()), !dbg !11802
  br label %bb2, !dbg !11801

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !11803
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !11804, metadata !DIExpression()), !dbg !11809
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11811
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11808, metadata !DIExpression()), !dbg !11809
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !11809
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !11812, metadata !DIExpression()), !dbg !11816
  store i64 %align, i64* %3, align 8, !dbg !11816
  %_28 = load i64, i64* %3, align 8, !dbg !11816, !range !5753, !noundef !23
  br label %bb7, !dbg !11816

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !11809
  store i64 %size, i64* %18, align 8, !dbg !11809
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11809
  store i64 %_28, i64* %19, align 8, !dbg !11809
  %20 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0, !dbg !11746
  %self.011 = load i32*, i32** %20, align 8, !dbg !11746, !nonnull !23, !noundef !23
  %21 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1, !dbg !11746
  %self.112 = load i64, i64* %21, align 8, !dbg !11746, !rawptr !418
  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !11746
  store i32* %self.011, i32** %22, align 8, !dbg !11746
  %23 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !11746
  store i64 %self.112, i64* %23, align 8, !dbg !11746
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill13, metadata !11743, metadata !DIExpression()), !dbg !11818
  %24 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !11818
  store i32* %self.011, i32** %24, align 8, !dbg !11818
  %25 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !11818
  store i64 %self.112, i64* %25, align 8, !dbg !11818
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill14, metadata !11819, metadata !DIExpression()), !dbg !11825
  %26 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !11825
  store i32* %self.011, i32** %26, align 8, !dbg !11825
  %27 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !11825
  store i64 %self.112, i64* %27, align 8, !dbg !11825
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill15, metadata !11827, metadata !DIExpression()), !dbg !11831
  %_38.0 = bitcast i32* %self.011 to [0 x i32]*, !dbg !11831, !rawptr !418
  %ptr16 = bitcast [0 x i32]* %_38.0 to i8*, !dbg !11825, !rawptr !418
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !11825
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11833, metadata !DIExpression()), !dbg !11837
  store i8* %ptr16, i8** %pointer, align 8, !dbg !11837
  %_42 = load i8*, i8** %pointer, align 8, !dbg !11737, !nonnull !23, !noundef !23
  store i8* %_42, i8** %unique, align 8, !dbg !11737
  %self = load i8*, i8** %unique, align 8, !dbg !11731, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !11731
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11839, metadata !DIExpression()), !dbg !11843
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !11843
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !11845, metadata !DIExpression()), !dbg !11849
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !11849
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !11851, metadata !DIExpression()), !dbg !11855
  store i8* %self, i8** %_15, align 8, !dbg !11855
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11857
  %_18.0 = load i64, i64* %28, align 8, !dbg !11857
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11857
  %_18.1 = load i64, i64* %29, align 8, !dbg !11857, !range !5753, !noundef !23
  %30 = load i8*, i8** %_15, align 8, !dbg !11858, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !11858

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !11859

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !11859

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !11860
  %37 = load i8*, i8** %36, align 8, !dbg !11860
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !11860
  %39 = load i32, i32* %38, align 8, !dbg !11860
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !11860
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !11860
  resume { i8*, i32 } %41, !dbg !11860

bb4:                                              ; preds = %bb3
  ret void, !dbg !11861
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17ha18ccfeeb56ca191E(i8* %0, i64* align 8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11862 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8, !rawptr !418
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !11878, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11879, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11884, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11890, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11896, metadata !DIExpression()), !dbg !11900
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !11910
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !11911, metadata !DIExpression()), !dbg !11922
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !11922
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !11923, metadata !DIExpression()), !dbg !11930
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11930
  %self.0 = load i8*, i8** %8, align 8, !dbg !11930, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11930
  %self.1 = load i64*, i64** %9, align 8, !dbg !11930, !nonnull !23, !align !378, !noundef !23
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !11930
  store i8* %self.0, i8** %10, align 8, !dbg !11930
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !11930
  store i64* %self.1, i64** %11, align 8, !dbg !11930
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !11932, metadata !DIExpression()), !dbg !11938
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !11938, !rawptr !418
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !11938, !rawptr !418
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11940
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !11940
  %14 = load i64, i64* %13, align 8, !dbg !11940, !invariant.load !23
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11940
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !11940
  %17 = load i64, i64* %16, align 8, !dbg !11940, !range !11618, !invariant.load !23
  store i64 %14, i64* %5, align 8, !dbg !11940
  %size = load i64, i64* %5, align 8, !dbg !11940
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11940
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11880, metadata !DIExpression()), !dbg !11941
  br label %bb1, !dbg !11940

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !11942
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !11943, metadata !DIExpression()), !dbg !11947
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !11947
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !11948, metadata !DIExpression()), !dbg !11952
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11952
  %self.05 = load i8*, i8** %18, align 8, !dbg !11952, !nonnull !23, !noundef !23
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11952
  %self.16 = load i64*, i64** %19, align 8, !dbg !11952, !nonnull !23, !align !378, !noundef !23
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !11952
  store i8* %self.05, i8** %20, align 8, !dbg !11952
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !11952
  store i64* %self.16, i64** %21, align 8, !dbg !11952
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !11954, metadata !DIExpression()), !dbg !11958
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !11958, !rawptr !418
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !11958, !rawptr !418
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11960
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !11960
  %24 = load i64, i64* %23, align 8, !dbg !11960, !invariant.load !23
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11960
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !11960
  %27 = load i64, i64* %26, align 8, !dbg !11960, !range !11618, !invariant.load !23
  store i64 %27, i64* %4, align 8, !dbg !11960
  %align = load i64, i64* %4, align 8, !dbg !11960
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11960
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11882, metadata !DIExpression()), !dbg !11961
  br label %bb2, !dbg !11960

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !11962
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !11963, metadata !DIExpression()), !dbg !11968
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11970
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11967, metadata !DIExpression()), !dbg !11968
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !11968
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !11971, metadata !DIExpression()), !dbg !11975
  store i64 %align, i64* %3, align 8, !dbg !11975
  %_28 = load i64, i64* %3, align 8, !dbg !11975, !range !5753, !noundef !23
  br label %bb7, !dbg !11975

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !11968
  store i64 %size, i64* %28, align 8, !dbg !11968
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11968
  store i64 %_28, i64* %29, align 8, !dbg !11968
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11909
  %self.011 = load i8*, i8** %30, align 8, !dbg !11909, !nonnull !23, !noundef !23
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11909
  %self.112 = load i64*, i64** %31, align 8, !dbg !11909, !nonnull !23, !align !378, !noundef !23
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !11909
  store i8* %self.011, i8** %32, align 8, !dbg !11909
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !11909
  store i64* %self.112, i64** %33, align 8, !dbg !11909
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !11906, metadata !DIExpression()), !dbg !11977
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !11977
  store i8* %self.011, i8** %34, align 8, !dbg !11977
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !11977
  store i64* %self.112, i64** %35, align 8, !dbg !11977
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !11978, metadata !DIExpression()), !dbg !11984
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !11984
  store i8* %self.011, i8** %36, align 8, !dbg !11984
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !11984
  store i64* %self.112, i64** %37, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !11986, metadata !DIExpression()), !dbg !11990
  %_38.0 = bitcast i8* %self.011 to {}*, !dbg !11990, !rawptr !418
  %_38.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !11990, !rawptr !418
  %ptr16 = bitcast {}* %_38.0 to i8*, !dbg !11984, !rawptr !418
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11992, metadata !DIExpression()), !dbg !11996
  store i8* %ptr16, i8** %pointer, align 8, !dbg !11996
  %_42 = load i8*, i8** %pointer, align 8, !dbg !11900, !nonnull !23, !noundef !23
  store i8* %_42, i8** %unique, align 8, !dbg !11900
  %self = load i8*, i8** %unique, align 8, !dbg !11894, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !11894
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11998, metadata !DIExpression()), !dbg !12002
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !12002
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !12004, metadata !DIExpression()), !dbg !12008
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !12008
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !12010, metadata !DIExpression()), !dbg !12014
  store i8* %self, i8** %_15, align 8, !dbg !12014
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !12016
  %_18.0 = load i64, i64* %38, align 8, !dbg !12016
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12016
  %_18.1 = load i64, i64* %39, align 8, !dbg !12016, !range !5753, !noundef !23
  %40 = load i8*, i8** %_15, align 8, !dbg !12017, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !12017

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !12018

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !12018

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12019
  %47 = load i8*, i8** %46, align 8, !dbg !12019
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12019
  %49 = load i32, i32* %48, align 8, !dbg !12019
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !12019
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !12019
  resume { i8*, i32 } %51, !dbg !12019

bb4:                                              ; preds = %bb3
  ret void, !dbg !12020
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hb1917f1427afb187E(i8* %0, i64* align 8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12021 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8, !rawptr !418
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !12037, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !12038, metadata !DIExpression()), !dbg !12047
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !12043, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !12049, metadata !DIExpression()), !dbg !12053
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12055, metadata !DIExpression()), !dbg !12059
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !12069
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !12070, metadata !DIExpression()), !dbg !12081
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !12081
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !12082, metadata !DIExpression()), !dbg !12089
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !12089
  %self.0 = load i8*, i8** %8, align 8, !dbg !12089, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !12089
  %self.1 = load i64*, i64** %9, align 8, !dbg !12089, !nonnull !23, !align !378, !noundef !23
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !12089
  store i8* %self.0, i8** %10, align 8, !dbg !12089
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !12089
  store i64* %self.1, i64** %11, align 8, !dbg !12089
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !12091, metadata !DIExpression()), !dbg !12097
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !12097, !rawptr !418
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !12097, !rawptr !418
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !12099
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !12099
  %14 = load i64, i64* %13, align 8, !dbg !12099, !invariant.load !23
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !12099
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !12099
  %17 = load i64, i64* %16, align 8, !dbg !12099, !range !11618, !invariant.load !23
  store i64 %14, i64* %5, align 8, !dbg !12099
  %size = load i64, i64* %5, align 8, !dbg !12099
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !12099
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !12039, metadata !DIExpression()), !dbg !12100
  br label %bb1, !dbg !12099

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !12101
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !12102, metadata !DIExpression()), !dbg !12106
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !12106
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !12107, metadata !DIExpression()), !dbg !12111
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !12111
  %self.05 = load i8*, i8** %18, align 8, !dbg !12111, !nonnull !23, !noundef !23
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !12111
  %self.16 = load i64*, i64** %19, align 8, !dbg !12111, !nonnull !23, !align !378, !noundef !23
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !12111
  store i8* %self.05, i8** %20, align 8, !dbg !12111
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !12111
  store i64* %self.16, i64** %21, align 8, !dbg !12111
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !12113, metadata !DIExpression()), !dbg !12117
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !12117, !rawptr !418
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !12117, !rawptr !418
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !12119
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !12119
  %24 = load i64, i64* %23, align 8, !dbg !12119, !invariant.load !23
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !12119
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !12119
  %27 = load i64, i64* %26, align 8, !dbg !12119, !range !11618, !invariant.load !23
  store i64 %27, i64* %4, align 8, !dbg !12119
  %align = load i64, i64* %4, align 8, !dbg !12119
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !12119
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !12041, metadata !DIExpression()), !dbg !12120
  br label %bb2, !dbg !12119

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !12121
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !12122, metadata !DIExpression()), !dbg !12127
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !12129
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !12126, metadata !DIExpression()), !dbg !12127
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !12127
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !12130, metadata !DIExpression()), !dbg !12134
  store i64 %align, i64* %3, align 8, !dbg !12134
  %_28 = load i64, i64* %3, align 8, !dbg !12134, !range !5753, !noundef !23
  br label %bb7, !dbg !12134

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !12127
  store i64 %size, i64* %28, align 8, !dbg !12127
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12127
  store i64 %_28, i64* %29, align 8, !dbg !12127
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !12068
  %self.011 = load i8*, i8** %30, align 8, !dbg !12068, !nonnull !23, !noundef !23
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !12068
  %self.112 = load i64*, i64** %31, align 8, !dbg !12068, !nonnull !23, !align !378, !noundef !23
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !12068
  store i8* %self.011, i8** %32, align 8, !dbg !12068
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !12068
  store i64* %self.112, i64** %33, align 8, !dbg !12068
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !12065, metadata !DIExpression()), !dbg !12136
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !12136
  store i8* %self.011, i8** %34, align 8, !dbg !12136
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !12136
  store i64* %self.112, i64** %35, align 8, !dbg !12136
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !12137, metadata !DIExpression()), !dbg !12143
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !12143
  store i8* %self.011, i8** %36, align 8, !dbg !12143
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !12143
  store i64* %self.112, i64** %37, align 8, !dbg !12143
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !12145, metadata !DIExpression()), !dbg !12149
  %_38.0 = bitcast i8* %self.011 to {}*, !dbg !12149, !rawptr !418
  %_38.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !12149, !rawptr !418
  %ptr16 = bitcast {}* %_38.0 to i8*, !dbg !12143, !rawptr !418
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !12143
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12151, metadata !DIExpression()), !dbg !12155
  store i8* %ptr16, i8** %pointer, align 8, !dbg !12155
  %_42 = load i8*, i8** %pointer, align 8, !dbg !12059, !nonnull !23, !noundef !23
  store i8* %_42, i8** %unique, align 8, !dbg !12059
  %self = load i8*, i8** %unique, align 8, !dbg !12053, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !12053
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !12157, metadata !DIExpression()), !dbg !12161
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !12161
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !12163, metadata !DIExpression()), !dbg !12167
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !12167
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !12169, metadata !DIExpression()), !dbg !12173
  store i8* %self, i8** %_15, align 8, !dbg !12173
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !12175
  %_18.0 = load i64, i64* %38, align 8, !dbg !12175
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12175
  %_18.1 = load i64, i64* %39, align 8, !dbg !12175, !range !5753, !noundef !23
  %40 = load i8*, i8** %_15, align 8, !dbg !12176, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !12176

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !12177

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !12177

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12178
  %47 = load i8*, i8** %46, align 8, !dbg !12178
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12178
  %49 = load i32, i32* %48, align 8, !dbg !12178
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !12178
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !12178
  resume { i8*, i32 } %51, !dbg !12178

bb4:                                              ; preds = %bb3
  ret void, !dbg !12179
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hde9034a7bbb7537bE(i8* %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12180 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64 }, align 8
  %self.dbg.spill14 = alloca { i8*, i64 }, align 8
  %self.dbg.spill13 = alloca { i8*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8, !rawptr !418
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr, metadata !12189, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !12190, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !12195, metadata !DIExpression()), !dbg !12199
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !12200, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12206, metadata !DIExpression()), !dbg !12210
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill, align 8, !dbg !12220
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12221, metadata !DIExpression()), !dbg !12228
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !12228
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !12229, metadata !DIExpression()), !dbg !12236
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !12236
  %self.0 = load i8*, i8** %8, align 8, !dbg !12236, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !12236
  %self.1 = load i64, i64* %9, align 8, !dbg !12236, !rawptr !418
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !12236
  store i8* %self.0, i8** %10, align 8, !dbg !12236
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !12236
  store i64 %self.1, i64* %11, align 8, !dbg !12236
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !12238, metadata !DIExpression()), !dbg !12242
  %_22.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !12242, !rawptr !418
  %12 = mul nsw i64 %self.1, 1, !dbg !12244
  store i64 %12, i64* %5, align 8, !dbg !12244
  %size = load i64, i64* %5, align 8, !dbg !12244
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !12244
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !12191, metadata !DIExpression()), !dbg !12245
  br label %bb1, !dbg !12244

bb1:                                              ; preds = %start
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill3, align 8, !dbg !12246
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill3, metadata !12247, metadata !DIExpression()), !dbg !12251
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill4, align 8, !dbg !12251
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill4, metadata !12252, metadata !DIExpression()), !dbg !12256
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !12256
  %self.05 = load i8*, i8** %13, align 8, !dbg !12256, !nonnull !23, !noundef !23
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !12256
  %self.16 = load i64, i64* %14, align 8, !dbg !12256, !rawptr !418
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !12256
  store i8* %self.05, i8** %15, align 8, !dbg !12256
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !12256
  store i64 %self.16, i64* %16, align 8, !dbg !12256
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill7, metadata !12258, metadata !DIExpression()), !dbg !12262
  %_26.0 = bitcast i8* %self.05 to [0 x i8]*, !dbg !12262, !rawptr !418
  %17 = mul nsw i64 %self.16, 1, !dbg !12264
  store i64 1, i64* %4, align 8, !dbg !12264
  %align = load i64, i64* %4, align 8, !dbg !12264
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !12264
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !12193, metadata !DIExpression()), !dbg !12265
  br label %bb2, !dbg !12264

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !12266
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !12267, metadata !DIExpression()), !dbg !12272
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !12274
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !12271, metadata !DIExpression()), !dbg !12272
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !12272
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !12275, metadata !DIExpression()), !dbg !12279
  store i64 %align, i64* %3, align 8, !dbg !12279
  %_28 = load i64, i64* %3, align 8, !dbg !12279, !range !5753, !noundef !23
  br label %bb7, !dbg !12279

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !12272
  store i64 %size, i64* %18, align 8, !dbg !12272
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12272
  store i64 %_28, i64* %19, align 8, !dbg !12272
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !12219
  %self.011 = load i8*, i8** %20, align 8, !dbg !12219, !nonnull !23, !noundef !23
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !12219
  %self.112 = load i64, i64* %21, align 8, !dbg !12219, !rawptr !418
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !12219
  store i8* %self.011, i8** %22, align 8, !dbg !12219
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !12219
  store i64 %self.112, i64* %23, align 8, !dbg !12219
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill13, metadata !12216, metadata !DIExpression()), !dbg !12281
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !12281
  store i8* %self.011, i8** %24, align 8, !dbg !12281
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !12281
  store i64 %self.112, i64* %25, align 8, !dbg !12281
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill14, metadata !12282, metadata !DIExpression()), !dbg !12286
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !12286
  store i8* %self.011, i8** %26, align 8, !dbg !12286
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !12286
  store i64 %self.112, i64* %27, align 8, !dbg !12286
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill15, metadata !12288, metadata !DIExpression()), !dbg !12292
  %_38.0 = bitcast i8* %self.011 to [0 x i8]*, !dbg !12292, !rawptr !418
  %ptr16 = bitcast [0 x i8]* %_38.0 to i8*, !dbg !12286, !rawptr !418
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !12286
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12294, metadata !DIExpression()), !dbg !12298
  store i8* %ptr16, i8** %pointer, align 8, !dbg !12298
  %_42 = load i8*, i8** %pointer, align 8, !dbg !12210, !nonnull !23, !noundef !23
  store i8* %_42, i8** %unique, align 8, !dbg !12210
  %self = load i8*, i8** %unique, align 8, !dbg !12204, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !12204
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !12300, metadata !DIExpression()), !dbg !12304
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !12304
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !12306, metadata !DIExpression()), !dbg !12310
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !12310
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !12312, metadata !DIExpression()), !dbg !12316
  store i8* %self, i8** %_15, align 8, !dbg !12316
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !12318
  %_18.0 = load i64, i64* %28, align 8, !dbg !12318
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12318
  %_18.1 = load i64, i64* %29, align 8, !dbg !12318, !range !5753, !noundef !23
  %30 = load i8*, i8** %_15, align 8, !dbg !12319, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !12319

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !12320

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !12320

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12321
  %37 = load i8*, i8** %36, align 8, !dbg !12321
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12321
  %39 = load i32, i32* %38, align 8, !dbg !12321
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !12321
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !12321
  resume { i8*, i32 } %41, !dbg !12321

bb4:                                              ; preds = %bb3
  ret void, !dbg !12322
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hbb3c7feb6b0894daE"({}* align 1 %0, [3 x i64]* align 8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12323 {
start:
  %reference.dbg.spill2 = alloca { {}*, [3 x i64]* }, align 8
  %reference.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"*, align 8
  %src.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", align 1
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca { i8*, i64* }, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1, !rawptr !418
  %_9 = alloca i8, align 1
  %_5 = alloca { i8*, i64* }, align 8
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b, metadata !12334, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !12335, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, metadata !12339, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %self.dbg.spill, metadata !12348, metadata !DIExpression()), !dbg !12352
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %slot.dbg.spill, metadata !12354, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %pointer, metadata !12360, metadata !DIExpression()), !dbg !12366
  store i8 1, i8* %_9, align 1, !dbg !12380
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*, !dbg !12381, !rawptr !418
  store %"alloc::alloc::Global"* %_4, %"alloc::alloc::Global"** %src.dbg.spill, align 8, !dbg !12381
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %src.dbg.spill, metadata !12344, metadata !DIExpression()), !dbg !12382
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to {}*, !dbg !12383
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill1, align 8, !dbg !12346
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill1, metadata !12387, metadata !DIExpression()), !dbg !12391
  %_12 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*, !dbg !12391, !rawptr !418
  %7 = bitcast %"alloc::alloc::Global"* %_12 to i8*, !dbg !12346
  %8 = bitcast %"alloc::alloc::Global"* %_4 to i8*, !dbg !12346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 0, i1 false), !dbg !12346
  br label %bb6, !dbg !12352

bb6:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !12393
  %9 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0, !dbg !12393
  %_7.0 = load {}*, {}** %9, align 8, !dbg !12393, !nonnull !23, !align !912, !noundef !23
  %10 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1, !dbg !12393
  %_7.1 = load [3 x i64]*, [3 x i64]** %10, align 8, !dbg !12393, !nonnull !23, !align !378, !noundef !23
; invoke alloc::boxed::Box<T,A>::leak
  %11 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17he4a9453c1f527859E"({}* align 1 %_7.0, [3 x i64]* align 8 %_7.1)
          to label %bb1 unwind label %cleanup, !dbg !12394

bb2:                                              ; preds = %cleanup
  br label %bb5, !dbg !12395

cleanup:                                          ; preds = %bb6
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb2

bb1:                                              ; preds = %bb6
  %reference.0 = extractvalue { {}*, [3 x i64]* } %11, 0, !dbg !12394, !rawptr !418
  %reference.1 = extractvalue { {}*, [3 x i64]* } %11, 1, !dbg !12394, !rawptr !418
  %17 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill, i32 0, i32 0, !dbg !12394
  store {}* %reference.0, {}** %17, align 8, !dbg !12394
  %18 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill, i32 0, i32 1, !dbg !12394
  store [3 x i64]* %reference.1, [3 x i64]** %18, align 8, !dbg !12394
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %reference.dbg.spill, metadata !12377, metadata !DIExpression()), !dbg !12396
  %19 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill2, i32 0, i32 0, !dbg !12396
  store {}* %reference.0, {}** %19, align 8, !dbg !12396
  %20 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill2, i32 0, i32 1, !dbg !12396
  store [3 x i64]* %reference.1, [3 x i64]** %20, align 8, !dbg !12396
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %reference.dbg.spill2, metadata !12397, metadata !DIExpression()), !dbg !12404
  %21 = bitcast { i8*, i64* }* %pointer to { {}*, [3 x i64]* }*, !dbg !12404, !rawptr !418
  %22 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %21, i32 0, i32 0, !dbg !12404
  store {}* %reference.0, {}** %22, align 8, !dbg !12404
  %23 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %21, i32 0, i32 1, !dbg !12404
  store [3 x i64]* %reference.1, [3 x i64]** %23, align 8, !dbg !12404
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %pointer, i32 0, i32 0, !dbg !12366
  %_24.0 = load i8*, i8** %24, align 8, !dbg !12366, !nonnull !23, !noundef !23
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %pointer, i32 0, i32 1, !dbg !12366
  %_24.1 = load i64*, i64** %25, align 8, !dbg !12366, !nonnull !23, !align !378, !noundef !23
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 0, !dbg !12366
  store i8* %_24.0, i8** %26, align 8, !dbg !12366
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 1, !dbg !12366
  store i64* %_24.1, i64** %27, align 8, !dbg !12366
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 0, !dbg !12406
  %29 = load i8*, i8** %28, align 8, !dbg !12406, !nonnull !23, !noundef !23
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 1, !dbg !12406
  %31 = load i64*, i64** %30, align 8, !dbg !12406, !nonnull !23, !align !378, !noundef !23
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0, !dbg !12406
  store i8* %29, i8** %32, align 8, !dbg !12406
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1, !dbg !12406
  store i64* %31, i64** %33, align 8, !dbg !12406
  %34 = bitcast { i8*, i64* }* %3 to i8*, !dbg !12406
  %35 = getelementptr i8, i8* %34, i64 16, !dbg !12406
  %36 = bitcast i8* %35 to %"alloc::alloc::Global"*, !dbg !12406
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0, !dbg !12407
  %38 = load i8*, i8** %37, align 8, !dbg !12407, !nonnull !23, !noundef !23
  %39 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1, !dbg !12407
  %40 = load i64*, i64** %39, align 8, !dbg !12407, !nonnull !23, !align !378, !noundef !23
  %41 = insertvalue { i8*, i64* } undef, i8* %38, 0, !dbg !12407
  %42 = insertvalue { i8*, i64* } %41, i64* %40, 1, !dbg !12407
  ret { i8*, i64* } %42, !dbg !12407

bb5:                                              ; preds = %bb2
  %43 = load i8, i8* %_9, align 1, !dbg !12395, !range !298, !noundef !23
  %44 = trunc i8 %43 to i1, !dbg !12395
  br i1 %44, label %bb4, label %bb3, !dbg !12395

bb3:                                              ; preds = %bb4, %bb5
  %45 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12408
  %46 = load i8*, i8** %45, align 8, !dbg !12408
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12408
  %48 = load i32, i32* %47, align 8, !dbg !12408
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0, !dbg !12408
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1, !dbg !12408
  resume { i8*, i32 } %50, !dbg !12408

bb4:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h3907a4c46ddbe6e5E"({ {}*, [3 x i64]* }* %b) #19
          to label %bb3 unwind label %abort, !dbg !12395

abort:                                            ; preds = %bb4
  %51 = landingpad { i8*, i32 }
          cleanup, !dbg !12408
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !12408
  unreachable, !dbg !12408
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17he4a9453c1f527859E"({}* align 1 %b.0, [3 x i64]* align 8 %b.1) unnamed_addr #1 !dbg !12409 {
start:
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %value.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %b.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 0
  store {}* %b.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b.dbg.spill, metadata !12413, metadata !DIExpression()), !dbg !12414
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 0, !dbg !12415
  store {}* %b.0, {}** %2, align 8, !dbg !12415
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 1, !dbg !12415
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !dbg !12415
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %value.dbg.spill, metadata !12416, metadata !DIExpression()), !dbg !12425
  %4 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*, !dbg !12425
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0, !dbg !12425
  store {}* %b.0, {}** %5, align 8, !dbg !12425
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1, !dbg !12425
  store [3 x i64]* %b.1, [3 x i64]** %6, align 8, !dbg !12425
  store { i8*, i64* }* %_9, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !12426
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !12427, metadata !DIExpression()), !dbg !12435
  %_7 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*, !dbg !12435
  %7 = bitcast { {}*, [3 x i64]* }* %_7 to { i8*, i64* }*, !dbg !12426
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %7, i32 0, i32 0, !dbg !12426
  %self.0 = load i8*, i8** %8, align 8, !dbg !12426, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %7, i32 0, i32 1, !dbg !12426
  %self.1 = load i64*, i64** %9, align 8, !dbg !12426, !nonnull !23, !align !378, !noundef !23
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill1, i32 0, i32 0, !dbg !12426
  store i8* %self.0, i8** %10, align 8, !dbg !12426
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill1, i32 0, i32 1, !dbg !12426
  store i64* %self.1, i64** %11, align 8, !dbg !12426
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill1, metadata !12436, metadata !DIExpression()), !dbg !12442
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !12442
  store i8* %self.0, i8** %12, align 8, !dbg !12442
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !12442
  store i64* %self.1, i64** %13, align 8, !dbg !12442
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !12443, metadata !DIExpression()), !dbg !12447
  %_13.0 = bitcast i8* %self.0 to {}*, !dbg !12447, !rawptr !418
  %_13.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !12447, !rawptr !418
  %14 = insertvalue { {}*, [3 x i64]* } undef, {}* %_13.0, 0, !dbg !12449
  %15 = insertvalue { {}*, [3 x i64]* } %14, [3 x i64]* %_13.1, 1, !dbg !12449
  ret { {}*, [3 x i64]* } %15, !dbg !12449
}

; alloc::slice::<impl [T]>::join
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17habb5388bde365e88E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #0 !dbg !12450 {
start:
  %sep.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !12455, metadata !DIExpression()), !dbg !12459
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 1
  store i64 %sep.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep.dbg.spill, metadata !12456, metadata !DIExpression()), !dbg !12460
; call alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
  call void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h8940c49ccfa13e56E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, [0 x i8]* align 1 %sep.0, i64 %sep.1), !dbg !12461
  br label %bb1, !dbg !12461

bb1:                                              ; preds = %start
  ret void, !dbg !12462
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String9from_utf817hee727218af8ebc1bE(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") %0, %"alloc::vec::Vec<u8>"* %vec) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12463 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_26 = alloca { i8*, i64 }, align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_13 = alloca %"core::str::error::Utf8Error", align 8
  %_12 = alloca %"alloc::vec::Vec<u8>", align 8
  %_11 = alloca %"alloc::string::FromUtf8Error", align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %_9 = alloca %"alloc::vec::Vec<u8>", align 8
  %_8 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %vec, metadata !12467, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.declare(metadata %"core::str::error::Utf8Error"* %e, metadata !12468, metadata !DIExpression()), !dbg !12471
  store %"alloc::vec::Vec<u8>"* %vec, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8, !dbg !12472
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !12473, metadata !DIExpression()), !dbg !12477
; invoke alloc::vec::Vec<T,A>::as_ptr
  %data = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E"(%"alloc::vec::Vec<u8>"* align 8 %vec)
          to label %bb8 unwind label %cleanup, !dbg !12477, !rawptr !418

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %vec) #19
          to label %bb7 unwind label %abort, !dbg !12478

cleanup:                                          ; preds = %bb8, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb6

bb8:                                              ; preds = %start
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !12477
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !12479, metadata !DIExpression()), !dbg !12487
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %vec, i32 0, i32 1, !dbg !12477
  %len = load i64, i64* %7, align 8, !dbg !12477
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !12477
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12483, metadata !DIExpression()), !dbg !12487
  store i8* %data, i8** %data.dbg.spill1, align 8, !dbg !12487
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill1, metadata !12489, metadata !DIExpression()), !dbg !12494
  store i64 %len, i64* %len.dbg.spill2, align 8, !dbg !12487
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !12493, metadata !DIExpression()), !dbg !12494
  store i8* %data, i8** %self.dbg.spill3, align 8, !dbg !12494
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !12496, metadata !DIExpression()), !dbg !12500
  %data_address = bitcast i8* %data to {}*, !dbg !12500, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !12500
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !12502, metadata !DIExpression()), !dbg !12507
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !12494
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !12506, metadata !DIExpression()), !dbg !12507
  %8 = bitcast { i8*, i64 }* %_26 to {}**, !dbg !12507, !rawptr !418
  store {}* %data_address, {}** %8, align 8, !dbg !12507
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !12507
  store i64 %len, i64* %9, align 8, !dbg !12507
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !12507
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 0, !dbg !12507
  %12 = load i8*, i8** %11, align 8, !dbg !12507
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !12507
  %14 = load i64, i64* %13, align 8, !dbg !12507
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !12507
  store i8* %12, i8** %15, align 8, !dbg !12507
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !12507
  store i64 %14, i64* %16, align 8, !dbg !12507
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !12507
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !12507
  %_18.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !12507, !rawptr !418
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !12507
  %_18.1 = load i64, i64* %19, align 8, !dbg !12507, !rawptr !418
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817ha505d97bf6980ce7E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_2, [0 x i8]* align 1 %_18.0, i64 %_18.1)
          to label %bb1 unwind label %cleanup, !dbg !12509

bb1:                                              ; preds = %bb8
  %20 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %_2 to i64*, !dbg !12509
  %_7 = load i64, i64* %20, align 8, !dbg !12509, !range !3483, !noundef !23
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !12510

abort:                                            ; preds = %bb6
  %21 = landingpad { i8*, i32 }
          cleanup, !dbg !12511
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !12511
  unreachable, !dbg !12511

bb7:                                              ; preds = %bb6
  %22 = bitcast { i8*, i32 }* %1 to i8**, !dbg !12511
  %23 = load i8*, i8** %22, align 8, !dbg !12511
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !12511
  %25 = load i32, i32* %24, align 8, !dbg !12511
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0, !dbg !12511
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1, !dbg !12511
  resume { i8*, i32 } %27, !dbg !12511

bb3:                                              ; preds = %bb1
  unreachable, !dbg !12509

bb4:                                              ; preds = %bb1
  %28 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !12512
  %29 = bitcast %"alloc::vec::Vec<u8>"* %vec to i8*, !dbg !12512
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false), !dbg !12512
  %30 = bitcast %"alloc::string::String"* %_8 to %"alloc::vec::Vec<u8>"*, !dbg !12513
  %31 = bitcast %"alloc::vec::Vec<u8>"* %30 to i8*, !dbg !12513
  %32 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !12513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !12513
  %33 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"*, !dbg !12514
  %34 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"* %33, i32 0, i32 1, !dbg !12514
  %35 = bitcast %"alloc::string::String"* %34 to i8*, !dbg !12514
  %36 = bitcast %"alloc::string::String"* %_8 to i8*, !dbg !12514
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !12514
  %37 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to i64*, !dbg !12514
  store i64 0, i64* %37, align 8, !dbg !12514
  br label %bb5, !dbg !12515

bb2:                                              ; preds = %bb1
  %38 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %_2 to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*, !dbg !12516
  %39 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %38, i32 0, i32 1, !dbg !12516
  %40 = bitcast %"core::str::error::Utf8Error"* %e to i8*, !dbg !12516
  %41 = bitcast %"core::str::error::Utf8Error"* %39 to i8*, !dbg !12516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false), !dbg !12516
  %42 = bitcast %"alloc::vec::Vec<u8>"* %_12 to i8*, !dbg !12517
  %43 = bitcast %"alloc::vec::Vec<u8>"* %vec to i8*, !dbg !12517
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false), !dbg !12517
  %44 = bitcast %"core::str::error::Utf8Error"* %_13 to i8*, !dbg !12518
  %45 = bitcast %"core::str::error::Utf8Error"* %e to i8*, !dbg !12518
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false), !dbg !12518
  %46 = bitcast %"alloc::string::FromUtf8Error"* %_11 to %"alloc::vec::Vec<u8>"*, !dbg !12519
  %47 = bitcast %"alloc::vec::Vec<u8>"* %46 to i8*, !dbg !12519
  %48 = bitcast %"alloc::vec::Vec<u8>"* %_12 to i8*, !dbg !12519
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !12519
  %49 = getelementptr inbounds %"alloc::string::FromUtf8Error", %"alloc::string::FromUtf8Error"* %_11, i32 0, i32 1, !dbg !12519
  %50 = bitcast %"core::str::error::Utf8Error"* %49 to i8*, !dbg !12519
  %51 = bitcast %"core::str::error::Utf8Error"* %_13 to i8*, !dbg !12519
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false), !dbg !12519
  %52 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"*, !dbg !12520
  %53 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"* %52, i32 0, i32 1, !dbg !12520
  %54 = bitcast %"alloc::string::FromUtf8Error"* %53 to i8*, !dbg !12520
  %55 = bitcast %"alloc::string::FromUtf8Error"* %_11 to i8*, !dbg !12520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 40, i1 false), !dbg !12520
  %56 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to i64*, !dbg !12520
  store i64 1, i64* %56, align 8, !dbg !12520
  br label %bb5, !dbg !12521

bb5:                                              ; preds = %bb4, %bb2
  ret void, !dbg !12522
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11finish_grow17hacbf9344612bd19eE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #3 !dbg !12523 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !12545, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !12546, metadata !DIExpression()), !dbg !12599
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !12547, metadata !DIExpression()), !dbg !12600
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !12548, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !12602, metadata !DIExpression()), !dbg !12630
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !12632, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12644, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !12673, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !12582, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !12584, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !12588, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !12665, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !12689, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !12700, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !12705, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !12716, metadata !DIExpression()), !dbg !12720
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h15361ed5ea8acb97E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !12631
  br label %bb1, !dbg !12631

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !12630
  %_45 = load i64, i64* %3, align 8, !dbg !12630, !range !3483, !noundef !23
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !12630

bb20:                                             ; preds = %bb1
  unreachable, !dbg !12630

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !12630
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !12630
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !12630
  %v.0 = load i64, i64* %6, align 8, !dbg !12630
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !12630
  %v.1 = load i64, i64* %7, align 8, !dbg !12630, !range !5753, !noundef !23
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !12630
  store i64 %v.0, i64* %8, align 8, !dbg !12630
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !12630
  store i64 %v.1, i64* %9, align 8, !dbg !12630
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !12624, metadata !DIExpression()), !dbg !12721
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !12721
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !12721
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !12721
  store i64 %v.0, i64* %12, align 8, !dbg !12721
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !12721
  store i64 %v.1, i64* %13, align 8, !dbg !12721
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !12721
  store i64 0, i64* %14, align 8, !dbg !12721
  br label %bb2, !dbg !12630

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !12630
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !12630
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !12630
  %e.0 = load i64, i64* %17, align 8, !dbg !12630
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !12630
  %e.1 = load i64, i64* %18, align 8, !dbg !12630, !range !1638, !noundef !23
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !12630
  store i64 %e.0, i64* %19, align 8, !dbg !12630
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !12630
  store i64 %e.1, i64* %20, align 8, !dbg !12630
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !12627, metadata !DIExpression()), !dbg !12722
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !12722
  store i64 %e.0, i64* %21, align 8, !dbg !12722
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !12722
  store i64 %e.1, i64* %22, align 8, !dbg !12722
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !12722
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !12722
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !12722
  %26 = load i64, i64* %25, align 8, !dbg !12722
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !12722
  %28 = load i64, i64* %27, align 8, !dbg !12722, !range !1638, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !12722
  store i64 %26, i64* %29, align 8, !dbg !12722
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !12722
  store i64 %28, i64* %30, align 8, !dbg !12722
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !12722
  store i64 1, i64* %31, align 8, !dbg !12722
  br label %bb2, !dbg !12630

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !12631
  %_9 = load i64, i64* %32, align 8, !dbg !12631, !range !3483, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !12631

bb4:                                              ; preds = %bb2
  unreachable, !dbg !12631

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !12631
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !12631
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !12631
  %val.0 = load i64, i64* %35, align 8, !dbg !12631
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !12631
  %val.1 = load i64, i64* %36, align 8, !dbg !12631, !range !5753, !noundef !23
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !12631
  store i64 %val.0, i64* %37, align 8, !dbg !12631
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !12631
  store i64 %val.1, i64* %38, align 8, !dbg !12631
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !12565, metadata !DIExpression()), !dbg !12723
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !12723
  store i64 %val.0, i64* %39, align 8, !dbg !12723
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12723
  store i64 %val.1, i64* %40, align 8, !dbg !12723
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12724
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !12724
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12671
  %43 = load i64, i64* %42, align 8, !dbg !12671, !range !7443, !noundef !23
  %44 = sub i64 %43, -9223372036854775807, !dbg !12671
  %45 = icmp eq i64 %44, 0, !dbg !12671
  %_55 = select i1 %45, i64 0, i64 1, !dbg !12671
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !12671

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !12730
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !12730
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !12730
  %residual.0 = load i64, i64* %48, align 8, !dbg !12730
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !12730
  %residual.1 = load i64, i64* %49, align 8, !dbg !12730, !range !1638, !noundef !23
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !12730
  store i64 %residual.0, i64* %50, align 8, !dbg !12730
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !12730
  store i64 %residual.1, i64* %51, align 8, !dbg !12730
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !12550, metadata !DIExpression()), !dbg !12731
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !12731
  store i64 %residual.0, i64* %52, align 8, !dbg !12731
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !12731
  store i64 %residual.1, i64* %53, align 8, !dbg !12731
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !12642
  %e.08 = load i64, i64* %54, align 8, !dbg !12642
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !12642
  %e.19 = load i64, i64* %55, align 8, !dbg !12642, !range !1638, !noundef !23
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !12642
  store i64 %e.08, i64* %56, align 8, !dbg !12642
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !12642
  store i64 %e.19, i64* %57, align 8, !dbg !12642
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !12638, metadata !DIExpression()), !dbg !12732
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !12732
  store i64 %e.08, i64* %58, align 8, !dbg !12732
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !12732
  store i64 %e.19, i64* %59, align 8, !dbg !12732
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !12733, metadata !DIExpression()), !dbg !12737
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !12737
  store i64 %e.08, i64* %60, align 8, !dbg !12737
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !12737
  store i64 %e.19, i64* %61, align 8, !dbg !12737
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !12732
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !12732
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !12732
  %65 = load i64, i64* %64, align 8, !dbg !12732
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !12732
  %67 = load i64, i64* %66, align 8, !dbg !12732, !range !1638, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !12732
  store i64 %65, i64* %68, align 8, !dbg !12732
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !12732
  store i64 %67, i64* %69, align 8, !dbg !12732
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !12732
  store i64 1, i64* %70, align 8, !dbg !12732
  br label %bb17, !dbg !12739

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !12741

bb23:                                             ; preds = %bb3
  unreachable, !dbg !12671

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12688
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !12688
  br label %bb6, !dbg !12671

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12671
  %e.012 = load i64, i64* %72, align 8, !dbg !12671
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12671
  %e.113 = load i64, i64* %73, align 8, !dbg !12671, !range !1638, !noundef !23
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !12671
  store i64 %e.012, i64* %74, align 8, !dbg !12671
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !12671
  store i64 %e.113, i64* %75, align 8, !dbg !12671
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !12668, metadata !DIExpression()), !dbg !12742
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !12742
  store i64 %e.012, i64* %76, align 8, !dbg !12742
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !12742
  store i64 %e.113, i64* %77, align 8, !dbg !12742
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !12742
  %79 = load i64, i64* %78, align 8, !dbg !12742
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !12742
  %81 = load i64, i64* %80, align 8, !dbg !12742, !range !1638, !noundef !23
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !12742
  store i64 %79, i64* %82, align 8, !dbg !12742
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12742
  store i64 %81, i64* %83, align 8, !dbg !12742
  br label %bb6, !dbg !12671

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12672
  %85 = load i64, i64* %84, align 8, !dbg !12672, !range !7443, !noundef !23
  %86 = sub i64 %85, -9223372036854775807, !dbg !12672
  %87 = icmp eq i64 %86, 0, !dbg !12672
  %_17 = select i1 %87, i64 0, i64 1, !dbg !12672
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !12672

bb8:                                              ; preds = %bb6
  unreachable, !dbg !12672

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !12743
  %89 = load i64, i64* %88, align 8, !dbg !12743, !range !1638, !noundef !23
  %90 = icmp eq i64 %89, 0, !dbg !12743
  %_22 = select i1 %90, i64 0, i64 1, !dbg !12743
  %91 = icmp eq i64 %_22, 1, !dbg !12743
  br i1 %91, label %bb11, label %bb10, !dbg !12743

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !12744
  %residual.015 = load i64, i64* %92, align 8, !dbg !12744
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12744
  %residual.116 = load i64, i64* %93, align 8, !dbg !12744, !range !1638, !noundef !23
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !12744
  store i64 %residual.015, i64* %94, align 8, !dbg !12744
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !12744
  store i64 %residual.116, i64* %95, align 8, !dbg !12744
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !12567, metadata !DIExpression()), !dbg !12745
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !12745
  store i64 %residual.015, i64* %96, align 8, !dbg !12745
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !12745
  store i64 %residual.116, i64* %97, align 8, !dbg !12745
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !12683
  %e.018 = load i64, i64* %98, align 8, !dbg !12683
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !12683
  %e.119 = load i64, i64* %99, align 8, !dbg !12683, !range !1638, !noundef !23
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !12683
  store i64 %e.018, i64* %100, align 8, !dbg !12683
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !12683
  store i64 %e.119, i64* %101, align 8, !dbg !12683
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !12679, metadata !DIExpression()), !dbg !12746
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2c88d357f9756a4aE"(i64 %e.018, i64 %e.119), !dbg !12746
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !12746
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !12746
  br label %bb25, !dbg !12746

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !12746
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !12746
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !12746
  store i64 %_61.0, i64* %105, align 8, !dbg !12746
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !12746
  store i64 %_61.1, i64* %106, align 8, !dbg !12746
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !12746
  store i64 1, i64* %107, align 8, !dbg !12746
  br label %bb17, !dbg !12747

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !12741

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12749
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !12749
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !12749
  %ptr = load i8*, i8** %110, align 8, !dbg !12749, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12749
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12586, metadata !DIExpression()), !dbg !12749
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12687
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !12687
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !12687
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !12687
  %115 = load i64, i64* %114, align 8, !dbg !12687
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !12687
  %117 = load i64, i64* %116, align 8, !dbg !12687, !range !5753, !noundef !23
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !12687
  store i64 %115, i64* %118, align 8, !dbg !12687
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !12687
  store i64 %117, i64* %119, align 8, !dbg !12687
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !12699
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !12697, metadata !DIExpression()), !dbg !12750
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !12750
  %121 = load i64, i64* %120, align 8, !dbg !12750, !range !5753, !noundef !23
  store i64 %121, i64* %self4, align 8, !dbg !12750
  %_74 = load i64, i64* %self4, align 8, !dbg !12704, !range !5753, !noundef !23
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !12704
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !12751, metadata !DIExpression()), !dbg !12758
  store i64 %_74, i64* %self3, align 8, !dbg !12758
  %_32 = load i64, i64* %self3, align 8, !dbg !12693
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !12715
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !12713, metadata !DIExpression()), !dbg !12760
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12760
  %123 = load i64, i64* %122, align 8, !dbg !12760, !range !5753, !noundef !23
  store i64 %123, i64* %self6, align 8, !dbg !12760
  %_80 = load i64, i64* %self6, align 8, !dbg !12720, !range !5753, !noundef !23
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !12720
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !12761, metadata !DIExpression()), !dbg !12768
  store i64 %_80, i64* %self5, align 8, !dbg !12768
  %_34 = load i64, i64* %self5, align 8, !dbg !12709
  %_31 = icmp eq i64 %_32, %_34, !dbg !12699
  call void @llvm.assume(i1 %_31), !dbg !12770
  br label %bb12, !dbg !12770

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !12771
  %_41.0 = load i64, i64* %124, align 8, !dbg !12771
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12771
  %_41.1 = load i64, i64* %125, align 8, !dbg !12771, !range !5753, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17ha2beffcab7803646E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !12772
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !12772
  br label %bb14, !dbg !12772

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !12773

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !12774
  %_42.0 = load i8*, i8** %127, align 8, !dbg !12774
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !12774
  %_42.1 = load i64, i64* %128, align 8, !dbg !12774
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !12775
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !12775
  %130 = load i64*, i64** %_43, align 8, !dbg !12774, !nonnull !23, !align !378, !noundef !23
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf2790cdcd6fed450E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !12774
  br label %bb16, !dbg !12774

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !12776
  %_38.0 = load i64, i64* %131, align 8, !dbg !12776
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !12776
  %_38.1 = load i64, i64* %132, align 8, !dbg !12776, !range !5753, !noundef !23
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !12777
  %_39.0 = load i64, i64* %133, align 8, !dbg !12777
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12777
  %_39.1 = load i64, i64* %134, align 8, !dbg !12777, !range !5753, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he40aebe96a1d2471E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !12778
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !12778
  br label %bb13, !dbg !12778

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !12773

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !12741
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2104520d324e94afE"() unnamed_addr #1 !dbg !12779 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !12783, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !12784, metadata !DIExpression()), !dbg !12786
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !12787
  store i64 0, i64* %1, align 8, !dbg !12787
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !12788
  %3 = load i64, i64* %2, align 8, !dbg !12788
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !12788
  %5 = load i64, i64* %4, align 8, !dbg !12788, !range !1638, !noundef !23
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !12788
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !12788
  ret { i64, i64 } %7, !dbg !12788
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h650506fa10c07391E"(i64* align 8 %_1) unnamed_addr #1 !dbg !12789 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_1.dbg.spill = alloca i64*, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = bitcast i64** %_1.dbg.spill to { i64, i64 }**
  %1 = load { i64, i64 }*, { i64, i64 }** %0, align 8, !nonnull !23, !align !378, !noundef !23
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !12793, metadata !DIExpression(DW_OP_deref)), !dbg !12795
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !12794, metadata !DIExpression()), !dbg !12796
  %_5 = bitcast i64* %_1 to { i64, i64 }*, !dbg !12797
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !12797
  %_4.0 = load i64, i64* %2, align 8, !dbg !12797
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !12797
  %_4.1 = load i64, i64* %3, align 8, !dbg !12797, !range !5753, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !12798
  store i64 %_4.0, i64* %4, align 8, !dbg !12798
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !12798
  store i64 %_4.1, i64* %5, align 8, !dbg !12798
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !12798
  %7 = load i64, i64* %6, align 8, !dbg !12798
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !12798
  %9 = load i64, i64* %8, align 8, !dbg !12798, !range !1638, !noundef !23
; call <T as core::convert::Into<U>>::into
  %10 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc8cc66ceb68590efE"(i64 %7, i64 %9), !dbg !12798
  %11 = extractvalue { i64, i64 } %10, 0, !dbg !12798
  %12 = extractvalue { i64, i64 } %10, 1, !dbg !12798
  br label %bb1, !dbg !12798

bb1:                                              ; preds = %start
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !12799
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1, !dbg !12799
  ret { i64, i64 } %14, !dbg !12799
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h2d89f1c61a65874cE(i64 %result.0, i64 %result.1) unnamed_addr #1 !dbg !12800 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !12804, metadata !DIExpression()), !dbg !12807
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc2d8e143c3032a97E"(i64 %result.0, i64 %result.1), !dbg !12808
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !12808
  br label %bb1, !dbg !12808

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !12808
  %4 = load i64, i64* %3, align 8, !dbg !12808, !range !7443, !noundef !23
  %5 = sub i64 %4, -9223372036854775807, !dbg !12808
  %6 = icmp eq i64 %5, 0, !dbg !12808
  %_6 = select i1 %6, i64 0, i64 1, !dbg !12808
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !12809

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !12808

bb2:                                              ; preds = %bb1
  ret void, !dbg !12810

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !12808
  %8 = load i64, i64* %7, align 8, !dbg !12808, !range !1638, !noundef !23
  %9 = icmp eq i64 %8, 0, !dbg !12808
  %_5 = select i1 %9, i64 0, i64 1, !dbg !12808
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !12809

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17h85718a377081c3e3E() #18, !dbg !12811
  unreachable, !dbg !12811

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !12812
  %layout.0 = load i64, i64* %10, align 8, !dbg !12812
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !12812
  %layout.1 = load i64, i64* %11, align 8, !dbg !12812, !range !5753, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12812
  store i64 %layout.0, i64* %12, align 8, !dbg !12812
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12812
  store i64 %layout.1, i64* %13, align 8, !dbg !12812
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12805, metadata !DIExpression()), !dbg !12813
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h58c56b8d3bfba88eE(i64 %layout.0, i64 %layout.1) #18, !dbg !12814
  unreachable, !dbg !12814
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hf725b3c1a732c9b8E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !12815 {
start:
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !12820, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !12819, metadata !DIExpression()), !dbg !12822
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17ha553475e71c2f92aE({ i64, i64 }* align 8 %e), !dbg !12823
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !12823
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !12823
  br label %bb1, !dbg !12823

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !12824
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !12824
  ret { i64, i64 } %8, !dbg !12824
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8c7f42ca41dd72deE"(i64 %capacity, i1 zeroext %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12825 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i8*, align 8, !rawptr !418
  %_37 = alloca i8, align 1
  %self = alloca i8*, align 8, !rawptr !418
  %_31 = alloca i8*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !12829, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.declare(metadata i8* %init, metadata !12830, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !12831, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !12836, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.declare(metadata i8** %self, metadata !12846, metadata !DIExpression()), !dbg !12850
  store i8 1, i8* %_37, align 1, !dbg !12852
  br i1 false, label %bb1, label %bb2, !dbg !12852

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !12852
  br label %bb3, !dbg !12852

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !12853
  %4 = zext i1 %_6 to i8, !dbg !12852
  store i8 %4, i8* %_4, align 1, !dbg !12852
  br label %bb3, !dbg !12852

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !12852, !range !298, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !12852
  br i1 %6, label %bb4, label %bb6, !dbg !12852

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5ae70b08ad2208bcE(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !12854

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !12855
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17heb300a1c8db8d5d4E"()
          to label %bb5 unwind label %cleanup, !dbg !12856

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !12857, !range !298, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !12857
  br i1 %10, label %bb25, label %bb24, !dbg !12857

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i8*, i64 } %8, { i8*, i64 }* %2, align 8, !dbg !12856
  br label %bb23, !dbg !12858

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !12859
  %17 = load i8*, i8** %16, align 8, !dbg !12859, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !12859
  %19 = load i64, i64* %18, align 8, !dbg !12859
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !12859
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !12859
  ret { i8*, i64 } %21, !dbg !12859

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !12854
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !12854
  %23 = load i64, i64* %22, align 8, !dbg !12854, !range !1638, !noundef !23
  %24 = icmp eq i64 %23, 0, !dbg !12854
  %_12 = select i1 %24, i64 1, i64 0, !dbg !12854
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !12860

bb9:                                              ; preds = %bb7
  unreachable, !dbg !12854

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !12861
  %layout.0 = load i64, i64* %25, align 8, !dbg !12861
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !12861
  %layout.1 = load i64, i64* %26, align 8, !dbg !12861, !range !5753, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12861
  store i64 %layout.0, i64* %27, align 8, !dbg !12861
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12861
  store i64 %layout.1, i64* %28, align 8, !dbg !12861
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12834, metadata !DIExpression()), !dbg !12862
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !12863
  store i64 %layout.0, i64* %29, align 8, !dbg !12863
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !12863
  store i64 %layout.1, i64* %30, align 8, !dbg !12863
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !12832, metadata !DIExpression()), !dbg !12864
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !12865
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !12865
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !12869
  %33 = load i64, i64* %32, align 8, !dbg !12869, !range !7443, !noundef !23
  %34 = sub i64 %33, -9223372036854775807, !dbg !12869
  %35 = icmp eq i64 %34, 0, !dbg !12869
  %_18 = select i1 %35, i64 0, i64 1, !dbg !12869
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !12870

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17h85718a377081c3e3E() #18
          to label %unreachable unwind label %cleanup, !dbg !12871

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !12869

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !12872, !range !298, !noundef !23
  %37 = trunc i8 %36 to i1, !dbg !12872
  %_21 = zext i1 %37 to i64, !dbg !12872
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !12873

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17h85718a377081c3e3E() #18
          to label %unreachable unwind label %cleanup, !dbg !12874

bb15:                                             ; preds = %bb13
  unreachable, !dbg !12872

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17ha2beffcab7803646E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !12875

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h5785f9c16d7fe8f4E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !12876

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !12876
  br label %bb19, !dbg !12877

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !12878
  %41 = load {}*, {}** %40, align 8, !dbg !12878
  %42 = icmp eq {}* %41, null, !dbg !12878
  %_27 = select i1 %42, i64 1, i64 0, !dbg !12878
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !12879

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !12875
  br label %bb19, !dbg !12880

bb21:                                             ; preds = %bb19
  unreachable, !dbg !12878

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !12881
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !12881, !nonnull !23, !noundef !23
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !12881
  %ptr.1 = load i64, i64* %44, align 8, !dbg !12881, !rawptr !418
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !12881
  store i8* %ptr.0, i8** %45, align 8, !dbg !12881
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !12881
  store i64 %ptr.1, i64* %46, align 8, !dbg !12881
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !12840, metadata !DIExpression()), !dbg !12882
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !12883
  store i8* %ptr.0, i8** %47, align 8, !dbg !12883
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !12883
  store i64 %ptr.1, i64* %48, align 8, !dbg !12883
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !12838, metadata !DIExpression()), !dbg !12884
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !12851
  store i8* %ptr.0, i8** %49, align 8, !dbg !12851
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !12851
  store i64 %ptr.1, i64* %50, align 8, !dbg !12851
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !12885, metadata !DIExpression()), !dbg !12889
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !12889
  store i8* %ptr.0, i8** %51, align 8, !dbg !12889
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !12889
  store i64 %ptr.1, i64* %52, align 8, !dbg !12889
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !12890, metadata !DIExpression()), !dbg !12894
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !12894, !rawptr !418
  %ptr = bitcast [0 x i8]* %_41.0 to i8*, !dbg !12889, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !12889
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !12896, metadata !DIExpression()), !dbg !12900
  store i8* %ptr, i8** %self, align 8, !dbg !12900
  %_45 = load i8*, i8** %self, align 8, !dbg !12850, !rawptr !418
  store i8* %_45, i8** %ptr.dbg.spill5, align 8, !dbg !12850
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !12902, metadata !DIExpression()), !dbg !12908
  store i8* %_45, i8** %ptr.dbg.spill6, align 8, !dbg !12908
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !12910, metadata !DIExpression()), !dbg !12914
  store i8* %_45, i8** %_46, align 8, !dbg !12914
  %53 = load i8*, i8** %_46, align 8, !dbg !12908, !nonnull !23, !noundef !23
  store i8* %53, i8** %_31, align 8, !dbg !12908
  %54 = bitcast { i8*, i64 }* %2 to i8**, !dbg !12916
  %55 = load i8*, i8** %_31, align 8, !dbg !12916, !nonnull !23, !noundef !23
  store i8* %55, i8** %54, align 8, !dbg !12916
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !12916
  store i64 %capacity, i64* %56, align 8, !dbg !12916
  %57 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !12916
  br label %bb23, !dbg !12858

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h58c56b8d3bfba88eE(i64 %layout.0, i64 %layout.1) #18
          to label %unreachable unwind label %cleanup, !dbg !12917

bb24:                                             ; preds = %bb25, %bb26
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !12918
  %59 = load i8*, i8** %58, align 8, !dbg !12918
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !12918
  %61 = load i32, i32* %60, align 8, !dbg !12918
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !12918
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !12918
  resume { i8*, i32 } %63, !dbg !12918

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !12857
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0ca0127d33db4ee5E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !12919 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12923, metadata !DIExpression()), !dbg !12926
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12924, metadata !DIExpression()), !dbg !12927
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !12925, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !12929, metadata !DIExpression()), !dbg !12934
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !12935
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !12936, metadata !DIExpression()), !dbg !12939
  br i1 false, label %bb2, label %bb3, !dbg !12939

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !12939
  br label %bb1, !dbg !12939

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !12939
  %1 = load i64, i64* %0, align 8, !dbg !12939
  store i64 %1, i64* %self1, align 8, !dbg !12939
  br label %bb1, !dbg !12939

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !12940
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !12933, metadata !DIExpression()), !dbg !12934
  %_10 = load i64, i64* %self1, align 8, !dbg !12934
  %_5 = sub i64 %_10, %len, !dbg !12934
  %2 = icmp ugt i64 %additional, %_5, !dbg !12941
  ret i1 %2, !dbg !12942
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h31d861587090897aE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !12943 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !12947, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12951, metadata !DIExpression()), !dbg !12960
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12962, metadata !DIExpression()), !dbg !12966
  br i1 false, label %bb1, label %bb2, !dbg !12976

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !12976
  br label %bb3, !dbg !12976

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12977
  %_5 = load i64, i64* %1, align 8, !dbg !12977
  %_4 = icmp eq i64 %_5, 0, !dbg !12977
  %2 = zext i1 %_4 to i8, !dbg !12976
  store i8 %2, i8* %_2, align 1, !dbg !12976
  br label %bb3, !dbg !12976

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !12976, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !12976
  br i1 %4, label %bb4, label %bb5, !dbg !12976

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12978
  %_8 = load i64, i64* %5, align 8, !dbg !12978
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17ha363f8135b733889E(i64 %_8), !dbg !12961
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !12961
  br label %bb6, !dbg !12961

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !12979
  store i64 0, i64* %7, align 8, !dbg !12979
  br label %bb8, !dbg !12980

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !12981

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12960
  %9 = load i64, i64* %8, align 8, !dbg !12960, !range !1638, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !12960
  %_15 = select i1 %10, i64 1, i64 0, !dbg !12960
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !12960

bb10:                                             ; preds = %bb6
  unreachable, !dbg !12960

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12960
  %t.0 = load i64, i64* %11, align 8, !dbg !12960
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12960
  %t.1 = load i64, i64* %12, align 8, !dbg !12960, !range !5753, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !12960
  store i64 %t.0, i64* %13, align 8, !dbg !12960
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !12960
  store i64 %t.1, i64* %14, align 8, !dbg !12960
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !12957, metadata !DIExpression()), !dbg !12982
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12982
  store i64 %t.0, i64* %15, align 8, !dbg !12982
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12982
  store i64 %t.1, i64* %16, align 8, !dbg !12982
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12948, metadata !DIExpression()), !dbg !12983
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !12975
  %self2 = load i64*, i64** %17, align 8, !dbg !12975, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !12975
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !12972, metadata !DIExpression()), !dbg !12984
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !12984
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !12985, metadata !DIExpression()), !dbg !12991
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !12991
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !12993, metadata !DIExpression()), !dbg !12997
  %_22 = bitcast i64* %self2 to i8**, !dbg !12997, !rawptr !418
  %ptr = bitcast i8** %_22 to i8*, !dbg !12991, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12991
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12999, metadata !DIExpression()), !dbg !13003
  store i8* %ptr, i8** %pointer, align 8, !dbg !13003
  %_26 = load i8*, i8** %pointer, align 8, !dbg !12966, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !12966
  %18 = load i8*, i8** %_11, align 8, !dbg !12975, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h178be142c24bc97eE"(i8* %18), !dbg !12975
  br label %bb7, !dbg !12975

bb9:                                              ; preds = %bb6
  unreachable, !dbg !13005

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !13009
  store i8* %_10, i8** %19, align 8, !dbg !13009
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !13009
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !13009
  store i64 %t.0, i64* %21, align 8, !dbg !13009
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !13009
  store i64 %t.1, i64* %22, align 8, !dbg !13009
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13010
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !13010
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !13010
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !13010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !13010
  br label %bb8, !dbg !12980
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h711cdc596ee9e83bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !13011 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !13015, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !13019, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !13028, metadata !DIExpression()), !dbg !13032
  br i1 false, label %bb1, label %bb2, !dbg !13042

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !13042
  br label %bb3, !dbg !13042

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !13043
  %_5 = load i64, i64* %1, align 8, !dbg !13043
  %_4 = icmp eq i64 %_5, 0, !dbg !13043
  %2 = zext i1 %_4 to i8, !dbg !13042
  store i8 %2, i8* %_2, align 1, !dbg !13042
  br label %bb3, !dbg !13042

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !13042, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !13042
  br i1 %4, label %bb4, label %bb5, !dbg !13042

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !13044
  %_8 = load i64, i64* %5, align 8, !dbg !13044
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5dd466e01263a857E(i64 %_8), !dbg !13027
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !13027
  br label %bb6, !dbg !13027

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !13045
  store i64 0, i64* %7, align 8, !dbg !13045
  br label %bb8, !dbg !13046

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !13047

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !13026
  %9 = load i64, i64* %8, align 8, !dbg !13026, !range !1638, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !13026
  %_15 = select i1 %10, i64 1, i64 0, !dbg !13026
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !13026

bb10:                                             ; preds = %bb6
  unreachable, !dbg !13026

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !13026
  %t.0 = load i64, i64* %11, align 8, !dbg !13026
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !13026
  %t.1 = load i64, i64* %12, align 8, !dbg !13026, !range !5753, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !13026
  store i64 %t.0, i64* %13, align 8, !dbg !13026
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !13026
  store i64 %t.1, i64* %14, align 8, !dbg !13026
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !13023, metadata !DIExpression()), !dbg !13048
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !13048
  store i64 %t.0, i64* %15, align 8, !dbg !13048
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !13048
  store i64 %t.1, i64* %16, align 8, !dbg !13048
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13016, metadata !DIExpression()), !dbg !13049
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !13041
  %self2 = load i64*, i64** %17, align 8, !dbg !13041, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !13041
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !13038, metadata !DIExpression()), !dbg !13050
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !13050
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !13051, metadata !DIExpression()), !dbg !13057
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !13057
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !13059, metadata !DIExpression()), !dbg !13063
  %_22 = bitcast i64* %self2 to { {}*, [3 x i64]* }*, !dbg !13063, !rawptr !418
  %ptr = bitcast { {}*, [3 x i64]* }* %_22 to i8*, !dbg !13057, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !13057
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13065, metadata !DIExpression()), !dbg !13069
  store i8* %ptr, i8** %pointer, align 8, !dbg !13069
  %_26 = load i8*, i8** %pointer, align 8, !dbg !13032, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !13032
  %18 = load i8*, i8** %_11, align 8, !dbg !13041, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h178be142c24bc97eE"(i8* %18), !dbg !13041
  br label %bb7, !dbg !13041

bb9:                                              ; preds = %bb6
  unreachable, !dbg !13071

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !13075
  store i8* %_10, i8** %19, align 8, !dbg !13075
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !13075
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !13075
  store i64 %t.0, i64* %21, align 8, !dbg !13075
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !13075
  store i64 %t.1, i64* %22, align 8, !dbg !13075
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13076
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !13076
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !13076
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !13076
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !13076
  br label %bb8, !dbg !13046
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9e7730fcb8eb0d41E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !13077 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !13081, metadata !DIExpression()), !dbg !13084
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !13085, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !13094, metadata !DIExpression()), !dbg !13098
  br i1 false, label %bb1, label %bb2, !dbg !13108

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !13108
  br label %bb3, !dbg !13108

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !13109
  %_5 = load i64, i64* %1, align 8, !dbg !13109
  %_4 = icmp eq i64 %_5, 0, !dbg !13109
  %2 = zext i1 %_4 to i8, !dbg !13108
  store i8 %2, i8* %_2, align 1, !dbg !13108
  br label %bb3, !dbg !13108

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !13108, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !13108
  br i1 %4, label %bb4, label %bb5, !dbg !13108

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !13110
  %_8 = load i64, i64* %5, align 8, !dbg !13110
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hb5571c4ff1ccabe7E(i64 %_8), !dbg !13093
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !13093
  br label %bb6, !dbg !13093

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !13111
  store i64 0, i64* %7, align 8, !dbg !13111
  br label %bb8, !dbg !13112

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !13113

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !13092
  %9 = load i64, i64* %8, align 8, !dbg !13092, !range !1638, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !13092
  %_15 = select i1 %10, i64 1, i64 0, !dbg !13092
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !13092

bb10:                                             ; preds = %bb6
  unreachable, !dbg !13092

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !13092
  %t.0 = load i64, i64* %11, align 8, !dbg !13092
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !13092
  %t.1 = load i64, i64* %12, align 8, !dbg !13092, !range !5753, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !13092
  store i64 %t.0, i64* %13, align 8, !dbg !13092
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !13092
  store i64 %t.1, i64* %14, align 8, !dbg !13092
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !13089, metadata !DIExpression()), !dbg !13114
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !13114
  store i64 %t.0, i64* %15, align 8, !dbg !13114
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !13114
  store i64 %t.1, i64* %16, align 8, !dbg !13114
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13082, metadata !DIExpression()), !dbg !13115
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !13107
  %self2 = load i64*, i64** %17, align 8, !dbg !13107, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !13107
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !13104, metadata !DIExpression()), !dbg !13116
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !13116
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !13117, metadata !DIExpression()), !dbg !13123
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !13123
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !13125, metadata !DIExpression()), !dbg !13129
  %_22 = bitcast i64* %self2 to { i8*, i64 }*, !dbg !13129, !rawptr !418
  %ptr = bitcast { i8*, i64 }* %_22 to i8*, !dbg !13123, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !13123
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13131, metadata !DIExpression()), !dbg !13135
  store i8* %ptr, i8** %pointer, align 8, !dbg !13135
  %_26 = load i8*, i8** %pointer, align 8, !dbg !13098, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !13098
  %18 = load i8*, i8** %_11, align 8, !dbg !13107, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h178be142c24bc97eE"(i8* %18), !dbg !13107
  br label %bb7, !dbg !13107

bb9:                                              ; preds = %bb6
  unreachable, !dbg !13137

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !13141
  store i8* %_10, i8** %19, align 8, !dbg !13141
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !13141
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !13141
  store i64 %t.0, i64* %21, align 8, !dbg !13141
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !13141
  store i64 %t.1, i64* %22, align 8, !dbg !13141
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13142
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !13142
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !13142
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !13142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !13142
  br label %bb8, !dbg !13112
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17ha40ac0576ac9daf1E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !13143 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8, !rawptr !418
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13147, metadata !DIExpression()), !dbg !13150
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !13151, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !13160, metadata !DIExpression()), !dbg !13164
  br i1 false, label %bb1, label %bb2, !dbg !13173

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !13173
  br label %bb3, !dbg !13173

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !13174
  %_5 = load i64, i64* %1, align 8, !dbg !13174
  %_4 = icmp eq i64 %_5, 0, !dbg !13174
  %2 = zext i1 %_4 to i8, !dbg !13173
  store i8 %2, i8* %_2, align 1, !dbg !13173
  br label %bb3, !dbg !13173

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !13173, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !13173
  br i1 %4, label %bb4, label %bb5, !dbg !13173

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !13175
  %_8 = load i64, i64* %5, align 8, !dbg !13175
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5ae70b08ad2208bcE(i64 %_8), !dbg !13159
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !13159
  br label %bb6, !dbg !13159

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !13176
  store i64 0, i64* %7, align 8, !dbg !13176
  br label %bb8, !dbg !13177

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !13178

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !13158
  %9 = load i64, i64* %8, align 8, !dbg !13158, !range !1638, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !13158
  %_15 = select i1 %10, i64 1, i64 0, !dbg !13158
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !13158

bb10:                                             ; preds = %bb6
  unreachable, !dbg !13158

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !13158
  %t.0 = load i64, i64* %11, align 8, !dbg !13158
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !13158
  %t.1 = load i64, i64* %12, align 8, !dbg !13158, !range !5753, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !13158
  store i64 %t.0, i64* %13, align 8, !dbg !13158
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !13158
  store i64 %t.1, i64* %14, align 8, !dbg !13158
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !13155, metadata !DIExpression()), !dbg !13179
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !13179
  store i64 %t.0, i64* %15, align 8, !dbg !13179
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !13179
  store i64 %t.1, i64* %16, align 8, !dbg !13179
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13148, metadata !DIExpression()), !dbg !13180
  %17 = bitcast { i8*, i64 }* %self to i8**, !dbg !13172
  %self2 = load i8*, i8** %17, align 8, !dbg !13172, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !13172
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !13170, metadata !DIExpression()), !dbg !13181
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !13181
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13182, metadata !DIExpression()), !dbg !13188
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !13188
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13190, metadata !DIExpression()), !dbg !13194
  store i8* %self2, i8** %ptr.dbg.spill, align 8, !dbg !13188
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13196, metadata !DIExpression()), !dbg !13200
  store i8* %self2, i8** %pointer, align 8, !dbg !13200
  %_26 = load i8*, i8** %pointer, align 8, !dbg !13164, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !13164
  %18 = load i8*, i8** %_11, align 8, !dbg !13172, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h178be142c24bc97eE"(i8* %18), !dbg !13172
  br label %bb7, !dbg !13172

bb9:                                              ; preds = %bb6
  unreachable, !dbg !13202

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !13206
  store i8* %_10, i8** %19, align 8, !dbg !13206
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !13206
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !13206
  store i64 %t.0, i64* %21, align 8, !dbg !13206
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !13206
  store i64 %t.1, i64* %22, align 8, !dbg !13206
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13207
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !13207
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !13207
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !13207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !13207
  br label %bb8, !dbg !13177
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h942ba71c84d3c96cE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !13208 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill27 = alloca { i8*, i64 }, align 8
  %e.dbg.spill26 = alloca { i64, i64 }, align 8
  %residual.dbg.spill23 = alloca { i64, i64 }, align 8
  %v.dbg.spill20 = alloca { i8*, i64 }, align 8
  %e.dbg.spill19 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill16 = alloca i64, align 8
  %other.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill12 = alloca i64, align 8
  %v2.dbg.spill11 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill10 = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_69 = alloca { i64, i64 }, align 8
  %_57 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13213, metadata !DIExpression()), !dbg !13234
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13214, metadata !DIExpression()), !dbg !13235
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !13215, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !13237, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !13279, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !13285, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !13290, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !13302, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !13330, metadata !DIExpression()), !dbg !13340
  br i1 false, label %bb1, label %bb3, !dbg !13342

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !13343
  store i64 0, i64* %1, align 8, !dbg !13343
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !13343
  %3 = load i64, i64* %2, align 8, !dbg !13343
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !13343
  %5 = load i64, i64* %4, align 8, !dbg !13343, !range !1638, !noundef !23
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc8cc66ceb68590efE"(i64 %3, i64 %5), !dbg !13343
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !13343
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !13343
  br label %bb2, !dbg !13343

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h5b858ae8d87d18f0E"(i64 %len, i64 %additional), !dbg !13278
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !13278
  br label %bb4, !dbg !13278

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !13344
  store i64 0, i64* %8, align 8, !dbg !13344
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !13289
  %_42 = load i64, i64* %9, align 8, !dbg !13289, !range !3483, !noundef !23
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !13289

bb20:                                             ; preds = %bb4
  unreachable, !dbg !13289

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !13289
  %_45.0 = load i64, i64* %10, align 8, !dbg !13289
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !13289
  %_45.1 = load i64, i64* %11, align 8, !dbg !13289, !range !1638, !noundef !23
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !13289
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !13289
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !13289
  store i64 %_45.0, i64* %14, align 8, !dbg !13289
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !13289
  store i64 %_45.1, i64* %15, align 8, !dbg !13289
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !13289
  store i64 1, i64* %16, align 8, !dbg !13289
  br label %bb22, !dbg !13289

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !13289
  %v = load i64, i64* %17, align 8, !dbg !13289
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !13289
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !13286, metadata !DIExpression()), !dbg !13345
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !13345
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !13345
  store i64 %v, i64* %19, align 8, !dbg !13345
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !13345
  store i64 0, i64* %20, align 8, !dbg !13345
  br label %bb22, !dbg !13289

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !13277
  %_46 = load i64, i64* %21, align 8, !dbg !13277, !range !3483, !noundef !23
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !13277

bb24:                                             ; preds = %bb22
  unreachable, !dbg !13277

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !13277
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !13277
  %v5 = load i64, i64* %23, align 8, !dbg !13277
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !13277
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !13271, metadata !DIExpression()), !dbg !13346
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !13346
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !13346
  store i64 %v5, i64* %25, align 8, !dbg !13346
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !13346
  store i64 0, i64* %26, align 8, !dbg !13346
  br label %bb5, !dbg !13277

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !13277
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !13277
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !13277
  %e.0 = load i64, i64* %29, align 8, !dbg !13277
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !13277
  %e.1 = load i64, i64* %30, align 8, !dbg !13277, !range !1638, !noundef !23
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !13277
  store i64 %e.0, i64* %31, align 8, !dbg !13277
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !13277
  store i64 %e.1, i64* %32, align 8, !dbg !13277
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !13274, metadata !DIExpression()), !dbg !13347
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !13347
  store i64 %e.0, i64* %33, align 8, !dbg !13347
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !13347
  store i64 %e.1, i64* %34, align 8, !dbg !13347
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !13347
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !13347
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !13347
  %38 = load i64, i64* %37, align 8, !dbg !13347
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !13347
  %40 = load i64, i64* %39, align 8, !dbg !13347, !range !1638, !noundef !23
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !13347
  store i64 %38, i64* %41, align 8, !dbg !13347
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !13347
  store i64 %40, i64* %42, align 8, !dbg !13347
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !13347
  store i64 1, i64* %43, align 8, !dbg !13347
  br label %bb5, !dbg !13277

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !13278
  %_14 = load i64, i64* %44, align 8, !dbg !13278, !range !3483, !noundef !23
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !13278

bb7:                                              ; preds = %bb5
  unreachable, !dbg !13278

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !13278
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !13278
  %val = load i64, i64* %46, align 8, !dbg !13278
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !13278
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !13220, metadata !DIExpression()), !dbg !13348
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !13348
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !13216, metadata !DIExpression()), !dbg !13349
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !13350
  %_20 = load i64, i64* %47, align 8, !dbg !13350
  %v1 = mul i64 %_20, 2, !dbg !13350
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !13350
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !13351, metadata !DIExpression()), !dbg !13356
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !13358
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !13355, metadata !DIExpression()), !dbg !13356
  store i64 %v1, i64* %self.dbg.spill10, align 8, !dbg !13356
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill10, metadata !13359, metadata !DIExpression()), !dbg !13367
  store i64 %val, i64* %other.dbg.spill, align 8, !dbg !13356
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !13364, metadata !DIExpression()), !dbg !13367
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h5c898ecc66be43b9E(i64 %v1, i64 %val), !dbg !13367
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !13367
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !13222, metadata !DIExpression()), !dbg !13369
  br label %bb26, !dbg !13367

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !13370
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !13370
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !13370
  %residual.0 = load i64, i64* %50, align 8, !dbg !13370
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !13370
  %residual.1 = load i64, i64* %51, align 8, !dbg !13370, !range !1638, !noundef !23
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !13370
  store i64 %residual.0, i64* %52, align 8, !dbg !13370
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !13370
  store i64 %residual.1, i64* %53, align 8, !dbg !13370
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !13218, metadata !DIExpression()), !dbg !13371
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !13371
  store i64 %residual.0, i64* %54, align 8, !dbg !13371
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !13371
  store i64 %residual.1, i64* %55, align 8, !dbg !13371
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !13300
  %e.07 = load i64, i64* %56, align 8, !dbg !13300
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !13300
  %e.18 = load i64, i64* %57, align 8, !dbg !13300, !range !1638, !noundef !23
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !13300
  store i64 %e.07, i64* %58, align 8, !dbg !13300
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !13300
  store i64 %e.18, i64* %59, align 8, !dbg !13300
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !13296, metadata !DIExpression()), !dbg !13372
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !13372
  store i64 %e.07, i64* %60, align 8, !dbg !13372
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !13372
  store i64 %e.18, i64* %61, align 8, !dbg !13372
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !13373, metadata !DIExpression()), !dbg !13377
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_57, i32 0, i32 0, !dbg !13377
  store i64 %e.07, i64* %62, align 8, !dbg !13377
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_57, i32 0, i32 1, !dbg !13377
  store i64 %e.18, i64* %63, align 8, !dbg !13377
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_57, i32 0, i32 0, !dbg !13372
  %65 = load i64, i64* %64, align 8, !dbg !13372
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_57, i32 0, i32 1, !dbg !13372
  %67 = load i64, i64* %66, align 8, !dbg !13372, !range !1638, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13372
  store i64 %65, i64* %68, align 8, !dbg !13372
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13372
  store i64 %67, i64* %69, align 8, !dbg !13372
  br label %bb17, !dbg !13379

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !13379

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill11, align 8, !dbg !13381
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill11, metadata !13382, metadata !DIExpression()), !dbg !13387
  store i64 8, i64* %v1.dbg.spill12, align 8, !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill12, metadata !13386, metadata !DIExpression()), !dbg !13387
  store i64 8, i64* %self.dbg.spill13, align 8, !dbg !13387
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill13, metadata !13389, metadata !DIExpression()), !dbg !13394
  store i64 %cap, i64* %other.dbg.spill14, align 8, !dbg !13387
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill14, metadata !13393, metadata !DIExpression()), !dbg !13394
; call core::cmp::max_by
  %cap15 = call i64 @_ZN4core3cmp6max_by17h5c898ecc66be43b9E(i64 8, i64 %cap), !dbg !13394
  store i64 %cap15, i64* %cap.dbg.spill16, align 8, !dbg !13394
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill16, metadata !13224, metadata !DIExpression()), !dbg !13396
  br label %bb27, !dbg !13394

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5ae70b08ad2208bcE(i64 %cap15), !dbg !13397
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !13397
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !13397
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !13397
  store i64 %new_layout.0, i64* %71, align 8, !dbg !13397
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !13397
  store i64 %new_layout.1, i64* %72, align 8, !dbg !13397
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !13226, metadata !DIExpression()), !dbg !13398
  br label %bb9, !dbg !13397

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17ha40ac0576ac9daf1E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i8*, i64 }* align 8 %self), !dbg !13399
  br label %bb10, !dbg !13399

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !13400
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17hacbf9344612bd19eE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !13329
  br label %bb11, !dbg !13329

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !13328
  %_65 = load i64, i64* %73, align 8, !dbg !13328, !range !3483, !noundef !23
  switch i64 %_65, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !13328

bb29:                                             ; preds = %bb11
  unreachable, !dbg !13328

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !13328
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !13328
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !13328
  %v.0 = load i8*, i8** %76, align 8, !dbg !13328, !nonnull !23, !noundef !23
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !13328
  %v.1 = load i64, i64* %77, align 8, !dbg !13328
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill20, i32 0, i32 0, !dbg !13328
  store i8* %v.0, i8** %78, align 8, !dbg !13328
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill20, i32 0, i32 1, !dbg !13328
  store i64 %v.1, i64* %79, align 8, !dbg !13328
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill20, metadata !13322, metadata !DIExpression()), !dbg !13401
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !13401
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !13401
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !13401
  store i8* %v.0, i8** %82, align 8, !dbg !13401
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !13401
  store i64 %v.1, i64* %83, align 8, !dbg !13401
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !13401
  store i64 0, i64* %84, align 8, !dbg !13401
  br label %bb12, !dbg !13328

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !13328
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !13328
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !13328
  %e.017 = load i64, i64* %87, align 8, !dbg !13328
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !13328
  %e.118 = load i64, i64* %88, align 8, !dbg !13328, !range !1638, !noundef !23
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill19, i32 0, i32 0, !dbg !13328
  store i64 %e.017, i64* %89, align 8, !dbg !13328
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill19, i32 0, i32 1, !dbg !13328
  store i64 %e.118, i64* %90, align 8, !dbg !13328
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill19, metadata !13325, metadata !DIExpression()), !dbg !13402
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_69, i32 0, i32 0, !dbg !13402
  store i64 %e.017, i64* %91, align 8, !dbg !13402
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_69, i32 0, i32 1, !dbg !13402
  store i64 %e.118, i64* %92, align 8, !dbg !13402
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !13402
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !13402
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_69, i32 0, i32 0, !dbg !13402
  %96 = load i64, i64* %95, align 8, !dbg !13402
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_69, i32 0, i32 1, !dbg !13402
  %98 = load i64, i64* %97, align 8, !dbg !13402, !range !1638, !noundef !23
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !13402
  store i64 %96, i64* %99, align 8, !dbg !13402
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !13402
  store i64 %98, i64* %100, align 8, !dbg !13402
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !13402
  store i64 1, i64* %101, align 8, !dbg !13402
  br label %bb12, !dbg !13328

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !13329
  %_34 = load i64, i64* %102, align 8, !dbg !13329, !range !3483, !noundef !23
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !13329

bb14:                                             ; preds = %bb12
  unreachable, !dbg !13329

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !13329
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !13329
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !13329
  %val.0 = load i8*, i8** %105, align 8, !dbg !13329, !nonnull !23, !noundef !23
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !13329
  %val.1 = load i64, i64* %106, align 8, !dbg !13329
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill27, i32 0, i32 0, !dbg !13329
  store i8* %val.0, i8** %107, align 8, !dbg !13329
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill27, i32 0, i32 1, !dbg !13329
  store i64 %val.1, i64* %108, align 8, !dbg !13329
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill27, metadata !13232, metadata !DIExpression()), !dbg !13403
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !13403
  store i8* %val.0, i8** %109, align 8, !dbg !13403
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !13403
  store i64 %val.1, i64* %110, align 8, !dbg !13403
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !13228, metadata !DIExpression()), !dbg !13404
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h59fb0925936be92bE"({ i8*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap15), !dbg !13405
  br label %bb16, !dbg !13405

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !13406
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !13406
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !13406
  %residual.021 = load i64, i64* %113, align 8, !dbg !13406
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !13406
  %residual.122 = load i64, i64* %114, align 8, !dbg !13406, !range !1638, !noundef !23
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill23, i32 0, i32 0, !dbg !13406
  store i64 %residual.021, i64* %115, align 8, !dbg !13406
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill23, i32 0, i32 1, !dbg !13406
  store i64 %residual.122, i64* %116, align 8, !dbg !13406
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill23, metadata !13230, metadata !DIExpression()), !dbg !13407
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !13407
  store i64 %residual.021, i64* %117, align 8, !dbg !13407
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !13407
  store i64 %residual.122, i64* %118, align 8, !dbg !13407
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !13340
  %e.024 = load i64, i64* %119, align 8, !dbg !13340
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !13340
  %e.125 = load i64, i64* %120, align 8, !dbg !13340, !range !1638, !noundef !23
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill26, i32 0, i32 0, !dbg !13340
  store i64 %e.024, i64* %121, align 8, !dbg !13340
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill26, i32 0, i32 1, !dbg !13340
  store i64 %e.125, i64* %122, align 8, !dbg !13340
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill26, metadata !13336, metadata !DIExpression()), !dbg !13408
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2c88d357f9756a4aE"(i64 %e.024, i64 %e.125), !dbg !13408
  %_72.0 = extractvalue { i64, i64 } %123, 0, !dbg !13408
  %_72.1 = extractvalue { i64, i64 } %123, 1, !dbg !13408
  br label %bb31, !dbg !13408

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13408
  store i64 %_72.0, i64* %124, align 8, !dbg !13408
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13408
  store i64 %_72.1, i64* %125, align 8, !dbg !13408
  br label %bb17, !dbg !13409

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13411
  %127 = load i64, i64* %126, align 8, !dbg !13411
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13411
  %129 = load i64, i64* %128, align 8, !dbg !13411, !range !7443, !noundef !23
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !13411
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !13411
  ret { i64, i64 } %131, !dbg !13411

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13412
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !13412
  br label %bb18, !dbg !13411

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13413
  store i64 %_5.0, i64* %133, align 8, !dbg !13413
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13413
  store i64 %_5.1, i64* %134, align 8, !dbg !13413
  br label %bb18, !dbg !13379
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h59fb0925936be92bE"({ i8*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #0 !dbg !13414 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_17 = alloca i8*, align 8, !rawptr !418
  %self1 = alloca i8*, align 8, !rawptr !418
  %_4 = alloca i8*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13418, metadata !DIExpression()), !dbg !13421
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !13419, metadata !DIExpression()), !dbg !13422
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !13420, metadata !DIExpression()), !dbg !13423
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !13424, metadata !DIExpression()), !dbg !13428
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !13429
  store i8* %ptr.0, i8** %2, align 8, !dbg !13429
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !13429
  store i64 %ptr.1, i64* %3, align 8, !dbg !13429
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !13430, metadata !DIExpression()), !dbg !13434
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !13434
  store i8* %ptr.0, i8** %4, align 8, !dbg !13434
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !13434
  store i64 %ptr.1, i64* %5, align 8, !dbg !13434
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !13435, metadata !DIExpression()), !dbg !13439
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !13439, !rawptr !418
  %ptr = bitcast [0 x i8]* %_12.0 to i8*, !dbg !13434, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !13434
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !13441, metadata !DIExpression()), !dbg !13445
  store i8* %ptr, i8** %self1, align 8, !dbg !13445
  %_16 = load i8*, i8** %self1, align 8, !dbg !13428, !rawptr !418
  store i8* %_16, i8** %ptr.dbg.spill5, align 8, !dbg !13428
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !13447, metadata !DIExpression()), !dbg !13451
  store i8* %_16, i8** %ptr.dbg.spill6, align 8, !dbg !13451
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !13453, metadata !DIExpression()), !dbg !13457
  store i8* %_16, i8** %_17, align 8, !dbg !13457
  %6 = load i8*, i8** %_17, align 8, !dbg !13451, !nonnull !23, !noundef !23
  store i8* %6, i8** %_4, align 8, !dbg !13451
  %7 = bitcast { i8*, i64 }* %self to i8**, !dbg !13459
  %8 = load i8*, i8** %_4, align 8, !dbg !13459, !nonnull !23, !noundef !23
  store i8* %8, i8** %7, align 8, !dbg !13459
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !13460
  store i64 %cap, i64* %9, align 8, !dbg !13460
  ret void, !dbg !13461
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17heb300a1c8db8d5d4E"() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !13462 {
start:
  %ptr.dbg.spill1 = alloca i8*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i8*, align 8, !rawptr !418
  %_2 = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !13466, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !13468, metadata !DIExpression()), !dbg !13472
  store i64 1, i64* %addr.dbg.spill, align 8, !dbg !13478
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !13490, metadata !DIExpression()), !dbg !13494
  %3 = bitcast i8** %1 to i64*, !dbg !13494
  store i64 1, i64* %3, align 8, !dbg !13494
  %ptr = load i8*, i8** %1, align 8, !dbg !13494, !rawptr !418
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !13494
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13486, metadata !DIExpression()), !dbg !13496
  br label %bb3, !dbg !13494

bb3:                                              ; preds = %start
  store i8* %ptr, i8** %ptr.dbg.spill1, align 8, !dbg !13496
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill1, metadata !13497, metadata !DIExpression()), !dbg !13501
  store i8* %ptr, i8** %pointer, align 8, !dbg !13501
  %_12 = load i8*, i8** %pointer, align 8, !dbg !13472, !nonnull !23, !noundef !23
  store i8* %_12, i8** %_2, align 8, !dbg !13472
  %4 = bitcast { i8*, i64 }* %2 to i8**, !dbg !13503
  %5 = load i8*, i8** %_2, align 8, !dbg !13503, !nonnull !23, !noundef !23
  store i8* %5, i8** %4, align 8, !dbg !13503
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !13503
  store i64 0, i64* %6, align 8, !dbg !13503
  %7 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !13503
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !13504
  %9 = load i8*, i8** %8, align 8, !dbg !13504, !nonnull !23, !noundef !23
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !13504
  %11 = load i64, i64* %10, align 8, !dbg !13504
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !13504
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !13504
  ret { i8*, i64 } %13, !dbg !13504

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !13505

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !13506
  %15 = load i8*, i8** %14, align 8, !dbg !13506
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !13506
  %17 = load i32, i32* %16, align 8, !dbg !13506
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !13506
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !13506
  resume { i8*, i32 } %19, !dbg !13506
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h1c9f411d14b580e6E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !13507 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13511, metadata !DIExpression()), !dbg !13514
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13512, metadata !DIExpression()), !dbg !13515
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !13513, metadata !DIExpression()), !dbg !13516
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0ca0127d33db4ee5E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !13517
  br label %bb1, !dbg !13517

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !13517

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !13518

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h8f74efdab9a3235bE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !13519
  br label %bb3, !dbg !13519

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !13520
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h8f74efdab9a3235bE"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #6 !dbg !13521 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %slf, { i8*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %slf.dbg.spill, metadata !13525, metadata !DIExpression()), !dbg !13528
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13526, metadata !DIExpression()), !dbg !13529
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !13527, metadata !DIExpression()), !dbg !13530
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h942ba71c84d3c96cE"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !13531
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !13531
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !13531
  br label %bb1, !dbg !13531

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h2d89f1c61a65874cE(i64 %_5.0, i64 %_5.1), !dbg !13532
  br label %bb2, !dbg !13532

bb2:                                              ; preds = %bb1
  ret void, !dbg !13533
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h06a2e774bb30b37eE"(%"alloc::string::String"* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !13534 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !13537, metadata !DIExpression()), !dbg !13539
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !13538, metadata !DIExpression()), !dbg !13540
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %self), !dbg !13541
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !13541
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !13541
  br label %bb1, !dbg !13541

bb1:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hab83556372ca0523E"([0 x i8]* align 1 %_5.0, i64 %_5.1, %"core::fmt::Formatter"* align 8 %f), !dbg !13542
  br label %bb2, !dbg !13542

bb2:                                              ; preds = %bb1
  ret i1 %1, !dbg !13543
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #1 !dbg !13544 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13548, metadata !DIExpression()), !dbg !13551
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13549, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !13550, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !13554, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !13562, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !13573, metadata !DIExpression()), !dbg !13577
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !13578
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !13579, metadata !DIExpression()), !dbg !13583
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !13583
  %_4 = load i64, i64* %4, align 8, !dbg !13583
  %5 = icmp eq i64 %_4, 0, !dbg !13578
  br i1 %5, label %bb2, label %bb1, !dbg !13578

bb2:                                              ; preds = %start
  br label %bb3, !dbg !13584

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !13585
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13586, metadata !DIExpression()), !dbg !13590
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !13590
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !13559, metadata !DIExpression()), !dbg !13560
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !13591
  %7 = load i64, i64* %6, align 8, !dbg !13591
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !13591
  %9 = load i64, i64* %8, align 8, !dbg !13591, !range !5753, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !13591
  store i64 %7, i64* %10, align 8, !dbg !13591
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !13591
  store i64 %9, i64* %11, align 8, !dbg !13591
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !13560
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !13592, metadata !DIExpression()), !dbg !13596
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !13596
  %_11 = load i64, i64* %12, align 8, !dbg !13596
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !13560
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !13570, metadata !DIExpression()), !dbg !13598
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !13598
  %14 = load i64, i64* %13, align 8, !dbg !13598, !range !5753, !noundef !23
  store i64 %14, i64* %self3, align 8, !dbg !13598
  %_18 = load i64, i64* %self3, align 8, !dbg !13577, !range !5753, !noundef !23
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !13577
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !13599, metadata !DIExpression()), !dbg !13606
  store i64 %_18, i64* %self2, align 8, !dbg !13606
  %_13 = load i64, i64* %self2, align 8, !dbg !13566
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #21, !dbg !13560
  br label %bb4, !dbg !13560

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !13584

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !13608
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h5785f9c16d7fe8f4E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 !dbg !13609 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13611, metadata !DIExpression()), !dbg !13613
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13612, metadata !DIExpression()), !dbg !13614
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !13615
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !13615
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !13615
  br label %bb1, !dbg !13615

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !13616
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !13616
  ret { i8*, i64 } %6, !dbg !13616
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he40aebe96a1d2471E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #1 !dbg !13617 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13621, metadata !DIExpression()), !dbg !13625
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13622, metadata !DIExpression()), !dbg !13626
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !13623, metadata !DIExpression()), !dbg !13627
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !13624, metadata !DIExpression()), !dbg !13628
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h3530581f4db6a6e9E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !13629
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !13629
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !13629
  br label %bb1, !dbg !13629

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !13630
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !13630
  ret { i8*, i64 } %8, !dbg !13630
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17ha2beffcab7803646E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 !dbg !13631 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13633, metadata !DIExpression()), !dbg !13635
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13634, metadata !DIExpression()), !dbg !13636
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !13637
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !13637
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !13637
  br label %bb1, !dbg !13637

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !13638
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !13638
  ret { i8*, i64 } %6, !dbg !13638
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %self) unnamed_addr #1 !dbg !13639 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  %_18 = alloca { i8*, i64 }, align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !13644, metadata !DIExpression()), !dbg !13645
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*, !dbg !13646, !rawptr !418
  store %"alloc::vec::Vec<u8>"* %_5, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !13646
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !13647, metadata !DIExpression()), !dbg !13651
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E"(%"alloc::vec::Vec<u8>"* align 8 %_5), !dbg !13651, !rawptr !418
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !13651
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !13652, metadata !DIExpression()), !dbg !13660
  br label %bb1, !dbg !13651

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_5, i32 0, i32 1, !dbg !13651
  %len = load i64, i64* %1, align 8, !dbg !13651
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13651
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13656, metadata !DIExpression()), !dbg !13660
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !13660
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !13662, metadata !DIExpression()), !dbg !13667
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !13660
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !13666, metadata !DIExpression()), !dbg !13667
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !13667
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13669, metadata !DIExpression()), !dbg !13673
  %data_address = bitcast i8* %data to {}*, !dbg !13673, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13673
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13675, metadata !DIExpression()), !dbg !13680
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13667
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13679, metadata !DIExpression()), !dbg !13680
  %2 = bitcast { i8*, i64 }* %_18 to {}**, !dbg !13680, !rawptr !418
  store {}* %data_address, {}** %2, align 8, !dbg !13680
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !13680
  store i64 %len, i64* %3, align 8, !dbg !13680
  %4 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { i8*, i64 }*, !dbg !13680
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 0, !dbg !13680
  %6 = load i8*, i8** %5, align 8, !dbg !13680
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !13680
  %8 = load i64, i64* %7, align 8, !dbg !13680
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !13680
  store i8* %6, i8** %9, align 8, !dbg !13680
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !13680
  store i64 %8, i64* %10, align 8, !dbg !13680
  %11 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { [0 x i8]*, i64 }*, !dbg !13680
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !13680
  %_10.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !13680, !rawptr !418
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !13680
  %_10.1 = load i64, i64* %13, align 8, !dbg !13680, !rawptr !418
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !13646
  store [0 x i8]* %_10.0, [0 x i8]** %14, align 8, !dbg !13646
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !13646
  store i64 %_10.1, i64* %15, align 8, !dbg !13646
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !13682, metadata !DIExpression()), !dbg !13688
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !13688
  store [0 x i8]* %_10.0, [0 x i8]** %16, align 8, !dbg !13688
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !13688
  store i64 %_10.1, i64* %17, align 8, !dbg !13688
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !13688
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !13688, !nonnull !23, !align !912, !noundef !23
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !13688
  %21 = load i64, i64* %20, align 8, !dbg !13688
  br label %bb2, !dbg !13688

bb2:                                              ; preds = %bb1
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !13690
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !13690
  ret { [0 x i8]*, i64 } %23, !dbg !13690
}

; <alloc::borrow::Cow<B> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hc804b29b9b75cce0E"(%"alloc::borrow::Cow<str>"* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !13691 {
start:
  %b.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %o.dbg.spill = alloca %"alloc::string::String"*, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"alloc::borrow::Cow<str>"*, align 8
  %0 = alloca i8, align 1
  store %"alloc::borrow::Cow<str>"* %self, %"alloc::borrow::Cow<str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %self.dbg.spill, metadata !13695, metadata !DIExpression()), !dbg !13701
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !13696, metadata !DIExpression()), !dbg !13702
  %1 = bitcast %"alloc::borrow::Cow<str>"* %self to i64*, !dbg !13703
  %_3 = load i64, i64* %1, align 8, !dbg !13703, !range !3483, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !13704

bb2:                                              ; preds = %start
  unreachable, !dbg !13703

bb3:                                              ; preds = %start
  %2 = bitcast %"alloc::borrow::Cow<str>"* %self to %"alloc::borrow::Cow<str>::Borrowed"*, !dbg !13705
  %b = getelementptr inbounds %"alloc::borrow::Cow<str>::Borrowed", %"alloc::borrow::Cow<str>::Borrowed"* %2, i32 0, i32 1, !dbg !13705
  store { [0 x i8]*, i64 }* %b, { [0 x i8]*, i64 }** %b.dbg.spill, align 8, !dbg !13705
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %b.dbg.spill, metadata !13697, metadata !DIExpression()), !dbg !13706
; call <&T as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hd7038587a5bd85f2E"({ [0 x i8]*, i64 }* align 8 %b, %"core::fmt::Formatter"* align 8 %f), !dbg !13707
  %4 = zext i1 %3 to i8, !dbg !13707
  store i8 %4, i8* %0, align 1, !dbg !13707
  br label %bb4, !dbg !13707

bb1:                                              ; preds = %start
  %5 = bitcast %"alloc::borrow::Cow<str>"* %self to %"alloc::borrow::Cow<str>::Owned"*, !dbg !13708
  %o = getelementptr inbounds %"alloc::borrow::Cow<str>::Owned", %"alloc::borrow::Cow<str>::Owned"* %5, i32 0, i32 1, !dbg !13708
  store %"alloc::string::String"* %o, %"alloc::string::String"** %o.dbg.spill, align 8, !dbg !13708
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %o.dbg.spill, metadata !13699, metadata !DIExpression()), !dbg !13709
; call <alloc::string::String as core::fmt::Display>::fmt
  %6 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h06a2e774bb30b37eE"(%"alloc::string::String"* align 8 %o, %"core::fmt::Formatter"* align 8 %f), !dbg !13710
  %7 = zext i1 %6 to i8, !dbg !13710
  store i8 %7, i8* %0, align 1, !dbg !13710
  br label %bb5, !dbg !13710

bb5:                                              ; preds = %bb1
  br label %bb6, !dbg !13711

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, i8* %0, align 1, !dbg !13712, !range !298, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !13712
  ret i1 %9, !dbg !13712

bb4:                                              ; preds = %bb3
  br label %bb6, !dbg !13713
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h97759489e03cba99E"({ i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !13714 {
start:
  %0 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13721, metadata !DIExpression()), !dbg !13722
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !13723
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !13723
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !13723, !nonnull !23, !align !912, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !13723
  %_4.1 = load i64, i64* %3, align 8, !dbg !13723, !rawptr !418
  %4 = bitcast [0 x i8]* %_4.0 to i8*, !dbg !13723
  %_5.0 = bitcast i8* %4 to [0 x i8]*, !dbg !13723, !rawptr !418
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !13723
  store [0 x i8]* %_5.0, [0 x i8]** %5, align 8, !dbg !13723
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !13723
  store i64 %_4.1, i64* %6, align 8, !dbg !13723
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !13724, metadata !DIExpression()), !dbg !13732
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !13732
  store [0 x i8]* %_5.0, [0 x i8]** %7, align 8, !dbg !13732
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !13732
  store i64 %_4.1, i64* %8, align 8, !dbg !13732
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !13733, metadata !DIExpression()), !dbg !13747
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !13747
  store [0 x i8]* %_5.0, [0 x i8]** %9, align 8, !dbg !13747
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !13747
  store i64 %_4.1, i64* %10, align 8, !dbg !13747
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !13749, metadata !DIExpression()), !dbg !13753
  %self3 = bitcast [0 x i8]* %_5.0 to i8*, !dbg !13753, !rawptr !418
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !13753
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13755, metadata !DIExpression()), !dbg !13760
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !13760
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13761, metadata !DIExpression()), !dbg !13766
  %11 = getelementptr inbounds i8, i8* %self3, i64 0, !dbg !13766
  store i8* %11, i8** %0, align 8, !dbg !13766
  %_20 = load i8*, i8** %0, align 8, !dbg !13766, !rawptr !418
  br label %bb1, !dbg !13766

bb1:                                              ; preds = %start
  store i8 0, i8* %_20, align 1, !dbg !13768
  ret void, !dbg !13769
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17he940f7859dbd9588E"(i32* align 4 %self) unnamed_addr #1 !dbg !13770 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !13777, metadata !DIExpression()), !dbg !13778
  %_3 = load i32, i32* %self, align 4, !dbg !13779
  %_2 = call i32 @close(i32 %_3), !dbg !13780
  br label %bb1, !dbg !13780

bb1:                                              ; preds = %start
  ret void, !dbg !13781
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h35c1bfc9efb18cecE"(%"alloc::vec::Vec<*const i8>"* align 8 %self) unnamed_addr #0 !dbg !13782 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8**, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8**, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<*const i8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[*const i8]>", align 8
  store %"alloc::vec::Vec<*const i8>"* %self, %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, metadata !13787, metadata !DIExpression()), !dbg !13788
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8** @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h17cff016fdc8b191E"(%"alloc::vec::Vec<*const i8>"* align 8 %self), !dbg !13789, !rawptr !418
  store i8** %data, i8*** %data.dbg.spill, align 8, !dbg !13789
  call void @llvm.dbg.declare(metadata i8*** %data.dbg.spill, metadata !13790, metadata !DIExpression()), !dbg !13802
  br label %bb1, !dbg !13789

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<*const i8>", %"alloc::vec::Vec<*const i8>"* %self, i32 0, i32 1, !dbg !13804
  %len = load i64, i64* %0, align 8, !dbg !13804
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13804
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13801, metadata !DIExpression()), !dbg !13802
  store i8** %data, i8*** %self.dbg.spill1, align 8, !dbg !13802
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill1, metadata !13805, metadata !DIExpression()), !dbg !13812
  %data_address = bitcast i8** %data to {}*, !dbg !13812, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13812
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13814, metadata !DIExpression()), !dbg !13821
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13802
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13820, metadata !DIExpression()), !dbg !13821
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13821, !rawptr !418
  store {}* %data_address, {}** %1, align 8, !dbg !13821
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13821
  store i64 %len, i64* %2, align 8, !dbg !13821
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[*const i8]>"* %_10 to { i8*, i64 }*, !dbg !13821
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13821
  %5 = load i8*, i8** %4, align 8, !dbg !13821
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13821
  %7 = load i64, i64* %6, align 8, !dbg !13821
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13821
  store i8* %5, i8** %8, align 8, !dbg !13821
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13821
  store i64 %7, i64* %9, align 8, !dbg !13821
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[*const i8]>"* %_10 to { [0 x i8*]*, i64 }*, !dbg !13821
  %11 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %10, i32 0, i32 0, !dbg !13821
  %_2.0 = load [0 x i8*]*, [0 x i8*]** %11, align 8, !dbg !13821, !rawptr !418
  %12 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %10, i32 0, i32 1, !dbg !13821
  %_2.1 = load i64, i64* %12, align 8, !dbg !13821, !rawptr !418
  br label %bb2, !dbg !13823

bb2:                                              ; preds = %bb1
  ret void, !dbg !13824
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6348c2a5f302c717E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !13825 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !13829, metadata !DIExpression()), !dbg !13830
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6eaafedab3801778E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !13831, !rawptr !418
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !13831
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !13832, metadata !DIExpression()), !dbg !13837
  br label %bb1, !dbg !13831

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !13839
  %len = load i64, i64* %0, align 8, !dbg !13839
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13839
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13836, metadata !DIExpression()), !dbg !13837
  store i8* %data, i8** %self.dbg.spill1, align 8, !dbg !13837
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !13840, metadata !DIExpression()), !dbg !13844
  %data_address = bitcast i8* %data to {}*, !dbg !13844, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13844
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13846, metadata !DIExpression()), !dbg !13851
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13837
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13850, metadata !DIExpression()), !dbg !13851
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13851, !rawptr !418
  store {}* %data_address, {}** %1, align 8, !dbg !13851
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13851
  store i64 %len, i64* %2, align 8, !dbg !13851
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { i8*, i64 }*, !dbg !13851
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13851
  %5 = load i8*, i8** %4, align 8, !dbg !13851
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13851
  %7 = load i64, i64* %6, align 8, !dbg !13851
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13851
  store i8* %5, i8** %8, align 8, !dbg !13851
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13851
  store i64 %7, i64* %9, align 8, !dbg !13851
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { [0 x i8]*, i64 }*, !dbg !13851
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !13851
  %_2.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !13851, !rawptr !418
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !13851
  %_2.1 = load i64, i64* %12, align 8, !dbg !13851, !rawptr !418
  br label %bb2, !dbg !13853

bb2:                                              ; preds = %bb1
  ret void, !dbg !13854
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha754ebadfb1abed3E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %self) unnamed_addr #0 !dbg !13855 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca { {}*, [3 x i64]* }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>", align 8
  store %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, metadata !13859, metadata !DIExpression()), !dbg !13860
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call { {}*, [3 x i64]* }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h4447c182711b94d6E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %self), !dbg !13861, !rawptr !418
  store { {}*, [3 x i64]* }* %data, { {}*, [3 x i64]* }** %data.dbg.spill, align 8, !dbg !13861
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %data.dbg.spill, metadata !13862, metadata !DIExpression()), !dbg !13869
  br label %bb1, !dbg !13861

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self, i32 0, i32 1, !dbg !13871
  %len = load i64, i64* %0, align 8, !dbg !13871
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13871
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13868, metadata !DIExpression()), !dbg !13869
  store { {}*, [3 x i64]* }* %data, { {}*, [3 x i64]* }** %self.dbg.spill1, align 8, !dbg !13869
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %self.dbg.spill1, metadata !13872, metadata !DIExpression()), !dbg !13879
  %data_address = bitcast { {}*, [3 x i64]* }* %data to {}*, !dbg !13879, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13879
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13881, metadata !DIExpression()), !dbg !13888
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13869
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13887, metadata !DIExpression()), !dbg !13888
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13888, !rawptr !418
  store {}* %data_address, {}** %1, align 8, !dbg !13888
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13888
  store i64 %len, i64* %2, align 8, !dbg !13888
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>"* %_10 to { i8*, i64 }*, !dbg !13888
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13888
  %5 = load i8*, i8** %4, align 8, !dbg !13888
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13888
  %7 = load i64, i64* %6, align 8, !dbg !13888
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13888
  store i8* %5, i8** %8, align 8, !dbg !13888
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13888
  store i64 %7, i64* %9, align 8, !dbg !13888
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>"* %_10 to { [0 x { {}*, [3 x i64]* }]*, i64 }*, !dbg !13888
  %11 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %10, i32 0, i32 0, !dbg !13888
  %_2.0 = load [0 x { {}*, [3 x i64]* }]*, [0 x { {}*, [3 x i64]* }]** %11, align 8, !dbg !13888, !rawptr !418
  %12 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %10, i32 0, i32 1, !dbg !13888
  %_2.1 = load i64, i64* %12, align 8, !dbg !13888, !rawptr !418
; call core::ptr::drop_in_place<[alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>]>
  call void @"_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17hb1c91d1a2d50f1c1E"([0 x { {}*, [3 x i64]* }]* %_2.0, i64 %_2.1), !dbg !13890
  br label %bb2, !dbg !13890

bb2:                                              ; preds = %bb1
  ret void, !dbg !13891
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb7a612e473abe038E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %self) unnamed_addr #0 !dbg !13892 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::ffi::c_str::CString>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>", align 8
  store %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self, %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, metadata !13896, metadata !DIExpression()), !dbg !13897
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call { i8*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h95e8b847ca462c25E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %self), !dbg !13898, !rawptr !418
  store { i8*, i64 }* %data, { i8*, i64 }** %data.dbg.spill, align 8, !dbg !13898
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %data.dbg.spill, metadata !13899, metadata !DIExpression()), !dbg !13906
  br label %bb1, !dbg !13898

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::ffi::c_str::CString>", %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self, i32 0, i32 1, !dbg !13908
  %len = load i64, i64* %0, align 8, !dbg !13908
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13908
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13905, metadata !DIExpression()), !dbg !13906
  store { i8*, i64 }* %data, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !13906
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !13909, metadata !DIExpression()), !dbg !13916
  %data_address = bitcast { i8*, i64 }* %data to {}*, !dbg !13916, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13916
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13918, metadata !DIExpression()), !dbg !13925
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13906
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13924, metadata !DIExpression()), !dbg !13925
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13925, !rawptr !418
  store {}* %data_address, {}** %1, align 8, !dbg !13925
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13925
  store i64 %len, i64* %2, align 8, !dbg !13925
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>"* %_10 to { i8*, i64 }*, !dbg !13925
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13925
  %5 = load i8*, i8** %4, align 8, !dbg !13925
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13925
  %7 = load i64, i64* %6, align 8, !dbg !13925
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13925
  store i8* %5, i8** %8, align 8, !dbg !13925
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13925
  store i64 %7, i64* %9, align 8, !dbg !13925
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>"* %_10 to { [0 x { i8*, i64 }]*, i64 }*, !dbg !13925
  %11 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %10, i32 0, i32 0, !dbg !13925
  %_2.0 = load [0 x { i8*, i64 }]*, [0 x { i8*, i64 }]** %11, align 8, !dbg !13925, !rawptr !418
  %12 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %10, i32 0, i32 1, !dbg !13925
  %_2.1 = load i64, i64* %12, align 8, !dbg !13925, !rawptr !418
; call core::ptr::drop_in_place<[alloc::ffi::c_str::CString]>
  call void @"_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17h96ab7cdab30ccdf7E"([0 x { i8*, i64 }]* %_2.0, i64 %_2.1), !dbg !13927
  br label %bb2, !dbg !13927

bb2:                                              ; preds = %bb1
  ret void, !dbg !13928
}

; <core::option::Option<T> as core::cmp::PartialEq>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h606434351e37dd6dE"({ i8*, i64 }* align 8 %self, { i8*, i64 }* align 8 %other) unnamed_addr #1 !dbg !13929 {
start:
  %__arg_1_0.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %__self_0.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %__arg_1_vi.dbg.spill = alloca i64, align 8
  %__self_vi.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_12 = alloca { i64*, i64* }, align 8
  %0 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13935, metadata !DIExpression()), !dbg !13944
  store { i8*, i64 }* %other, { i8*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %other.dbg.spill, metadata !13936, metadata !DIExpression()), !dbg !13944
  %1 = bitcast { i8*, i64 }* %self to {}**, !dbg !13944
  %2 = load {}*, {}** %1, align 8, !dbg !13944
  %3 = icmp eq {}* %2, null, !dbg !13944
  %__self_vi = select i1 %3, i64 0, i64 1, !dbg !13944
  store i64 %__self_vi, i64* %__self_vi.dbg.spill, align 8, !dbg !13944
  call void @llvm.dbg.declare(metadata i64* %__self_vi.dbg.spill, metadata !13937, metadata !DIExpression()), !dbg !13945
  %4 = bitcast { i8*, i64 }* %other to {}**, !dbg !13945
  %5 = load {}*, {}** %4, align 8, !dbg !13945
  %6 = icmp eq {}* %5, null, !dbg !13945
  %__arg_1_vi = select i1 %6, i64 0, i64 1, !dbg !13945
  store i64 %__arg_1_vi, i64* %__arg_1_vi.dbg.spill, align 8, !dbg !13945
  call void @llvm.dbg.declare(metadata i64* %__arg_1_vi.dbg.spill, metadata !13939, metadata !DIExpression()), !dbg !13946
  %_9 = icmp eq i64 %__self_vi, %__arg_1_vi, !dbg !13946
  br i1 %_9, label %bb1, label %bb7, !dbg !13946

bb7:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !13946
  br label %bb8, !dbg !13946

bb1:                                              ; preds = %start
  %7 = bitcast { i64*, i64* }* %_12 to { i8*, i64 }**, !dbg !13946
  store { i8*, i64 }* %self, { i8*, i64 }** %7, align 8, !dbg !13946
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !13946
  %9 = bitcast i64** %8 to { i8*, i64 }**, !dbg !13946
  store { i8*, i64 }* %other, { i8*, i64 }** %9, align 8, !dbg !13946
  %10 = bitcast { i64*, i64* }* %_12 to { i8*, i64 }**, !dbg !13946
  %_21 = load { i8*, i64 }*, { i8*, i64 }** %10, align 8, !dbg !13946, !nonnull !23, !align !378, !noundef !23
  %11 = bitcast { i8*, i64 }* %_21 to {}**, !dbg !13946
  %12 = load {}*, {}** %11, align 8, !dbg !13946
  %13 = icmp eq {}* %12, null, !dbg !13946
  %_16 = select i1 %13, i64 0, i64 1, !dbg !13946
  %14 = icmp eq i64 %_16, 1, !dbg !13946
  br i1 %14, label %bb3, label %bb2, !dbg !13946

bb3:                                              ; preds = %bb1
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !13946
  %16 = bitcast i64** %15 to { i8*, i64 }**, !dbg !13946
  %_22 = load { i8*, i64 }*, { i8*, i64 }** %16, align 8, !dbg !13946, !nonnull !23, !align !378, !noundef !23
  %17 = bitcast { i8*, i64 }* %_22 to {}**, !dbg !13946
  %18 = load {}*, {}** %17, align 8, !dbg !13946
  %19 = icmp eq {}* %18, null, !dbg !13946
  %_15 = select i1 %19, i64 0, i64 1, !dbg !13946
  %20 = icmp eq i64 %_15, 1, !dbg !13946
  br i1 %20, label %bb4, label %bb2, !dbg !13946

bb2:                                              ; preds = %bb3, %bb1
  store i8 0, i8* %0, align 1, !dbg !13946
  br label %bb6, !dbg !13946

bb4:                                              ; preds = %bb3
  %21 = bitcast { i64*, i64* }* %_12 to { i8*, i64 }**, !dbg !13947
  %_23 = load { i8*, i64 }*, { i8*, i64 }** %21, align 8, !dbg !13947, !nonnull !23, !align !378, !noundef !23
  %__self_0 = bitcast { i8*, i64 }* %_23 to { [0 x i8]*, i64 }*, !dbg !13947
  store { [0 x i8]*, i64 }* %__self_0, { [0 x i8]*, i64 }** %__self_0.dbg.spill, align 8, !dbg !13947
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %__self_0.dbg.spill, metadata !13941, metadata !DIExpression()), !dbg !13948
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !13947
  %23 = bitcast i64** %22 to { i8*, i64 }**, !dbg !13947
  %_24 = load { i8*, i64 }*, { i8*, i64 }** %23, align 8, !dbg !13947, !nonnull !23, !align !378, !noundef !23
  %__arg_1_0 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !13947
  store { [0 x i8]*, i64 }* %__arg_1_0, { [0 x i8]*, i64 }** %__arg_1_0.dbg.spill, align 8, !dbg !13947
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %__arg_1_0.dbg.spill, metadata !13943, metadata !DIExpression()), !dbg !13948
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::ne
  %24 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h8462e05dd5d789ddE"({ [0 x i8]*, i64 }* align 8 %__self_0, { [0 x i8]*, i64 }* align 8 %__arg_1_0), !dbg !13948
  %25 = zext i1 %24 to i8, !dbg !13948
  store i8 %25, i8* %0, align 1, !dbg !13948
  br label %bb5, !dbg !13948

bb6:                                              ; preds = %bb5, %bb2
  br label %bb8, !dbg !13946

bb5:                                              ; preds = %bb4
  br label %bb6, !dbg !13949

bb8:                                              ; preds = %bb7, %bb6
  %26 = load i8, i8* %0, align 1, !dbg !13950, !range !298, !noundef !23
  %27 = trunc i8 %26 to i1, !dbg !13950
  ret i1 %27, !dbg !13950
}

; <[T] as core::convert::AsRef<[T]>>::as_ref
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !13951 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !13954, metadata !DIExpression()), !dbg !13955
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !13956
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !13956
  ret { [0 x i8]*, i64 } %3, !dbg !13956
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !13957 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_14 = alloca { i8*, i64 }, align 8
  %_13 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !13959, metadata !DIExpression()), !dbg !13960
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !13961, !rawptr !418
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !13961
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !13962, metadata !DIExpression()), !dbg !13970
  br label %bb1, !dbg !13961

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !13972
  %len = load i64, i64* %0, align 8, !dbg !13972
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13972
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13966, metadata !DIExpression()), !dbg !13970
  store i8* %data, i8** %data.dbg.spill1, align 8, !dbg !13970
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill1, metadata !13973, metadata !DIExpression()), !dbg !13978
  store i64 %len, i64* %len.dbg.spill2, align 8, !dbg !13970
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !13977, metadata !DIExpression()), !dbg !13978
  store i8* %data, i8** %self.dbg.spill3, align 8, !dbg !13978
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !13980, metadata !DIExpression()), !dbg !13984
  %data_address = bitcast i8* %data to {}*, !dbg !13984, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13984
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13986, metadata !DIExpression()), !dbg !13991
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13978
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13990, metadata !DIExpression()), !dbg !13991
  %1 = bitcast { i8*, i64 }* %_14 to {}**, !dbg !13991, !rawptr !418
  store {}* %data_address, {}** %1, align 8, !dbg !13991
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 1, !dbg !13991
  store i64 %len, i64* %2, align 8, !dbg !13991
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_13 to { i8*, i64 }*, !dbg !13991
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 0, !dbg !13991
  %5 = load i8*, i8** %4, align 8, !dbg !13991
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 1, !dbg !13991
  %7 = load i64, i64* %6, align 8, !dbg !13991
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13991
  store i8* %5, i8** %8, align 8, !dbg !13991
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13991
  store i64 %7, i64* %9, align 8, !dbg !13991
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_13 to { [0 x i8]*, i64 }*, !dbg !13991
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !13991
  %_6.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !13991, !rawptr !418
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !13991
  %_6.1 = load i64, i64* %12, align 8, !dbg !13991, !rawptr !418
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_6.0, 0, !dbg !13993
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %_6.1, 1, !dbg !13993
  ret { [0 x i8]*, i64 } %14, !dbg !13993
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hc1214e48380b33d3E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !13994 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !13997, metadata !DIExpression()), !dbg !14001
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !13998, metadata !DIExpression()), !dbg !14002
  %_3 = icmp ne i64 %self.1, %other.1, !dbg !14003
  br i1 %_3, label %bb1, label %bb2, !dbg !14003

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !14004
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !14004
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !14004
  store i64 %self.1, i64* %7, align 8, !dbg !14004
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !14005, metadata !DIExpression()), !dbg !14009
  %8 = mul nsw i64 %self.1, 1, !dbg !14009
  store i64 %8, i64* %0, align 8, !dbg !14009
  %size = load i64, i64* %0, align 8, !dbg !14009
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !14009
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !13999, metadata !DIExpression()), !dbg !14011
  br label %bb5, !dbg !14009

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !14012
  br label %bb4, !dbg !14013

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %1, align 1, !dbg !14013, !range !298, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !14013
  ret i1 %10, !dbg !14013

bb5:                                              ; preds = %bb2
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !14014
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !14014
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !14014
  store i64 %self.1, i64* %12, align 8, !dbg !14014
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !14015, metadata !DIExpression()), !dbg !14019
  %_12 = bitcast [0 x i8]* %self.0 to i8*, !dbg !14019, !rawptr !418
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !14020
  store [0 x i8]* %other.0, [0 x i8]** %13, align 8, !dbg !14020
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !14020
  store i64 %other.1, i64* %14, align 8, !dbg !14020
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !14021, metadata !DIExpression()), !dbg !14025
  %_15 = bitcast [0 x i8]* %other.0 to i8*, !dbg !14025, !rawptr !418
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size), !dbg !14026
  br label %bb3, !dbg !14026

bb3:                                              ; preds = %bb5
  %15 = icmp eq i32 %_10, 0, !dbg !14026
  %16 = zext i1 %15 to i8, !dbg !14026
  store i8 %16, i8* %1, align 1, !dbg !14026
  br label %bb4, !dbg !14013
}

; <core::option::Option<T> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hcb15333b73c25d66E"(i64 %output) unnamed_addr #1 !dbg !14027 {
start:
  %output.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %output, i64* %output.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %output.dbg.spill, metadata !14031, metadata !DIExpression()), !dbg !14032
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14033
  store i64 %output, i64* %1, align 8, !dbg !14033
  %2 = bitcast { i64, i64 }* %0 to i64*, !dbg !14033
  store i64 1, i64* %2, align 8, !dbg !14033
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !14034
  %4 = load i64, i64* %3, align 8, !dbg !14034, !range !3483, !noundef !23
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14034
  %6 = load i64, i64* %5, align 8, !dbg !14034
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !14034
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !14034
  ret { i64, i64 } %8, !dbg !14034
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h009968790cd0239eE"(i64 %0, i64 %1) unnamed_addr #1 !dbg !14035 {
start:
  %v.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !14053, metadata !DIExpression()), !dbg !14056
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !14057
  %_2 = load i64, i64* %5, align 8, !dbg !14057, !range !3483, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !14058

bb2:                                              ; preds = %start
  unreachable, !dbg !14057

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !14059
  store i64 1, i64* %6, align 8, !dbg !14059
  br label %bb4, !dbg !14060

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !14061
  %v = load i64, i64* %7, align 8, !dbg !14061
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !14061
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !14054, metadata !DIExpression()), !dbg !14062
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !14063
  store i64 %v, i64* %8, align 8, !dbg !14063
  %9 = bitcast { i64, i64 }* %2 to i64*, !dbg !14063
  store i64 0, i64* %9, align 8, !dbg !14063
  br label %bb4, !dbg !14064

bb4:                                              ; preds = %bb1, %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !14065
  %11 = load i64, i64* %10, align 8, !dbg !14065, !range !3483, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !14065
  %13 = load i64, i64* %12, align 8, !dbg !14065
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !14065
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !14065
  ret { i64, i64 } %15, !dbg !14065
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h85d510a2416f2482E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !14066 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !14072, metadata !DIExpression()), !dbg !14076
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h711cdc596ee9e83bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !14077
  br label %bb1, !dbg !14077

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !14078
  %1 = load i64, i64* %0, align 8, !dbg !14078, !range !1638, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !14078
  %_4 = select i1 %2, i64 0, i64 1, !dbg !14078
  %3 = icmp eq i64 %_4, 1, !dbg !14078
  br i1 %3, label %bb2, label %bb4, !dbg !14078

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14079
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !14079
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !14079
  %ptr = load i8*, i8** %6, align 8, !dbg !14079, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !14079
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14073, metadata !DIExpression()), !dbg !14079
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14080
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !14080
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !14080
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !14080
  %layout.0 = load i64, i64* %10, align 8, !dbg !14080
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !14080
  %layout.1 = load i64, i64* %11, align 8, !dbg !14080, !range !5753, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !14080
  store i64 %layout.0, i64* %12, align 8, !dbg !14080
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !14080
  store i64 %layout.1, i64* %13, align 8, !dbg !14080
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !14075, metadata !DIExpression()), !dbg !14080
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !14081
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !14081
  br label %bb3, !dbg !14081

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14082

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !14083
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h87a81bdf8b27ee83E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !14084 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !14089, metadata !DIExpression()), !dbg !14093
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h31d861587090897aE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !14094
  br label %bb1, !dbg !14094

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !14095
  %1 = load i64, i64* %0, align 8, !dbg !14095, !range !1638, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !14095
  %_4 = select i1 %2, i64 0, i64 1, !dbg !14095
  %3 = icmp eq i64 %_4, 1, !dbg !14095
  br i1 %3, label %bb2, label %bb4, !dbg !14095

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14096
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !14096
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !14096
  %ptr = load i8*, i8** %6, align 8, !dbg !14096, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !14096
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14090, metadata !DIExpression()), !dbg !14096
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14097
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !14097
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !14097
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !14097
  %layout.0 = load i64, i64* %10, align 8, !dbg !14097
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !14097
  %layout.1 = load i64, i64* %11, align 8, !dbg !14097, !range !5753, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !14097
  store i64 %layout.0, i64* %12, align 8, !dbg !14097
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !14097
  store i64 %layout.1, i64* %13, align 8, !dbg !14097
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !14092, metadata !DIExpression()), !dbg !14097
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !14098
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !14098
  br label %bb3, !dbg !14098

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14099

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !14100
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha47067e394a6b8ddE"({ i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !14101 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !14106, metadata !DIExpression()), !dbg !14110
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9e7730fcb8eb0d41E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !14111
  br label %bb1, !dbg !14111

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !14112
  %1 = load i64, i64* %0, align 8, !dbg !14112, !range !1638, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !14112
  %_4 = select i1 %2, i64 0, i64 1, !dbg !14112
  %3 = icmp eq i64 %_4, 1, !dbg !14112
  br i1 %3, label %bb2, label %bb4, !dbg !14112

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14113
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !14113
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !14113
  %ptr = load i8*, i8** %6, align 8, !dbg !14113, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !14113
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14107, metadata !DIExpression()), !dbg !14113
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14114
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !14114
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !14114
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !14114
  %layout.0 = load i64, i64* %10, align 8, !dbg !14114
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !14114
  %layout.1 = load i64, i64* %11, align 8, !dbg !14114, !range !5753, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !14114
  store i64 %layout.0, i64* %12, align 8, !dbg !14114
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !14114
  store i64 %layout.1, i64* %13, align 8, !dbg !14114
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !14109, metadata !DIExpression()), !dbg !14114
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !14115
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !14115
  br label %bb3, !dbg !14115

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14116

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !14117
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hebea49d732b609dbE"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !14118 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !14122, metadata !DIExpression()), !dbg !14126
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17ha40ac0576ac9daf1E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self), !dbg !14127
  br label %bb1, !dbg !14127

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !14128
  %1 = load i64, i64* %0, align 8, !dbg !14128, !range !1638, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !14128
  %_4 = select i1 %2, i64 0, i64 1, !dbg !14128
  %3 = icmp eq i64 %_4, 1, !dbg !14128
  br i1 %3, label %bb2, label %bb4, !dbg !14128

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14129
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !14129
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !14129
  %ptr = load i8*, i8** %6, align 8, !dbg !14129, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !14129
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14123, metadata !DIExpression()), !dbg !14129
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14130
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !14130
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !14130
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !14130
  %layout.0 = load i64, i64* %10, align 8, !dbg !14130
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !14130
  %layout.1 = load i64, i64* %11, align 8, !dbg !14130, !range !5753, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !14130
  store i64 %layout.0, i64* %12, align 8, !dbg !14130
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !14130
  store i64 %layout.1, i64* %13, align 8, !dbg !14130
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !14125, metadata !DIExpression()), !dbg !14130
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !14131
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !14131
  br label %bb3, !dbg !14131

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14132

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !14133
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8e5359068782f89bE"(i8** align 8 %self) unnamed_addr #1 !dbg !14134 {
start:
  %self.dbg.spill = alloca i8**, align 8
  %_2 = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>", align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !14139, metadata !DIExpression()), !dbg !14140
  %_3 = load i8*, i8** %self, align 8, !dbg !14141, !nonnull !23, !noundef !23
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h455b74023f42e153E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %_2, i8* %_3), !dbg !14142
  br label %bb1, !dbg !14142

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h1b4f9fdc984d784bE"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_2), !dbg !14143
  br label %bb2, !dbg !14143

bb2:                                              ; preds = %bb1
  ret void, !dbg !14144
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h0997d46a35485cf1E"(%"std::io::error::Custom"* %p) unnamed_addr #1 !dbg !14145 {
start:
  %ptr.dbg.spill2 = alloca %"std::io::error::Custom"*, align 8
  %ptr.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill1 = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %p.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %_1.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %_8 = alloca i64*, align 8
  %_6 = alloca i64*, align 8
  %0 = alloca %"std::io::error::Custom"*, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %_1.dbg.spill, metadata !14150, metadata !DIExpression()), !dbg !14151
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %p.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %p.dbg.spill, metadata !14149, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !14153, metadata !DIExpression()), !dbg !14160
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill, align 8, !dbg !14170
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill, metadata !14167, metadata !DIExpression()), !dbg !14171
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill1, align 8, !dbg !14171
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill1, metadata !14159, metadata !DIExpression()), !dbg !14160
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill, align 8, !dbg !14160
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill, metadata !14172, metadata !DIExpression()), !dbg !14178
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill2, align 8, !dbg !14178
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill2, metadata !14180, metadata !DIExpression()), !dbg !14186
  %1 = bitcast i64** %_8 to %"std::io::error::Custom"**, !dbg !14186, !rawptr !418
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %1, align 8, !dbg !14186
  %2 = load i64*, i64** %_8, align 8, !dbg !14178, !nonnull !23, !noundef !23
  store i64* %2, i64** %_6, align 8, !dbg !14178
  %3 = bitcast %"std::io::error::Custom"** %0 to i64**, !dbg !14160
  %4 = load i64*, i64** %_6, align 8, !dbg !14160, !nonnull !23, !noundef !23
  store i64* %4, i64** %3, align 8, !dbg !14160
  %5 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %0, align 8, !dbg !14188, !nonnull !23, !align !378, !noundef !23
  ret %"std::io::error::Custom"* %5, !dbg !14188
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc62c2300a8c60ecfE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>") %0, %"core::result::Result<&str, usize>"* %self) unnamed_addr #1 !dbg !14189 {
start:
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill = alloca i64, align 8
  %_6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<&str, usize>"* %self, metadata !14209, metadata !DIExpression()), !dbg !14214
  %1 = bitcast %"core::result::Result<&str, usize>"* %self to i64*, !dbg !14215
  %_2 = load i64, i64* %1, align 8, !dbg !14215, !range !3483, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !14216

bb2:                                              ; preds = %start
  unreachable, !dbg !14215

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<&str, usize>"* %self to %"core::result::Result<&str, usize>::Ok"*, !dbg !14217
  %3 = getelementptr inbounds %"core::result::Result<&str, usize>::Ok", %"core::result::Result<&str, usize>::Ok"* %2, i32 0, i32 1, !dbg !14217
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !14217
  %v.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !dbg !14217, !nonnull !23, !align !912, !noundef !23
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !14217
  %v.1 = load i64, i64* %5, align 8, !dbg !14217
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !14217
  store [0 x i8]* %v.0, [0 x i8]** %6, align 8, !dbg !14217
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !14217
  store i64 %v.1, i64* %7, align 8, !dbg !14217
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !14210, metadata !DIExpression()), !dbg !14218
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"*, !dbg !14219
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"* %8, i32 0, i32 1, !dbg !14219
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !14219
  store [0 x i8]* %v.0, [0 x i8]** %10, align 8, !dbg !14219
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !14219
  store i64 %v.1, i64* %11, align 8, !dbg !14219
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to i64*, !dbg !14219
  store i64 0, i64* %12, align 8, !dbg !14219
  br label %bb4, !dbg !14220

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<&str, usize>"* %self to %"core::result::Result<&str, usize>::Err"*, !dbg !14221
  %14 = getelementptr inbounds %"core::result::Result<&str, usize>::Err", %"core::result::Result<&str, usize>::Err"* %13, i32 0, i32 1, !dbg !14221
  %e = load i64, i64* %14, align 8, !dbg !14221
  store i64 %e, i64* %e.dbg.spill, align 8, !dbg !14221
  call void @llvm.dbg.declare(metadata i64* %e.dbg.spill, metadata !14212, metadata !DIExpression()), !dbg !14222
  store i64 %e, i64* %_6, align 8, !dbg !14223
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"*, !dbg !14224
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"* %15, i32 0, i32 1, !dbg !14224
  %17 = load i64, i64* %_6, align 8, !dbg !14224
  store i64 %17, i64* %16, align 8, !dbg !14224
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to i64*, !dbg !14224
  store i64 1, i64* %18, align 8, !dbg !14224
  br label %bb4, !dbg !14225

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14226
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h73dbbdeebee6071cE"(i32 %ch) unnamed_addr #1 !dbg !14227 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %_1.dbg.spill, metadata !14232, metadata !DIExpression()), !dbg !14233
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !14231, metadata !DIExpression()), !dbg !14234
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !14235
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !14236, metadata !DIExpression()), !dbg !14243
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !14243
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !14245, metadata !DIExpression()), !dbg !14251
  store i32 %ch, i32* %0, align 4, !dbg !14251
  %1 = load i32, i32* %0, align 4, !dbg !14251, !range !466, !noundef !23
  br label %bb1, !dbg !14251

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !14253
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17ha9b3fa3a7f61912dE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #1 !dbg !14254 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %index.dbg.spill23 = alloca { i64, i64 }, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill21 = alloca [4 x i8]*, align 8
  %self.dbg.spill19 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill17 = alloca { [0 x i8]*, i64 }, align 8
  %found_char.dbg.spill = alloca i64, align 8
  %index.dbg.spill16 = alloca i64, align 8
  %last_byte.dbg.spill = alloca i8, align 1
  %2 = alloca i8*, align 8
  %count.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill12 = alloca i8*, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  %_51 = alloca { i64, i64 }, align 8
  %index4 = alloca { i64, i64 }, align 8
  %_46 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %index3 = alloca { i64, i64 }, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %index = alloca { i64, i64 }, align 8
  %self1 = alloca { i8*, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !14260, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self1, metadata !14276, metadata !DIExpression()), !dbg !14300
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index, metadata !14302, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !14263, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !14312, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index3, metadata !14320, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice, metadata !14273, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index4, metadata !14328, metadata !DIExpression()), !dbg !14339
  br label %bb1, !dbg !14341

bb1:                                              ; preds = %bb13, %start
  %4 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !14301
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !14301
  %_55.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !14301, !nonnull !23, !align !912, !noundef !23
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !14301
  %_55.1 = load i64, i64* %6, align 8, !dbg !14301
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !14301
  store [0 x i8]* %_55.0, [0 x i8]** %7, align 8, !dbg !14301
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !14301
  store i64 %_55.1, i64* %8, align 8, !dbg !14301
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !14342, metadata !DIExpression()), !dbg !14346
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !14346
  store [0 x i8]* %_55.0, [0 x i8]** %9, align 8, !dbg !14346
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !14346
  store i64 %_55.1, i64* %10, align 8, !dbg !14346
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !14346
  %_6.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !14346, !nonnull !23, !align !912, !noundef !23
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !14346
  %_6.1 = load i64, i64* %12, align 8, !dbg !14346
  br label %bb17, !dbg !14346

bb17:                                             ; preds = %bb1
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !14301
  store [0 x i8]* %_6.0, [0 x i8]** %13, align 8, !dbg !14301
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !14301
  store i64 %_6.1, i64* %14, align 8, !dbg !14301
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !14308, metadata !DIExpression()), !dbg !14310
  %15 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14347
  %_9 = load i64, i64* %15, align 8, !dbg !14347
  %16 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !14348
  %_10 = load i64, i64* %16, align 8, !dbg !14348
  %17 = bitcast { i64, i64 }* %index to i64*, !dbg !14347
  store i64 %_9, i64* %17, align 8, !dbg !14347
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !14347
  store i64 %_10, i64* %18, align 8, !dbg !14347
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 0, !dbg !14310
  %_58.0 = load i64, i64* %19, align 8, !dbg !14310
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !14310
  %_58.1 = load i64, i64* %20, align 8, !dbg !14310
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %21 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h47415f499ca832f7E"(i64 %_58.0, i64 %_58.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !14310
  store { i8*, i64 } %21, { i8*, i64 }* %self1, align 8, !dbg !14310
  br label %bb18, !dbg !14310

bb18:                                             ; preds = %bb17
  %22 = bitcast { i8*, i64 }* %self1 to {}**, !dbg !14300
  %23 = load {}*, {}** %22, align 8, !dbg !14300
  %24 = icmp eq {}* %23, null, !dbg !14300
  %_60 = select i1 %24, i64 0, i64 1, !dbg !14300
  switch i64 %_60, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !14300

bb20:                                             ; preds = %bb18
  unreachable, !dbg !14300

bb19:                                             ; preds = %bb18
  %25 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !14300
  store {}* null, {}** %25, align 8, !dbg !14300
  br label %bb2, !dbg !14300

bb21:                                             ; preds = %bb18
  %26 = bitcast { i8*, i64 }* %self1 to { [0 x i8]*, i64 }*, !dbg !14300
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !14300
  %v.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !14300, !nonnull !23, !align !912, !noundef !23
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !14300
  %v.1 = load i64, i64* %28, align 8, !dbg !14300
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !14300
  store [0 x i8]* %v.0, [0 x i8]** %29, align 8, !dbg !14300
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !14300
  store i64 %v.1, i64* %30, align 8, !dbg !14300
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !14297, metadata !DIExpression()), !dbg !14349
  %31 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !14349
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !14349
  store [0 x i8]* %v.0, [0 x i8]** %32, align 8, !dbg !14349
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !14349
  store i64 %v.1, i64* %33, align 8, !dbg !14349
  br label %bb2, !dbg !14300

bb2:                                              ; preds = %bb19, %bb21
  %34 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !14301
  %35 = load {}*, {}** %34, align 8, !dbg !14301
  %36 = icmp eq {}* %35, null, !dbg !14301
  %_11 = select i1 %36, i64 1, i64 0, !dbg !14301
  switch i64 %_11, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !14301

bb4:                                              ; preds = %bb2
  unreachable, !dbg !14301

bb3:                                              ; preds = %bb2
  %37 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !14301
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !14301
  %val.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !14301, !nonnull !23, !align !912, !noundef !23
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !14301
  %val.1 = load i64, i64* %39, align 8, !dbg !14301
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !14301
  store [0 x i8]* %val.0, [0 x i8]** %40, align 8, !dbg !14301
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !14301
  store i64 %val.1, i64* %41, align 8, !dbg !14301
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !14265, metadata !DIExpression()), !dbg !14350
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !14350
  store [0 x i8]* %val.0, [0 x i8]** %42, align 8, !dbg !14350
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !14350
  store i64 %val.1, i64* %43, align 8, !dbg !14350
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !14261, metadata !DIExpression()), !dbg !14351
  %_18 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !14352
  %self.0 = bitcast [4 x i8]* %_18 to [0 x i8]*, !dbg !14352, !rawptr !418
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !14352
  store [0 x i8]* %self.0, [0 x i8]** %44, align 8, !dbg !14352
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !14352
  store i64 4, i64* %45, align 8, !dbg !14352
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !14353, metadata !DIExpression()), !dbg !14360
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14361
  %_20 = load i64, i64* %46, align 8, !dbg !14361
  %index8 = sub i64 %_20, 1, !dbg !14361, !rawptr !418
  store i64 %index8, i64* %index.dbg.spill, align 8, !dbg !14361
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !14359, metadata !DIExpression()), !dbg !14360
  store i64 %index8, i64* %self.dbg.spill9, align 8, !dbg !14360
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !14362, metadata !DIExpression()), !dbg !14376
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !14360
  store [0 x i8]* %self.0, [0 x i8]** %47, align 8, !dbg !14360
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !14360
  store i64 4, i64* %48, align 8, !dbg !14360
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !14368, metadata !DIExpression()), !dbg !14376
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !14376
  store [0 x i8]* %self.0, [0 x i8]** %49, align 8, !dbg !14376
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !14376
  store i64 4, i64* %50, align 8, !dbg !14376
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !14378, metadata !DIExpression()), !dbg !14382
  %self11 = bitcast [0 x i8]* %self.0 to i8*, !dbg !14382, !rawptr !418
  store i8* %self11, i8** %self.dbg.spill12, align 8, !dbg !14382
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill12, metadata !14384, metadata !DIExpression()), !dbg !14389
  store i64 %index8, i64* %count.dbg.spill, align 8, !dbg !14376
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !14388, metadata !DIExpression()), !dbg !14389
  store i8* %self11, i8** %self.dbg.spill13, align 8, !dbg !14389
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !14390, metadata !DIExpression()), !dbg !14395
  store i64 %index8, i64* %count.dbg.spill14, align 8, !dbg !14389
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill14, metadata !14394, metadata !DIExpression()), !dbg !14395
  %51 = getelementptr inbounds i8, i8* %self11, i64 %index8, !dbg !14395
  store i8* %51, i8** %2, align 8, !dbg !14395
  %_63 = load i8*, i8** %2, align 8, !dbg !14395
  br label %bb22, !dbg !14395

bb5:                                              ; preds = %bb2
  %52 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !14318
  store i64 0, i64* %52, align 8, !dbg !14318
  br label %bb16, !dbg !14397

bb16:                                             ; preds = %bb15, %bb5
  ret void, !dbg !14399

bb22:                                             ; preds = %bb3
  %last_byte = load i8, i8* %_63, align 1, !dbg !14400
  store i8 %last_byte, i8* %last_byte.dbg.spill, align 1, !dbg !14400
  call void @llvm.dbg.declare(metadata i8* %last_byte.dbg.spill, metadata !14267, metadata !DIExpression()), !dbg !14401
; call core::slice::memchr::memchr
  %53 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17h4e438ee7cd669ff4E(i8 %last_byte, [0 x i8]* align 1 %val.0, i64 %val.1), !dbg !14402
  store { i64, i64 } %53, { i64, i64 }* %_21, align 8, !dbg !14402
  br label %bb6, !dbg !14402

bb6:                                              ; preds = %bb22
  %54 = bitcast { i64, i64 }* %_21 to i64*, !dbg !14403
  %_24 = load i64, i64* %54, align 8, !dbg !14403, !range !3483, !noundef !23
  %55 = icmp eq i64 %_24, 1, !dbg !14403
  br i1 %55, label %bb7, label %bb14, !dbg !14403

bb7:                                              ; preds = %bb6
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1, !dbg !14404
  %index15 = load i64, i64* %56, align 8, !dbg !14404
  store i64 %index15, i64* %index.dbg.spill16, align 8, !dbg !14404
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill16, metadata !14269, metadata !DIExpression()), !dbg !14404
  %_26 = add i64 %index15, 1, !dbg !14405
  %57 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14406
  %58 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14406
  %59 = load i64, i64* %58, align 8, !dbg !14406
  %60 = add i64 %59, %_26, !dbg !14406
  store i64 %60, i64* %57, align 8, !dbg !14406
  %61 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14407
  %_29 = load i64, i64* %61, align 8, !dbg !14407
  %62 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14408
  %_30 = load i64, i64* %62, align 8, !dbg !14408
  %_28 = icmp uge i64 %_29, %_30, !dbg !14407
  br i1 %_28, label %bb8, label %bb13, !dbg !14407

bb14:                                             ; preds = %bb6
  %63 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !14409
  %_54 = load i64, i64* %63, align 8, !dbg !14409
  %64 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14410
  store i64 %_54, i64* %64, align 8, !dbg !14410
  %65 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !14411
  store i64 0, i64* %65, align 8, !dbg !14411
  br label %bb15, !dbg !14412

bb15:                                             ; preds = %bb10, %bb14
  br label %bb16, !dbg !14397

bb13:                                             ; preds = %bb12, %bb7
  br label %bb1, !dbg !14341

bb8:                                              ; preds = %bb7
  %66 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14413
  %_32 = load i64, i64* %66, align 8, !dbg !14413
  %67 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14414
  %_33 = load i64, i64* %67, align 8, !dbg !14414
  %found_char = sub i64 %_32, %_33, !dbg !14413
  store i64 %found_char, i64* %found_char.dbg.spill, align 8, !dbg !14413
  call void @llvm.dbg.declare(metadata i64* %found_char.dbg.spill, metadata !14271, metadata !DIExpression()), !dbg !14415
  %68 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !14326
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0, !dbg !14326
  %_56.0 = load [0 x i8]*, [0 x i8]** %69, align 8, !dbg !14326, !nonnull !23, !align !912, !noundef !23
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1, !dbg !14326
  %_56.1 = load i64, i64* %70, align 8, !dbg !14326
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 0, !dbg !14326
  store [0 x i8]* %_56.0, [0 x i8]** %71, align 8, !dbg !14326
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 1, !dbg !14326
  store i64 %_56.1, i64* %72, align 8, !dbg !14326
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill17, metadata !14416, metadata !DIExpression()), !dbg !14420
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !14420
  store [0 x i8]* %_56.0, [0 x i8]** %73, align 8, !dbg !14420
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !14420
  store i64 %_56.1, i64* %74, align 8, !dbg !14420
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !14420
  %_36.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !14420, !nonnull !23, !align !912, !noundef !23
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !14420
  %_36.1 = load i64, i64* %76, align 8, !dbg !14420
  br label %bb23, !dbg !14420

bb23:                                             ; preds = %bb8
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 0, !dbg !14326
  store [0 x i8]* %_36.0, [0 x i8]** %77, align 8, !dbg !14326
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 1, !dbg !14326
  store i64 %_36.1, i64* %78, align 8, !dbg !14326
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill18, metadata !14324, metadata !DIExpression()), !dbg !14325
  %79 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14421
  %_40 = load i64, i64* %79, align 8, !dbg !14421
  %80 = bitcast { i64, i64 }* %index3 to i64*, !dbg !14422
  store i64 %found_char, i64* %80, align 8, !dbg !14422
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !14422
  store i64 %_40, i64* %81, align 8, !dbg !14422
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 0, !dbg !14325
  %_77.0 = load i64, i64* %82, align 8, !dbg !14325
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !14325
  %_77.1 = load i64, i64* %83, align 8, !dbg !14325
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %84 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h47415f499ca832f7E"(i64 %_77.0, i64 %_77.1, [0 x i8]* align 1 %_36.0, i64 %_36.1), !dbg !14325
  store { i8*, i64 } %84, { i8*, i64 }* %_34, align 8, !dbg !14325
  br label %bb24, !dbg !14325

bb24:                                             ; preds = %bb23
  %85 = bitcast { i8*, i64 }* %_34 to {}**, !dbg !14423
  %86 = load {}*, {}** %85, align 8, !dbg !14423
  %87 = icmp eq {}* %86, null, !dbg !14423
  %_41 = select i1 %87, i64 0, i64 1, !dbg !14423
  %88 = icmp eq i64 %_41, 1, !dbg !14423
  br i1 %88, label %bb9, label %bb12, !dbg !14423

bb9:                                              ; preds = %bb24
  %89 = bitcast { i8*, i64 }* %_34 to { [0 x i8]*, i64 }*, !dbg !14327
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 0, !dbg !14327
  %91 = load [0 x i8]*, [0 x i8]** %90, align 8, !dbg !14327, !nonnull !23, !align !912, !noundef !23
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 1, !dbg !14327
  %93 = load i64, i64* %92, align 8, !dbg !14327
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !14327
  store [0 x i8]* %91, [0 x i8]** %94, align 8, !dbg !14327
  %95 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !14327
  store i64 %93, i64* %95, align 8, !dbg !14327
  store { [0 x i8]*, i64 }* %slice, { [0 x i8]*, i64 }** %self.dbg.spill19, align 8, !dbg !14424
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill19, metadata !14425, metadata !DIExpression()), !dbg !14430
  %self20 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !14340
  store [4 x i8]* %self20, [4 x i8]** %self.dbg.spill21, align 8, !dbg !14340
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill21, metadata !14338, metadata !DIExpression()), !dbg !14339
  %96 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14431
  %_50 = load i64, i64* %96, align 8, !dbg !14431
  %97 = bitcast { i64, i64 }* %index4 to i64*, !dbg !14432
  store i64 0, i64* %97, align 8, !dbg !14432
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !14432
  store i64 %_50, i64* %98, align 8, !dbg !14432
  %_80.0 = bitcast [4 x i8]* %self20 to [0 x i8]*, !dbg !14339
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 0, !dbg !14339
  store [0 x i8]* %_80.0, [0 x i8]** %99, align 8, !dbg !14339
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 1, !dbg !14339
  store i64 4, i64* %100, align 8, !dbg !14339
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill22, metadata !14433, metadata !DIExpression()), !dbg !14440
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 0, !dbg !14339
  %index.0 = load i64, i64* %101, align 8, !dbg !14339
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !14339
  %index.1 = load i64, i64* %102, align 8, !dbg !14339
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 0, !dbg !14339
  store i64 %index.0, i64* %103, align 8, !dbg !14339
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 1, !dbg !14339
  store i64 %index.1, i64* %104, align 8, !dbg !14339
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill23, metadata !14439, metadata !DIExpression()), !dbg !14440
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %105 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h77b2b2fb35959fa1E"(i64 %index.0, i64 %index.1, [0 x i8]* align 1 %_80.0, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc479 to %"core::panic::location::Location"*)), !dbg !14440
  %_47.0 = extractvalue { [0 x i8]*, i64 } %105, 0, !dbg !14440
  %_47.1 = extractvalue { [0 x i8]*, i64 } %105, 1, !dbg !14440
  br label %bb25, !dbg !14440

bb12:                                             ; preds = %bb11, %bb24
  br label %bb13, !dbg !14442

bb25:                                             ; preds = %bb9
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !14443
  store [0 x i8]* %_47.0, [0 x i8]** %106, align 8, !dbg !14443
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !14443
  store i64 %_47.1, i64* %107, align 8, !dbg !14443
  store { [0 x i8]*, i64 }* %_46, { [0 x i8]*, i64 }** %other.dbg.spill, align 8, !dbg !14443
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !14429, metadata !DIExpression()), !dbg !14430
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !14430
  %_87.0 = load [0 x i8]*, [0 x i8]** %108, align 8, !dbg !14430, !nonnull !23, !align !912, !noundef !23
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !14430
  %_87.1 = load i64, i64* %109, align 8, !dbg !14430
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !14430
  %_88.0 = load [0 x i8]*, [0 x i8]** %110, align 8, !dbg !14430, !nonnull !23, !align !912, !noundef !23
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !14430
  %_88.1 = load i64, i64* %111, align 8, !dbg !14430
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %_43 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe80d7d0bf324262E"([0 x i8]* align 1 %_87.0, i64 %_87.1, [0 x i8]* align 1 %_88.0, i64 %_88.1), !dbg !14430
  br label %bb26, !dbg !14430

bb26:                                             ; preds = %bb25
  br i1 %_43, label %bb10, label %bb11, !dbg !14424

bb11:                                             ; preds = %bb26
  br label %bb12, !dbg !14444

bb10:                                             ; preds = %bb26
  %112 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14445
  %_53 = load i64, i64* %112, align 8, !dbg !14445
  %113 = bitcast { i64, i64 }* %_51 to i64*, !dbg !14446
  store i64 %found_char, i64* %113, align 8, !dbg !14446
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !14446
  store i64 %_53, i64* %114, align 8, !dbg !14446
  %115 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !14447
  %116 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %115, i32 0, i32 1, !dbg !14447
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0, !dbg !14447
  %118 = load i64, i64* %117, align 8, !dbg !14447
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !14447
  %120 = load i64, i64* %119, align 8, !dbg !14447
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 0, !dbg !14447
  store i64 %118, i64* %121, align 8, !dbg !14447
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 1, !dbg !14447
  store i64 %120, i64* %122, align 8, !dbg !14447
  %123 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !14447
  store i64 1, i64* %123, align 8, !dbg !14447
  br label %bb15, !dbg !14448
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd05587b02468c61aE"(%"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #1 !dbg !14450 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !14455, metadata !DIExpression()), !dbg !14456
  %0 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !14457
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !14457
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !14457, !nonnull !23, !align !912, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !14457
  %4 = load i64, i64* %3, align 8, !dbg !14457
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !14458
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !14458
  ret { [0 x i8]*, i64 } %6, !dbg !14458
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hd40a09fb05970a28E"() unnamed_addr #1 !dbg !14459 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !14463, metadata !DIExpression()), !dbg !14464
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !14465
  store i64 0, i64* %1, align 8, !dbg !14465
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !14466
  %3 = load i64, i64* %2, align 8, !dbg !14466, !range !3483, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14466
  %5 = load i64, i64* %4, align 8, !dbg !14466
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !14466
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !14466
  ret { i64, i64 } %7, !dbg !14466
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf84b46cf7461bd8eE"(%"core::str::iter::CharIndices"* align 8 %self) unnamed_addr #1 !dbg !14467 {
start:
  %len.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %diff.dbg.spill20 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %size.dbg.spill14 = alloca i64, align 8
  %start.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill11 = alloca { i8*, i8* }*, align 8
  %index.dbg.spill = alloca i64, align 8
  %ch.dbg.spill = alloca i32, align 4
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %8 = alloca { i64, i32 }, align 8
  store %"core::str::iter::CharIndices"* %self, %"core::str::iter::CharIndices"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %self.dbg.spill, metadata !14470, metadata !DIExpression()), !dbg !14479
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !14480
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !14480
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !14481, metadata !DIExpression()), !dbg !14494
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !14494
  %start3 = load i8*, i8** %9, align 8, !dbg !14494, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !14494
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !14485, metadata !DIExpression()), !dbg !14495
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !14496
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !14488, metadata !DIExpression()), !dbg !14502
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !14502
  %self4 = load i8*, i8** %10, align 8, !dbg !14502, !rawptr !418
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !14502
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !14503, metadata !DIExpression()), !dbg !14507
  %11 = bitcast i64* %7 to i8**, !dbg !14507
  store i8* %self4, i8** %11, align 8, !dbg !14507
  %_26 = load i64, i64* %7, align 8, !dbg !14507
  br label %bb7, !dbg !14507

bb7:                                              ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !14502
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !14509, metadata !DIExpression()), !dbg !14513
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !14513
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !14515, metadata !DIExpression()), !dbg !14519
  %12 = bitcast i64* %6 to i8**, !dbg !14519
  store i8* %start3, i8** %12, align 8, !dbg !14519
  %_28 = load i64, i64* %6, align 8, !dbg !14519
  br label %bb8, !dbg !14519

bb8:                                              ; preds = %bb7
  %13 = sub nuw i64 %_26, %_28, !dbg !14502
  store i64 %13, i64* %5, align 8, !dbg !14502
  %diff = load i64, i64* %5, align 8, !dbg !14502
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !14502
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !14491, metadata !DIExpression()), !dbg !14520
  br label %bb5, !dbg !14502

bb5:                                              ; preds = %bb8
  %14 = udiv exact i64 %diff, 1, !dbg !14520
  store i64 %14, i64* %4, align 8, !dbg !14520
  %pre_len = load i64, i64* %4, align 8, !dbg !14520
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !14520
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !14471, metadata !DIExpression()), !dbg !14521
  br label %bb6, !dbg !14520

bb6:                                              ; preds = %bb5
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !14522
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !14522
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !14523, metadata !DIExpression()), !dbg !14526
; call core::str::validations::next_code_point
  %15 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17haf5cc2a85bb4f12dE({ i8*, i8* }* align 8 %self8), !dbg !14526
  %_36.0 = extractvalue { i32, i32 } %15, 0, !dbg !14526
  %_36.1 = extractvalue { i32, i32 } %15, 1, !dbg !14526
  br label %bb9, !dbg !14526

bb9:                                              ; preds = %bb6
; call core::option::Option<T>::map
  %16 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hc8a456bd96a89377E"(i32 %_36.0, i32 %_36.1), !dbg !14526, !range !376
  store i32 %16, i32* %_4, align 4, !dbg !14526
  br label %bb10, !dbg !14526

bb10:                                             ; preds = %bb9
  %17 = load i32, i32* %_4, align 4, !dbg !14522, !range !376, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !14522
  %19 = icmp eq i32 %18, 0, !dbg !14522
  %_6 = select i1 %19, i64 0, i64 1, !dbg !14522
  switch i64 %_6, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !14527

bb2:                                              ; preds = %bb10
  unreachable, !dbg !14522

bb3:                                              ; preds = %bb10
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !14528
  store i32 1114112, i32* %20, align 8, !dbg !14528
  br label %bb4, !dbg !14528

bb1:                                              ; preds = %bb10
  %ch = load i32, i32* %_4, align 4, !dbg !14529, !range !466, !noundef !23
  store i32 %ch, i32* %ch.dbg.spill, align 4, !dbg !14529
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !14473, metadata !DIExpression()), !dbg !14530
  %21 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !14531
  %index = load i64, i64* %21, align 8, !dbg !14531
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !14531
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !14475, metadata !DIExpression()), !dbg !14532
  %self10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !14533
  store { i8*, i8* }* %self10, { i8*, i8* }** %self.dbg.spill11, align 8, !dbg !14533
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill11, metadata !14534, metadata !DIExpression()), !dbg !14547
  %22 = bitcast { i8*, i8* }* %self10 to i8**, !dbg !14547
  %start12 = load i8*, i8** %22, align 8, !dbg !14547, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start12, i8** %start.dbg.spill13, align 8, !dbg !14547
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill13, metadata !14538, metadata !DIExpression()), !dbg !14548
  store i64 1, i64* %size.dbg.spill14, align 8, !dbg !14549
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill14, metadata !14541, metadata !DIExpression()), !dbg !14555
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self10, i32 0, i32 1, !dbg !14555
  %self15 = load i8*, i8** %23, align 8, !dbg !14555, !rawptr !418
  store i8* %self15, i8** %self.dbg.spill16, align 8, !dbg !14555
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !14556, metadata !DIExpression()), !dbg !14560
  %24 = bitcast i64* %3 to i8**, !dbg !14560
  store i8* %self15, i8** %24, align 8, !dbg !14560
  %_49 = load i64, i64* %3, align 8, !dbg !14560
  br label %bb13, !dbg !14560

bb13:                                             ; preds = %bb1
  store i8* %start12, i8** %self.dbg.spill17, align 8, !dbg !14555
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !14562, metadata !DIExpression()), !dbg !14566
  store i8* %start12, i8** %self.dbg.spill18, align 8, !dbg !14566
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !14568, metadata !DIExpression()), !dbg !14572
  %25 = bitcast i64* %2 to i8**, !dbg !14572
  store i8* %start12, i8** %25, align 8, !dbg !14572
  %_51 = load i64, i64* %2, align 8, !dbg !14572
  br label %bb14, !dbg !14572

bb14:                                             ; preds = %bb13
  %26 = sub nuw i64 %_49, %_51, !dbg !14555
  store i64 %26, i64* %1, align 8, !dbg !14555
  %diff19 = load i64, i64* %1, align 8, !dbg !14555
  store i64 %diff19, i64* %diff.dbg.spill20, align 8, !dbg !14555
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill20, metadata !14544, metadata !DIExpression()), !dbg !14573
  br label %bb11, !dbg !14555

bb11:                                             ; preds = %bb14
  %27 = udiv exact i64 %diff19, 1, !dbg !14573
  store i64 %27, i64* %0, align 8, !dbg !14573
  %len = load i64, i64* %0, align 8, !dbg !14573
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !14573
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !14477, metadata !DIExpression()), !dbg !14574
  br label %bb12, !dbg !14573

bb12:                                             ; preds = %bb11
  %_11 = sub i64 %pre_len, %len, !dbg !14575
  %28 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !14576
  %29 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !14576
  %30 = load i64, i64* %29, align 8, !dbg !14576
  %31 = add i64 %30, %_11, !dbg !14576
  store i64 %31, i64* %28, align 8, !dbg !14576
  %32 = bitcast { i64, i32 }* %_14 to i64*, !dbg !14577
  store i64 %index, i64* %32, align 8, !dbg !14577
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1, !dbg !14577
  store i32 %ch, i32* %33, align 8, !dbg !14577
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0, !dbg !14578
  %35 = load i64, i64* %34, align 8, !dbg !14578
  %36 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1, !dbg !14578
  %37 = load i32, i32* %36, align 8, !dbg !14578, !range !466, !noundef !23
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0, !dbg !14578
  store i64 %35, i64* %38, align 8, !dbg !14578
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !14578
  store i32 %37, i32* %39, align 8, !dbg !14578
  br label %bb4, !dbg !14579

bb4:                                              ; preds = %bb3, %bb12
  %40 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0, !dbg !14580
  %41 = load i64, i64* %40, align 8, !dbg !14580
  %42 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !14580
  %43 = load i32, i32* %42, align 8, !dbg !14580, !range !376, !noundef !23
  %44 = insertvalue { i64, i32 } undef, i64 %41, 0, !dbg !14580
  %45 = insertvalue { i64, i32 } %44, i32 %43, 1, !dbg !14580
  ret { i64, i32 } %45, !dbg !14580
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h6d92f5d3f3f7c62fE"({ i64, i64 }* align 8 %self) unnamed_addr #1 !dbg !14581 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !14584, metadata !DIExpression()), !dbg !14587
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !14588
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !14589
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hf4a1568806407259E"(i64* align 8 %_3, i64* align 8 %_4), !dbg !14588
  br label %bb1, !dbg !14588

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !14588

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !14590
  store i64 0, i64* %1, align 8, !dbg !14590
  br label %bb7, !dbg !14591

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !14592
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7f2aa81a50b85865E"(i64* align 8 %_7), !dbg !14592
  br label %bb3, !dbg !14592

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1d4dcef1ac74e1c9E"(i64 %_6, i64 1), !dbg !14593
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !14593
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !14585, metadata !DIExpression()), !dbg !14594
  br label %bb4, !dbg !14593

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !14595
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h0284928425902346E(i64* align 8 %_10, i64 %n), !dbg !14596
  br label %bb5, !dbg !14596

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14597
  store i64 %_8, i64* %2, align 8, !dbg !14597
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !14597
  store i64 1, i64* %3, align 8, !dbg !14597
  br label %bb7, !dbg !14591

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !14598
  %5 = load i64, i64* %4, align 8, !dbg !14598, !range !3483, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14598
  %7 = load i64, i64* %6, align 8, !dbg !14598
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !14598
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !14598
  ret { i64, i64 } %9, !dbg !14598
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E"(%"core::str::iter::Split<char>"* align 8 %self) unnamed_addr #1 !dbg !14599 {
start:
  %self.dbg.spill = alloca %"core::str::iter::Split<char>"*, align 8
  store %"core::str::iter::Split<char>"* %self, %"core::str::iter::Split<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"** %self.dbg.spill, metadata !14604, metadata !DIExpression()), !dbg !14605
  %_2 = bitcast %"core::str::iter::Split<char>"* %self to %"core::str::iter::SplitInternal<char>"*, !dbg !14606
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha8f598893f77e507E"(%"core::str::iter::SplitInternal<char>"* align 8 %_2), !dbg !14606
  %1 = extractvalue { i8*, i64 } %0, 0, !dbg !14606
  %2 = extractvalue { i8*, i64 } %0, 1, !dbg !14606
  br label %bb1, !dbg !14606

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0, !dbg !14607
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1, !dbg !14607
  ret { i8*, i64 } %4, !dbg !14607
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h630a2ba417877fbfE"(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !14608 {
start:
  %self.dbg.spill = alloca %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  store %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !14613, metadata !DIExpression()), !dbg !14614
  %_2 = bitcast %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to %"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, !dbg !14615
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h5ac10359c124edb4E"(%"core::str::iter::SplitInternal<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %_2), !dbg !14615
  %1 = extractvalue { i8*, i64 } %0, 0, !dbg !14615
  %2 = extractvalue { i8*, i64 } %0, 1, !dbg !14615
  br label %bb1, !dbg !14615

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0, !dbg !14616
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1, !dbg !14616
  ret { i8*, i64 } %4, !dbg !14616
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hfc31898364bfccdcE"({ i64*, i64* }* align 8 %self, i64* align 8 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !14617 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_9 = alloca i64*, align 8
  %_3 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %f = alloca i64*, align 8
  store i64* %0, i64** %f, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !14622, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.declare(metadata i64** %f, metadata !14623, metadata !DIExpression()), !dbg !14629
  br label %bb1, !dbg !14630

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !14631

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !14632

cleanup:                                          ; preds = %bb3, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %_3, align 8, !dbg !14631
  %9 = bitcast i64** %_3 to {}**, !dbg !14633
  %10 = load {}*, {}** %9, align 8, !dbg !14633
  %11 = icmp eq {}* %10, null, !dbg !14633
  %_5 = select i1 %11, i64 0, i64 1, !dbg !14633
  %12 = icmp eq i64 %_5, 1, !dbg !14633
  br i1 %12, label %bb3, label %bb7, !dbg !14633

bb3:                                              ; preds = %bb2
  %13 = bitcast i64** %_3 to { [0 x i8]*, i64 }**, !dbg !14634
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %13, align 8, !dbg !14634, !nonnull !23, !align !378, !noundef !23
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !14634
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !14624, metadata !DIExpression()), !dbg !14634
  %14 = bitcast i64** %_9 to { [0 x i8]*, i64 }**, !dbg !14635
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %14, align 8, !dbg !14635
  %15 = load i64*, i64** %_9, align 8, !dbg !14635, !nonnull !23, !align !378, !noundef !23
  %16 = bitcast i64* %15 to { [0 x i8]*, i64 }*, !dbg !14635
; invoke <T as core::slice::cmp::SliceContains>::slice_contains::{{closure}}
  %_7 = invoke zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd0a7c4d41da4d109E"(i64** align 8 %f, { [0 x i8]*, i64 }* align 8 %16)
          to label %bb4 unwind label %cleanup, !dbg !14635

bb7:                                              ; preds = %bb2
  store i8 0, i8* %2, align 1, !dbg !14636
  br label %bb8, !dbg !14632

bb8:                                              ; preds = %bb5, %bb7
  %17 = load i8, i8* %2, align 1, !dbg !14637, !range !298, !noundef !23
  %18 = trunc i8 %17 to i1, !dbg !14637
  ret i1 %18, !dbg !14637

bb4:                                              ; preds = %bb3
  br i1 %_7, label %bb5, label %bb6, !dbg !14635

bb10:                                             ; preds = %bb9
  %19 = bitcast { i8*, i32 }* %1 to i8**, !dbg !14638
  %20 = load i8*, i8** %19, align 8, !dbg !14638
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !14638
  %22 = load i32, i32* %21, align 8, !dbg !14638
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0, !dbg !14638
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1, !dbg !14638
  resume { i8*, i32 } %24, !dbg !14638

bb6:                                              ; preds = %bb4
  br label %bb1, !dbg !14630

bb5:                                              ; preds = %bb4
  store i8 1, i8* %2, align 1, !dbg !14639
  br label %bb8, !dbg !14632
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %self) unnamed_addr #1 !dbg !14640 {
start:
  %self.dbg.spill26 = alloca i64*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill21 = alloca i64*, align 8
  %old.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill17 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill16 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_62 = alloca i64*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca { [0 x i8]*, i64 }*, align 8, !rawptr !418
  %6 = alloca i64*, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !14644, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !14646, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !14662, metadata !DIExpression()), !dbg !14667
  %7 = bitcast { i64*, i64* }* %self to i64**, !dbg !14661
  %self2 = load i64*, i64** %7, align 8, !dbg !14661, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !14661
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !14676, metadata !DIExpression()), !dbg !14680
  %_21 = bitcast i64* %self2 to { [0 x i8]*, i64 }*, !dbg !14680, !rawptr !418
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !14680
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !14659, metadata !DIExpression()), !dbg !14681
  %self5 = bitcast { [0 x i8]*, i64 }* %_21 to i8*, !dbg !14681, !rawptr !418
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !14681
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !14682, metadata !DIExpression()), !dbg !14687
  %8 = bitcast {}** %5 to i64*, !dbg !14689
  store i64 0, i64* %8, align 8, !dbg !14689
  %data_address = load {}*, {}** %5, align 8, !dbg !14689, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !14689
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !14650, metadata !DIExpression()), !dbg !14651
  br label %bb9, !dbg !14689

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !14651, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !14651
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14651
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !14651
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !14651
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !14651
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !14651
  %other = load i8*, i8** %13, align 8, !dbg !14651, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !14651
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !14686, metadata !DIExpression()), !dbg !14687
  %14 = icmp eq i8* %self5, %other, !dbg !14687
  %15 = zext i1 %14 to i8, !dbg !14687
  store i8 %15, i8* %4, align 1, !dbg !14687
  %16 = load i8, i8* %4, align 1, !dbg !14687, !range !298, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !14687
  br label %bb10, !dbg !14687

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !14695
  call void @llvm.assume(i1 %_3), !dbg !14696
  br label %bb1, !dbg !14696

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !14697

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !14698

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14675
  %18 = bitcast i64** %17 to { [0 x i8]*, i64 }**, !dbg !14675
  %self7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %18, align 8, !dbg !14675, !rawptr !418
  store { [0 x i8]*, i64 }* %self7, { [0 x i8]*, i64 }** %self.dbg.spill8, align 8, !dbg !14675
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill8, metadata !14673, metadata !DIExpression()), !dbg !14699
  %self9 = bitcast { [0 x i8]*, i64 }* %self7 to i8*, !dbg !14699, !rawptr !418
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !14699
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !14700, metadata !DIExpression()), !dbg !14705
  %19 = bitcast {}** %3 to i64*, !dbg !14707
  store i64 0, i64* %19, align 8, !dbg !14707
  %data_address11 = load {}*, {}** %3, align 8, !dbg !14707, !rawptr !418
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !14707
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !14666, metadata !DIExpression()), !dbg !14667
  br label %bb11, !dbg !14707

bb11:                                             ; preds = %bb2
  %20 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !14667, !rawptr !418
  store {}* %data_address11, {}** %20, align 8, !dbg !14667
  %21 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14667
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %21 to i8*, !dbg !14667
  %23 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !14667
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 8, i1 false), !dbg !14667
  %24 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !14667
  %other13 = load i8*, i8** %24, align 8, !dbg !14667, !rawptr !418
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !14667
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !14704, metadata !DIExpression()), !dbg !14705
  %25 = icmp eq i8* %self9, %other13, !dbg !14705
  %26 = zext i1 %25 to i8, !dbg !14705
  store i8 %26, i8* %2, align 1, !dbg !14705
  %27 = load i8, i8* %2, align 1, !dbg !14705, !range !298, !noundef !23
  %_10 = trunc i8 %27 to i1, !dbg !14705
  br label %bb12, !dbg !14705

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !14713
  call void @llvm.assume(i1 %_9), !dbg !14714
  br label %bb3, !dbg !14714

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !14698

bb5:                                              ; preds = %bb4, %bb3
  %28 = bitcast { i64*, i64* }* %self to i64**, !dbg !14715
  %self15 = load i64*, i64** %28, align 8, !dbg !14715, !nonnull !23, !noundef !23
  store i64* %self15, i64** %self.dbg.spill16, align 8, !dbg !14715
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill16, metadata !14716, metadata !DIExpression()), !dbg !14720
  %_51 = bitcast i64* %self15 to { [0 x i8]*, i64 }*, !dbg !14720, !rawptr !418
  %29 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14715
  %30 = bitcast i64** %29 to { [0 x i8]*, i64 }**, !dbg !14715
  %_16 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %30, align 8, !dbg !14715, !rawptr !418
  %_12 = icmp eq { [0 x i8]*, i64 }* %_51, %_16, !dbg !14715
  br i1 %_12, label %bb6, label %bb7, !dbg !14715

bb7:                                              ; preds = %bb5
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill17, align 8, !dbg !14722
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill17, metadata !14723, metadata !DIExpression()), !dbg !14731
  br i1 false, label %bb13, label %bb14, !dbg !14731

bb6:                                              ; preds = %bb5
  %31 = bitcast i64** %6 to {}**, !dbg !14733
  store {}* null, {}** %31, align 8, !dbg !14733
  br label %bb8, !dbg !14734

bb8:                                              ; preds = %bb15, %bb6
  %32 = load i64*, i64** %6, align 8, !dbg !14735, !align !378
  ret i64* %32, !dbg !14735

bb13:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14731
  %34 = bitcast i64** %33 to { [0 x i8]*, i64 }**, !dbg !14731
  %_56 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %34, align 8, !dbg !14731, !rawptr !418
  %self23 = bitcast { [0 x i8]*, i64 }* %_56 to i8*, !dbg !14731, !rawptr !418
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !14731
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !14736, metadata !DIExpression()), !dbg !14741
  %35 = getelementptr i8, i8* %self23, i64 -1, !dbg !14741
  store i8* %35, i8** %0, align 8, !dbg !14741
  %_54 = load i8*, i8** %0, align 8, !dbg !14741, !rawptr !418
  br label %bb16, !dbg !14741

bb14:                                             ; preds = %bb7
  %36 = bitcast { i64*, i64* }* %self to i64**, !dbg !14731
  %self18 = load i64*, i64** %36, align 8, !dbg !14731, !nonnull !23, !noundef !23
  store i64* %self18, i64** %self.dbg.spill19, align 8, !dbg !14731
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !14743, metadata !DIExpression()), !dbg !14747
  %_71 = bitcast i64* %self18 to { [0 x i8]*, i64 }*, !dbg !14747, !rawptr !418
  store { [0 x i8]*, i64 }* %_71, { [0 x i8]*, i64 }** %old.dbg.spill, align 8, !dbg !14747
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %old.dbg.spill, metadata !14729, metadata !DIExpression()), !dbg !14749
  %37 = bitcast { i64*, i64* }* %self to i64**, !dbg !14749
  %self20 = load i64*, i64** %37, align 8, !dbg !14749, !nonnull !23, !noundef !23
  store i64* %self20, i64** %self.dbg.spill21, align 8, !dbg !14749
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill21, metadata !14750, metadata !DIExpression()), !dbg !14754
  %_72 = bitcast i64* %self20 to { [0 x i8]*, i64 }*, !dbg !14754, !rawptr !418
  store { [0 x i8]*, i64 }* %_72, { [0 x i8]*, i64 }** %self.dbg.spill22, align 8, !dbg !14754
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill22, metadata !14756, metadata !DIExpression()), !dbg !14763
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_72, i64 1, !dbg !14763
  store { [0 x i8]*, i64 }* %38, { [0 x i8]*, i64 }** %1, align 8, !dbg !14763
  %_73 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !dbg !14763, !rawptr !418
  br label %bb17, !dbg !14763

bb17:                                             ; preds = %bb14
  store { [0 x i8]*, i64 }* %_73, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !14763
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !14764, metadata !DIExpression()), !dbg !14768
  %39 = bitcast i64** %_62 to { [0 x i8]*, i64 }**, !dbg !14768, !rawptr !418
  store { [0 x i8]*, i64 }* %_73, { [0 x i8]*, i64 }** %39, align 8, !dbg !14768
  %40 = bitcast { i64*, i64* }* %self to i64**, !dbg !14749
  %41 = load i64*, i64** %_62, align 8, !dbg !14749, !nonnull !23, !noundef !23
  store i64* %41, i64** %40, align 8, !dbg !14749
  store { [0 x i8]*, i64 }* %_71, { [0 x i8]*, i64 }** %_19, align 8, !dbg !14749
  br label %bb15, !dbg !14731

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %_19, align 8, !dbg !14722
  %42 = bitcast i64** %6 to { [0 x i8]*, i64 }**, !dbg !14770
  store { [0 x i8]*, i64 }* %_18, { [0 x i8]*, i64 }** %42, align 8, !dbg !14770
  br label %bb8, !dbg !14734

bb16:                                             ; preds = %bb13
  %43 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14731
  %44 = bitcast i64** %43 to { [0 x i8]*, i64 }**, !dbg !14731, !rawptr !418
  %45 = bitcast i8* %_54 to { [0 x i8]*, i64 }*, !dbg !14731
  store { [0 x i8]*, i64 }* %45, { [0 x i8]*, i64 }** %44, align 8, !dbg !14731
  %46 = bitcast { i64*, i64* }* %self to i64**, !dbg !14731
  %self25 = load i64*, i64** %46, align 8, !dbg !14731, !nonnull !23, !noundef !23
  store i64* %self25, i64** %self.dbg.spill26, align 8, !dbg !14731
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill26, metadata !14771, metadata !DIExpression()), !dbg !14775
  %_70 = bitcast i64* %self25 to { [0 x i8]*, i64 }*, !dbg !14775, !rawptr !418
  store { [0 x i8]*, i64 }* %_70, { [0 x i8]*, i64 }** %_19, align 8, !dbg !14731
  br label %bb15, !dbg !14731
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E"({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !14777 {
start:
  %self.dbg.spill23 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill20 = alloca i8*, align 8
  %self.dbg.spill19 = alloca i8*, align 8
  %old.dbg.spill = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_62 = alloca i8*, align 8, !rawptr !418
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8, !rawptr !418
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !14779, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !14781, metadata !DIExpression()), !dbg !14786
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !14795, metadata !DIExpression()), !dbg !14800
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !14794
  %self2 = load i8*, i8** %7, align 8, !dbg !14794, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !14794
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !14809, metadata !DIExpression()), !dbg !14813
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !14813
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !14792, metadata !DIExpression()), !dbg !14814
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !14814
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !14815, metadata !DIExpression()), !dbg !14820
  %8 = bitcast {}** %5 to i64*, !dbg !14822
  store i64 0, i64* %8, align 8, !dbg !14822
  %data_address = load {}*, {}** %5, align 8, !dbg !14822, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !14822
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !14785, metadata !DIExpression()), !dbg !14786
  br label %bb9, !dbg !14822

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !14786, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !14786
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14786
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !14786
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !14786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !14786
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !14786
  %other = load i8*, i8** %13, align 8, !dbg !14786, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !14786
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !14819, metadata !DIExpression()), !dbg !14820
  %14 = icmp eq i8* %self2, %other, !dbg !14820
  %15 = zext i1 %14 to i8, !dbg !14820
  store i8 %15, i8* %4, align 1, !dbg !14820
  %16 = load i8, i8* %4, align 1, !dbg !14820, !range !298, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !14820
  br label %bb10, !dbg !14820

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !14828
  call void @llvm.assume(i1 %_3), !dbg !14829
  br label %bb1, !dbg !14829

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !14830

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !14831

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !14808
  %self6 = load i8*, i8** %17, align 8, !dbg !14808, !rawptr !418
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !14808
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !14806, metadata !DIExpression()), !dbg !14832
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !14832
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !14833, metadata !DIExpression()), !dbg !14838
  %18 = bitcast {}** %3 to i64*, !dbg !14840
  store i64 0, i64* %18, align 8, !dbg !14840
  %data_address9 = load {}*, {}** %3, align 8, !dbg !14840, !rawptr !418
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !14840
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !14799, metadata !DIExpression()), !dbg !14800
  br label %bb11, !dbg !14840

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !14800, !rawptr !418
  store {}* %data_address9, {}** %19, align 8, !dbg !14800
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14800
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !14800
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !14800
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !14800
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !14800
  %other11 = load i8*, i8** %23, align 8, !dbg !14800, !rawptr !418
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !14800
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !14837, metadata !DIExpression()), !dbg !14838
  %24 = icmp eq i8* %self6, %other11, !dbg !14838
  %25 = zext i1 %24 to i8, !dbg !14838
  store i8 %25, i8* %2, align 1, !dbg !14838
  %26 = load i8, i8* %2, align 1, !dbg !14838, !range !298, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !14838
  br label %bb12, !dbg !14838

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !14846
  call void @llvm.assume(i1 %_9), !dbg !14847
  br label %bb3, !dbg !14847

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !14831

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !14848
  %self13 = load i8*, i8** %27, align 8, !dbg !14848, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !14848
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !14849, metadata !DIExpression()), !dbg !14853
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !14848
  %_16 = load i8*, i8** %28, align 8, !dbg !14848, !rawptr !418
  %_12 = icmp eq i8* %self13, %_16, !dbg !14848
  br i1 %_12, label %bb6, label %bb7, !dbg !14848

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !14855
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !14856, metadata !DIExpression()), !dbg !14862
  br i1 false, label %bb13, label %bb14, !dbg !14862

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !14864
  store {}* null, {}** %29, align 8, !dbg !14864
  br label %bb8, !dbg !14865

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !14866, !align !912
  ret i8* %30, !dbg !14866

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !14862
  %_56 = load i8*, i8** %31, align 8, !dbg !14862, !rawptr !418
  store i8* %_56, i8** %self.dbg.spill21, align 8, !dbg !14862
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !14867, metadata !DIExpression()), !dbg !14872
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !14872
  store i8* %32, i8** %0, align 8, !dbg !14872
  %_54 = load i8*, i8** %0, align 8, !dbg !14872, !rawptr !418
  br label %bb16, !dbg !14872

bb14:                                             ; preds = %bb7
  %33 = bitcast { i8*, i8* }* %self to i8**, !dbg !14862
  %self16 = load i8*, i8** %33, align 8, !dbg !14862, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !14862
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !14874, metadata !DIExpression()), !dbg !14878
  store i8* %self16, i8** %old.dbg.spill, align 8, !dbg !14878
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill, metadata !14860, metadata !DIExpression()), !dbg !14880
  %34 = bitcast { i8*, i8* }* %self to i8**, !dbg !14880
  %self18 = load i8*, i8** %34, align 8, !dbg !14880, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self18, i8** %self.dbg.spill19, align 8, !dbg !14880
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill19, metadata !14881, metadata !DIExpression()), !dbg !14885
  store i8* %self18, i8** %self.dbg.spill20, align 8, !dbg !14885
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !14887, metadata !DIExpression()), !dbg !14892
  %35 = getelementptr inbounds i8, i8* %self18, i64 1, !dbg !14892
  store i8* %35, i8** %1, align 8, !dbg !14892
  %_73 = load i8*, i8** %1, align 8, !dbg !14892, !rawptr !418
  br label %bb17, !dbg !14892

bb17:                                             ; preds = %bb14
  store i8* %_73, i8** %ptr.dbg.spill, align 8, !dbg !14892
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14893, metadata !DIExpression()), !dbg !14897
  store i8* %_73, i8** %_62, align 8, !dbg !14897
  %36 = bitcast { i8*, i8* }* %self to i8**, !dbg !14880
  %37 = load i8*, i8** %_62, align 8, !dbg !14880, !nonnull !23, !noundef !23
  store i8* %37, i8** %36, align 8, !dbg !14880
  store i8* %self16, i8** %_19, align 8, !dbg !14880
  br label %bb15, !dbg !14862

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !14855
  store i8* %_18, i8** %6, align 8, !dbg !14899
  br label %bb8, !dbg !14865

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !14862, !rawptr !418
  store i8* %_54, i8** %38, align 8, !dbg !14862
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !14862
  %self22 = load i8*, i8** %39, align 8, !dbg !14862, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %self22, i8** %self.dbg.spill23, align 8, !dbg !14862
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !14900, metadata !DIExpression()), !dbg !14904
  store i8* %self22, i8** %_19, align 8, !dbg !14862
  br label %bb15, !dbg !14862
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hed34674ac8513ac7E"({ i64*, i64* }* align 8 %self) unnamed_addr #1 !dbg !14906 {
start:
  %self.dbg.spill26 = alloca i64*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %1 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill22 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill21 = alloca i64*, align 8
  %old.dbg.spill = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill17 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill16 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_62 = alloca i64*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8, !rawptr !418
  %6 = alloca i64*, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !14922, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !14924, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !14940, metadata !DIExpression()), !dbg !14945
  %7 = bitcast { i64*, i64* }* %self to i64**, !dbg !14939
  %self2 = load i64*, i64** %7, align 8, !dbg !14939, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !14939
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !14954, metadata !DIExpression()), !dbg !14960
  %_21 = bitcast i64* %self2 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14960, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_21, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, align 8, !dbg !14960
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, metadata !14937, metadata !DIExpression()), !dbg !14961
  %self5 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_21 to i8*, !dbg !14961, !rawptr !418
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !14961
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !14962, metadata !DIExpression()), !dbg !14967
  %8 = bitcast {}** %5 to i64*, !dbg !14969
  store i64 0, i64* %8, align 8, !dbg !14969
  %data_address = load {}*, {}** %5, align 8, !dbg !14969, !rawptr !418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !14969
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !14928, metadata !DIExpression()), !dbg !14929
  br label %bb9, !dbg !14969

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !14929, !rawptr !418
  store {}* %data_address, {}** %9, align 8, !dbg !14929
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14929
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !14929
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !14929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !14929
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !14929
  %other = load i8*, i8** %13, align 8, !dbg !14929, !rawptr !418
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !14929
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !14966, metadata !DIExpression()), !dbg !14967
  %14 = icmp eq i8* %self5, %other, !dbg !14967
  %15 = zext i1 %14 to i8, !dbg !14967
  store i8 %15, i8* %4, align 1, !dbg !14967
  %16 = load i8, i8* %4, align 1, !dbg !14967, !range !298, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !14967
  br label %bb10, !dbg !14967

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !14975
  call void @llvm.assume(i1 %_3), !dbg !14976
  br label %bb1, !dbg !14976

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !14977

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !14978

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14953
  %18 = bitcast i64** %17 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14953
  %self7 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %18, align 8, !dbg !14953, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %self7, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill8, align 8, !dbg !14953
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill8, metadata !14951, metadata !DIExpression()), !dbg !14979
  %self9 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %self7 to i8*, !dbg !14979, !rawptr !418
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !14979
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !14980, metadata !DIExpression()), !dbg !14985
  %19 = bitcast {}** %3 to i64*, !dbg !14987
  store i64 0, i64* %19, align 8, !dbg !14987
  %data_address11 = load {}*, {}** %3, align 8, !dbg !14987, !rawptr !418
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !14987
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !14944, metadata !DIExpression()), !dbg !14945
  br label %bb11, !dbg !14987

bb11:                                             ; preds = %bb2
  %20 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !14945, !rawptr !418
  store {}* %data_address11, {}** %20, align 8, !dbg !14945
  %21 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14945
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %21 to i8*, !dbg !14945
  %23 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !14945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 8, i1 false), !dbg !14945
  %24 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !14945
  %other13 = load i8*, i8** %24, align 8, !dbg !14945, !rawptr !418
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !14945
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !14984, metadata !DIExpression()), !dbg !14985
  %25 = icmp eq i8* %self9, %other13, !dbg !14985
  %26 = zext i1 %25 to i8, !dbg !14985
  store i8 %26, i8* %2, align 1, !dbg !14985
  %27 = load i8, i8* %2, align 1, !dbg !14985, !range !298, !noundef !23
  %_10 = trunc i8 %27 to i1, !dbg !14985
  br label %bb12, !dbg !14985

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !14993
  call void @llvm.assume(i1 %_9), !dbg !14994
  br label %bb3, !dbg !14994

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !14978

bb5:                                              ; preds = %bb4, %bb3
  %28 = bitcast { i64*, i64* }* %self to i64**, !dbg !14995
  %self15 = load i64*, i64** %28, align 8, !dbg !14995, !nonnull !23, !noundef !23
  store i64* %self15, i64** %self.dbg.spill16, align 8, !dbg !14995
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill16, metadata !14996, metadata !DIExpression()), !dbg !15000
  %_51 = bitcast i64* %self15 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !15000, !rawptr !418
  %29 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14995
  %30 = bitcast i64** %29 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14995
  %_16 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %30, align 8, !dbg !14995, !rawptr !418
  %_12 = icmp eq { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_51, %_16, !dbg !14995
  br i1 %_12, label %bb6, label %bb7, !dbg !14995

bb7:                                              ; preds = %bb5
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill17, align 8, !dbg !15002
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill17, metadata !15003, metadata !DIExpression()), !dbg !15011
  br i1 false, label %bb13, label %bb14, !dbg !15011

bb6:                                              ; preds = %bb5
  %31 = bitcast i64** %6 to {}**, !dbg !15013
  store {}* null, {}** %31, align 8, !dbg !15013
  br label %bb8, !dbg !15014

bb8:                                              ; preds = %bb15, %bb6
  %32 = load i64*, i64** %6, align 8, !dbg !15015, !align !378
  ret i64* %32, !dbg !15015

bb13:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !15011
  %34 = bitcast i64** %33 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15011
  %_56 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %34, align 8, !dbg !15011, !rawptr !418
  %self23 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_56 to i8*, !dbg !15011, !rawptr !418
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !15011
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !15016, metadata !DIExpression()), !dbg !15021
  %35 = getelementptr i8, i8* %self23, i64 -1, !dbg !15021
  store i8* %35, i8** %0, align 8, !dbg !15021
  %_54 = load i8*, i8** %0, align 8, !dbg !15021, !rawptr !418
  br label %bb16, !dbg !15021

bb14:                                             ; preds = %bb7
  %36 = bitcast { i64*, i64* }* %self to i64**, !dbg !15011
  %self18 = load i64*, i64** %36, align 8, !dbg !15011, !nonnull !23, !noundef !23
  store i64* %self18, i64** %self.dbg.spill19, align 8, !dbg !15011
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !15023, metadata !DIExpression()), !dbg !15027
  %_71 = bitcast i64* %self18 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !15027, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_71, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %old.dbg.spill, align 8, !dbg !15027
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %old.dbg.spill, metadata !15009, metadata !DIExpression()), !dbg !15029
  %37 = bitcast { i64*, i64* }* %self to i64**, !dbg !15029
  %self20 = load i64*, i64** %37, align 8, !dbg !15029, !nonnull !23, !noundef !23
  store i64* %self20, i64** %self.dbg.spill21, align 8, !dbg !15029
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill21, metadata !15030, metadata !DIExpression()), !dbg !15034
  %_72 = bitcast i64* %self20 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !15034, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_72, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill22, align 8, !dbg !15034
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill22, metadata !15036, metadata !DIExpression()), !dbg !15043
  %38 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_72, i64 1, !dbg !15043
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %38, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %1, align 8, !dbg !15043
  %_73 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %1, align 8, !dbg !15043, !rawptr !418
  br label %bb17, !dbg !15043

bb17:                                             ; preds = %bb14
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_73, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, align 8, !dbg !15043
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, metadata !15044, metadata !DIExpression()), !dbg !15048
  %39 = bitcast i64** %_62 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15048, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_73, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %39, align 8, !dbg !15048
  %40 = bitcast { i64*, i64* }* %self to i64**, !dbg !15029
  %41 = load i64*, i64** %_62, align 8, !dbg !15029, !nonnull !23, !noundef !23
  store i64* %41, i64** %40, align 8, !dbg !15029
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_71, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %_19, align 8, !dbg !15029
  br label %bb15, !dbg !15011

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %_19, align 8, !dbg !15002
  %42 = bitcast i64** %6 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15050
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_18, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %42, align 8, !dbg !15050
  br label %bb8, !dbg !15014

bb16:                                             ; preds = %bb13
  %43 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !15011
  %44 = bitcast i64** %43 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15011, !rawptr !418
  %45 = bitcast i8* %_54 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !15011
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %45, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %44, align 8, !dbg !15011
  %46 = bitcast { i64*, i64* }* %self to i64**, !dbg !15011
  %self25 = load i64*, i64** %46, align 8, !dbg !15011, !nonnull !23, !noundef !23
  store i64* %self25, i64** %self.dbg.spill26, align 8, !dbg !15011
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill26, metadata !15051, metadata !DIExpression()), !dbg !15055
  %_70 = bitcast i64* %self25 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !15055, !rawptr !418
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_70, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %_19, align 8, !dbg !15011
  br label %bb15, !dbg !15011
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hef704d7154331340E"({ i8*, i8* }* align 8 %self, i8* align 1 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15057 {
start:
  %x.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_28 = alloca i8*, align 8
  %_22 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %7 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !15061, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.declare(metadata i8** %predicate, metadata !15062, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15063, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15071, metadata !DIExpression()), !dbg !15080
  %8 = bitcast { i8*, i8* }* %self to i8**, !dbg !15081
  %start1 = load i8*, i8** %8, align 8, !dbg !15081, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !15081
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !15065, metadata !DIExpression()), !dbg !15082
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !15083
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !15067, metadata !DIExpression()), !dbg !15089
  br i1 false, label %bb1, label %bb2, !dbg !15089

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15089
  %self6 = load i8*, i8** %9, align 8, !dbg !15089, !rawptr !418
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !15089
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !15090, metadata !DIExpression()), !dbg !15094
  %10 = bitcast i64* %3 to i8**, !dbg !15094
  store i8* %self6, i8** %10, align 8, !dbg !15094
  %self8 = load i64, i64* %3, align 8, !dbg !15094
  store i64 %self8, i64* %self.dbg.spill9, align 8, !dbg !15094
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !15096, metadata !DIExpression()), !dbg !15101
  br label %bb18, !dbg !15094

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15089
  %self2 = load i8*, i8** %11, align 8, !dbg !15089, !rawptr !418
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !15089
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !15102, metadata !DIExpression()), !dbg !15106
  %12 = bitcast i64* %6 to i8**, !dbg !15106
  store i8* %self2, i8** %12, align 8, !dbg !15106
  %_14 = load i64, i64* %6, align 8, !dbg !15106
  br label %bb20, !dbg !15106

bb20:                                             ; preds = %bb2
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !15089
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !15108, metadata !DIExpression()), !dbg !15112
  store i8* %start1, i8** %self.dbg.spill5, align 8, !dbg !15112
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !15114, metadata !DIExpression()), !dbg !15118
  %13 = bitcast i64* %5 to i8**, !dbg !15118
  store i8* %start1, i8** %13, align 8, !dbg !15118
  %_16 = load i64, i64* %5, align 8, !dbg !15118
  br label %bb21, !dbg !15118

bb21:                                             ; preds = %bb20
  %14 = sub nuw i64 %_14, %_16, !dbg !15089
  store i64 %14, i64* %4, align 8, !dbg !15089
  %diff = load i64, i64* %4, align 8, !dbg !15089
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !15089
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !15069, metadata !DIExpression()), !dbg !15119
  br label %bb3, !dbg !15089

bb3:                                              ; preds = %bb21
  %15 = udiv exact i64 %diff, 1, !dbg !15119
  store i64 %15, i64* %n, align 8, !dbg !15119
  br label %bb4, !dbg !15119

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !15089

bb5:                                              ; preds = %bb19, %bb4
  store i64 0, i64* %i, align 8, !dbg !15120
  br label %bb6, !dbg !15121

bb18:                                             ; preds = %bb1
  store i8* %start1, i8** %self.dbg.spill10, align 8, !dbg !15089
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !15122, metadata !DIExpression()), !dbg !15126
  store i8* %start1, i8** %self.dbg.spill11, align 8, !dbg !15126
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill11, metadata !15128, metadata !DIExpression()), !dbg !15132
  %16 = bitcast i64* %2 to i8**, !dbg !15132
  store i8* %start1, i8** %16, align 8, !dbg !15132
  %rhs = load i64, i64* %2, align 8, !dbg !15132
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !15132
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !15100, metadata !DIExpression()), !dbg !15101
  br label %bb19, !dbg !15132

bb19:                                             ; preds = %bb18
  %17 = sub i64 %self8, %rhs, !dbg !15101
  store i64 %17, i64* %n, align 8, !dbg !15101
  br label %bb5, !dbg !15089

bb6:                                              ; preds = %bb13, %bb5
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %18 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E"({ i8*, i8* }* align 8 %self)
          to label %bb7 unwind label %cleanup, !dbg !15133

bb16:                                             ; preds = %cleanup
  br label %bb17, !dbg !15134

cleanup:                                          ; preds = %panic, %bb8, %bb6
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb16

bb7:                                              ; preds = %bb6
  store i8* %18, i8** %_22, align 8, !dbg !15133
  %24 = bitcast i8** %_22 to {}**, !dbg !15135
  %25 = load {}*, {}** %24, align 8, !dbg !15135
  %26 = icmp eq {}* %25, null, !dbg !15135
  %_24 = select i1 %26, i64 0, i64 1, !dbg !15135
  %27 = icmp eq i64 %_24, 1, !dbg !15135
  br i1 %27, label %bb8, label %bb14, !dbg !15135

bb8:                                              ; preds = %bb7
  %x = load i8*, i8** %_22, align 8, !dbg !15136, !nonnull !23, !align !912, !noundef !23
  store i8* %x, i8** %x.dbg.spill, align 8, !dbg !15136
  call void @llvm.dbg.declare(metadata i8** %x.dbg.spill, metadata !15073, metadata !DIExpression()), !dbg !15136
  store i8* %x, i8** %_28, align 8, !dbg !15137
  %28 = load i8*, i8** %_28, align 8, !dbg !15137, !nonnull !23, !align !912, !noundef !23
; invoke core::slice::memchr::memchr::{{closure}}
  %_26 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hf5fd9a82cd2844d8E"(i8** align 8 %predicate, i8* align 1 %28)
          to label %bb9 unwind label %cleanup, !dbg !15137

bb14:                                             ; preds = %bb7
  %29 = bitcast { i64, i64 }* %7 to i64*, !dbg !15138
  store i64 0, i64* %29, align 8, !dbg !15138
  br label %bb15, !dbg !15134

bb15:                                             ; preds = %bb11, %bb14
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !15139
  %31 = load i64, i64* %30, align 8, !dbg !15139, !range !3483, !noundef !23
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !15139
  %33 = load i64, i64* %32, align 8, !dbg !15139
  %34 = insertvalue { i64, i64 } undef, i64 %31, 0, !dbg !15139
  %35 = insertvalue { i64, i64 } %34, i64 %33, 1, !dbg !15139
  ret { i64, i64 } %35, !dbg !15139

bb9:                                              ; preds = %bb8
  br i1 %_26, label %bb10, label %bb12, !dbg !15137

bb12:                                             ; preds = %bb9
  %36 = load i64, i64* %i, align 8, !dbg !15140
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %36, i64 1), !dbg !15140
  %_35.0 = extractvalue { i64, i1 } %37, 0, !dbg !15140
  %_35.1 = extractvalue { i64, i1 } %37, 1, !dbg !15140
  %38 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !15140
  br i1 %38, label %panic, label %bb13, !dbg !15140

bb10:                                             ; preds = %bb9
  %_32 = load i64, i64* %i, align 8, !dbg !15141
  %_33 = load i64, i64* %n, align 8, !dbg !15142
  %_31 = icmp ult i64 %_32, %_33, !dbg !15141
  call void @llvm.assume(i1 %_31), !dbg !15143
  br label %bb11, !dbg !15143

bb11:                                             ; preds = %bb10
  %_34 = load i64, i64* %i, align 8, !dbg !15144
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !15145
  store i64 %_34, i64* %39, align 8, !dbg !15145
  %40 = bitcast { i64, i64 }* %7 to i64*, !dbg !15145
  store i64 1, i64* %40, align 8, !dbg !15145
  br label %bb15, !dbg !15134

bb13:                                             ; preds = %bb12
  store i64 %_35.0, i64* %i, align 8, !dbg !15140
  br label %bb6, !dbg !15121

panic:                                            ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.2 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc481 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !15140

unreachable:                                      ; preds = %panic
  unreachable

bb17:                                             ; preds = %bb16
  %41 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15146
  %42 = load i8*, i8** %41, align 8, !dbg !15146
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15146
  %44 = load i32, i32* %43, align 8, !dbg !15146
  %45 = insertvalue { i8*, i32 } undef, i8* %42, 0, !dbg !15146
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1, !dbg !15146
  resume { i8*, i32 } %46, !dbg !15146
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h32c302ac2e172676E"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !15147 {
start:
  %a.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !15153, metadata !DIExpression()), !dbg !15156
  %0 = bitcast { i8*, i64 }* %self to {}**, !dbg !15157
  %1 = load {}*, {}** %0, align 8, !dbg !15157
  %2 = icmp eq {}* %1, null, !dbg !15157
  %_6 = select i1 %2, i64 0, i64 1, !dbg !15157
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !15158

bb2:                                              ; preds = %start
  unreachable, !dbg !15157

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17hc4e54cf4a97a76c8E() #18, !dbg !15159
  unreachable, !dbg !15159

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !15160
  store { [0 x i8]*, i64 }* %a, { [0 x i8]*, i64 }** %a.dbg.spill, align 8, !dbg !15160
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %a.dbg.spill, metadata !15154, metadata !DIExpression()), !dbg !15161
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*, !dbg !15162
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0, !dbg !15163
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), 1, !dbg !15163
  ret { {}*, [3 x i64]* } %4, !dbg !15163
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h66fca9f2aa7ca0a2E"({ i8*, i64 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15164 {
start:
  %self.dbg.spill5 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }, align 8
  %leaked.dbg.spill = alloca { i8*, i64* }, align 8
  %b.dbg.spill2 = alloca { {}*, [3 x i64]* }, align 8
  %b.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_22 = alloca { i8*, i64* }, align 8
  %_17 = alloca { i8*, i64 }, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !15168, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %data, metadata !15169, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !15175, metadata !DIExpression()), !dbg !15189
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !15198
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !15199, metadata !DIExpression()), !dbg !15205
  %1 = bitcast { i8*, i64 }* %_17 to {}**, !dbg !15205
  store {}* null, {}** %1, align 8, !dbg !15205
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 0, !dbg !15205
  %3 = load i8*, i8** %2, align 8, !dbg !15205, !align !912
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 1, !dbg !15205
  %5 = load i64, i64* %4, align 8, !dbg !15205
; call core::mem::replace
  %6 = call { i8*, i64 } @_ZN4core3mem7replace17he0ac2fd194b72967E({ i8*, i64 }* align 8 %self, i8* align 1 %3, i64 %5), !dbg !15205
  store { i8*, i64 } %6, { i8*, i64 }* %_4, align 8, !dbg !15205
  br label %bb7, !dbg !15205

bb7:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !15198
  %8 = load {}*, {}** %7, align 8, !dbg !15198
  %9 = icmp eq {}* %8, null, !dbg !15198
  %_6 = select i1 %9, i64 0, i64 1, !dbg !15198
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !15206

bb2:                                              ; preds = %bb7
  unreachable, !dbg !15198

bb1:                                              ; preds = %bb7
; call std::process::abort
  call void @_ZN3std7process5abort17hc4e54cf4a97a76c8E() #18, !dbg !15207
  unreachable, !dbg !15207

bb3:                                              ; preds = %bb7
  %10 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*, !dbg !15208
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !15208
  %a.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !15208, !nonnull !23, !align !912, !noundef !23
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !15208
  %a.1 = load i64, i64* %12, align 8, !dbg !15208
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %a.dbg.spill, i32 0, i32 0, !dbg !15208
  store [0 x i8]* %a.0, [0 x i8]** %13, align 8, !dbg !15208
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %a.dbg.spill, i32 0, i32 1, !dbg !15208
  store i64 %a.1, i64* %14, align 8, !dbg !15208
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %a.dbg.spill, metadata !15171, metadata !DIExpression()), !dbg !15209
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !15210
  store [0 x i8]* %a.0, [0 x i8]** %15, align 8, !dbg !15210
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !15210
  store i64 %a.1, i64* %16, align 8, !dbg !15210
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !15211, metadata !DIExpression()), !dbg !15219
; invoke alloc::alloc::exchange_malloc
  %_20 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h0ca87beeb65490c9E(i64 16, i64 8)
          to label %bb8 unwind label %cleanup, !dbg !15219, !rawptr !418

bb9:                                              ; preds = %cleanup
  br label %bb5, !dbg !15219

cleanup:                                          ; preds = %bb3
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb9

bb8:                                              ; preds = %bb3
  %_9 = bitcast i8* %_20 to { [0 x i8]*, i64 }*, !dbg !15219
  %22 = bitcast { [0 x i8]*, i64 }* %_9 to i64*, !dbg !15219
  %_21 = bitcast i64* %22 to { [0 x i8]*, i64 }*, !dbg !15219, !rawptr !418, !rawptr_deref !15221
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_21, i32 0, i32 0, !dbg !15219
  store [0 x i8]* %a.0, [0 x i8]** %23, align 8, !dbg !15219
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_21, i32 0, i32 1, !dbg !15219
  store i64 %a.1, i64* %24, align 8, !dbg !15219
  %25 = bitcast { [0 x i8]*, i64 }* %_9 to {}*, !dbg !15220
  %26 = bitcast {}* %25 to i8*, !dbg !15220
  %_8.0 = bitcast i8* %26 to {}*, !dbg !15220
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0, !dbg !15220
  store {}* %_8.0, {}** %27, align 8, !dbg !15220
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1, !dbg !15220
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), [3 x i64]** %28, align 8, !dbg !15220
  %29 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0, !dbg !15222
  %_14.0 = load {}*, {}** %29, align 8, !dbg !15222, !nonnull !23, !align !912, !noundef !23
  %30 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1, !dbg !15222
  %_14.1 = load [3 x i64]*, [3 x i64]** %30, align 8, !dbg !15222, !nonnull !23, !align !378, !noundef !23
  %31 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 0, !dbg !15222
  store {}* %_14.0, {}** %31, align 8, !dbg !15222
  %32 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 1, !dbg !15222
  store [3 x i64]* %_14.1, [3 x i64]** %32, align 8, !dbg !15222
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b.dbg.spill, metadata !15195, metadata !DIExpression()), !dbg !15223
  %33 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill2, i32 0, i32 0, !dbg !15223
  store {}* %_14.0, {}** %33, align 8, !dbg !15223
  %34 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill2, i32 0, i32 1, !dbg !15223
  store [3 x i64]* %_14.1, [3 x i64]** %34, align 8, !dbg !15223
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b.dbg.spill2, metadata !15186, metadata !DIExpression()), !dbg !15224
; invoke alloc::boxed::Box<T,A>::into_unique
  %35 = invoke { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hbb3c7feb6b0894daE"({}* align 1 %_14.0, [3 x i64]* align 8 %_14.1)
          to label %bb10 unwind label %cleanup3, !dbg !15224

bb5:                                              ; preds = %bb6, %bb4, %bb9
  %36 = bitcast { i8*, i32 }* %0 to i8**, !dbg !15225
  %37 = load i8*, i8** %36, align 8, !dbg !15225
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !15225
  %39 = load i32, i32* %38, align 8, !dbg !15225
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !15225
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !15225
  resume { i8*, i32 } %41, !dbg !15225

bb4:                                              ; preds = %cleanup3
  br i1 false, label %bb6, label %bb5, !dbg !15226

cleanup3:                                         ; preds = %bb8
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = extractvalue { i8*, i32 } %42, 1
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %44, i32* %46, align 8
  br label %bb4

bb10:                                             ; preds = %bb8
  %_26.0 = extractvalue { i8*, i64* } %35, 0, !dbg !15224
  %_26.1 = extractvalue { i8*, i64* } %35, 1, !dbg !15224
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %leaked.dbg.spill, i32 0, i32 0, !dbg !15224
  store i8* %_26.0, i8** %47, align 8, !dbg !15224
  %48 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %leaked.dbg.spill, i32 0, i32 1, !dbg !15224
  store i64* %_26.1, i64** %48, align 8, !dbg !15224
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %leaked.dbg.spill, metadata !15188, metadata !DIExpression()), !dbg !15189
  %49 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill4, i32 0, i32 0, !dbg !15189
  store i8* %_26.0, i8** %49, align 8, !dbg !15189
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill4, i32 0, i32 1, !dbg !15189
  store i64* %_26.1, i64** %50, align 8, !dbg !15189
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill4, metadata !15227, metadata !DIExpression()), !dbg !15231
  %51 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill5, i32 0, i32 0, !dbg !15231
  store i8* %_26.0, i8** %51, align 8, !dbg !15231
  %52 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill5, i32 0, i32 1, !dbg !15231
  store i64* %_26.1, i64** %52, align 8, !dbg !15231
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill5, metadata !15233, metadata !DIExpression()), !dbg !15237
  %_31.0 = bitcast i8* %_26.0 to {}*, !dbg !15237, !rawptr !418
  %_31.1 = bitcast i64* %_26.1 to [3 x i64]*, !dbg !15237, !rawptr !418
  %53 = bitcast { i8*, i64* }* %_22 to { {}*, [3 x i64]* }*, !dbg !15189, !rawptr !418
  %54 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %53, i32 0, i32 0, !dbg !15189
  store {}* %_31.0, {}** %54, align 8, !dbg !15189
  %55 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %53, i32 0, i32 1, !dbg !15189
  store [3 x i64]* %_31.1, [3 x i64]** %55, align 8, !dbg !15189
  %56 = bitcast { i8*, i64* }* %_22 to { {}*, [3 x i64]* }*, !dbg !15223
  %57 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %56, i32 0, i32 0, !dbg !15223
  %_12.0 = load {}*, {}** %57, align 8, !dbg !15223, !rawptr !418
  %58 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %56, i32 0, i32 1, !dbg !15223
  %_12.1 = load [3 x i64]*, [3 x i64]** %58, align 8, !dbg !15223, !nonnull !23, !align !378, !noundef !23, !rawptr !418
  %59 = insertvalue { {}*, [3 x i64]* } undef, {}* %_12.0, 0, !dbg !15239
  %60 = insertvalue { {}*, [3 x i64]* } %59, [3 x i64]* %_12.1, 1, !dbg !15239
  ret { {}*, [3 x i64]* } %60, !dbg !15239

bb6:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h3907a4c46ddbe6e5E"({ {}*, [3 x i64]* }* %data) #19
          to label %bb5 unwind label %abort, !dbg !15226

abort:                                            ; preds = %bb6
  %61 = landingpad { i8*, i32 }
          cleanup, !dbg !15225
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !15225
  unreachable, !dbg !15225
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h332f042858217278E"(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15240 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>", align 1
  %_7 = alloca { i8*, i8* }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self.dbg.spill, metadata !15248, metadata !DIExpression()), !dbg !15250
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !15249, metadata !DIExpression()), !dbg !15251
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !15252
  store [0 x i8]* %haystack.0, [0 x i8]** %5, align 8, !dbg !15252
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !15252
  store i64 %haystack.1, i64* %6, align 8, !dbg !15252
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !15253, metadata !DIExpression()), !dbg !15259
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !15259
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !15259
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !15259
  store i64 %haystack.1, i64* %8, align 8, !dbg !15259
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !15260, metadata !DIExpression()), !dbg !15266
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !15266
  store [0 x i8]* %haystack.0, [0 x i8]** %9, align 8, !dbg !15266
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !15266
  store i64 %haystack.1, i64* %10, align 8, !dbg !15266
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !15268, metadata !DIExpression()), !dbg !15272
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !15272
  store [0 x i8]* %haystack.0, [0 x i8]** %11, align 8, !dbg !15272
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !15272
  store i64 %haystack.1, i64* %12, align 8, !dbg !15272
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !15272
  %_11.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !dbg !15272, !nonnull !23, !align !912, !noundef !23
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !15272
  %_11.1 = load i64, i64* %14, align 8, !dbg !15272
  br label %bb3, !dbg !15272

bb3:                                              ; preds = %start
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !15266
  store [0 x i8]* %_11.0, [0 x i8]** %15, align 8, !dbg !15266
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !15266
  store i64 %_11.1, i64* %16, align 8, !dbg !15266
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !15274, metadata !DIExpression()), !dbg !15278
; invoke core::slice::iter::Iter<T>::new
  %17 = invoke { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8af76636c7f25d78E"([0 x i8]* align 1 %_11.0, i64 %_11.1)
          to label %bb4 unwind label %cleanup, !dbg !15278

bb1:                                              ; preds = %cleanup
  br label %bb2, !dbg !15279

cleanup:                                          ; preds = %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i8*, i8* } %17, 0, !dbg !15278
  %_9.1 = extractvalue { i8*, i8* } %17, 1, !dbg !15278
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15266
  store i8* %_9.0, i8** %23, align 8, !dbg !15266
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15266
  store i8* %_9.1, i8** %24, align 8, !dbg !15266
  %25 = bitcast %"core::str::iter::CharIndices"* %_5 to i64*, !dbg !15259
  store i64 0, i64* %25, align 8, !dbg !15259
  %26 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %_5, i32 0, i32 1, !dbg !15259
  %27 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15259
  %28 = load i8*, i8** %27, align 8, !dbg !15259, !nonnull !23, !noundef !23
  %29 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15259
  %30 = load i8*, i8** %29, align 8, !dbg !15259
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %26, i32 0, i32 0, !dbg !15259
  store i8* %28, i8** %31, align 8, !dbg !15259
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %26, i32 0, i32 1, !dbg !15259
  store i8* %30, i8** %32, align 8, !dbg !15259
  %33 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0 to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !15280
  %34 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0 to { [0 x i8]*, i64 }*, !dbg !15280
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0, !dbg !15280
  store [0 x i8]* %haystack.0, [0 x i8]** %35, align 8, !dbg !15280
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1, !dbg !15280
  store i64 %haystack.1, i64* %36, align 8, !dbg !15280
  %37 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0, i32 0, i32 2, !dbg !15280
  %38 = bitcast %"core::str::iter::CharIndices"* %37 to i8*, !dbg !15280
  %39 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*, !dbg !15280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !15280
  ret void, !dbg !15281

bb2:                                              ; preds = %bb1
  %40 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15282
  %41 = load i8*, i8** %40, align 8, !dbg !15282
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15282
  %43 = load i32, i32* %42, align 8, !dbg !15282
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0, !dbg !15282
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1, !dbg !15282
  resume { i8*, i32 } %45, !dbg !15282
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h86801e2df8a25968E"(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15283 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqPattern<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", align 1
  %_7 = alloca { i8*, i8* }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqPattern<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self.dbg.spill, metadata !15290, metadata !DIExpression()), !dbg !15292
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !15291, metadata !DIExpression()), !dbg !15293
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !15294
  store [0 x i8]* %haystack.0, [0 x i8]** %5, align 8, !dbg !15294
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !15294
  store i64 %haystack.1, i64* %6, align 8, !dbg !15294
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !15295, metadata !DIExpression()), !dbg !15299
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !15299
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !15299
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !15299
  store i64 %haystack.1, i64* %8, align 8, !dbg !15299
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !15300, metadata !DIExpression()), !dbg !15304
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !15304
  store [0 x i8]* %haystack.0, [0 x i8]** %9, align 8, !dbg !15304
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !15304
  store i64 %haystack.1, i64* %10, align 8, !dbg !15304
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !15306, metadata !DIExpression()), !dbg !15310
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !15310
  store [0 x i8]* %haystack.0, [0 x i8]** %11, align 8, !dbg !15310
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !15310
  store i64 %haystack.1, i64* %12, align 8, !dbg !15310
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !15310
  %_11.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !dbg !15310, !nonnull !23, !align !912, !noundef !23
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !15310
  %_11.1 = load i64, i64* %14, align 8, !dbg !15310
  br label %bb3, !dbg !15310

bb3:                                              ; preds = %start
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !15304
  store [0 x i8]* %_11.0, [0 x i8]** %15, align 8, !dbg !15304
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !15304
  store i64 %_11.1, i64* %16, align 8, !dbg !15304
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !15312, metadata !DIExpression()), !dbg !15316
; invoke core::slice::iter::Iter<T>::new
  %17 = invoke { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8af76636c7f25d78E"([0 x i8]* align 1 %_11.0, i64 %_11.1)
          to label %bb4 unwind label %cleanup, !dbg !15316

bb1:                                              ; preds = %cleanup
  br label %bb2, !dbg !15317

cleanup:                                          ; preds = %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i8*, i8* } %17, 0, !dbg !15316
  %_9.1 = extractvalue { i8*, i8* } %17, 1, !dbg !15316
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15304
  store i8* %_9.0, i8** %23, align 8, !dbg !15304
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15304
  store i8* %_9.1, i8** %24, align 8, !dbg !15304
  %25 = bitcast %"core::str::iter::CharIndices"* %_5 to i64*, !dbg !15299
  store i64 0, i64* %25, align 8, !dbg !15299
  %26 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %_5, i32 0, i32 1, !dbg !15299
  %27 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15299
  %28 = load i8*, i8** %27, align 8, !dbg !15299, !nonnull !23, !noundef !23
  %29 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15299
  %30 = load i8*, i8** %29, align 8, !dbg !15299
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %26, i32 0, i32 0, !dbg !15299
  store i8* %28, i8** %31, align 8, !dbg !15299
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %26, i32 0, i32 1, !dbg !15299
  store i8* %30, i8** %32, align 8, !dbg !15299
  %33 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %0 to %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"*, !dbg !15318
  %34 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %0 to { [0 x i8]*, i64 }*, !dbg !15318
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0, !dbg !15318
  store [0 x i8]* %haystack.0, [0 x i8]** %35, align 8, !dbg !15318
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1, !dbg !15318
  store i64 %haystack.1, i64* %36, align 8, !dbg !15318
  %37 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %0, i32 0, i32 2, !dbg !15318
  %38 = bitcast %"core::str::iter::CharIndices"* %37 to i8*, !dbg !15318
  %39 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*, !dbg !15318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !15318
  ret void, !dbg !15319

bb2:                                              ; preds = %bb1
  %40 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15320
  %41 = load i8*, i8** %40, align 8, !dbg !15320
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15320
  %43 = load i32, i32* %42, align 8, !dbg !15320
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0, !dbg !15320
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1, !dbg !15320
  resume { i8*, i32 } %45, !dbg !15320
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17he9c4aa4cf6517257E"(i32 %ch) unnamed_addr #1 !dbg !15321 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]"* %_1.dbg.spill, metadata !15326, metadata !DIExpression()), !dbg !15327
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !15325, metadata !DIExpression()), !dbg !15328
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !15329
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !15330, metadata !DIExpression()), !dbg !15334
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !15334
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !15336, metadata !DIExpression()), !dbg !15340
  store i32 %ch, i32* %0, align 4, !dbg !15340
  %1 = load i32, i32* %0, align 4, !dbg !15340, !range !466, !noundef !23
  br label %bb1, !dbg !15340

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !15342
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h8077774041b14461E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #1 !dbg !15343 {
start:
  %char_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %diff.dbg.spill18 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %self.dbg.spill15 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %size.dbg.spill12 = alloca i64, align 8
  %start.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %s.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_5 = alloca { i64, i32 }, align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !15346, metadata !DIExpression()), !dbg !15358
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, i32 0, i32 2, !dbg !15359
  store %"core::str::iter::CharIndices"* %s, %"core::str::iter::CharIndices"** %s.dbg.spill, align 8, !dbg !15359
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %s.dbg.spill, metadata !15347, metadata !DIExpression()), !dbg !15360
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15361
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !15361
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !15362, metadata !DIExpression()), !dbg !15375
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !15375
  %start3 = load i8*, i8** %9, align 8, !dbg !15375, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !15375
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !15366, metadata !DIExpression()), !dbg !15376
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !15377
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !15369, metadata !DIExpression()), !dbg !15383
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !15383
  %self4 = load i8*, i8** %10, align 8, !dbg !15383, !rawptr !418
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !15383
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !15384, metadata !DIExpression()), !dbg !15388
  %11 = bitcast i64* %8 to i8**, !dbg !15388
  store i8* %self4, i8** %11, align 8, !dbg !15388
  %_35 = load i64, i64* %8, align 8, !dbg !15388
  br label %bb11, !dbg !15388

bb11:                                             ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !15383
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !15390, metadata !DIExpression()), !dbg !15394
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !15394
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !15396, metadata !DIExpression()), !dbg !15400
  %12 = bitcast i64* %7 to i8**, !dbg !15400
  store i8* %start3, i8** %12, align 8, !dbg !15400
  %_37 = load i64, i64* %7, align 8, !dbg !15400
  br label %bb12, !dbg !15400

bb12:                                             ; preds = %bb11
  %13 = sub nuw i64 %_35, %_37, !dbg !15383
  store i64 %13, i64* %6, align 8, !dbg !15383
  %diff = load i64, i64* %6, align 8, !dbg !15383
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !15383
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !15372, metadata !DIExpression()), !dbg !15401
  br label %bb9, !dbg !15383

bb9:                                              ; preds = %bb12
  %14 = udiv exact i64 %diff, 1, !dbg !15401
  store i64 %14, i64* %5, align 8, !dbg !15401
  %pre_len = load i64, i64* %5, align 8, !dbg !15401
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !15401
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !15349, metadata !DIExpression()), !dbg !15402
  br label %bb10, !dbg !15401

bb10:                                             ; preds = %bb9
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf84b46cf7461bd8eE"(%"core::str::iter::CharIndices"* align 8 %s), !dbg !15403
  store { i64, i32 } %15, { i64, i32 }* %_5, align 8, !dbg !15403
  br label %bb1, !dbg !15403

bb1:                                              ; preds = %bb10
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15404
  %17 = load i32, i32* %16, align 8, !dbg !15404, !range !376, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !15404
  %19 = icmp eq i32 %18, 0, !dbg !15404
  %_7 = select i1 %19, i64 0, i64 1, !dbg !15404
  %20 = icmp eq i64 %_7, 1, !dbg !15404
  br i1 %20, label %bb2, label %bb6, !dbg !15404

bb2:                                              ; preds = %bb1
  %21 = bitcast { i64, i32 }* %_5 to i64*, !dbg !15405
  %i = load i64, i64* %21, align 8, !dbg !15405
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !15405
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !15351, metadata !DIExpression()), !dbg !15405
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15406
  %c = load i32, i32* %22, align 8, !dbg !15406, !range !466, !noundef !23
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !15406
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !15353, metadata !DIExpression()), !dbg !15406
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15407
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !15407
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !15408, metadata !DIExpression()), !dbg !15421
  %23 = bitcast { i8*, i8* }* %self8 to i8**, !dbg !15421
  %start10 = load i8*, i8** %23, align 8, !dbg !15421, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start10, i8** %start.dbg.spill11, align 8, !dbg !15421
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill11, metadata !15412, metadata !DIExpression()), !dbg !15422
  store i64 1, i64* %size.dbg.spill12, align 8, !dbg !15423
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill12, metadata !15415, metadata !DIExpression()), !dbg !15429
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self8, i32 0, i32 1, !dbg !15429
  %self13 = load i8*, i8** %24, align 8, !dbg !15429, !rawptr !418
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !15429
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !15430, metadata !DIExpression()), !dbg !15434
  %25 = bitcast i64* %4 to i8**, !dbg !15434
  store i8* %self13, i8** %25, align 8, !dbg !15434
  %_54 = load i64, i64* %4, align 8, !dbg !15434
  br label %bb15, !dbg !15434

bb6:                                              ; preds = %bb1
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15436
  store i64 2, i64* %26, align 8, !dbg !15436
  br label %bb8, !dbg !15437

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !15437

bb15:                                             ; preds = %bb2
  store i8* %start10, i8** %self.dbg.spill15, align 8, !dbg !15429
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill15, metadata !15438, metadata !DIExpression()), !dbg !15442
  store i8* %start10, i8** %self.dbg.spill16, align 8, !dbg !15442
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !15444, metadata !DIExpression()), !dbg !15448
  %27 = bitcast i64* %3 to i8**, !dbg !15448
  store i8* %start10, i8** %27, align 8, !dbg !15448
  %_56 = load i64, i64* %3, align 8, !dbg !15448
  br label %bb16, !dbg !15448

bb16:                                             ; preds = %bb15
  %28 = sub nuw i64 %_54, %_56, !dbg !15429
  store i64 %28, i64* %2, align 8, !dbg !15429
  %diff17 = load i64, i64* %2, align 8, !dbg !15429
  store i64 %diff17, i64* %diff.dbg.spill18, align 8, !dbg !15429
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill18, metadata !15418, metadata !DIExpression()), !dbg !15449
  br label %bb13, !dbg !15429

bb13:                                             ; preds = %bb16
  %29 = udiv exact i64 %diff17, 1, !dbg !15449
  store i64 %29, i64* %1, align 8, !dbg !15449
  %len = load i64, i64* %1, align 8, !dbg !15449
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !15449
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !15354, metadata !DIExpression()), !dbg !15450
  br label %bb14, !dbg !15449

bb14:                                             ; preds = %bb13
  %char_len = sub i64 %pre_len, %len, !dbg !15451
  store i64 %char_len, i64* %char_len.dbg.spill, align 8, !dbg !15451
  call void @llvm.dbg.declare(metadata i64* %char_len.dbg.spill, metadata !15356, metadata !DIExpression()), !dbg !15452
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !15453
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hb6967cc43833833dE"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %_16, i32 %c), !dbg !15453
  br label %bb3, !dbg !15453

bb3:                                              ; preds = %bb14
  br i1 %_15, label %bb4, label %bb5, !dbg !15453

bb5:                                              ; preds = %bb3
  %_23 = add i64 %i, %char_len, !dbg !15454
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15455
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1, !dbg !15455
  store i64 %i, i64* %31, align 8, !dbg !15455
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15455
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2, !dbg !15455
  store i64 %_23, i64* %33, align 8, !dbg !15455
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15455
  store i64 1, i64* %34, align 8, !dbg !15455
  br label %bb7, !dbg !15456

bb4:                                              ; preds = %bb3
  %_19 = add i64 %i, %char_len, !dbg !15457
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15458
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1, !dbg !15458
  store i64 %i, i64* %36, align 8, !dbg !15458
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15458
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2, !dbg !15458
  store i64 %_19, i64* %38, align 8, !dbg !15458
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15458
  store i64 0, i64* %39, align 8, !dbg !15458
  br label %bb7, !dbg !15459

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8, !dbg !15437
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17he708c6b8215159f9E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !15460 {
start:
  %char_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %diff.dbg.spill18 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %self.dbg.spill15 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %size.dbg.spill12 = alloca i64, align 8
  %start.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %s.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  %_5 = alloca { i64, i32 }, align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !15464, metadata !DIExpression()), !dbg !15476
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, i32 0, i32 2, !dbg !15477
  store %"core::str::iter::CharIndices"* %s, %"core::str::iter::CharIndices"** %s.dbg.spill, align 8, !dbg !15477
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %s.dbg.spill, metadata !15465, metadata !DIExpression()), !dbg !15478
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15479
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !15479
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !15480, metadata !DIExpression()), !dbg !15493
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !15493
  %start3 = load i8*, i8** %9, align 8, !dbg !15493, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !15493
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !15484, metadata !DIExpression()), !dbg !15494
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !15495
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !15487, metadata !DIExpression()), !dbg !15501
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !15501
  %self4 = load i8*, i8** %10, align 8, !dbg !15501, !rawptr !418
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !15501
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !15502, metadata !DIExpression()), !dbg !15506
  %11 = bitcast i64* %8 to i8**, !dbg !15506
  store i8* %self4, i8** %11, align 8, !dbg !15506
  %_35 = load i64, i64* %8, align 8, !dbg !15506
  br label %bb11, !dbg !15506

bb11:                                             ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !15501
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !15508, metadata !DIExpression()), !dbg !15512
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !15512
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !15514, metadata !DIExpression()), !dbg !15518
  %12 = bitcast i64* %7 to i8**, !dbg !15518
  store i8* %start3, i8** %12, align 8, !dbg !15518
  %_37 = load i64, i64* %7, align 8, !dbg !15518
  br label %bb12, !dbg !15518

bb12:                                             ; preds = %bb11
  %13 = sub nuw i64 %_35, %_37, !dbg !15501
  store i64 %13, i64* %6, align 8, !dbg !15501
  %diff = load i64, i64* %6, align 8, !dbg !15501
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !15501
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !15490, metadata !DIExpression()), !dbg !15519
  br label %bb9, !dbg !15501

bb9:                                              ; preds = %bb12
  %14 = udiv exact i64 %diff, 1, !dbg !15519
  store i64 %14, i64* %5, align 8, !dbg !15519
  %pre_len = load i64, i64* %5, align 8, !dbg !15519
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !15519
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !15467, metadata !DIExpression()), !dbg !15520
  br label %bb10, !dbg !15519

bb10:                                             ; preds = %bb9
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf84b46cf7461bd8eE"(%"core::str::iter::CharIndices"* align 8 %s), !dbg !15521
  store { i64, i32 } %15, { i64, i32 }* %_5, align 8, !dbg !15521
  br label %bb1, !dbg !15521

bb1:                                              ; preds = %bb10
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15522
  %17 = load i32, i32* %16, align 8, !dbg !15522, !range !376, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !15522
  %19 = icmp eq i32 %18, 0, !dbg !15522
  %_7 = select i1 %19, i64 0, i64 1, !dbg !15522
  %20 = icmp eq i64 %_7, 1, !dbg !15522
  br i1 %20, label %bb2, label %bb6, !dbg !15522

bb2:                                              ; preds = %bb1
  %21 = bitcast { i64, i32 }* %_5 to i64*, !dbg !15523
  %i = load i64, i64* %21, align 8, !dbg !15523
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !15523
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !15469, metadata !DIExpression()), !dbg !15523
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15524
  %c = load i32, i32* %22, align 8, !dbg !15524, !range !466, !noundef !23
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !15524
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !15471, metadata !DIExpression()), !dbg !15524
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15525
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !15525
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !15526, metadata !DIExpression()), !dbg !15539
  %23 = bitcast { i8*, i8* }* %self8 to i8**, !dbg !15539
  %start10 = load i8*, i8** %23, align 8, !dbg !15539, !nonnull !23, !noundef !23, !rawptr !418
  store i8* %start10, i8** %start.dbg.spill11, align 8, !dbg !15539
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill11, metadata !15530, metadata !DIExpression()), !dbg !15540
  store i64 1, i64* %size.dbg.spill12, align 8, !dbg !15541
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill12, metadata !15533, metadata !DIExpression()), !dbg !15547
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self8, i32 0, i32 1, !dbg !15547
  %self13 = load i8*, i8** %24, align 8, !dbg !15547, !rawptr !418
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !15547
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !15548, metadata !DIExpression()), !dbg !15552
  %25 = bitcast i64* %4 to i8**, !dbg !15552
  store i8* %self13, i8** %25, align 8, !dbg !15552
  %_54 = load i64, i64* %4, align 8, !dbg !15552
  br label %bb15, !dbg !15552

bb6:                                              ; preds = %bb1
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15554
  store i64 2, i64* %26, align 8, !dbg !15554
  br label %bb8, !dbg !15555

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !15555

bb15:                                             ; preds = %bb2
  store i8* %start10, i8** %self.dbg.spill15, align 8, !dbg !15547
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill15, metadata !15556, metadata !DIExpression()), !dbg !15560
  store i8* %start10, i8** %self.dbg.spill16, align 8, !dbg !15560
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !15562, metadata !DIExpression()), !dbg !15566
  %27 = bitcast i64* %3 to i8**, !dbg !15566
  store i8* %start10, i8** %27, align 8, !dbg !15566
  %_56 = load i64, i64* %3, align 8, !dbg !15566
  br label %bb16, !dbg !15566

bb16:                                             ; preds = %bb15
  %28 = sub nuw i64 %_54, %_56, !dbg !15547
  store i64 %28, i64* %2, align 8, !dbg !15547
  %diff17 = load i64, i64* %2, align 8, !dbg !15547
  store i64 %diff17, i64* %diff.dbg.spill18, align 8, !dbg !15547
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill18, metadata !15536, metadata !DIExpression()), !dbg !15567
  br label %bb13, !dbg !15547

bb13:                                             ; preds = %bb16
  %29 = udiv exact i64 %diff17, 1, !dbg !15567
  store i64 %29, i64* %1, align 8, !dbg !15567
  %len = load i64, i64* %1, align 8, !dbg !15567
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !15567
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !15472, metadata !DIExpression()), !dbg !15568
  br label %bb14, !dbg !15567

bb14:                                             ; preds = %bb13
  %char_len = sub i64 %pre_len, %len, !dbg !15569
  store i64 %char_len, i64* %char_len.dbg.spill, align 8, !dbg !15569
  call void @llvm.dbg.declare(metadata i64* %char_len.dbg.spill, metadata !15474, metadata !DIExpression()), !dbg !15570
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"*, !dbg !15571
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hc38e31bf05cc1c8dE"(%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* align 1 %_16, i32 %c), !dbg !15571
  br label %bb3, !dbg !15571

bb3:                                              ; preds = %bb14
  br i1 %_15, label %bb4, label %bb5, !dbg !15571

bb5:                                              ; preds = %bb3
  %_23 = add i64 %i, %char_len, !dbg !15572
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15573
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1, !dbg !15573
  store i64 %i, i64* %31, align 8, !dbg !15573
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15573
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2, !dbg !15573
  store i64 %_23, i64* %33, align 8, !dbg !15573
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15573
  store i64 1, i64* %34, align 8, !dbg !15573
  br label %bb7, !dbg !15574

bb4:                                              ; preds = %bb3
  %_19 = add i64 %i, %char_len, !dbg !15575
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15576
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1, !dbg !15576
  store i64 %i, i64* %36, align 8, !dbg !15576
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15576
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2, !dbg !15576
  store i64 %_19, i64* %38, align 8, !dbg !15576
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15576
  store i64 0, i64* %39, align 8, !dbg !15576
  br label %bb7, !dbg !15577

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8, !dbg !15555
}

; <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h447487b8c4afc400E"(%"std::ffi::os_str::OsString"* align 8 %self) unnamed_addr #1 !dbg !15578 {
start:
  %inner.dbg.spill = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %self.dbg.spill2 = alloca %"std::ffi::os_str::OsString"*, align 8
  %self.dbg.spill1 = alloca %"std::ffi::os_str::OsString"*, align 8
  %_index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca %"std::ffi::os_str::OsString"*, align 8
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill, metadata !15584, metadata !DIExpression()), !dbg !15585
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %_index.dbg.spill, metadata !15586, metadata !DIExpression()), !dbg !15593
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill1, align 8, !dbg !15599
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill1, metadata !15598, metadata !DIExpression()), !dbg !15600
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill2, align 8, !dbg !15600
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill2, metadata !15592, metadata !DIExpression()), !dbg !15593
  %_8 = bitcast %"std::ffi::os_str::OsString"* %self to %"std::sys::unix::os_str::Buf"*, !dbg !15593
; call std::sys::unix::os_str::Buf::as_slice
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str3Buf8as_slice17h7c81f02cc6b0dd96E(%"std::sys::unix::os_str::Buf"* align 8 %_8), !dbg !15593
  %_7.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0, !dbg !15593, !rawptr !418
  %_7.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1, !dbg !15593, !rawptr !418
  br label %bb1, !dbg !15593

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 0, !dbg !15593
  store %"std::sys::unix::os_str::Slice"* %_7.0, %"std::sys::unix::os_str::Slice"** %1, align 8, !dbg !15593
  %2 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 1, !dbg !15593
  store i64 %_7.1, i64* %2, align 8, !dbg !15593
  call void @llvm.dbg.declare(metadata { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, metadata !15601, metadata !DIExpression()), !dbg !15604
  %_9.0 = bitcast %"std::sys::unix::os_str::Slice"* %_7.0 to %"std::ffi::os_str::OsStr"*, !dbg !15604, !rawptr !418
  %3 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_9.0, 0, !dbg !15606
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %3, i64 %_7.1, 1, !dbg !15606
  ret { %"std::ffi::os_str::OsStr"*, i64 } %4, !dbg !15606
}

; <alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h541c6673ee73fd66E"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 !dbg !15607 {
start:
  %self.dbg.spill2 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %src.dbg.spill = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %self1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8, !rawptr !418
  %_3 = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_x = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  store %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !15612, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_x, metadata !15614, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp, metadata !15622, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1, metadata !15638, metadata !DIExpression()), !dbg !15644
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %slot, metadata !15646, metadata !DIExpression()), !dbg !15652
  store %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %src.dbg.spill, align 8, !dbg !15654
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %src.dbg.spill, metadata !15630, metadata !DIExpression()), !dbg !15655
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp to {}*, !dbg !15656
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill2, align 8, !dbg !15636
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill2, metadata !15662, metadata !DIExpression()), !dbg !15669
  %_7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !15669, !rawptr !418
  %1 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i8*, !dbg !15636
  %2 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to i8*, !dbg !15636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !15636
  %3 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to i8*, !dbg !15636
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp to i8*, !dbg !15636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !15636
  br label %bb2, !dbg !15644

bb2:                                              ; preds = %start
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !15644
  %6 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %slot to i8*, !dbg !15644
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %5 to i8*, !dbg !15644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !15644
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %slot to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !15652
  %9 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3 to i8*, !dbg !15652
  %10 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %8 to i8*, !dbg !15652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !15652
; call <alloc::collections::btree::map::BTreeMap<K,V,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbf56b171ae3f161eE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %_x, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3), !dbg !15671
  br label %bb1, !dbg !15671

bb1:                                              ; preds = %bb2
; call core::ptr::drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
  call void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17hf4221db241dd2233E"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_x), !dbg !15620
  br label %bb3, !dbg !15620

bb3:                                              ; preds = %bb1
  ret void, !dbg !15672
}

; <alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdd789a6152555bd0E"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15673 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %guard = alloca i64*, align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !15677, metadata !DIExpression()), !dbg !15682
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, metadata !15678, metadata !DIExpression()), !dbg !15683
  call void @llvm.dbg.declare(metadata i64** %guard, metadata !15680, metadata !DIExpression()), !dbg !15684
  br label %bb1, !dbg !15685

bb1:                                              ; preds = %bb4, %start
; call alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
  call void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h676a0c4979658543E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") %_2, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self), !dbg !15686
  br label %bb2, !dbg !15686

bb2:                                              ; preds = %bb1
  %1 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2, i32 0, i32 1, !dbg !15687
  %2 = load {}*, {}** %1, align 8, !dbg !15687
  %3 = icmp eq {}* %2, null, !dbg !15687
  %_4 = select i1 %3, i64 0, i64 1, !dbg !15687
  %4 = icmp eq i64 %_4, 1, !dbg !15687
  br i1 %4, label %bb3, label %bb5, !dbg !15687

bb3:                                              ; preds = %bb2
  %5 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"*, !dbg !15683
  %6 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"* %5 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !15683
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !15683
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %6 to i8*, !dbg !15683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !15683
  %9 = bitcast i64** %guard to %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !15688
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %9, align 8, !dbg !15688
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_9 to i8*, !dbg !15689
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !15689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !15689
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
  invoke void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h3e78732f6afe1257E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_9)
          to label %bb4 unwind label %cleanup, !dbg !15689

bb5:                                              ; preds = %bb2
  ret void, !dbg !15690

bb8:                                              ; preds = %cleanup
  br i1 true, label %bb7, label %bb6, !dbg !15691

cleanup:                                          ; preds = %bb3
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb8

bb4:                                              ; preds = %bb3
  br label %bb1, !dbg !15685

bb6:                                              ; preds = %bb7, %bb8
  %17 = bitcast { i8*, i32 }* %0 to i8**, !dbg !15692
  %18 = load i8*, i8** %17, align 8, !dbg !15692
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !15692
  %20 = load i32, i32* %19, align 8, !dbg !15692
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0, !dbg !15692
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1, !dbg !15692
  resume { i8*, i32 } %22, !dbg !15692

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h65fee26ffc5da048E"(i64** %guard) #19
          to label %bb6 unwind label %abort, !dbg !15691

abort:                                            ; preds = %bb7
  %23 = landingpad { i8*, i32 }
          cleanup, !dbg !15692
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !15692
  unreachable, !dbg !15692
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h432a93621517fb67E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !15693 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  store %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !15699, metadata !DIExpression()), !dbg !15700
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, !dbg !15701
; call core::str::pattern::Searcher::next_match
  call void @_ZN4core3str7pattern8Searcher10next_match17h62a409247a51568fE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %_2), !dbg !15701
  br label %bb1, !dbg !15701

bb1:                                              ; preds = %start
  ret void, !dbg !15702
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17h7be9bc9c0bf9c8f3E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #1 !dbg !15703 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  store %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !15705, metadata !DIExpression()), !dbg !15706
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, !dbg !15707
; call core::str::pattern::Searcher::next_reject
  call void @_ZN4core3str7pattern8Searcher11next_reject17h31bf01ea2ddf4d96E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %_2), !dbg !15707
  br label %bb1, !dbg !15707

bb1:                                              ; preds = %start
  ret void, !dbg !15708
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h79d159b234693157E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %self) unnamed_addr #1 !dbg !15709 {
start:
  %self.dbg.spill2 = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, align 8
  store %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self, %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill, metadata !15714, metadata !DIExpression()), !dbg !15715
  %self1 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"*, !dbg !15716
  store %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self1, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill2, align 8, !dbg !15716
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"** %self.dbg.spill2, metadata !15717, metadata !DIExpression()), !dbg !15723
  %0 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %self1 to { [0 x i8]*, i64 }*, !dbg !15723
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !15723
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !15723, !nonnull !23, !align !912, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !15723
  %4 = load i64, i64* %3, align 8, !dbg !15723
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !15724
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !15724
  ret { [0 x i8]*, i64 } %6, !dbg !15724
}

; build_script_build::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN18build_script_build4main17h6935e891c16f01a2E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15725 {
start:
  %values.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %v.dbg.spill8 = alloca i64, align 8
  %v.dbg.spill = alloca i64*, align 8
  %libc_check_cfg.dbg.spill = alloca i8, align 1
  %libc_ci.dbg.spill = alloca i8, align 1
  %const_extern_fn_cargo_feature.dbg.spill = alloca i8, align 1
  %align_cargo_feature.dbg.spill = alloca i8, align 1
  %rustc_dep_of_std.dbg.spill = alloca i8, align 1
  %0 = alloca { i8*, i32 }, align 8
  %is_nightly.dbg.spill = alloca i8, align 1
  %rustc_minor_ver.dbg.spill = alloca i32, align 4
  %_251 = alloca [2 x { i8*, i64* }], align 8
  %_244 = alloca %"core::fmt::Arguments", align 8
  %_236 = alloca [2 x { i8*, i64* }], align 8
  %_229 = alloca %"core::fmt::Arguments", align 8
  %values = alloca %"alloc::string::String", align 8
  %name = alloca { [0 x i8]*, i64 }, align 8
  %_216 = alloca i64*, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %_210 = alloca [1 x { i8*, i64* }], align 8
  %_203 = alloca %"core::fmt::Arguments", align 8
  %_198 = alloca [1 x { i8*, i64* }], align 8
  %_191 = alloca %"core::fmt::Arguments", align 8
  %cfg = alloca { [0 x i8]*, i64 }*, align 8
  %_183 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %_168 = alloca i8, align 1
  %_151 = alloca i8, align 1
  %_144 = alloca i8, align 1
  %_137 = alloca i8, align 1
  %_130 = alloca i8, align 1
  %_120 = alloca i8, align 1
  %_113 = alloca i8, align 1
  %_106 = alloca i8, align 1
  %_98 = alloca i8, align 1
  %_97 = alloca i8, align 1
  %_90 = alloca i8, align 1
  %_83 = alloca i8, align 1
  %_76 = alloca i8, align 1
  %_64 = alloca { i64, i64 }, align 8
  %_47 = alloca i8, align 1
  %_39 = alloca { i32, i32 }, align 4
  %_31 = alloca %"core::fmt::Arguments", align 8
  %_29 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_26 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_23 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_20 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_17 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_14 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_2 = alloca %"core::fmt::Arguments", align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter, metadata !15744, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %cfg, metadata !15746, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter1, metadata !15748, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %name, metadata !15750, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %values, metadata !15753, metadata !DIExpression()), !dbg !15759
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_2, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc54 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc67 to [0 x { i8*, i64* }]*), i64 0), !dbg !15760
  br label %bb1, !dbg !15760

bb1:                                              ; preds = %start
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_2), !dbg !15760
  br label %bb2, !dbg !15760

bb2:                                              ; preds = %bb1
; call build_script_build::rustc_minor_nightly
  %1 = call { i32, i8 } @_ZN18build_script_build19rustc_minor_nightly17h7c313fbf47399675E(), !dbg !15761
  %_11.0 = extractvalue { i32, i8 } %1, 0, !dbg !15761
  %2 = extractvalue { i32, i8 } %1, 1, !dbg !15761
  %_11.1 = trunc i8 %2 to i1, !dbg !15761
  br label %bb3, !dbg !15761

bb3:                                              ; preds = %bb2
  store i32 %_11.0, i32* %rustc_minor_ver.dbg.spill, align 4, !dbg !15762
  call void @llvm.dbg.declare(metadata i32* %rustc_minor_ver.dbg.spill, metadata !15727, metadata !DIExpression()), !dbg !15763
  %3 = zext i1 %_11.1 to i8, !dbg !15764
  store i8 %3, i8* %is_nightly.dbg.spill, align 1, !dbg !15764
  call void @llvm.dbg.declare(metadata i8* %is_nightly.dbg.spill, metadata !15729, metadata !DIExpression()), !dbg !15765
; call std::env::var
  call void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_14, [0 x i8]* align 1 bitcast (<{ [30 x i8] }>* @alloc485 to [0 x i8]*), i64 30), !dbg !15766
  br label %bb4, !dbg !15766

bb4:                                              ; preds = %bb3
; invoke core::result::Result<T,E>::is_ok
  %rustc_dep_of_std = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_14)
          to label %bb5 unwind label %cleanup, !dbg !15766

bb158:                                            ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_14) #19
          to label %bb159 unwind label %abort, !dbg !15767

cleanup:                                          ; preds = %bb4
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb158

bb5:                                              ; preds = %bb4
  %9 = zext i1 %rustc_dep_of_std to i8, !dbg !15766
  store i8 %9, i8* %rustc_dep_of_std.dbg.spill, align 1, !dbg !15766
  call void @llvm.dbg.declare(metadata i8* %rustc_dep_of_std.dbg.spill, metadata !15730, metadata !DIExpression()), !dbg !15768
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_14), !dbg !15767
  br label %bb6, !dbg !15767

abort:                                            ; preds = %bb152, %bb153, %bb154, %bb155, %bb156, %bb157, %bb158
  %10 = landingpad { i8*, i32 }
          cleanup, !dbg !15769
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !15769
  unreachable, !dbg !15769

bb159:                                            ; preds = %bb152, %bb153, %bb154, %bb155, %bb156, %bb157, %bb158
  %11 = bitcast { i8*, i32 }* %0 to i8**, !dbg !15769
  %12 = load i8*, i8** %11, align 8, !dbg !15769
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !15769
  %14 = load i32, i32* %13, align 8, !dbg !15769
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0, !dbg !15769
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1, !dbg !15769
  resume { i8*, i32 } %16, !dbg !15769

bb6:                                              ; preds = %bb5
; call std::env::var
  call void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_17, [0 x i8]* align 1 bitcast (<{ [19 x i8] }>* @alloc486 to [0 x i8]*), i64 19), !dbg !15770
  br label %bb7, !dbg !15770

bb7:                                              ; preds = %bb6
; invoke core::result::Result<T,E>::is_ok
  %align_cargo_feature = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_17)
          to label %bb8 unwind label %cleanup2, !dbg !15770

bb157:                                            ; preds = %cleanup2
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_17) #19
          to label %bb159 unwind label %abort, !dbg !15771

cleanup2:                                         ; preds = %bb7
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb157

bb8:                                              ; preds = %bb7
  %22 = zext i1 %align_cargo_feature to i8, !dbg !15770
  store i8 %22, i8* %align_cargo_feature.dbg.spill, align 1, !dbg !15770
  call void @llvm.dbg.declare(metadata i8* %align_cargo_feature.dbg.spill, metadata !15732, metadata !DIExpression()), !dbg !15772
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_17), !dbg !15771
  br label %bb9, !dbg !15771

bb9:                                              ; preds = %bb8
; call std::env::var
  call void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_20, [0 x i8]* align 1 bitcast (<{ [29 x i8] }>* @alloc487 to [0 x i8]*), i64 29), !dbg !15773
  br label %bb10, !dbg !15773

bb10:                                             ; preds = %bb9
; invoke core::result::Result<T,E>::is_ok
  %const_extern_fn_cargo_feature = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_20)
          to label %bb11 unwind label %cleanup3, !dbg !15773

bb156:                                            ; preds = %cleanup3
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_20) #19
          to label %bb159 unwind label %abort, !dbg !15774

cleanup3:                                         ; preds = %bb10
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb156

bb11:                                             ; preds = %bb10
  %28 = zext i1 %const_extern_fn_cargo_feature to i8, !dbg !15773
  store i8 %28, i8* %const_extern_fn_cargo_feature.dbg.spill, align 1, !dbg !15773
  call void @llvm.dbg.declare(metadata i8* %const_extern_fn_cargo_feature.dbg.spill, metadata !15734, metadata !DIExpression()), !dbg !15775
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_20), !dbg !15774
  br label %bb12, !dbg !15774

bb12:                                             ; preds = %bb11
; call std::env::var
  call void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_23, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc488 to [0 x i8]*), i64 7), !dbg !15776
  br label %bb13, !dbg !15776

bb13:                                             ; preds = %bb12
; invoke core::result::Result<T,E>::is_ok
  %libc_ci = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_23)
          to label %bb14 unwind label %cleanup4, !dbg !15776

bb155:                                            ; preds = %cleanup4
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_23) #19
          to label %bb159 unwind label %abort, !dbg !15777

cleanup4:                                         ; preds = %bb13
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb155

bb14:                                             ; preds = %bb13
  %34 = zext i1 %libc_ci to i8, !dbg !15776
  store i8 %34, i8* %libc_ci.dbg.spill, align 1, !dbg !15776
  call void @llvm.dbg.declare(metadata i8* %libc_ci.dbg.spill, metadata !15736, metadata !DIExpression()), !dbg !15778
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_23), !dbg !15777
  br label %bb15, !dbg !15777

bb15:                                             ; preds = %bb14
; call std::env::var
  call void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_26, [0 x i8]* align 1 bitcast (<{ [14 x i8] }>* @alloc489 to [0 x i8]*), i64 14), !dbg !15779
  br label %bb16, !dbg !15779

bb16:                                             ; preds = %bb15
; invoke core::result::Result<T,E>::is_ok
  %libc_check_cfg = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_26)
          to label %bb17 unwind label %cleanup5, !dbg !15779

bb154:                                            ; preds = %cleanup5
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_26) #19
          to label %bb159 unwind label %abort, !dbg !15780

cleanup5:                                         ; preds = %bb16
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb154

bb17:                                             ; preds = %bb16
  %40 = zext i1 %libc_check_cfg to i8, !dbg !15779
  store i8 %40, i8* %libc_check_cfg.dbg.spill, align 1, !dbg !15779
  call void @llvm.dbg.declare(metadata i8* %libc_check_cfg.dbg.spill, metadata !15738, metadata !DIExpression()), !dbg !15781
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_26), !dbg !15780
  br label %bb18, !dbg !15780

bb18:                                             ; preds = %bb17
; call std::env::var
  call void @_ZN3std3env3var17h04c56fa03262f5f6E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_29, [0 x i8]* align 1 bitcast (<{ [21 x i8] }>* @alloc490 to [0 x i8]*), i64 21), !dbg !15782
  br label %bb19, !dbg !15782

bb19:                                             ; preds = %bb18
; invoke core::result::Result<T,E>::is_ok
  %_27 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_29)
          to label %bb20 unwind label %cleanup6, !dbg !15782

bb153:                                            ; preds = %cleanup6
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_29) #19
          to label %bb159 unwind label %abort, !dbg !15783

cleanup6:                                         ; preds = %bb19
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb153

bb20:                                             ; preds = %bb19
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_29), !dbg !15783
  br label %bb21, !dbg !15783

bb21:                                             ; preds = %bb20
  br i1 %_27, label %bb22, label %bb24, !dbg !15782

bb24:                                             ; preds = %bb23, %bb21
; call build_script_build::which_freebsd
  %46 = call { i32, i32 } @_ZN18build_script_build13which_freebsd17h684238cbfe523baaE(), !dbg !15784
  store { i32, i32 } %46, { i32, i32 }* %_39, align 4, !dbg !15784
  br label %bb25, !dbg !15784

bb22:                                             ; preds = %bb21
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_31, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc65 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc67 to [0 x { i8*, i64* }]*), i64 0), !dbg !15785
  br label %bb23, !dbg !15785

bb23:                                             ; preds = %bb22
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_31), !dbg !15785
  br label %bb24, !dbg !15785

bb25:                                             ; preds = %bb24
  %47 = bitcast { i32, i32 }* %_39 to i32*, !dbg !15784
  %48 = load i32, i32* %47, align 4, !dbg !15784, !range !4318, !noundef !23
  %_40 = zext i32 %48 to i64, !dbg !15784
  switch i64 %_40, label %bb27 [
    i64 0, label %bb43
    i64 1, label %bb26
  ], !dbg !15786

bb27:                                             ; preds = %bb25
  unreachable, !dbg !15784

bb43:                                             ; preds = %bb28, %bb30, %bb35, %bb37, %bb39, %bb41, %bb26, %bb25
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc6 to [0 x i8]*), i64 9), !dbg !15787
  br label %bb44, !dbg !15787

bb26:                                             ; preds = %bb25
  %49 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_39, i32 0, i32 1, !dbg !15786
  %50 = load i32, i32* %49, align 4, !dbg !15786
  switch i32 %50, label %bb43 [
    i32 10, label %bb28
    i32 11, label %bb30
    i32 12, label %bb32
    i32 13, label %bb37
    i32 14, label %bb39
    i32 15, label %bb41
  ], !dbg !15786

bb28:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb29, label %bb43, !dbg !15788

bb30:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb31, label %bb43, !dbg !15789

bb32:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb33, label %bb34, !dbg !15790

bb37:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb38, label %bb43, !dbg !15791

bb39:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb40, label %bb43, !dbg !15792

bb41:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb42, label %bb43, !dbg !15793

bb42:                                             ; preds = %bb41
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc10 to [0 x i8]*), i64 9), !dbg !15794
  br label %bb44, !dbg !15794

bb44:                                             ; preds = %bb43, %bb29, %bb31, %bb36, %bb38, %bb40, %bb42
; call build_script_build::emcc_version_code
  %51 = call { i64, i64 } @_ZN18build_script_build17emcc_version_code17hd8d67c9c14b82189E(), !dbg !15795
  store { i64, i64 } %51, { i64, i64 }* %_64, align 8, !dbg !15795
  br label %bb45, !dbg !15795

bb40:                                             ; preds = %bb39
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc9 to [0 x i8]*), i64 9), !dbg !15796
  br label %bb44, !dbg !15796

bb38:                                             ; preds = %bb37
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc8 to [0 x i8]*), i64 9), !dbg !15797
  br label %bb44, !dbg !15797

bb34:                                             ; preds = %bb32
  %52 = zext i1 %rustc_dep_of_std to i8, !dbg !15790
  store i8 %52, i8* %_47, align 1, !dbg !15790
  br label %bb35, !dbg !15790

bb33:                                             ; preds = %bb32
  store i8 1, i8* %_47, align 1, !dbg !15790
  br label %bb35, !dbg !15790

bb35:                                             ; preds = %bb34, %bb33
  %53 = load i8, i8* %_47, align 1, !dbg !15790, !range !298, !noundef !23
  %54 = trunc i8 %53 to i1, !dbg !15790
  br i1 %54, label %bb36, label %bb43, !dbg !15790

bb36:                                             ; preds = %bb35
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc7 to [0 x i8]*), i64 9), !dbg !15798
  br label %bb44, !dbg !15798

bb31:                                             ; preds = %bb30
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc6 to [0 x i8]*), i64 9), !dbg !15799
  br label %bb44, !dbg !15799

bb29:                                             ; preds = %bb28
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc5 to [0 x i8]*), i64 9), !dbg !15800
  br label %bb44, !dbg !15800

bb45:                                             ; preds = %bb44
  %55 = bitcast { i64, i64 }* %_64 to i64*, !dbg !15795
  %_65 = load i64, i64* %55, align 8, !dbg !15795, !range !3483, !noundef !23
  switch i64 %_65, label %bb46 [
    i64 0, label %bb49
    i64 1, label %bb47
  ], !dbg !15801

bb46:                                             ; preds = %bb45
  unreachable, !dbg !15795

bb49:                                             ; preds = %bb48, %bb47, %bb45
  br i1 %libc_ci, label %bb50, label %bb51, !dbg !15802

bb47:                                             ; preds = %bb45
  %v = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_64, i32 0, i32 1, !dbg !15803
  store i64* %v, i64** %v.dbg.spill, align 8, !dbg !15803
  call void @llvm.dbg.declare(metadata i64** %v.dbg.spill, metadata !15742, metadata !DIExpression()), !dbg !15804
  %_69 = load i64, i64* %v, align 8, !dbg !15805
  %_68 = icmp uge i64 %_69, 30142, !dbg !15806
  br i1 %_68, label %bb48, label %bb49, !dbg !15806

bb48:                                             ; preds = %bb47
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_64, i32 0, i32 1, !dbg !15803
  %v7 = load i64, i64* %56, align 8, !dbg !15803
  store i64 %v7, i64* %v.dbg.spill8, align 8, !dbg !15803
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill8, metadata !15740, metadata !DIExpression()), !dbg !15804
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [23 x i8] }>* @alloc3 to [0 x i8]*), i64 23), !dbg !15807
  br label %bb49, !dbg !15807

bb51:                                             ; preds = %bb50, %bb49
  %_77 = icmp uge i32 %_11.0, 15, !dbg !15808
  br i1 %_77, label %bb52, label %bb53, !dbg !15808

bb50:                                             ; preds = %bb49
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [18 x i8] }>* @alloc17 to [0 x i8]*), i64 18), !dbg !15809
  br label %bb51, !dbg !15809

bb53:                                             ; preds = %bb51
  %57 = zext i1 %rustc_dep_of_std to i8, !dbg !15808
  store i8 %57, i8* %_76, align 1, !dbg !15808
  br label %bb54, !dbg !15808

bb52:                                             ; preds = %bb51
  store i8 1, i8* %_76, align 1, !dbg !15808
  br label %bb54, !dbg !15808

bb54:                                             ; preds = %bb53, %bb52
  %58 = load i8, i8* %_76, align 1, !dbg !15808, !range !298, !noundef !23
  %59 = trunc i8 %58 to i1, !dbg !15808
  br i1 %59, label %bb55, label %bb56, !dbg !15808

bb56:                                             ; preds = %bb55, %bb54
  %_84 = icmp uge i32 %_11.0, 19, !dbg !15810
  br i1 %_84, label %bb57, label %bb58, !dbg !15810

bb55:                                             ; preds = %bb54
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [17 x i8] }>* @alloc22 to [0 x i8]*), i64 17), !dbg !15811
  br label %bb56, !dbg !15811

bb58:                                             ; preds = %bb56
  %60 = zext i1 %rustc_dep_of_std to i8, !dbg !15810
  store i8 %60, i8* %_83, align 1, !dbg !15810
  br label %bb59, !dbg !15810

bb57:                                             ; preds = %bb56
  store i8 1, i8* %_83, align 1, !dbg !15810
  br label %bb59, !dbg !15810

bb59:                                             ; preds = %bb58, %bb57
  %61 = load i8, i8* %_83, align 1, !dbg !15810, !range !298, !noundef !23
  %62 = trunc i8 %61 to i1, !dbg !15810
  br i1 %62, label %bb60, label %bb61, !dbg !15810

bb61:                                             ; preds = %bb60, %bb59
  %_91 = icmp uge i32 %_11.0, 24, !dbg !15812
  br i1 %_91, label %bb62, label %bb63, !dbg !15812

bb60:                                             ; preds = %bb59
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [10 x i8] }>* @alloc26 to [0 x i8]*), i64 10), !dbg !15813
  br label %bb61, !dbg !15813

bb63:                                             ; preds = %bb61
  %63 = zext i1 %rustc_dep_of_std to i8, !dbg !15812
  store i8 %63, i8* %_90, align 1, !dbg !15812
  br label %bb64, !dbg !15812

bb62:                                             ; preds = %bb61
  store i8 1, i8* %_90, align 1, !dbg !15812
  br label %bb64, !dbg !15812

bb64:                                             ; preds = %bb63, %bb62
  %64 = load i8, i8* %_90, align 1, !dbg !15812, !range !298, !noundef !23
  %65 = trunc i8 %64 to i1, !dbg !15812
  br i1 %65, label %bb65, label %bb66, !dbg !15812

bb66:                                             ; preds = %bb65, %bb64
  %_99 = icmp uge i32 %_11.0, 25, !dbg !15814
  br i1 %_99, label %bb70, label %bb71, !dbg !15814

bb65:                                             ; preds = %bb64
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [18 x i8] }>* @alloc15 to [0 x i8]*), i64 18), !dbg !15815
  br label %bb66, !dbg !15815

bb71:                                             ; preds = %bb66
  %66 = zext i1 %rustc_dep_of_std to i8, !dbg !15814
  store i8 %66, i8* %_98, align 1, !dbg !15814
  br label %bb72, !dbg !15814

bb70:                                             ; preds = %bb66
  store i8 1, i8* %_98, align 1, !dbg !15814
  br label %bb72, !dbg !15814

bb72:                                             ; preds = %bb71, %bb70
  %67 = load i8, i8* %_98, align 1, !dbg !15814, !range !298, !noundef !23
  %68 = trunc i8 %67 to i1, !dbg !15814
  br i1 %68, label %bb67, label %bb68, !dbg !15814

bb68:                                             ; preds = %bb72
  %69 = zext i1 %align_cargo_feature to i8, !dbg !15814
  store i8 %69, i8* %_97, align 1, !dbg !15814
  br label %bb69, !dbg !15814

bb67:                                             ; preds = %bb72
  store i8 1, i8* %_97, align 1, !dbg !15814
  br label %bb69, !dbg !15814

bb69:                                             ; preds = %bb68, %bb67
  %70 = load i8, i8* %_97, align 1, !dbg !15814, !range !298, !noundef !23
  %71 = trunc i8 %70 to i1, !dbg !15814
  br i1 %71, label %bb73, label %bb74, !dbg !15814

bb74:                                             ; preds = %bb73, %bb69
  %_107 = icmp uge i32 %_11.0, 26, !dbg !15816
  br i1 %_107, label %bb75, label %bb76, !dbg !15816

bb73:                                             ; preds = %bb69
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [10 x i8] }>* @alloc11 to [0 x i8]*), i64 10), !dbg !15817
  br label %bb74, !dbg !15817

bb76:                                             ; preds = %bb74
  %72 = zext i1 %rustc_dep_of_std to i8, !dbg !15816
  store i8 %72, i8* %_106, align 1, !dbg !15816
  br label %bb77, !dbg !15816

bb75:                                             ; preds = %bb74
  store i8 1, i8* %_106, align 1, !dbg !15816
  br label %bb77, !dbg !15816

bb77:                                             ; preds = %bb76, %bb75
  %73 = load i8, i8* %_106, align 1, !dbg !15816, !range !298, !noundef !23
  %74 = trunc i8 %73 to i1, !dbg !15816
  br i1 %74, label %bb78, label %bb79, !dbg !15816

bb79:                                             ; preds = %bb78, %bb77
  %_114 = icmp uge i32 %_11.0, 30, !dbg !15818
  br i1 %_114, label %bb80, label %bb81, !dbg !15818

bb78:                                             ; preds = %bb77
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [11 x i8] }>* @alloc18 to [0 x i8]*), i64 11), !dbg !15819
  br label %bb79, !dbg !15819

bb81:                                             ; preds = %bb79
  %75 = zext i1 %rustc_dep_of_std to i8, !dbg !15818
  store i8 %75, i8* %_113, align 1, !dbg !15818
  br label %bb82, !dbg !15818

bb80:                                             ; preds = %bb79
  store i8 1, i8* %_113, align 1, !dbg !15818
  br label %bb82, !dbg !15818

bb82:                                             ; preds = %bb81, %bb80
  %76 = load i8, i8* %_113, align 1, !dbg !15818, !range !298, !noundef !23
  %77 = trunc i8 %76 to i1, !dbg !15818
  br i1 %77, label %bb83, label %bb84, !dbg !15818

bb84:                                             ; preds = %bb83, %bb82
  %_121 = icmp uge i32 %_11.0, 33, !dbg !15820
  br i1 %_121, label %bb85, label %bb86, !dbg !15820

bb83:                                             ; preds = %bb82
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc16 to [0 x i8]*), i64 15), !dbg !15821
  br label %bb84, !dbg !15821

bb86:                                             ; preds = %bb84
  %78 = zext i1 %rustc_dep_of_std to i8, !dbg !15820
  store i8 %78, i8* %_120, align 1, !dbg !15820
  br label %bb87, !dbg !15820

bb85:                                             ; preds = %bb84
  store i8 1, i8* %_120, align 1, !dbg !15820
  br label %bb87, !dbg !15820

bb87:                                             ; preds = %bb86, %bb85
  %79 = load i8, i8* %_120, align 1, !dbg !15820, !range !298, !noundef !23
  %80 = trunc i8 %79 to i1, !dbg !15820
  br i1 %80, label %bb88, label %bb90, !dbg !15820

bb90:                                             ; preds = %bb89, %bb87
  %_131 = icmp uge i32 %_11.0, 40, !dbg !15822
  br i1 %_131, label %bb91, label %bb92, !dbg !15822

bb88:                                             ; preds = %bb87
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [12 x i8] }>* @alloc21 to [0 x i8]*), i64 12), !dbg !15823
  br label %bb89, !dbg !15823

bb89:                                             ; preds = %bb88
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [22 x i8] }>* @alloc12 to [0 x i8]*), i64 22), !dbg !15824
  br label %bb90, !dbg !15824

bb92:                                             ; preds = %bb90
  %81 = zext i1 %rustc_dep_of_std to i8, !dbg !15822
  store i8 %81, i8* %_130, align 1, !dbg !15822
  br label %bb93, !dbg !15822

bb91:                                             ; preds = %bb90
  store i8 1, i8* %_130, align 1, !dbg !15822
  br label %bb93, !dbg !15822

bb93:                                             ; preds = %bb92, %bb91
  %82 = load i8, i8* %_130, align 1, !dbg !15822, !range !298, !noundef !23
  %83 = trunc i8 %82 to i1, !dbg !15822
  br i1 %83, label %bb94, label %bb95, !dbg !15822

bb95:                                             ; preds = %bb94, %bb93
  %_138 = icmp uge i32 %_11.0, 47, !dbg !15825
  br i1 %_138, label %bb96, label %bb97, !dbg !15825

bb94:                                             ; preds = %bb93
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [19 x i8] }>* @alloc20 to [0 x i8]*), i64 19), !dbg !15826
  br label %bb95, !dbg !15826

bb97:                                             ; preds = %bb95
  %84 = zext i1 %rustc_dep_of_std to i8, !dbg !15825
  store i8 %84, i8* %_137, align 1, !dbg !15825
  br label %bb98, !dbg !15825

bb96:                                             ; preds = %bb95
  store i8 1, i8* %_137, align 1, !dbg !15825
  br label %bb98, !dbg !15825

bb98:                                             ; preds = %bb97, %bb96
  %85 = load i8, i8* %_137, align 1, !dbg !15825, !range !298, !noundef !23
  %86 = trunc i8 %85 to i1, !dbg !15825
  br i1 %86, label %bb99, label %bb100, !dbg !15825

bb100:                                            ; preds = %bb99, %bb98
  %_145 = icmp uge i32 %_11.0, 51, !dbg !15827
  br i1 %_145, label %bb101, label %bb102, !dbg !15827

bb99:                                             ; preds = %bb98
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc19 to [0 x i8]*), i64 15), !dbg !15828
  br label %bb100, !dbg !15828

bb102:                                            ; preds = %bb100
  %87 = zext i1 %rustc_dep_of_std to i8, !dbg !15827
  store i8 %87, i8* %_144, align 1, !dbg !15827
  br label %bb103, !dbg !15827

bb101:                                            ; preds = %bb100
  store i8 1, i8* %_144, align 1, !dbg !15827
  br label %bb103, !dbg !15827

bb103:                                            ; preds = %bb102, %bb101
  %88 = load i8, i8* %_144, align 1, !dbg !15827, !range !298, !noundef !23
  %89 = trunc i8 %88 to i1, !dbg !15827
  br i1 %89, label %bb104, label %bb105, !dbg !15827

bb105:                                            ; preds = %bb104, %bb103
  %_152 = icmp uge i32 %_11.0, 37, !dbg !15829
  br i1 %_152, label %bb106, label %bb107, !dbg !15829

bb104:                                            ; preds = %bb103
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [16 x i8] }>* @alloc23 to [0 x i8]*), i64 16), !dbg !15830
  br label %bb105, !dbg !15830

bb107:                                            ; preds = %bb105
  %90 = zext i1 %rustc_dep_of_std to i8, !dbg !15829
  store i8 %90, i8* %_151, align 1, !dbg !15829
  br label %bb108, !dbg !15829

bb106:                                            ; preds = %bb105
  store i8 1, i8* %_151, align 1, !dbg !15829
  br label %bb108, !dbg !15829

bb108:                                            ; preds = %bb107, %bb106
  %91 = load i8, i8* %_151, align 1, !dbg !15829, !range !298, !noundef !23
  %92 = trunc i8 %91 to i1, !dbg !15829
  br i1 %92, label %bb109, label %bb110, !dbg !15829

bb110:                                            ; preds = %bb109, %bb108
  br i1 %rustc_dep_of_std, label %bb111, label %bb112, !dbg !15831

bb109:                                            ; preds = %bb108
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc25 to [0 x i8]*), i64 27), !dbg !15832
  br label %bb110, !dbg !15832

bb112:                                            ; preds = %bb111, %bb110
  %_162 = icmp uge i32 %_11.0, 62, !dbg !15833
  br i1 %_162, label %bb113, label %bb114, !dbg !15833

bb111:                                            ; preds = %bb110
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [17 x i8] }>* @alloc24 to [0 x i8]*), i64 17), !dbg !15834
  br label %bb112, !dbg !15834

bb114:                                            ; preds = %bb112
  br i1 %const_extern_fn_cargo_feature, label %bb115, label %bb122, !dbg !15835

bb113:                                            ; preds = %bb112
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [20 x i8] }>* @alloc13 to [0 x i8]*), i64 20), !dbg !15836
  br label %bb122, !dbg !15836

bb122:                                            ; preds = %bb121, %bb114, %bb113
  br i1 %libc_check_cfg, label %bb123, label %bb151, !dbg !15837

bb115:                                            ; preds = %bb114
  %_169 = xor i1 %_11.1, true, !dbg !15838
  br i1 %_169, label %bb116, label %bb117, !dbg !15838

bb117:                                            ; preds = %bb115
  %_171 = icmp ult i32 %_11.0, 40, !dbg !15839
  %93 = zext i1 %_171 to i8, !dbg !15838
  store i8 %93, i8* %_168, align 1, !dbg !15838
  br label %bb118, !dbg !15838

bb116:                                            ; preds = %bb115
  store i8 1, i8* %_168, align 1, !dbg !15838
  br label %bb118, !dbg !15838

bb118:                                            ; preds = %bb117, %bb116
  %94 = load i8, i8* %_168, align 1, !dbg !15838, !range !298, !noundef !23
  %95 = trunc i8 %94 to i1, !dbg !15838
  br i1 %95, label %bb119, label %bb120, !dbg !15838

bb120:                                            ; preds = %bb118
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [29 x i8] }>* @alloc14 to [0 x i8]*), i64 29), !dbg !15840
  br label %bb121, !dbg !15840

bb119:                                            ; preds = %bb118
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [51 x i8] }>* @alloc514 to [0 x i8]*), i64 51, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc516 to %"core::panic::location::Location"*)) #18, !dbg !15841
  unreachable, !dbg !15841

bb121:                                            ; preds = %bb120
; call build_script_build::set_cfg
  call void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 bitcast (<{ [20 x i8] }>* @alloc13 to [0 x i8]*), i64 20), !dbg !15842
  br label %bb122, !dbg !15842

bb151:                                            ; preds = %bb138, %bb122
  ret void, !dbg !15843

bb123:                                            ; preds = %bb122
  %96 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 0), align 8, !dbg !15844, !nonnull !23, !align !378, !noundef !23
  %97 = load i64, i64* getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 1), align 8, !dbg !15844
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %98 = call { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hae11c91d5ec3ff5bE"([0 x { [0 x i8]*, i64 }]* align 8 %96, i64 %97), !dbg !15844
  %_181.0 = extractvalue { i64*, i64* } %98, 0, !dbg !15844
  %_181.1 = extractvalue { i64*, i64* } %98, 1, !dbg !15844
  br label %bb124, !dbg !15844

bb124:                                            ; preds = %bb123
  %99 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0, !dbg !15844
  store i64* %_181.0, i64** %99, align 8, !dbg !15844
  %100 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !15844
  store i64* %_181.1, i64** %100, align 8, !dbg !15844
  br label %bb125, !dbg !15845

bb125:                                            ; preds = %bb135, %bb132, %bb124
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %101 = call align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E"({ i64*, i64* }* align 8 %iter), !dbg !15755
  store i64* %101, i64** %_183, align 8, !dbg !15755
  br label %bb126, !dbg !15755

bb126:                                            ; preds = %bb125
  %102 = bitcast i64** %_183 to {}**, !dbg !15755
  %103 = load {}*, {}** %102, align 8, !dbg !15755
  %104 = icmp eq {}* %103, null, !dbg !15755
  %_186 = select i1 %104, i64 0, i64 1, !dbg !15755
  switch i64 %_186, label %bb128 [
    i64 0, label %bb129
    i64 1, label %bb127
  ], !dbg !15755

bb128:                                            ; preds = %bb126
  unreachable, !dbg !15755

bb129:                                            ; preds = %bb126
  %105 = load [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** getelementptr inbounds ({ [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @2 to { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }*), i32 0, i32 0), align 8, !dbg !15846, !nonnull !23, !align !378, !noundef !23
  %106 = load i64, i64* getelementptr inbounds ({ [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @2 to { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }*), i32 0, i32 1), align 8, !dbg !15846
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %107 = call { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h995688bfa5e3dbb3E"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %105, i64 %106), !dbg !15846
  %_214.0 = extractvalue { i64*, i64* } %107, 0, !dbg !15846
  %_214.1 = extractvalue { i64*, i64* } %107, 1, !dbg !15846
  br label %bb136, !dbg !15846

bb127:                                            ; preds = %bb126
  %108 = bitcast i64** %_183 to { [0 x i8]*, i64 }**, !dbg !15847
  %109 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %108, align 8, !dbg !15847, !nonnull !23, !align !378, !noundef !23
  store { [0 x i8]*, i64 }* %109, { [0 x i8]*, i64 }** %cfg, align 8, !dbg !15847
  %_188 = icmp uge i32 %_11.0, 75, !dbg !15848
  br i1 %_188, label %bb130, label %bb133, !dbg !15848

bb133:                                            ; preds = %bb127
; call core::fmt::ArgumentV1::new_display
  %110 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h5e8def8530a18430E({ [0 x i8]*, i64 }** align 8 %cfg), !dbg !15849
  %_211.0 = extractvalue { i8*, i64* } %110, 0, !dbg !15849
  %_211.1 = extractvalue { i8*, i64* } %110, 1, !dbg !15849
  br label %bb134, !dbg !15849

bb130:                                            ; preds = %bb127
; call core::fmt::ArgumentV1::new_display
  %111 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h5e8def8530a18430E({ [0 x i8]*, i64 }** align 8 %cfg), !dbg !15850
  %_199.0 = extractvalue { i8*, i64* } %111, 0, !dbg !15850
  %_199.1 = extractvalue { i8*, i64* } %111, 1, !dbg !15850
  br label %bb131, !dbg !15850

bb131:                                            ; preds = %bb130
  %112 = bitcast [1 x { i8*, i64* }]* %_198 to { i8*, i64* }*, !dbg !15850
  %113 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %112, i32 0, i32 0, !dbg !15850
  store i8* %_199.0, i8** %113, align 8, !dbg !15850
  %114 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %112, i32 0, i32 1, !dbg !15850
  store i64* %_199.1, i64** %114, align 8, !dbg !15850
  %_195.0 = bitcast [1 x { i8*, i64* }]* %_198 to [0 x { i8*, i64* }]*, !dbg !15850
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_191, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc121 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_195.0, i64 1), !dbg !15850
  br label %bb132, !dbg !15850

bb132:                                            ; preds = %bb131
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_191), !dbg !15850
  br label %bb125, !dbg !15850

bb134:                                            ; preds = %bb133
  %115 = bitcast [1 x { i8*, i64* }]* %_210 to { i8*, i64* }*, !dbg !15849
  %116 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 0, !dbg !15849
  store i8* %_211.0, i8** %116, align 8, !dbg !15849
  %117 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 1, !dbg !15849
  store i64* %_211.1, i64** %117, align 8, !dbg !15849
  %_207.0 = bitcast [1 x { i8*, i64* }]* %_210 to [0 x { i8*, i64* }]*, !dbg !15849
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_203, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc125 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_207.0, i64 1), !dbg !15849
  br label %bb135, !dbg !15849

bb135:                                            ; preds = %bb134
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_203), !dbg !15849
  br label %bb125, !dbg !15849

bb136:                                            ; preds = %bb129
  %118 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0, !dbg !15846
  store i64* %_214.0, i64** %118, align 8, !dbg !15846
  %119 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1, !dbg !15846
  store i64* %_214.1, i64** %119, align 8, !dbg !15846
  br label %bb137, !dbg !15851

bb137:                                            ; preds = %bb150, %bb136
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %120 = call align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hed34674ac8513ac7E"({ i64*, i64* }* align 8 %iter1), !dbg !15757
  store i64* %120, i64** %_216, align 8, !dbg !15757
  br label %bb138, !dbg !15757

bb138:                                            ; preds = %bb137
  %121 = bitcast i64** %_216 to {}**, !dbg !15757
  %122 = load {}*, {}** %121, align 8, !dbg !15757
  %123 = icmp eq {}* %122, null, !dbg !15757
  %_219 = select i1 %123, i64 0, i64 1, !dbg !15757
  switch i64 %_219, label %bb140 [
    i64 0, label %bb151
    i64 1, label %bb139
  ], !dbg !15757

bb140:                                            ; preds = %bb138
  unreachable, !dbg !15757

bb139:                                            ; preds = %bb138
  %124 = bitcast i64** %_216 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15852
  %_266 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %124, align 8, !dbg !15852, !nonnull !23, !align !378, !noundef !23
  %125 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_266 to { [0 x i8]*, i64 }*, !dbg !15852
  %126 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %125, i32 0, i32 0, !dbg !15852
  %127 = load [0 x i8]*, [0 x i8]** %126, align 8, !dbg !15852, !nonnull !23, !align !912, !noundef !23
  %128 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %125, i32 0, i32 1, !dbg !15852
  %129 = load i64, i64* %128, align 8, !dbg !15852
  %130 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %name, i32 0, i32 0, !dbg !15852
  store [0 x i8]* %127, [0 x i8]** %130, align 8, !dbg !15852
  %131 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %name, i32 0, i32 1, !dbg !15852
  store i64 %129, i64* %131, align 8, !dbg !15852
  %132 = bitcast i64** %_216 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15853
  %_267 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %132, align 8, !dbg !15853, !nonnull !23, !align !378, !noundef !23
  %133 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_267, i32 0, i32 1, !dbg !15853
  %134 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %133, i32 0, i32 0, !dbg !15853
  %values.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %134, align 8, !dbg !15853, !nonnull !23, !align !378, !noundef !23
  %135 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %133, i32 0, i32 1, !dbg !15853
  %values.1 = load i64, i64* %135, align 8, !dbg !15853
  %136 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %values.dbg.spill, i32 0, i32 0, !dbg !15853
  store [0 x { [0 x i8]*, i64 }]* %values.0, [0 x { [0 x i8]*, i64 }]** %136, align 8, !dbg !15853
  %137 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %values.dbg.spill, i32 0, i32 1, !dbg !15853
  store i64 %values.1, i64* %137, align 8, !dbg !15853
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %values.dbg.spill, metadata !15752, metadata !DIExpression()), !dbg !15854
; call alloc::slice::<impl [T]>::join
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17habb5388bde365e88E"(%"alloc::string::String"* sret(%"alloc::string::String") %values, [0 x { [0 x i8]*, i64 }]* align 8 %values.0, i64 %values.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc519 to [0 x i8]*), i64 3), !dbg !15855
  br label %bb141, !dbg !15855

bb141:                                            ; preds = %bb139
  %_226 = icmp uge i32 %_11.0, 75, !dbg !15856
  br i1 %_226, label %bb142, label %bb146, !dbg !15856

bb146:                                            ; preds = %bb141
; invoke core::fmt::ArgumentV1::new_display
  %138 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h582ab69c2d5a85f5E({ [0 x i8]*, i64 }* align 8 %name)
          to label %bb147 unwind label %cleanup9, !dbg !15857

bb142:                                            ; preds = %bb141
; invoke core::fmt::ArgumentV1::new_display
  %139 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h582ab69c2d5a85f5E({ [0 x i8]*, i64 }* align 8 %name)
          to label %bb143 unwind label %cleanup9, !dbg !15858

bb152:                                            ; preds = %cleanup9
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %values) #19
          to label %bb159 unwind label %abort, !dbg !15859

cleanup9:                                         ; preds = %bb149, %bb148, %bb147, %bb146, %bb145, %bb144, %bb143, %bb142
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  %142 = extractvalue { i8*, i32 } %140, 1
  %143 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %141, i8** %143, align 8
  %144 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %142, i32* %144, align 8
  br label %bb152

bb143:                                            ; preds = %bb142
  %_237.0 = extractvalue { i8*, i64* } %139, 0, !dbg !15858
  %_237.1 = extractvalue { i8*, i64* } %139, 1, !dbg !15858
; invoke core::fmt::ArgumentV1::new_display
  %145 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h19ccdb0c77e0394cE(%"alloc::string::String"* align 8 %values)
          to label %bb144 unwind label %cleanup9, !dbg !15858

bb144:                                            ; preds = %bb143
  %_240.0 = extractvalue { i8*, i64* } %145, 0, !dbg !15858
  %_240.1 = extractvalue { i8*, i64* } %145, 1, !dbg !15858
  %146 = bitcast [2 x { i8*, i64* }]* %_236 to { i8*, i64* }*, !dbg !15858
  %147 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %146, i32 0, i32 0, !dbg !15858
  store i8* %_237.0, i8** %147, align 8, !dbg !15858
  %148 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %146, i32 0, i32 1, !dbg !15858
  store i64* %_237.1, i64** %148, align 8, !dbg !15858
  %149 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_236, i32 0, i32 1, !dbg !15858
  %150 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %149, i32 0, i32 0, !dbg !15858
  store i8* %_240.0, i8** %150, align 8, !dbg !15858
  %151 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %149, i32 0, i32 1, !dbg !15858
  store i64* %_240.1, i64** %151, align 8, !dbg !15858
  %_233.0 = bitcast [2 x { i8*, i64* }]* %_236 to [0 x { i8*, i64* }]*, !dbg !15858
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_229, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc131 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_233.0, i64 2)
          to label %bb145 unwind label %cleanup9, !dbg !15858

bb145:                                            ; preds = %bb144
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_229)
          to label %bb160 unwind label %cleanup9, !dbg !15858

bb160:                                            ; preds = %bb145
  br label %bb150, !dbg !15858

bb150:                                            ; preds = %bb161, %bb160
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %values), !dbg !15859
  br label %bb137, !dbg !15859

bb147:                                            ; preds = %bb146
  %_252.0 = extractvalue { i8*, i64* } %138, 0, !dbg !15857
  %_252.1 = extractvalue { i8*, i64* } %138, 1, !dbg !15857
; invoke core::fmt::ArgumentV1::new_display
  %152 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h19ccdb0c77e0394cE(%"alloc::string::String"* align 8 %values)
          to label %bb148 unwind label %cleanup9, !dbg !15857

bb148:                                            ; preds = %bb147
  %_255.0 = extractvalue { i8*, i64* } %152, 0, !dbg !15857
  %_255.1 = extractvalue { i8*, i64* } %152, 1, !dbg !15857
  %153 = bitcast [2 x { i8*, i64* }]* %_251 to { i8*, i64* }*, !dbg !15857
  %154 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %153, i32 0, i32 0, !dbg !15857
  store i8* %_252.0, i8** %154, align 8, !dbg !15857
  %155 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %153, i32 0, i32 1, !dbg !15857
  store i64* %_252.1, i64** %155, align 8, !dbg !15857
  %156 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_251, i32 0, i32 1, !dbg !15857
  %157 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %156, i32 0, i32 0, !dbg !15857
  store i8* %_255.0, i8** %157, align 8, !dbg !15857
  %158 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %156, i32 0, i32 1, !dbg !15857
  store i64* %_255.1, i64** %158, align 8, !dbg !15857
  %_248.0 = bitcast [2 x { i8*, i64* }]* %_251 to [0 x { i8*, i64* }]*, !dbg !15857
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_244, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc136 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_248.0, i64 2)
          to label %bb149 unwind label %cleanup9, !dbg !15857

bb149:                                            ; preds = %bb148
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_244)
          to label %bb161 unwind label %cleanup9, !dbg !15857

bb161:                                            ; preds = %bb149
  br label %bb150, !dbg !15857
}

; build_script_build::rustc_minor_nightly
; Function Attrs: nonlazybind uwtable
define internal { i32, i8 } @_ZN18build_script_build19rustc_minor_nightly17h7c313fbf47399675E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15860 {
start:
  %minor.dbg.spill = alloca i32, align 4
  %e.dbg.spill11 = alloca i32, align 4
  %0 = alloca i64, align 8
  %e.dbg.spill9 = alloca { [0 x i8]*, i64 }, align 8
  %nightly.dbg.spill = alloca i8, align 1
  %nightly_raw.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %version.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_84 = alloca i8, align 1
  %_71 = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  %_70 = alloca { i32, i32 }, align 4
  %_60 = alloca { i8*, i64 }, align 8
  %_57 = alloca %"core::str::iter::Split<char>", align 8
  %minor = alloca { i8*, i64 }, align 8
  %_49 = alloca { i8*, i64 }, align 8
  %pieces = alloca %"core::str::iter::Split<char>", align 8
  %_37 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_36 = alloca { i8*, i64 }, align 8
  %_31 = alloca %"alloc::borrow::Cow<str>", align 8
  %_27 = alloca [1 x { i8*, i64* }], align 8
  %_20 = alloca %"core::fmt::Arguments", align 8
  %_13 = alloca %"std::ffi::os_str::OsString", align 8
  %_12 = alloca %"std::process::Command", align 8
  %_8 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %_7 = alloca %"core::option::Option<std::process::Output>", align 8
  %output = alloca %"std::process::Output", align 8
  %e = alloca %"std::ffi::os_str::OsString", align 8
  %_2 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %rustc = alloca %"std::ffi::os_str::OsString", align 8
  %2 = alloca { i32, i8 }, align 4
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %rustc, metadata !15868, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %e, metadata !15870, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output, metadata !15872, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"* %pieces, metadata !15878, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %minor, metadata !15880, metadata !DIExpression()), !dbg !15898
  store i8 0, i8* %_84, align 1, !dbg !15899
; call std::env::var_os
  call void @_ZN3std3env6var_os17h95320143ad2097f6E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %_2, [0 x i8]* align 1 bitcast (<{ [5 x i8] }>* @alloc520 to [0 x i8]*), i64 5), !dbg !15900
  br label %bb1, !dbg !15900

bb1:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_2 to {}**, !dbg !15900
  %4 = load {}*, {}** %3, align 8, !dbg !15900
  %5 = icmp eq {}* %4, null, !dbg !15900
  %_3 = select i1 %5, i64 0, i64 1, !dbg !15900
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !15901

bb3:                                              ; preds = %bb1
  unreachable, !dbg !15900

bb2:                                              ; preds = %bb1
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc544 to %"core::panic::location::Location"*)) #18, !dbg !15901
  unreachable, !dbg !15901

bb4:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_2 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !15901
  %7 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %6 to %"std::ffi::os_str::OsString"*, !dbg !15901
  %8 = bitcast %"std::ffi::os_str::OsString"* %e to i8*, !dbg !15901
  %9 = bitcast %"std::ffi::os_str::OsString"* %7 to i8*, !dbg !15901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !15901
  store i8 1, i8* %_84, align 1, !dbg !15895
  %10 = bitcast %"std::ffi::os_str::OsString"* %rustc to i8*, !dbg !15895
  %11 = bitcast %"std::ffi::os_str::OsString"* %e to i8*, !dbg !15895
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !15895
  store i8 0, i8* %_84, align 1, !dbg !15902
  %12 = bitcast %"std::ffi::os_str::OsString"* %_13 to i8*, !dbg !15902
  %13 = bitcast %"std::ffi::os_str::OsString"* %rustc to i8*, !dbg !15902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !15902
; invoke std::process::Command::new
  invoke void @_ZN3std7process7Command3new17h9f99ecca9871a14cE(%"std::process::Command"* sret(%"std::process::Command") %_12, %"std::ffi::os_str::OsString"* %_13)
          to label %bb5 unwind label %cleanup, !dbg !15903

bb52:                                             ; preds = %bb48, %bb49, %cleanup
  %14 = load i8, i8* %_84, align 1, !dbg !15904, !range !298, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !15904
  br i1 %15, label %bb51, label %bb50, !dbg !15904

cleanup:                                          ; preds = %bb45, %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb52

bb5:                                              ; preds = %bb4
; invoke std::process::Command::arg
  %_10 = invoke align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17h40e8406b4949a826E(%"std::process::Command"* align 8 %_12, [0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc521 to [0 x i8]*), i64 9)
          to label %bb6 unwind label %cleanup1, !dbg !15903

bb49:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_12) #19
          to label %bb52 unwind label %abort, !dbg !15905

cleanup1:                                         ; preds = %bb8, %bb7, %bb6, %bb5
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb49

bb6:                                              ; preds = %bb5
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h7fc9d6eead3365e0E(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>") %_8, %"std::process::Command"* align 8 %_10)
          to label %bb7 unwind label %cleanup1, !dbg !15903

bb7:                                              ; preds = %bb6
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6c83611c0bcafc63E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %_7, %"core::result::Result<std::process::Output, std::io::error::Error>"* %_8)
          to label %bb8 unwind label %cleanup1, !dbg !15903

bb8:                                              ; preds = %bb7
; invoke core::option::Option<T>::expect
  invoke void @"_ZN4core6option15Option$LT$T$GT$6expect17hff1c4514e1d2e0daE"(%"std::process::Output"* sret(%"std::process::Output") %output, %"core::option::Option<std::process::Output>"* %_7, [0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc524 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup1, !dbg !15903

bb9:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_12)
          to label %bb10 unwind label %cleanup2, !dbg !15905

abort:                                            ; preds = %bb51, %bb48, %bb47, %bb49
  %26 = landingpad { i8*, i32 }
          cleanup, !dbg !15906
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !15906
  unreachable, !dbg !15906

bb48:                                             ; preds = %bb47, %cleanup2
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h1a4e4d0f5779de40E"(%"std::process::Output"* %output) #19
          to label %bb52 unwind label %abort, !dbg !15907

cleanup2:                                         ; preds = %bb21, %bb31, %bb38, %bb43, %bb41, %bb40, %bb36, %bb35, %bb34, %bb33, %bb29, %bb28, %bb27, %bb25, %bb24, %bb23, %bb19, %bb18, %bb17, %bb13, %bb12, %bb10, %bb9
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb48

bb10:                                             ; preds = %bb9
  %_18 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 2, !dbg !15908
; invoke std::process::ExitStatus::success
  %_17 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h8088751888ee9681E(i32* align 4 %_18)
          to label %bb11 unwind label %cleanup2, !dbg !15908

bb11:                                             ; preds = %bb10
  %_16 = xor i1 %_17, true, !dbg !15909
  br i1 %_16, label %bb12, label %bb17, !dbg !15909

bb17:                                             ; preds = %bb11
  %_41 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !15910
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %32 = invoke { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E"(%"alloc::vec::Vec<u8>"* align 8 %_41)
          to label %bb18 unwind label %cleanup2, !dbg !15910

bb12:                                             ; preds = %bb11
  %_34 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !15911
; invoke alloc::vec::Vec<T,A>::as_slice
  %33 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h772ad5b351a07f3cE"(%"alloc::vec::Vec<u8>"* align 8 %_34)
          to label %bb13 unwind label %cleanup2, !dbg !15911

bb13:                                             ; preds = %bb12
  %_33.0 = extractvalue { [0 x i8]*, i64 } %33, 0, !dbg !15911
  %_33.1 = extractvalue { [0 x i8]*, i64 } %33, 1, !dbg !15911
; invoke alloc::string::String::from_utf8_lossy
  invoke void @_ZN5alloc6string6String15from_utf8_lossy17h229385ecf6f6c974E(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %_31, [0 x i8]* align 1 %_33.0, i64 %_33.1)
          to label %bb14 unwind label %cleanup2, !dbg !15912

bb14:                                             ; preds = %bb13
; invoke core::fmt::ArgumentV1::new_display
  %34 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hfe8b01c3bbed3f42E(%"alloc::borrow::Cow<str>"* align 8 %_31)
          to label %bb15 unwind label %cleanup3, !dbg !15913

bb47:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h68c780c1427036f9E"(%"alloc::borrow::Cow<str>"* %_31) #19
          to label %bb48 unwind label %abort, !dbg !15913

cleanup3:                                         ; preds = %bb16, %bb15, %bb14
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb47

bb15:                                             ; preds = %bb14
  %_28.0 = extractvalue { i8*, i64* } %34, 0, !dbg !15913
  %_28.1 = extractvalue { i8*, i64* } %34, 1, !dbg !15913
  %40 = bitcast [1 x { i8*, i64* }]* %_27 to { i8*, i64* }*, !dbg !15913
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %40, i32 0, i32 0, !dbg !15913
  store i8* %_28.0, i8** %41, align 8, !dbg !15913
  %42 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %40, i32 0, i32 1, !dbg !15913
  store i64* %_28.1, i64** %42, align 8, !dbg !15913
  %_24.0 = bitcast [1 x { i8*, i64* }]* %_27 to [0 x { i8*, i64* }]*, !dbg !15913
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_20, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc212 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_24.0, i64 1)
          to label %bb16 unwind label %cleanup3, !dbg !15913

bb16:                                             ; preds = %bb15
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h8b6ce72891ae5e4fE(%"core::fmt::Arguments"* %_20, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc526 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup3, !dbg !15913

unreachable:                                      ; preds = %bb21, %bb31, %bb38, %bb43, %bb27, %bb16
  unreachable

bb18:                                             ; preds = %bb17
  %_39.0 = extractvalue { [0 x i8]*, i64 } %32, 0, !dbg !15910
  %_39.1 = extractvalue { [0 x i8]*, i64 } %32, 1, !dbg !15910
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817ha505d97bf6980ce7E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_37, [0 x i8]* align 1 %_39.0, i64 %_39.1)
          to label %bb19 unwind label %cleanup2, !dbg !15914

bb19:                                             ; preds = %bb18
; invoke core::result::Result<T,E>::ok
  %43 = invoke { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17hc0a9c6e44b396b71E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_37)
          to label %bb20 unwind label %cleanup2, !dbg !15914

bb20:                                             ; preds = %bb19
  store { i8*, i64 } %43, { i8*, i64 }* %_36, align 8, !dbg !15914
  %44 = bitcast { i8*, i64 }* %_36 to {}**, !dbg !15914
  %45 = load {}*, {}** %44, align 8, !dbg !15914
  %46 = icmp eq {}* %45, null, !dbg !15914
  %_42 = select i1 %46, i64 0, i64 1, !dbg !15914
  switch i64 %_42, label %bb22 [
    i64 0, label %bb21
    i64 1, label %bb23
  ], !dbg !15915

bb22:                                             ; preds = %bb20
  unreachable, !dbg !15914

bb21:                                             ; preds = %bb20
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc541 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup2, !dbg !15915

bb23:                                             ; preds = %bb20
  %47 = bitcast { i8*, i64 }* %_36 to { [0 x i8]*, i64 }*, !dbg !15915
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0, !dbg !15915
  %e.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !dbg !15915, !nonnull !23, !align !912, !noundef !23
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1, !dbg !15915
  %e.1 = load i64, i64* %49, align 8, !dbg !15915
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !15915
  store [0 x i8]* %e.0, [0 x i8]** %50, align 8, !dbg !15915
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !15915
  store i64 %e.1, i64* %51, align 8, !dbg !15915
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill, metadata !15876, metadata !DIExpression()), !dbg !15916
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %version.dbg.spill, i32 0, i32 0, !dbg !15916
  store [0 x i8]* %e.0, [0 x i8]** %52, align 8, !dbg !15916
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %version.dbg.spill, i32 0, i32 1, !dbg !15916
  store i64 %e.1, i64* %53, align 8, !dbg !15916
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %version.dbg.spill, metadata !15874, metadata !DIExpression()), !dbg !15917
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h40983305cb1e6931E"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %pieces, [0 x i8]* align 1 %e.0, i64 %e.1, i32 46)
          to label %bb24 unwind label %cleanup2, !dbg !15918

bb24:                                             ; preds = %bb23
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %54 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E"(%"core::str::iter::Split<char>"* align 8 %pieces)
          to label %bb25 unwind label %cleanup2, !dbg !15919

bb25:                                             ; preds = %bb24
  store { i8*, i64 } %54, { i8*, i64 }* %_49, align 8, !dbg !15919
; invoke <core::option::Option<T> as core::cmp::PartialEq>::ne
  %_47 = invoke zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h606434351e37dd6dE"({ i8*, i64 }* align 8 %_49, { i8*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc216 to { i8*, i64 }*))
          to label %bb26 unwind label %cleanup2, !dbg !15919

bb26:                                             ; preds = %bb25
  br i1 %_47, label %bb27, label %bb28, !dbg !15919

bb28:                                             ; preds = %bb26
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %55 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E"(%"core::str::iter::Split<char>"* align 8 %pieces)
          to label %bb29 unwind label %cleanup2, !dbg !15920

bb27:                                             ; preds = %bb26
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc529 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup2, !dbg !15921

bb29:                                             ; preds = %bb28
  store { i8*, i64 } %55, { i8*, i64 }* %minor, align 8, !dbg !15920
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %56 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E"(%"core::str::iter::Split<char>"* align 8 %pieces)
          to label %bb30 unwind label %cleanup2, !dbg !15922

bb30:                                             ; preds = %bb29
  store { i8*, i64 } %56, { i8*, i64 }* %_60, align 8, !dbg !15922
  %57 = bitcast { i8*, i64 }* %_60 to {}**, !dbg !15922
  %58 = load {}*, {}** %57, align 8, !dbg !15922
  %59 = icmp eq {}* %58, null, !dbg !15922
  %_62 = select i1 %59, i64 0, i64 1, !dbg !15922
  switch i64 %_62, label %bb32 [
    i64 0, label %bb31
    i64 1, label %bb33
  ], !dbg !15923

bb32:                                             ; preds = %bb30
  unreachable, !dbg !15922

bb31:                                             ; preds = %bb30
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc538 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup2, !dbg !15923

bb33:                                             ; preds = %bb30
  %60 = bitcast { i8*, i64 }* %_60 to { [0 x i8]*, i64 }*, !dbg !15923
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %60, i32 0, i32 0, !dbg !15923
  %e.04 = load [0 x i8]*, [0 x i8]** %61, align 8, !dbg !15923, !nonnull !23, !align !912, !noundef !23
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %60, i32 0, i32 1, !dbg !15923
  %e.15 = load i64, i64* %62, align 8, !dbg !15923
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill6, i32 0, i32 0, !dbg !15923
  store [0 x i8]* %e.04, [0 x i8]** %63, align 8, !dbg !15923
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill6, i32 0, i32 1, !dbg !15923
  store i64 %e.15, i64* %64, align 8, !dbg !15923
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill6, metadata !15884, metadata !DIExpression()), !dbg !15924
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h40983305cb1e6931E"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %_57, [0 x i8]* align 1 %e.04, i64 %e.15, i32 45)
          to label %bb34 unwind label %cleanup2, !dbg !15923

bb34:                                             ; preds = %bb33
; invoke core::iter::traits::iterator::Iterator::nth
  %65 = invoke { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator3nth17hbf2f54fc1c2a83daE(%"core::str::iter::Split<char>"* align 8 %_57, i64 1)
          to label %bb35 unwind label %cleanup2, !dbg !15923

bb35:                                             ; preds = %bb34
  %nightly_raw.0 = extractvalue { i8*, i64 } %65, 0, !dbg !15923
  %nightly_raw.1 = extractvalue { i8*, i64 } %65, 1, !dbg !15923
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %nightly_raw.dbg.spill, i32 0, i32 0, !dbg !15923
  store i8* %nightly_raw.0, i8** %66, align 8, !dbg !15923
  %67 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %nightly_raw.dbg.spill, i32 0, i32 1, !dbg !15923
  store i64 %nightly_raw.1, i64* %67, align 8, !dbg !15923
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %nightly_raw.dbg.spill, metadata !15882, metadata !DIExpression()), !dbg !15925
; invoke core::option::Option<T>::map
  %_66 = invoke i8 @"_ZN4core6option15Option$LT$T$GT$3map17h3544d673cafebf97E"(i8* align 1 %nightly_raw.0, i64 %nightly_raw.1)
          to label %bb36 unwind label %cleanup2, !dbg !15926, !range !6738

bb36:                                             ; preds = %bb35
; invoke core::option::Option<T>::unwrap_or
  %nightly = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h8bd53bce537392cdE"(i8 %_66, i1 zeroext false)
          to label %bb37 unwind label %cleanup2, !dbg !15926

bb37:                                             ; preds = %bb36
  %68 = zext i1 %nightly to i8, !dbg !15926
  store i8 %68, i8* %nightly.dbg.spill, align 1, !dbg !15926
  call void @llvm.dbg.declare(metadata i8* %nightly.dbg.spill, metadata !15886, metadata !DIExpression()), !dbg !15927
  %69 = bitcast { i8*, i64 }* %minor to {}**, !dbg !15928
  %70 = load {}*, {}** %69, align 8, !dbg !15928
  %71 = icmp eq {}* %70, null, !dbg !15928
  %_74 = select i1 %71, i64 0, i64 1, !dbg !15928
  switch i64 %_74, label %bb39 [
    i64 0, label %bb38
    i64 1, label %bb40
  ], !dbg !15929

bb39:                                             ; preds = %bb37
  unreachable, !dbg !15928

bb38:                                             ; preds = %bb37
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc535 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup2, !dbg !15929

bb40:                                             ; preds = %bb37
  %72 = bitcast { i8*, i64 }* %minor to { [0 x i8]*, i64 }*, !dbg !15929
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 0, !dbg !15929
  %e.07 = load [0 x i8]*, [0 x i8]** %73, align 8, !dbg !15929, !nonnull !23, !align !912, !noundef !23
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 1, !dbg !15929
  %e.18 = load i64, i64* %74, align 8, !dbg !15929
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !15929
  store [0 x i8]* %e.07, [0 x i8]** %75, align 8, !dbg !15929
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !15929
  store i64 %e.18, i64* %76, align 8, !dbg !15929
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill9, metadata !15890, metadata !DIExpression()), !dbg !15930
; invoke core::str::<impl str>::parse
  %77 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hbf348ed177e1e855E"([0 x i8]* align 1 %e.07, i64 %e.18)
          to label %bb41 unwind label %cleanup2, !dbg !15929

bb41:                                             ; preds = %bb40
  store i64 %77, i64* %0, align 8, !dbg !15929
  %78 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %_71 to i8*, !dbg !15929
  %79 = bitcast i64* %0 to i8*, !dbg !15929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 8 %79, i64 8, i1 false), !dbg !15929
  %80 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %_71 to i64*, !dbg !15929
  %81 = load i64, i64* %80, align 4, !dbg !15929
; invoke core::result::Result<T,E>::ok
  %82 = invoke { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h5e4edb54d8a33f3fE"(i64 %81)
          to label %bb42 unwind label %cleanup2, !dbg !15929

bb42:                                             ; preds = %bb41
  store { i32, i32 } %82, { i32, i32 }* %_70, align 4, !dbg !15929
  %83 = bitcast { i32, i32 }* %_70 to i32*, !dbg !15929
  %84 = load i32, i32* %83, align 4, !dbg !15929, !range !4318, !noundef !23
  %_77 = zext i32 %84 to i64, !dbg !15929
  switch i64 %_77, label %bb44 [
    i64 0, label %bb43
    i64 1, label %bb45
  ], !dbg !15931

bb44:                                             ; preds = %bb42
  unreachable, !dbg !15929

bb43:                                             ; preds = %bb42
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E([0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc542 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc532 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup2, !dbg !15931

bb45:                                             ; preds = %bb42
  %85 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_70, i32 0, i32 1, !dbg !15931
  %e10 = load i32, i32* %85, align 4, !dbg !15931
  store i32 %e10, i32* %e.dbg.spill11, align 4, !dbg !15931
  call void @llvm.dbg.declare(metadata i32* %e.dbg.spill11, metadata !15892, metadata !DIExpression()), !dbg !15932
  store i32 %e10, i32* %minor.dbg.spill, align 4, !dbg !15932
  call void @llvm.dbg.declare(metadata i32* %minor.dbg.spill, metadata !15888, metadata !DIExpression()), !dbg !15933
  %86 = bitcast { i32, i8 }* %2 to i32*, !dbg !15934
  store i32 %e10, i32* %86, align 4, !dbg !15934
  %87 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1, !dbg !15934
  %88 = zext i1 %nightly to i8, !dbg !15934
  store i8 %88, i8* %87, align 4, !dbg !15934
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h1a4e4d0f5779de40E"(%"std::process::Output"* %output)
          to label %bb46 unwind label %cleanup, !dbg !15907

bb46:                                             ; preds = %bb45
  store i8 0, i8* %_84, align 1, !dbg !15904
  %89 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 0, !dbg !15935
  %90 = load i32, i32* %89, align 4, !dbg !15935
  %91 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1, !dbg !15935
  %92 = load i8, i8* %91, align 4, !dbg !15935, !range !298, !noundef !23
  %93 = trunc i8 %92 to i1, !dbg !15935
  %94 = zext i1 %93 to i8, !dbg !15935
  %95 = insertvalue { i32, i8 } undef, i32 %90, 0, !dbg !15935
  %96 = insertvalue { i32, i8 } %95, i8 %94, 1, !dbg !15935
  ret { i32, i8 } %96, !dbg !15935

bb50:                                             ; preds = %bb51, %bb52
  %97 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15906
  %98 = load i8*, i8** %97, align 8, !dbg !15906
  %99 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15906
  %100 = load i32, i32* %99, align 8, !dbg !15906
  %101 = insertvalue { i8*, i32 } undef, i8* %98, 0, !dbg !15906
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1, !dbg !15906
  resume { i8*, i32 } %102, !dbg !15906

bb51:                                             ; preds = %bb52
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E"(%"std::ffi::os_str::OsString"* %rustc) #19
          to label %bb50 unwind label %abort, !dbg !15904
}

; build_script_build::rustc_minor_nightly::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17h4e87a3ecba6a48f2E"([0 x i8]* align 1 %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !15936 {
start:
  %raw.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:228:14: 228:72]", align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:228:14: 228:72]"* %_1.dbg.spill, metadata !15941, metadata !DIExpression()), !dbg !15942
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %raw.dbg.spill, i32 0, i32 0
  store [0 x i8]* %raw.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %raw.dbg.spill, metadata !15940, metadata !DIExpression()), !dbg !15943
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %raw.0, i64 %raw.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc545 to [0 x i8]*), i64 3), !dbg !15944
  br label %bb4, !dbg !15944

bb4:                                              ; preds = %start
  br i1 %_3, label %bb1, label %bb2, !dbg !15944

bb2:                                              ; preds = %bb4
; call core::str::<impl str>::starts_with
  %_5 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %raw.0, i64 %raw.1, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc546 to [0 x i8]*), i64 7), !dbg !15945
  br label %bb5, !dbg !15945

bb1:                                              ; preds = %bb4
  store i8 1, i8* %0, align 1, !dbg !15944
  br label %bb3, !dbg !15944

bb3:                                              ; preds = %bb5, %bb1
  %3 = load i8, i8* %0, align 1, !dbg !15946, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !15946
  ret i1 %4, !dbg !15946

bb5:                                              ; preds = %bb2
  %5 = zext i1 %_5 to i8, !dbg !15944
  store i8 %5, i8* %0, align 1, !dbg !15944
  br label %bb3, !dbg !15944
}

; build_script_build::which_freebsd
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN18build_script_build13which_freebsd17h684238cbfe523baaE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15947 {
start:
  %s.dbg.spill23 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill21 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill20 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill18 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill17 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill15 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill14 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill12 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill11 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill9 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill8 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill = alloca %"alloc::string::String"**, align 8
  %0 = alloca { i8*, i32 }, align 8
  %_58 = alloca i8, align 1
  %_57 = alloca i8, align 1
  %_56 = alloca i8, align 1
  %_19 = alloca %"alloc::string::String"*, align 8
  %_18 = alloca %"core::option::Option<alloc::string::String>", align 8
  %stdout2 = alloca %"alloc::string::String", align 8
  %_14 = alloca %"alloc::vec::Vec<u8>", align 8
  %_13 = alloca %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>", align 8
  %stdout = alloca %"core::option::Option<alloc::string::String>", align 8
  %_8 = alloca %"core::option::Option<std::process::Output>", align 8
  %output1 = alloca %"std::process::Output", align 8
  %_4 = alloca %"std::process::Command", align 8
  %_2 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %output = alloca %"core::option::Option<std::process::Output>", align 8
  %1 = alloca { i32, i32 }, align 4
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"* %output, metadata !15951, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output1, metadata !15953, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %stdout, metadata !15955, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %stdout2, metadata !15957, metadata !DIExpression()), !dbg !15981
  store i8 0, i8* %_58, align 1, !dbg !15982
  store i8 0, i8* %_57, align 1, !dbg !15982
  store i8 0, i8* %_56, align 1, !dbg !15982
; call std::process::Command::new
  call void @_ZN3std7process7Command3new17h670ad35140f40c15E(%"std::process::Command"* sret(%"std::process::Command") %_4, [0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc547 to [0 x i8]*), i64 15), !dbg !15983
  br label %bb1, !dbg !15983

bb1:                                              ; preds = %start
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h7fc9d6eead3365e0E(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>") %_2, %"std::process::Command"* align 8 %_4)
          to label %bb2 unwind label %cleanup, !dbg !15983

bb48:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_4) #19
          to label %bb49 unwind label %abort, !dbg !15984

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb48

bb2:                                              ; preds = %bb1
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6c83611c0bcafc63E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %output, %"core::result::Result<std::process::Output, std::io::error::Error>"* %_2)
          to label %bb3 unwind label %cleanup, !dbg !15983

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_57, align 1, !dbg !15985
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_4)
          to label %bb4 unwind label %cleanup3, !dbg !15984

abort:                                            ; preds = %bb63, %bb60, %bb61, %bb58, %bb47, %bb52, %bb48
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !15986
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !15986
  unreachable, !dbg !15986

bb49:                                             ; preds = %bb63, %bb64, %bb48
  %8 = bitcast { i8*, i32 }* %0 to i8**, !dbg !15986
  %9 = load i8*, i8** %8, align 8, !dbg !15986
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !15986
  %11 = load i32, i32* %10, align 8, !dbg !15986
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !15986
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !15986
  resume { i8*, i32 } %13, !dbg !15986

bb64:                                             ; preds = %bb60, %bb52, %cleanup3
  %14 = load i8, i8* %_57, align 1, !dbg !15987, !range !298, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !15987
  br i1 %15, label %bb63, label %bb49, !dbg !15987

cleanup3:                                         ; preds = %bb43, %bb53, %bb7, %bb4, %bb3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb64

bb4:                                              ; preds = %bb3
; invoke core::option::Option<T>::is_none
  %_5 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h59695cd46541fff0E"(%"core::option::Option<std::process::Output>"* align 8 %output)
          to label %bb5 unwind label %cleanup3, !dbg !15988

bb5:                                              ; preds = %bb4
  br i1 %_5, label %bb6, label %bb7, !dbg !15988

bb7:                                              ; preds = %bb5
  store i8 0, i8* %_57, align 1, !dbg !15989
  %21 = bitcast %"core::option::Option<std::process::Output>"* %_8 to i8*, !dbg !15989
  %22 = bitcast %"core::option::Option<std::process::Output>"* %output to i8*, !dbg !15989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 56, i1 false), !dbg !15989
; invoke core::option::Option<T>::unwrap
  invoke void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h1f1e1df6230d4258E"(%"std::process::Output"* sret(%"std::process::Output") %output1, %"core::option::Option<std::process::Output>"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc549 to %"core::panic::location::Location"*))
          to label %bb8 unwind label %cleanup3, !dbg !15989

bb6:                                              ; preds = %bb5
  %23 = bitcast { i32, i32 }* %1 to i32*, !dbg !15990
  store i32 0, i32* %23, align 4, !dbg !15990
  br label %bb57, !dbg !15991

bb57:                                             ; preds = %bb51, %bb6
  %24 = load i8, i8* %_57, align 1, !dbg !15987, !range !298, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !15987
  br i1 %25, label %bb56, label %bb45, !dbg !15987

bb8:                                              ; preds = %bb7
  store i8 1, i8* %_56, align 1, !dbg !15992
  %_11 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 2, !dbg !15993
; invoke std::process::ExitStatus::success
  %_10 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h8088751888ee9681E(i32* align 4 %_11)
          to label %bb9 unwind label %cleanup4, !dbg !15993

bb62:                                             ; preds = %bb58, %bb59, %cleanup4
  %26 = load i8, i8* %_56, align 1, !dbg !15994, !range !298, !noundef !23
  %27 = trunc i8 %26 to i1, !dbg !15994
  br i1 %27, label %bb61, label %bb60, !dbg !15994

cleanup4:                                         ; preds = %bb15, %bb12, %bb11, %bb8
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb62

bb9:                                              ; preds = %bb8
  %_9 = xor i1 %_10, true, !dbg !15995
  br i1 %_9, label %bb10, label %bb11, !dbg !15995

bb11:                                             ; preds = %bb9
  store i8 0, i8* %_56, align 1, !dbg !15996
  %33 = bitcast %"std::process::Output"* %output1 to %"alloc::vec::Vec<u8>"*, !dbg !15996
  %34 = bitcast %"alloc::vec::Vec<u8>"* %_14 to i8*, !dbg !15996
  %35 = bitcast %"alloc::vec::Vec<u8>"* %33 to i8*, !dbg !15996
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !15996
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817hee727218af8ebc1bE(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") %_13, %"alloc::vec::Vec<u8>"* %_14)
          to label %bb12 unwind label %cleanup4, !dbg !15997

bb10:                                             ; preds = %bb9
  %36 = bitcast { i32, i32 }* %1 to i32*, !dbg !15998
  store i32 0, i32* %36, align 4, !dbg !15998
  br label %bb55, !dbg !15999

bb55:                                             ; preds = %bb44, %bb10
  %37 = load i8, i8* %_56, align 1, !dbg !15994, !range !298, !noundef !23
  %38 = trunc i8 %37 to i1, !dbg !15994
  br i1 %38, label %bb54, label %bb53, !dbg !15994

bb12:                                             ; preds = %bb11
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h8ff4be63b50557b6E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %stdout, %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %_13)
          to label %bb13 unwind label %cleanup4, !dbg !15997

bb13:                                             ; preds = %bb12
  store i8 1, i8* %_58, align 1, !dbg !16000
; invoke core::option::Option<T>::is_none
  %_15 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha99b49c88e79874bE"(%"core::option::Option<alloc::string::String>"* align 8 %stdout)
          to label %bb14 unwind label %cleanup5, !dbg !16001

bb59:                                             ; preds = %bb47, %cleanup5
  %39 = load i8, i8* %_58, align 1, !dbg !16002, !range !298, !noundef !23
  %40 = trunc i8 %39 to i1, !dbg !16002
  br i1 %40, label %bb58, label %bb62, !dbg !16002

cleanup5:                                         ; preds = %bb42, %bb16, %bb13
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb59

bb14:                                             ; preds = %bb13
  br i1 %_15, label %bb15, label %bb16, !dbg !16001

bb16:                                             ; preds = %bb14
  store i8 0, i8* %_58, align 1, !dbg !16003
  %46 = bitcast %"core::option::Option<alloc::string::String>"* %_18 to i8*, !dbg !16003
  %47 = bitcast %"core::option::Option<alloc::string::String>"* %stdout to i8*, !dbg !16003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !16003
; invoke core::option::Option<T>::unwrap
  invoke void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3972cbb744e0ace4E"(%"alloc::string::String"* sret(%"alloc::string::String") %stdout2, %"core::option::Option<alloc::string::String>"* %_18, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc551 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup5, !dbg !16003

bb15:                                             ; preds = %bb14
  %48 = bitcast { i32, i32 }* %1 to i32*, !dbg !16004
  store i32 0, i32* %48, align 4, !dbg !16004
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h50bb70fb0756222bE"(%"core::option::Option<alloc::string::String>"* %stdout)
          to label %bb44 unwind label %cleanup4, !dbg !16002

bb44:                                             ; preds = %bb15
  store i8 0, i8* %_58, align 1, !dbg !16002
  br label %bb55, !dbg !15999

bb53:                                             ; preds = %bb54, %bb55
  %49 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !15994
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %49)
          to label %bb51 unwind label %cleanup3, !dbg !15994

bb54:                                             ; preds = %bb55
  %50 = bitcast %"std::process::Output"* %output1 to %"alloc::vec::Vec<u8>"*, !dbg !15994
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %50)
          to label %bb53 unwind label %cleanup6, !dbg !15994

bb52:                                             ; preds = %cleanup6
  %51 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !15994
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %51) #19
          to label %bb64 unwind label %abort, !dbg !15994

cleanup6:                                         ; preds = %bb54
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb52

bb51:                                             ; preds = %bb53
  store i8 0, i8* %_56, align 1, !dbg !15994
  br label %bb57, !dbg !15991

bb45:                                             ; preds = %bb56, %bb57
  store i8 0, i8* %_57, align 1, !dbg !15987
  br label %bb46, !dbg !16005

bb56:                                             ; preds = %bb57
; call core::ptr::drop_in_place<core::option::Option<std::process::Output>>
  call void @"_ZN4core3ptr69drop_in_place$LT$core..option..Option$LT$std..process..Output$GT$$GT$17h4c1b25b67b843f5dE"(%"core::option::Option<std::process::Output>"* %output), !dbg !15987
  br label %bb45, !dbg !15987

bb46:                                             ; preds = %bb50, %bb45
  %57 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0, !dbg !16005
  %58 = load i32, i32* %57, align 4, !dbg !16005, !range !4318, !noundef !23
  %59 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16005
  %60 = load i32, i32* %59, align 4, !dbg !16005
  %61 = insertvalue { i32, i32 } undef, i32 %58, 0, !dbg !16005
  %62 = insertvalue { i32, i32 } %61, i32 %60, 1, !dbg !16005
  ret { i32, i32 } %62, !dbg !16005

bb17:                                             ; preds = %bb16
  store %"alloc::string::String"* %stdout2, %"alloc::string::String"** %_19, align 8, !dbg !16006
  store %"alloc::string::String"** %_19, %"alloc::string::String"*** %s.dbg.spill, align 8, !dbg !16007
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill, metadata !15961, metadata !DIExpression()), !dbg !16008
  %_59 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16009, !nonnull !23, !align !378, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %63 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %_59)
          to label %bb18 unwind label %cleanup7, !dbg !16009

bb47:                                             ; preds = %cleanup7
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %stdout2) #19
          to label %bb59 unwind label %abort, !dbg !16010

cleanup7:                                         ; preds = %bb38, %bb37, %bb34, %bb33, %bb30, %bb29, %bb26, %bb25, %bb22, %bb21, %bb18, %bb17
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %66, i32* %68, align 8
  br label %bb47

bb18:                                             ; preds = %bb17
  %_24.0 = extractvalue { [0 x i8]*, i64 } %63, 0, !dbg !16009
  %_24.1 = extractvalue { [0 x i8]*, i64 } %63, 1, !dbg !16009
; invoke core::str::<impl str>::starts_with
  %_22 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %_24.0, i64 %_24.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc552 to [0 x i8]*), i64 2)
          to label %bb19 unwind label %cleanup7, !dbg !16009

bb19:                                             ; preds = %bb18
  br i1 %_22, label %bb20, label %bb21, !dbg !16009

bb21:                                             ; preds = %bb19
  store %"alloc::string::String"** %_19, %"alloc::string::String"*** %s.dbg.spill9, align 8, !dbg !16011
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill9, metadata !15965, metadata !DIExpression()), !dbg !16012
  %_60 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16013, !nonnull !23, !align !378, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %69 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %_60)
          to label %bb22 unwind label %cleanup7, !dbg !16013

bb20:                                             ; preds = %bb19
  %s = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16007, !nonnull !23, !align !378, !noundef !23
  store %"alloc::string::String"* %s, %"alloc::string::String"** %s.dbg.spill8, align 8, !dbg !16007
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill8, metadata !15959, metadata !DIExpression()), !dbg !16008
  %70 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16014
  store i32 10, i32* %70, align 4, !dbg !16014
  %71 = bitcast { i32, i32 }* %1 to i32*, !dbg !16014
  store i32 1, i32* %71, align 4, !dbg !16014
  br label %bb42, !dbg !16015

bb42:                                             ; preds = %bb41, %bb40, %bb36, %bb32, %bb28, %bb24, %bb20
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %stdout2)
          to label %bb43 unwind label %cleanup5, !dbg !16010

bb22:                                             ; preds = %bb21
  %_30.0 = extractvalue { [0 x i8]*, i64 } %69, 0, !dbg !16013
  %_30.1 = extractvalue { [0 x i8]*, i64 } %69, 1, !dbg !16013
; invoke core::str::<impl str>::starts_with
  %_28 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %_30.0, i64 %_30.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc553 to [0 x i8]*), i64 2)
          to label %bb23 unwind label %cleanup7, !dbg !16013

bb23:                                             ; preds = %bb22
  br i1 %_28, label %bb24, label %bb25, !dbg !16013

bb25:                                             ; preds = %bb23
  store %"alloc::string::String"** %_19, %"alloc::string::String"*** %s.dbg.spill12, align 8, !dbg !16016
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill12, metadata !15968, metadata !DIExpression()), !dbg !16017
  %_61 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16018, !nonnull !23, !align !378, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %72 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %_61)
          to label %bb26 unwind label %cleanup7, !dbg !16018

bb24:                                             ; preds = %bb23
  %s10 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16011, !nonnull !23, !align !378, !noundef !23
  store %"alloc::string::String"* %s10, %"alloc::string::String"** %s.dbg.spill11, align 8, !dbg !16011
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill11, metadata !15963, metadata !DIExpression()), !dbg !16012
  %73 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16019
  store i32 11, i32* %73, align 4, !dbg !16019
  %74 = bitcast { i32, i32 }* %1 to i32*, !dbg !16019
  store i32 1, i32* %74, align 4, !dbg !16019
  br label %bb42, !dbg !16020

bb26:                                             ; preds = %bb25
  %_36.0 = extractvalue { [0 x i8]*, i64 } %72, 0, !dbg !16018
  %_36.1 = extractvalue { [0 x i8]*, i64 } %72, 1, !dbg !16018
; invoke core::str::<impl str>::starts_with
  %_34 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %_36.0, i64 %_36.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc554 to [0 x i8]*), i64 2)
          to label %bb27 unwind label %cleanup7, !dbg !16018

bb27:                                             ; preds = %bb26
  br i1 %_34, label %bb28, label %bb29, !dbg !16018

bb29:                                             ; preds = %bb27
  store %"alloc::string::String"** %_19, %"alloc::string::String"*** %s.dbg.spill15, align 8, !dbg !16021
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill15, metadata !15971, metadata !DIExpression()), !dbg !16022
  %_62 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16023, !nonnull !23, !align !378, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %75 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %_62)
          to label %bb30 unwind label %cleanup7, !dbg !16023

bb28:                                             ; preds = %bb27
  %s13 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16016, !nonnull !23, !align !378, !noundef !23
  store %"alloc::string::String"* %s13, %"alloc::string::String"** %s.dbg.spill14, align 8, !dbg !16016
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill14, metadata !15966, metadata !DIExpression()), !dbg !16017
  %76 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16024
  store i32 12, i32* %76, align 4, !dbg !16024
  %77 = bitcast { i32, i32 }* %1 to i32*, !dbg !16024
  store i32 1, i32* %77, align 4, !dbg !16024
  br label %bb42, !dbg !16025

bb30:                                             ; preds = %bb29
  %_42.0 = extractvalue { [0 x i8]*, i64 } %75, 0, !dbg !16023
  %_42.1 = extractvalue { [0 x i8]*, i64 } %75, 1, !dbg !16023
; invoke core::str::<impl str>::starts_with
  %_40 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %_42.0, i64 %_42.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc555 to [0 x i8]*), i64 2)
          to label %bb31 unwind label %cleanup7, !dbg !16023

bb31:                                             ; preds = %bb30
  br i1 %_40, label %bb32, label %bb33, !dbg !16023

bb33:                                             ; preds = %bb31
  store %"alloc::string::String"** %_19, %"alloc::string::String"*** %s.dbg.spill18, align 8, !dbg !16026
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill18, metadata !15974, metadata !DIExpression()), !dbg !16027
  %_63 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16028, !nonnull !23, !align !378, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %78 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %_63)
          to label %bb34 unwind label %cleanup7, !dbg !16028

bb32:                                             ; preds = %bb31
  %s16 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16021, !nonnull !23, !align !378, !noundef !23
  store %"alloc::string::String"* %s16, %"alloc::string::String"** %s.dbg.spill17, align 8, !dbg !16021
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill17, metadata !15969, metadata !DIExpression()), !dbg !16022
  %79 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16029
  store i32 13, i32* %79, align 4, !dbg !16029
  %80 = bitcast { i32, i32 }* %1 to i32*, !dbg !16029
  store i32 1, i32* %80, align 4, !dbg !16029
  br label %bb42, !dbg !16030

bb34:                                             ; preds = %bb33
  %_48.0 = extractvalue { [0 x i8]*, i64 } %78, 0, !dbg !16028
  %_48.1 = extractvalue { [0 x i8]*, i64 } %78, 1, !dbg !16028
; invoke core::str::<impl str>::starts_with
  %_46 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %_48.0, i64 %_48.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc556 to [0 x i8]*), i64 2)
          to label %bb35 unwind label %cleanup7, !dbg !16028

bb35:                                             ; preds = %bb34
  br i1 %_46, label %bb36, label %bb37, !dbg !16028

bb37:                                             ; preds = %bb35
  store %"alloc::string::String"** %_19, %"alloc::string::String"*** %s.dbg.spill21, align 8, !dbg !16031
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill21, metadata !15977, metadata !DIExpression()), !dbg !16032
  %_64 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16033, !nonnull !23, !align !378, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %81 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %_64)
          to label %bb38 unwind label %cleanup7, !dbg !16033

bb36:                                             ; preds = %bb35
  %s19 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16026, !nonnull !23, !align !378, !noundef !23
  store %"alloc::string::String"* %s19, %"alloc::string::String"** %s.dbg.spill20, align 8, !dbg !16026
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill20, metadata !15972, metadata !DIExpression()), !dbg !16027
  %82 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16034
  store i32 14, i32* %82, align 4, !dbg !16034
  %83 = bitcast { i32, i32 }* %1 to i32*, !dbg !16034
  store i32 1, i32* %83, align 4, !dbg !16034
  br label %bb42, !dbg !16035

bb38:                                             ; preds = %bb37
  %_54.0 = extractvalue { [0 x i8]*, i64 } %81, 0, !dbg !16033
  %_54.1 = extractvalue { [0 x i8]*, i64 } %81, 1, !dbg !16033
; invoke core::str::<impl str>::starts_with
  %_52 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E"([0 x i8]* align 1 %_54.0, i64 %_54.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc557 to [0 x i8]*), i64 2)
          to label %bb39 unwind label %cleanup7, !dbg !16033

bb39:                                             ; preds = %bb38
  br i1 %_52, label %bb40, label %bb41, !dbg !16033

bb41:                                             ; preds = %bb39
  %84 = bitcast { i32, i32 }* %1 to i32*, !dbg !16036
  store i32 0, i32* %84, align 4, !dbg !16036
  br label %bb42, !dbg !16036

bb40:                                             ; preds = %bb39
  %s22 = load %"alloc::string::String"*, %"alloc::string::String"** %_19, align 8, !dbg !16031, !nonnull !23, !align !378, !noundef !23
  store %"alloc::string::String"* %s22, %"alloc::string::String"** %s.dbg.spill23, align 8, !dbg !16031
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill23, metadata !15975, metadata !DIExpression()), !dbg !16032
  %85 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16037
  store i32 15, i32* %85, align 4, !dbg !16037
  %86 = bitcast { i32, i32 }* %1 to i32*, !dbg !16037
  store i32 1, i32* %86, align 4, !dbg !16037
  br label %bb42, !dbg !16038

bb43:                                             ; preds = %bb42
  store i8 0, i8* %_58, align 1, !dbg !16002
  %87 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !15994
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %87)
          to label %bb50 unwind label %cleanup3, !dbg !15994

bb58:                                             ; preds = %bb59
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h50bb70fb0756222bE"(%"core::option::Option<alloc::string::String>"* %stdout) #19
          to label %bb62 unwind label %abort, !dbg !16002

bb60:                                             ; preds = %bb61, %bb62
  %88 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !15994
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %88) #19
          to label %bb64 unwind label %abort, !dbg !15994

bb61:                                             ; preds = %bb62
  %89 = bitcast %"std::process::Output"* %output1 to %"alloc::vec::Vec<u8>"*, !dbg !15994
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %89) #19
          to label %bb60 unwind label %abort, !dbg !15994

bb50:                                             ; preds = %bb43
  store i8 0, i8* %_56, align 1, !dbg !15994
  store i8 0, i8* %_57, align 1, !dbg !15987
  br label %bb46, !dbg !16005

bb63:                                             ; preds = %bb64
; invoke core::ptr::drop_in_place<core::option::Option<std::process::Output>>
  invoke void @"_ZN4core3ptr69drop_in_place$LT$core..option..Option$LT$std..process..Output$GT$$GT$17h4c1b25b67b843f5dE"(%"core::option::Option<std::process::Output>"* %output) #19
          to label %bb49 unwind label %abort, !dbg !15987
}

; build_script_build::emcc_version_code
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN18build_script_build17emcc_version_code17hd8d67c9c14b82189E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !16039 {
start:
  %patch.dbg.spill = alloca i64, align 8
  %minor.dbg.spill = alloca i64, align 8
  %major.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %_56 = alloca i8, align 1
  %_55 = alloca i8, align 1
  %_54 = alloca i8, align 1
  %pieces = alloca %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>", align 8
  %_20 = alloca %"core::option::Option<alloc::string::String>", align 8
  %version = alloca %"alloc::string::String", align 8
  %_16 = alloca %"alloc::vec::Vec<u8>", align 8
  %_15 = alloca %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>", align 8
  %stdout = alloca %"core::option::Option<alloc::string::String>", align 8
  %_10 = alloca %"core::option::Option<std::process::Output>", align 8
  %output1 = alloca %"std::process::Output", align 8
  %_6 = alloca %"std::process::Command", align 8
  %_2 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %output = alloca %"core::option::Option<std::process::Output>", align 8
  %1 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"* %output, metadata !16043, metadata !DIExpression()), !dbg !16059
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output1, metadata !16045, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %stdout, metadata !16047, metadata !DIExpression()), !dbg !16061
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %version, metadata !16049, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* %pieces, metadata !16051, metadata !DIExpression()), !dbg !16063
  store i8 0, i8* %_54, align 1, !dbg !16064
  store i8 0, i8* %_55, align 1, !dbg !16064
  store i8 0, i8* %_56, align 1, !dbg !16064
; call std::process::Command::new
  call void @_ZN3std7process7Command3new17h670ad35140f40c15E(%"std::process::Command"* sret(%"std::process::Command") %_6, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc558 to [0 x i8]*), i64 4), !dbg !16065
  br label %bb1, !dbg !16065

bb1:                                              ; preds = %start
; invoke std::process::Command::arg
  %_4 = invoke align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17h40e8406b4949a826E(%"std::process::Command"* align 8 %_6, [0 x i8]* align 1 bitcast (<{ [12 x i8] }>* @alloc559 to [0 x i8]*), i64 12)
          to label %bb2 unwind label %cleanup, !dbg !16065

bb40:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_6) #19
          to label %bb41 unwind label %abort, !dbg !16066

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb40

bb2:                                              ; preds = %bb1
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h7fc9d6eead3365e0E(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>") %_2, %"std::process::Command"* align 8 %_4)
          to label %bb3 unwind label %cleanup, !dbg !16065

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6c83611c0bcafc63E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %output, %"core::result::Result<std::process::Output, std::io::error::Error>"* %_2)
          to label %bb4 unwind label %cleanup, !dbg !16065

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_55, align 1, !dbg !16067
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E"(%"std::process::Command"* %_6)
          to label %bb5 unwind label %cleanup2, !dbg !16066

abort:                                            ; preds = %bb55, %bb52, %bb53, %bb50, %bb39, %bb44, %bb40
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !16068
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() #20, !dbg !16068
  unreachable, !dbg !16068

bb41:                                             ; preds = %bb55, %bb56, %bb40
  %8 = bitcast { i8*, i32 }* %0 to i8**, !dbg !16068
  %9 = load i8*, i8** %8, align 8, !dbg !16068
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !16068
  %11 = load i32, i32* %10, align 8, !dbg !16068
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !16068
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !16068
  resume { i8*, i32 } %13, !dbg !16068

bb56:                                             ; preds = %bb52, %bb44, %cleanup2
  %14 = load i8, i8* %_55, align 1, !dbg !16069, !range !298, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !16069
  br i1 %15, label %bb55, label %bb41, !dbg !16069

cleanup2:                                         ; preds = %bb35, %bb45, %bb8, %bb5, %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb56

bb5:                                              ; preds = %bb4
; invoke core::option::Option<T>::is_none
  %_7 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h59695cd46541fff0E"(%"core::option::Option<std::process::Output>"* align 8 %output)
          to label %bb6 unwind label %cleanup2, !dbg !16070

bb6:                                              ; preds = %bb5
  br i1 %_7, label %bb7, label %bb8, !dbg !16070

bb8:                                              ; preds = %bb6
  store i8 0, i8* %_55, align 1, !dbg !16071
  %21 = bitcast %"core::option::Option<std::process::Output>"* %_10 to i8*, !dbg !16071
  %22 = bitcast %"core::option::Option<std::process::Output>"* %output to i8*, !dbg !16071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 56, i1 false), !dbg !16071
; invoke core::option::Option<T>::unwrap
  invoke void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h1f1e1df6230d4258E"(%"std::process::Output"* sret(%"std::process::Output") %output1, %"core::option::Option<std::process::Output>"* %_10, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc561 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup2, !dbg !16071

bb7:                                              ; preds = %bb6
  %23 = bitcast { i64, i64 }* %1 to i64*, !dbg !16072
  store i64 0, i64* %23, align 8, !dbg !16072
  br label %bb49, !dbg !16073

bb49:                                             ; preds = %bb43, %bb7
  %24 = load i8, i8* %_55, align 1, !dbg !16069, !range !298, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !16069
  br i1 %25, label %bb48, label %bb37, !dbg !16069

bb9:                                              ; preds = %bb8
  store i8 1, i8* %_54, align 1, !dbg !16074
  %_13 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 2, !dbg !16075
; invoke std::process::ExitStatus::success
  %_12 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h8088751888ee9681E(i32* align 4 %_13)
          to label %bb10 unwind label %cleanup3, !dbg !16075

bb54:                                             ; preds = %bb50, %bb51, %cleanup3
  %26 = load i8, i8* %_54, align 1, !dbg !16076, !range !298, !noundef !23
  %27 = trunc i8 %26 to i1, !dbg !16076
  br i1 %27, label %bb53, label %bb52, !dbg !16076

cleanup3:                                         ; preds = %bb16, %bb13, %bb12, %bb9
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb54

bb10:                                             ; preds = %bb9
  %_11 = xor i1 %_12, true, !dbg !16077
  br i1 %_11, label %bb11, label %bb12, !dbg !16077

bb12:                                             ; preds = %bb10
  store i8 0, i8* %_54, align 1, !dbg !16078
  %33 = bitcast %"std::process::Output"* %output1 to %"alloc::vec::Vec<u8>"*, !dbg !16078
  %34 = bitcast %"alloc::vec::Vec<u8>"* %_16 to i8*, !dbg !16078
  %35 = bitcast %"alloc::vec::Vec<u8>"* %33 to i8*, !dbg !16078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !16078
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817hee727218af8ebc1bE(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") %_15, %"alloc::vec::Vec<u8>"* %_16)
          to label %bb13 unwind label %cleanup3, !dbg !16079

bb11:                                             ; preds = %bb10
  %36 = bitcast { i64, i64 }* %1 to i64*, !dbg !16080
  store i64 0, i64* %36, align 8, !dbg !16080
  br label %bb47, !dbg !16081

bb47:                                             ; preds = %bb36, %bb11
  %37 = load i8, i8* %_54, align 1, !dbg !16076, !range !298, !noundef !23
  %38 = trunc i8 %37 to i1, !dbg !16076
  br i1 %38, label %bb46, label %bb45, !dbg !16076

bb13:                                             ; preds = %bb12
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h8ff4be63b50557b6E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %stdout, %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %_15)
          to label %bb14 unwind label %cleanup3, !dbg !16079

bb14:                                             ; preds = %bb13
  store i8 1, i8* %_56, align 1, !dbg !16082
; invoke core::option::Option<T>::is_none
  %_17 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha99b49c88e79874bE"(%"core::option::Option<alloc::string::String>"* align 8 %stdout)
          to label %bb15 unwind label %cleanup4, !dbg !16083

bb51:                                             ; preds = %bb39, %cleanup4
  %39 = load i8, i8* %_56, align 1, !dbg !16084, !range !298, !noundef !23
  %40 = trunc i8 %39 to i1, !dbg !16084
  br i1 %40, label %bb50, label %bb54, !dbg !16084

cleanup4:                                         ; preds = %bb34, %bb17, %bb14
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb51

bb15:                                             ; preds = %bb14
  br i1 %_17, label %bb16, label %bb17, !dbg !16083

bb17:                                             ; preds = %bb15
  store i8 0, i8* %_56, align 1, !dbg !16085
  %46 = bitcast %"core::option::Option<alloc::string::String>"* %_20 to i8*, !dbg !16085
  %47 = bitcast %"core::option::Option<alloc::string::String>"* %stdout to i8*, !dbg !16085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !16085
; invoke core::option::Option<T>::unwrap
  invoke void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3972cbb744e0ace4E"(%"alloc::string::String"* sret(%"alloc::string::String") %version, %"core::option::Option<alloc::string::String>"* %_20, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc563 to %"core::panic::location::Location"*))
          to label %bb18 unwind label %cleanup4, !dbg !16085

bb16:                                             ; preds = %bb15
  %48 = bitcast { i64, i64 }* %1 to i64*, !dbg !16086
  store i64 0, i64* %48, align 8, !dbg !16086
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h50bb70fb0756222bE"(%"core::option::Option<alloc::string::String>"* %stdout)
          to label %bb36 unwind label %cleanup3, !dbg !16084

bb36:                                             ; preds = %bb16
  store i8 0, i8* %_56, align 1, !dbg !16084
  br label %bb47, !dbg !16081

bb45:                                             ; preds = %bb46, %bb47
  %49 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !16076
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %49)
          to label %bb43 unwind label %cleanup2, !dbg !16076

bb46:                                             ; preds = %bb47
  %50 = bitcast %"std::process::Output"* %output1 to %"alloc::vec::Vec<u8>"*, !dbg !16076
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %50)
          to label %bb45 unwind label %cleanup5, !dbg !16076

bb44:                                             ; preds = %cleanup5
  %51 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !16076
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %51) #19
          to label %bb56 unwind label %abort, !dbg !16076

cleanup5:                                         ; preds = %bb46
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb44

bb43:                                             ; preds = %bb45
  store i8 0, i8* %_54, align 1, !dbg !16076
  br label %bb49, !dbg !16073

bb37:                                             ; preds = %bb48, %bb49
  store i8 0, i8* %_55, align 1, !dbg !16069
  br label %bb38, !dbg !16087

bb48:                                             ; preds = %bb49
; call core::ptr::drop_in_place<core::option::Option<std::process::Output>>
  call void @"_ZN4core3ptr69drop_in_place$LT$core..option..Option$LT$std..process..Output$GT$$GT$17h4c1b25b67b843f5dE"(%"core::option::Option<std::process::Output>"* %output), !dbg !16069
  br label %bb37, !dbg !16069

bb38:                                             ; preds = %bb42, %bb37
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !16087
  %58 = load i64, i64* %57, align 8, !dbg !16087, !range !3483, !noundef !23
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !16087
  %60 = load i64, i64* %59, align 8, !dbg !16087
  %61 = insertvalue { i64, i64 } undef, i64 %58, 0, !dbg !16087
  %62 = insertvalue { i64, i64 } %61, i64 %60, 1, !dbg !16087
  ret { i64, i64 } %62, !dbg !16087

bb18:                                             ; preds = %bb17
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %63 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E"(%"alloc::string::String"* align 8 %version)
          to label %bb19 unwind label %cleanup6, !dbg !16088

bb39:                                             ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %version) #19
          to label %bb51 unwind label %abort, !dbg !16089

cleanup6:                                         ; preds = %panic9, %panic8, %panic7, %panic, %bb29, %bb28, %bb27, %bb26, %bb25, %bb24, %bb23, %bb22, %bb21, %bb20, %bb19, %bb18
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %66, i32* %68, align 8
  br label %bb39

bb19:                                             ; preds = %bb18
  %_25.0 = extractvalue { [0 x i8]*, i64 } %63, 0, !dbg !16088
  %_25.1 = extractvalue { [0 x i8]*, i64 } %63, 1, !dbg !16088
; invoke core::str::<impl str>::trim
  %69 = invoke { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim17h73a39436613dedb4E"([0 x i8]* align 1 %_25.0, i64 %_25.1)
          to label %bb20 unwind label %cleanup6, !dbg !16088

bb20:                                             ; preds = %bb19
  %_23.0 = extractvalue { [0 x i8]*, i64 } %69, 0, !dbg !16088
  %_23.1 = extractvalue { [0 x i8]*, i64 } %69, 1, !dbg !16088
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h7dca17bdb016bfe4E"(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* sret(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>") %pieces, [0 x i8]* align 1 %_23.0, i64 %_23.1)
          to label %bb21 unwind label %cleanup6, !dbg !16088

bb21:                                             ; preds = %bb20
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %70 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h630a2ba417877fbfE"(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %pieces)
          to label %bb22 unwind label %cleanup6, !dbg !16090

bb22:                                             ; preds = %bb21
  %_30.0 = extractvalue { i8*, i64 } %70, 0, !dbg !16090
  %_30.1 = extractvalue { i8*, i64 } %70, 1, !dbg !16090
; invoke core::option::Option<T>::and_then
  %71 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hc6e3570f9e1f313cE"(i8* align 1 %_30.0, i64 %_30.1)
          to label %bb23 unwind label %cleanup6, !dbg !16090

bb23:                                             ; preds = %bb22
  %_29.0 = extractvalue { i64, i64 } %71, 0, !dbg !16090
  %_29.1 = extractvalue { i64, i64 } %71, 1, !dbg !16090
; invoke core::option::Option<T>::unwrap_or
  %major = invoke i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h92649cf3c581683dE"(i64 %_29.0, i64 %_29.1, i64 0)
          to label %bb24 unwind label %cleanup6, !dbg !16090

bb24:                                             ; preds = %bb23
  store i64 %major, i64* %major.dbg.spill, align 8, !dbg !16090
  call void @llvm.dbg.declare(metadata i64* %major.dbg.spill, metadata !16053, metadata !DIExpression()), !dbg !16091
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %72 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h630a2ba417877fbfE"(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %pieces)
          to label %bb25 unwind label %cleanup6, !dbg !16092

bb25:                                             ; preds = %bb24
  %_35.0 = extractvalue { i8*, i64 } %72, 0, !dbg !16092
  %_35.1 = extractvalue { i8*, i64 } %72, 1, !dbg !16092
; invoke core::option::Option<T>::and_then
  %73 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hcd35fc88269df9afE"(i8* align 1 %_35.0, i64 %_35.1)
          to label %bb26 unwind label %cleanup6, !dbg !16092

bb26:                                             ; preds = %bb25
  %_34.0 = extractvalue { i64, i64 } %73, 0, !dbg !16092
  %_34.1 = extractvalue { i64, i64 } %73, 1, !dbg !16092
; invoke core::option::Option<T>::unwrap_or
  %minor = invoke i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h92649cf3c581683dE"(i64 %_34.0, i64 %_34.1, i64 0)
          to label %bb27 unwind label %cleanup6, !dbg !16092

bb27:                                             ; preds = %bb26
  store i64 %minor, i64* %minor.dbg.spill, align 8, !dbg !16092
  call void @llvm.dbg.declare(metadata i64* %minor.dbg.spill, metadata !16055, metadata !DIExpression()), !dbg !16093
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %74 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h630a2ba417877fbfE"(%"core::str::iter::Split<[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]>"* align 8 %pieces)
          to label %bb28 unwind label %cleanup6, !dbg !16094

bb28:                                             ; preds = %bb27
  %_40.0 = extractvalue { i8*, i64 } %74, 0, !dbg !16094
  %_40.1 = extractvalue { i8*, i64 } %74, 1, !dbg !16094
; invoke core::option::Option<T>::and_then
  %75 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h236ce353924c272eE"(i8* align 1 %_40.0, i64 %_40.1)
          to label %bb29 unwind label %cleanup6, !dbg !16094

bb29:                                             ; preds = %bb28
  %_39.0 = extractvalue { i64, i64 } %75, 0, !dbg !16094
  %_39.1 = extractvalue { i64, i64 } %75, 1, !dbg !16094
; invoke core::option::Option<T>::unwrap_or
  %patch = invoke i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h92649cf3c581683dE"(i64 %_39.0, i64 %_39.1, i64 0)
          to label %bb30 unwind label %cleanup6, !dbg !16094

bb30:                                             ; preds = %bb29
  store i64 %patch, i64* %patch.dbg.spill, align 8, !dbg !16094
  call void @llvm.dbg.declare(metadata i64* %patch.dbg.spill, metadata !16057, metadata !DIExpression()), !dbg !16095
  %76 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %major, i64 10000), !dbg !16096
  %_47.0 = extractvalue { i64, i1 } %76, 0, !dbg !16096
  %_47.1 = extractvalue { i64, i1 } %76, 1, !dbg !16096
  %77 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !16096
  br i1 %77, label %panic, label %bb31, !dbg !16096

bb31:                                             ; preds = %bb30
  %78 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %minor, i64 100), !dbg !16097
  %_50.0 = extractvalue { i64, i1 } %78, 0, !dbg !16097
  %_50.1 = extractvalue { i64, i1 } %78, 1, !dbg !16097
  %79 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !16097
  br i1 %79, label %panic7, label %bb32, !dbg !16097

panic:                                            ; preds = %bb30
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.4 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup6, !dbg !16096

unreachable:                                      ; preds = %panic9, %panic8, %panic7, %panic
  unreachable

bb32:                                             ; preds = %bb31
  %80 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_47.0, i64 %_50.0), !dbg !16096
  %_51.0 = extractvalue { i64, i1 } %80, 0, !dbg !16096
  %_51.1 = extractvalue { i64, i1 } %80, 1, !dbg !16096
  %81 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !16096
  br i1 %81, label %panic8, label %bb33, !dbg !16096

panic7:                                           ; preds = %bb31
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.4 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc567 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup6, !dbg !16097

bb33:                                             ; preds = %bb32
  %82 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_51.0, i64 %patch), !dbg !16096
  %_53.0 = extractvalue { i64, i1 } %82, 0, !dbg !16096
  %_53.1 = extractvalue { i64, i1 } %82, 1, !dbg !16096
  %83 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !16096
  br i1 %83, label %panic9, label %bb34, !dbg !16096

panic8:                                           ; preds = %bb32
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.2 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup6, !dbg !16096

bb34:                                             ; preds = %bb33
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !16098
  store i64 %_53.0, i64* %84, align 8, !dbg !16098
  %85 = bitcast { i64, i64 }* %1 to i64*, !dbg !16098
  store i64 1, i64* %85, align 8, !dbg !16098
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE"(%"alloc::string::String"* %version)
          to label %bb35 unwind label %cleanup4, !dbg !16089

panic9:                                           ; preds = %bb33
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.2 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup6, !dbg !16096

bb35:                                             ; preds = %bb34
  store i8 0, i8* %_56, align 1, !dbg !16084
  %86 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !16076
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %86)
          to label %bb42 unwind label %cleanup2, !dbg !16076

bb50:                                             ; preds = %bb51
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h50bb70fb0756222bE"(%"core::option::Option<alloc::string::String>"* %stdout) #19
          to label %bb54 unwind label %abort, !dbg !16084

bb52:                                             ; preds = %bb53, %bb54
  %87 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 1, !dbg !16076
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %87) #19
          to label %bb56 unwind label %abort, !dbg !16076

bb53:                                             ; preds = %bb54
  %88 = bitcast %"std::process::Output"* %output1 to %"alloc::vec::Vec<u8>"*, !dbg !16076
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E"(%"alloc::vec::Vec<u8>"* %88) #19
          to label %bb52 unwind label %abort, !dbg !16076

bb42:                                             ; preds = %bb35
  store i8 0, i8* %_54, align 1, !dbg !16076
  store i8 0, i8* %_55, align 1, !dbg !16069
  br label %bb38, !dbg !16087

bb55:                                             ; preds = %bb56
; invoke core::ptr::drop_in_place<core::option::Option<std::process::Output>>
  invoke void @"_ZN4core3ptr69drop_in_place$LT$core..option..Option$LT$std..process..Output$GT$$GT$17h4c1b25b67b843f5dE"(%"core::option::Option<std::process::Output>"* %output) #19
          to label %bb41 unwind label %abort, !dbg !16069
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17hc81f91aa109c7b20E"(%"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* align 1 %_1, i32 %c) unnamed_addr #1 !dbg !16099 {
start:
  %c.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"*, align 8
  %0 = alloca i8, align 1
  store %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"* %_1, %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:283:43: 283:67]"** %_1.dbg.spill, metadata !16105, metadata !DIExpression()), !dbg !16106
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !16104, metadata !DIExpression()), !dbg !16107
  %1 = icmp eq i32 %c, 46, !dbg !16108
  br i1 %1, label %bb1, label %bb2, !dbg !16108

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !16108
  br label %bb3, !dbg !16108

bb2:                                              ; preds = %start
  %_4 = icmp eq i32 %c, 45, !dbg !16109
  %2 = zext i1 %_4 to i8, !dbg !16108
  store i8 %2, i8* %0, align 1, !dbg !16108
  br label %bb3, !dbg !16108

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %0, align 1, !dbg !16110, !range !298, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !16110
  ret i1 %4, !dbg !16110
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h879d7db3f5ce5301E"([0 x i8]* align 1 %x.0, i64 %x.1) unnamed_addr #1 !dbg !16111 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:285:40: 285:58]", align 1
  %_3 = alloca %"core::result::Result<u64, core::num::error::ParseIntError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:285:40: 285:58]"* %_1.dbg.spill, metadata !16116, metadata !DIExpression()), !dbg !16117
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !16115, metadata !DIExpression()), !dbg !16118
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h79e5239eb98f20dbE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %_3, [0 x i8]* align 1 %x.0, i64 %x.1), !dbg !16119
  br label %bb1, !dbg !16119

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h49d709f4ce5513a3E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %_3), !dbg !16119
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !16119
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !16119
  br label %bb2, !dbg !16119

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !16120
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !16120
  ret { i64, i64 } %6, !dbg !16120
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h3438d5e0506ce391E"([0 x i8]* align 1 %x.0, i64 %x.1) unnamed_addr #1 !dbg !16121 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:286:40: 286:58]", align 1
  %_3 = alloca %"core::result::Result<u64, core::num::error::ParseIntError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:286:40: 286:58]"* %_1.dbg.spill, metadata !16126, metadata !DIExpression()), !dbg !16127
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !16125, metadata !DIExpression()), !dbg !16128
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h79e5239eb98f20dbE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %_3, [0 x i8]* align 1 %x.0, i64 %x.1), !dbg !16129
  br label %bb1, !dbg !16129

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h49d709f4ce5513a3E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %_3), !dbg !16129
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !16129
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !16129
  br label %bb2, !dbg !16129

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !16130
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !16130
  ret { i64, i64 } %6, !dbg !16130
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h427b2086b2c91d7cE"([0 x i8]* align 1 %x.0, i64 %x.1) unnamed_addr #1 !dbg !16131 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:287:40: 287:58]", align 1
  %_3 = alloca %"core::result::Result<u64, core::num::error::ParseIntError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs:287:40: 287:58]"* %_1.dbg.spill, metadata !16136, metadata !DIExpression()), !dbg !16137
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !16135, metadata !DIExpression()), !dbg !16138
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h79e5239eb98f20dbE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %_3, [0 x i8]* align 1 %x.0, i64 %x.1), !dbg !16139
  br label %bb1, !dbg !16139

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h49d709f4ce5513a3E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %_3), !dbg !16139
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !16139
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !16139
  br label %bb2, !dbg !16139

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !16140
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !16140
  ret { i64, i64 } %6, !dbg !16140
}

; build_script_build::set_cfg
; Function Attrs: nonlazybind uwtable
define internal void @_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E([0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 !dbg !16141 {
start:
  %_28 = alloca [1 x { i8*, i64* }], align 8
  %_21 = alloca %"core::fmt::Arguments", align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_9 = alloca %"core::fmt::Arguments", align 8
  %cfg = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cfg, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cfg, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %cfg, metadata !16145, metadata !DIExpression()), !dbg !16146
  %_5.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 0), align 8, !dbg !16147, !nonnull !23, !align !378, !noundef !23
  %_5.1 = load i64, i64* getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 1), align 8, !dbg !16147
; call core::slice::<impl [T]>::contains
  %_3 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17h5e49016f22dbe103E"([0 x { [0 x i8]*, i64 }]* align 8 %_5.0, i64 %_5.1, { [0 x i8]*, i64 }* align 8 %cfg), !dbg !16147
  br label %bb1, !dbg !16147

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !16148
  br i1 %_2, label %bb2, label %bb5, !dbg !16148

bb5:                                              ; preds = %bb1
; call core::fmt::ArgumentV1::new_display
  %4 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h582ab69c2d5a85f5E({ [0 x i8]*, i64 }* align 8 %cfg), !dbg !16149
  %_29.0 = extractvalue { i8*, i64* } %4, 0, !dbg !16149
  %_29.1 = extractvalue { i8*, i64* } %4, 1, !dbg !16149
  br label %bb6, !dbg !16149

bb2:                                              ; preds = %bb1
; call core::fmt::ArgumentV1::new_display
  %5 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h582ab69c2d5a85f5E({ [0 x i8]*, i64 }* align 8 %cfg), !dbg !16150
  %_17.0 = extractvalue { i8*, i64* } %5, 0, !dbg !16150
  %_17.1 = extractvalue { i8*, i64* } %5, 1, !dbg !16150
  br label %bb3, !dbg !16150

bb3:                                              ; preds = %bb2
  %6 = bitcast [1 x { i8*, i64* }]* %_16 to { i8*, i64* }*, !dbg !16150
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 0, !dbg !16150
  store i8* %_17.0, i8** %7, align 8, !dbg !16150
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 1, !dbg !16150
  store i64* %_17.1, i64** %8, align 8, !dbg !16150
  %_13.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*, !dbg !16150
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_9, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc299 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_13.0, i64 1), !dbg !16150
  br label %bb4, !dbg !16150

bb4:                                              ; preds = %bb3
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8b6ce72891ae5e4fE(%"core::fmt::Arguments"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc569 to %"core::panic::location::Location"*)) #18, !dbg !16150
  unreachable, !dbg !16150

bb6:                                              ; preds = %bb5
  %9 = bitcast [1 x { i8*, i64* }]* %_28 to { i8*, i64* }*, !dbg !16149
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0, !dbg !16149
  store i8* %_29.0, i8** %10, align 8, !dbg !16149
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1, !dbg !16149
  store i64* %_29.1, i64** %11, align 8, !dbg !16149
  %_25.0 = bitcast [1 x { i8*, i64* }]* %_28 to [0 x { i8*, i64* }]*, !dbg !16149
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_21, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc303 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_25.0, i64 1), !dbg !16149
  br label %bb7, !dbg !16149

bb7:                                              ; preds = %bb6
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"* %_21), !dbg !16149
  br label %bb8, !dbg !16149

bb8:                                              ; preds = %bb7
  ret void, !dbg !16151
}

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #7

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17h2fa68cd22f1dfc6cE(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17he222ce128646632bE(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hdee7c0ac456df10cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h4a61547abbd425a7E({}* align 1, [3 x i64]* align 8, i64, i8**) unnamed_addr #0

; std::env::_var
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env4_var17hf887649bba216849E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>"), %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #0

; std::env::_var_os
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env7_var_os17h67c39c43dadd64c8E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>"), %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #0

; std::sys::unix::process::process_common::Command::arg
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix7process14process_common7Command3arg17h87e0145480a03013E(%"std::sys::unix::process::process_common::Command"* align 8, %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #0

; std::sys::unix::process::process_common::Command::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix7process14process_common7Command3new17h76ede7c6fe93c846E(%"std::sys::unix::process::process_common::Command"* sret(%"std::sys::unix::process::process_common::Command"), %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #0

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h57180e694165966aE() unnamed_addr #11

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17hd073a0e33f1efac0E({}* align 1, [3 x i64]* align 8, i64* align 8, %"core::panic::location::Location"* align 8, i1 zeroext) unnamed_addr #12

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hab83556372ca0523E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #0

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h8b6ce72891ae5e4fE(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h852eea478b151cadE"(%"alloc::collections::btree::mem::replace::PanicGuard"* align 1) unnamed_addr #0

; core::num::<impl core::str::traits::FromStr for u64>::from_str
; Function Attrs: nonlazybind uwtable
declare void @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$8from_str17h8bc305f07af1f6a8E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>"), [0 x i8]* align 1, i64) unnamed_addr #0

; core::num::<impl core::str::traits::FromStr for u32>::from_str
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$8from_str17h201a618152c4cdc6E"([0 x i8]* align 1, i64) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17he2f1c89eaa9d32a9E"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h827c8d2c4f363944E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #0

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17h20b43c7456439298E(i32) unnamed_addr #0

; core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h1667fc787cb626dcE"(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h12d6c474fdfa8481E(i8, [0 x i8]* align 1, i64) unnamed_addr #0

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17h88d530fef2e585ceE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #14

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h58c56b8d3bfba88eE(i64, i64) unnamed_addr #15

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #16

; core::str::converts::from_utf8
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str8converts9from_utf817ha505d97bf6980ce7E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>"), [0 x i8]* align 1, i64) unnamed_addr #0

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17h85718a377081c3e3E() unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #16

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #0

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17hc4e54cf4a97a76c8E() unnamed_addr #15

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17h5851c977dd65b5e0E(%"core::fmt::Arguments"*) unnamed_addr #0

; std::process::Command::output
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std7process7Command6output17h7fc9d6eead3365e0E(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>"), %"std::process::Command"* align 8) unnamed_addr #0

; std::process::ExitStatus::success
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std7process10ExitStatus7success17h8088751888ee9681E(i32* align 4) unnamed_addr #0

; alloc::string::String::from_utf8_lossy
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc6string6String15from_utf8_lossy17h229385ecf6f6c974E(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>"), [0 x i8]* align 1, i64) unnamed_addr #0

; Function Attrs: nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #17 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
  %3 = sext i32 %0 to i64
; call std::rt::lang_start
  %4 = call i64 @_ZN3std2rt10lang_start17hdbdcadb0c4d08e85E(void ()* @_ZN18build_script_build4main17h6935e891c16f01a2E, i64 %3, i8** %1)
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

attributes #0 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #13 = { nofree nosync nounwind readnone willreturn }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #16 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #17 = { nonlazybind "target-cpu"="x86-64" }
attributes #18 = { noreturn }
attributes #19 = { noinline }
attributes #20 = { noinline noreturn nounwind }
attributes #21 = { nounwind }

!llvm.module.flags = !{!70, !71, !72, !73}
!llvm.dbg.cu = !{!74}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !23, identifier: "565c3163d6b300a07a4953a458247c2")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !15, file: !2, size: 64, align: 64, elements: !18, templateParams: !23, identifier: "f396ed9b63783996f7aefe80bb3873d6")
!15 = !DINamespace(name: "lang_start", scope: !16)
!16 = !DINamespace(name: "rt", scope: !17)
!17 = !DINamespace(name: "std", scope: null)
!18 = !{!19}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !14, file: !2, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !21, size: 64, align: 64, dwarfAddressSpace: 0)
!21 = !DISubroutineType(types: !22)
!22 = !{null}
!23 = !{}
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(name: "<std::panicking::begin_panic::PanicPayload<&str> as core::panic::BoxMeUp>::{vtable}", scope: null, file: !2, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::panicking::begin_panic::PanicPayload<&str> as core::panic::BoxMeUp>::{vtable_type}", file: !2, size: 320, align: 64, flags: DIFlagArtificial, elements: !27, vtableHolder: !33, templateParams: !23, identifier: "655eabc46a25038f9f991edb70c26ca")
!27 = !{!28, !29, !30, !31, !32}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !26, file: !2, baseType: !6, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !26, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !26, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!33 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicPayload<&str>", scope: !34, file: !2, size: 128, align: 64, elements: !36, templateParams: !60, identifier: "f8b32f65acbd85311fda93b854c6e88a")
!34 = !DINamespace(name: "begin_panic", scope: !35)
!35 = !DINamespace(name: "panicking", scope: !17)
!36 = !{!37}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !33, file: !2, baseType: !38, size: 128, align: 64)
!38 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !39, file: !2, size: 128, align: 64, elements: !41, templateParams: !23, identifier: "b299aafcb704b290591f478f2cbc1b79")
!39 = !DINamespace(name: "option", scope: !40)
!40 = !DINamespace(name: "core", scope: null)
!41 = !{!42}
!42 = !DICompositeType(tag: DW_TAG_variant_part, scope: !38, file: !2, size: 128, align: 64, elements: !43, templateParams: !23, identifier: "e3f0fbd6739a5ca985d96a50cc4709b1", discriminator: !58)
!43 = !{!44, !54}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !42, file: !2, baseType: !45, size: 128, align: 64, extraData: i64 0)
!45 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !38, file: !2, size: 128, align: 64, elements: !23, templateParams: !46, identifier: "74ece91664cfe3c17a67e77e0d2d70f3")
!46 = !{!47}
!47 = !DITemplateTypeParameter(name: "T", type: !48)
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !49, templateParams: !23, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!49 = !{!50, !53}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !48, file: !2, baseType: !51, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!52 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !48, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !42, file: !2, baseType: !55, size: 128, align: 64)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !38, file: !2, size: 128, align: 64, elements: !56, templateParams: !46, identifier: "5b6411fcb6ec743b4f160097649d8a4")
!56 = !{!57}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !55, file: !2, baseType: !48, size: 128, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, scope: !38, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!59 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!60 = !{!61}
!61 = !DITemplateTypeParameter(name: "A", type: !48)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "<&str as core::any::Any>::{vtable}", scope: null, file: !2, type: !64, isLocal: true, isDefinition: true)
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&str as core::any::Any>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !65, vtableHolder: !48, templateParams: !23, identifier: "82ed9d77961d97a7842c0cb68e9d093")
!65 = !{!66, !67, !68, !69}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !64, file: !2, baseType: !6, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !64, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !64, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !64, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!70 = !{i32 7, !"PIC Level", i32 2}
!71 = !{i32 7, !"PIE Level", i32 2}
!72 = !{i32 2, !"RtLibUseGOT", i32 1}
!73 = !{i32 2, !"Debug Info Version", i32 3}
!74 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !75, producer: "clang LLVM (rustc version 1.64.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !76, globals: !227)
!75 = !DIFile(filename: "/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152/build.rs/@/build_script_build.d2566a7d-cgu.0", directory: "/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152")
!76 = !{!77, !145, !190, !199, !206, !215, !221}
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !78, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagEnumClass, elements: !80)
!78 = !DINamespace(name: "valid_align", scope: !79)
!79 = !DINamespace(name: "mem", scope: !40)
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144}
!81 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!85 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!86 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!87 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!88 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!89 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!90 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!91 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!92 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!93 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!94 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!95 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!96 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!97 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!98 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!99 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!100 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!101 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!102 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!103 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!104 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!105 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!106 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!107 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!108 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!109 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!110 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!111 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!112 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!113 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!114 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!115 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!116 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!117 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!118 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!119 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!120 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!121 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!122 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!123 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!124 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!125 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!126 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!127 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!128 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!129 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!130 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!131 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!132 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!133 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!134 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!135 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!136 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!137 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!138 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!139 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!140 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!141 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!142 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!143 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!144 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ErrorKind", scope: !146, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagEnumClass, elements: !148)
!146 = !DINamespace(name: "error", scope: !147)
!147 = !DINamespace(name: "io", scope: !17)
!148 = !{!149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189}
!149 = !DIEnumerator(name: "NotFound", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "PermissionDenied", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "ConnectionRefused", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "ConnectionReset", value: 3, isUnsigned: true)
!153 = !DIEnumerator(name: "HostUnreachable", value: 4, isUnsigned: true)
!154 = !DIEnumerator(name: "NetworkUnreachable", value: 5, isUnsigned: true)
!155 = !DIEnumerator(name: "ConnectionAborted", value: 6, isUnsigned: true)
!156 = !DIEnumerator(name: "NotConnected", value: 7, isUnsigned: true)
!157 = !DIEnumerator(name: "AddrInUse", value: 8, isUnsigned: true)
!158 = !DIEnumerator(name: "AddrNotAvailable", value: 9, isUnsigned: true)
!159 = !DIEnumerator(name: "NetworkDown", value: 10, isUnsigned: true)
!160 = !DIEnumerator(name: "BrokenPipe", value: 11, isUnsigned: true)
!161 = !DIEnumerator(name: "AlreadyExists", value: 12, isUnsigned: true)
!162 = !DIEnumerator(name: "WouldBlock", value: 13, isUnsigned: true)
!163 = !DIEnumerator(name: "NotADirectory", value: 14, isUnsigned: true)
!164 = !DIEnumerator(name: "IsADirectory", value: 15, isUnsigned: true)
!165 = !DIEnumerator(name: "DirectoryNotEmpty", value: 16, isUnsigned: true)
!166 = !DIEnumerator(name: "ReadOnlyFilesystem", value: 17, isUnsigned: true)
!167 = !DIEnumerator(name: "FilesystemLoop", value: 18, isUnsigned: true)
!168 = !DIEnumerator(name: "StaleNetworkFileHandle", value: 19, isUnsigned: true)
!169 = !DIEnumerator(name: "InvalidInput", value: 20, isUnsigned: true)
!170 = !DIEnumerator(name: "InvalidData", value: 21, isUnsigned: true)
!171 = !DIEnumerator(name: "TimedOut", value: 22, isUnsigned: true)
!172 = !DIEnumerator(name: "WriteZero", value: 23, isUnsigned: true)
!173 = !DIEnumerator(name: "StorageFull", value: 24, isUnsigned: true)
!174 = !DIEnumerator(name: "NotSeekable", value: 25, isUnsigned: true)
!175 = !DIEnumerator(name: "FilesystemQuotaExceeded", value: 26, isUnsigned: true)
!176 = !DIEnumerator(name: "FileTooLarge", value: 27, isUnsigned: true)
!177 = !DIEnumerator(name: "ResourceBusy", value: 28, isUnsigned: true)
!178 = !DIEnumerator(name: "ExecutableFileBusy", value: 29, isUnsigned: true)
!179 = !DIEnumerator(name: "Deadlock", value: 30, isUnsigned: true)
!180 = !DIEnumerator(name: "CrossesDevices", value: 31, isUnsigned: true)
!181 = !DIEnumerator(name: "TooManyLinks", value: 32, isUnsigned: true)
!182 = !DIEnumerator(name: "InvalidFilename", value: 33, isUnsigned: true)
!183 = !DIEnumerator(name: "ArgumentListTooLong", value: 34, isUnsigned: true)
!184 = !DIEnumerator(name: "Interrupted", value: 35, isUnsigned: true)
!185 = !DIEnumerator(name: "Unsupported", value: 36, isUnsigned: true)
!186 = !DIEnumerator(name: "UnexpectedEof", value: 37, isUnsigned: true)
!187 = !DIEnumerator(name: "OutOfMemory", value: 38, isUnsigned: true)
!188 = !DIEnumerator(name: "Other", value: 39, isUnsigned: true)
!189 = !DIEnumerator(name: "Uncategorized", value: 40, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !191, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagEnumClass, elements: !194)
!191 = !DINamespace(name: "v1", scope: !192)
!192 = !DINamespace(name: "rt", scope: !193)
!193 = !DINamespace(name: "fmt", scope: !40)
!194 = !{!195, !196, !197, !198}
!195 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!196 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !200, file: !2, baseType: !201, size: 8, align: 8, flags: DIFlagEnumClass, elements: !202)
!200 = !DINamespace(name: "cmp", scope: !40)
!201 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!202 = !{!203, !204, !205}
!203 = !DIEnumerator(name: "Less", value: 255)
!204 = !DIEnumerator(name: "Equal", value: 0)
!205 = !DIEnumerator(name: "Greater", value: 1)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IntErrorKind", scope: !207, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagEnumClass, elements: !209)
!207 = !DINamespace(name: "error", scope: !208)
!208 = !DINamespace(name: "num", scope: !40)
!209 = !{!210, !211, !212, !213, !214}
!210 = !DIEnumerator(name: "Empty", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "InvalidDigit", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "PosOverflow", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "NegOverflow", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "Zero", value: 4, isUnsigned: true)
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !216, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagEnumClass, elements: !217)
!216 = !DINamespace(name: "panicking", scope: !40)
!217 = !{!218, !219, !220}
!218 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!219 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!220 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !222, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagEnumClass, elements: !224)
!222 = !DINamespace(name: "raw_vec", scope: !223)
!223 = !DINamespace(name: "alloc", scope: null)
!224 = !{!225, !226}
!225 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!226 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!227 = !{!0, !24, !62}
!228 = distinct !DISubprogram(name: "try_fold<usize, core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, usize, fn(usize, usize) -> core::option::Option<usize>, core::option::Option<usize>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hde391a5afa9e9d5fE", scope: !230, file: !229, line: 111, type: !234, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !286, retainedNodes: !282)
!229 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "26d2695af1ed5a432620c89623758817")
!230 = !DINamespace(name: "{impl#2}", scope: !231)
!231 = !DINamespace(name: "map", scope: !232)
!232 = !DINamespace(name: "adapters", scope: !233)
!233 = !DINamespace(name: "iter", scope: !40)
!234 = !DISubroutineType(types: !235)
!235 = !{!236, !249, !9, !279}
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !39, file: !2, size: 128, align: 64, elements: !237, templateParams: !23, identifier: "b0f0daeaed8f91c87f71a0105100a674")
!237 = !{!238}
!238 = !DICompositeType(tag: DW_TAG_variant_part, scope: !236, file: !2, size: 128, align: 64, elements: !239, templateParams: !23, identifier: "eb3caad7987abf801f0cfbe00021cc02", discriminator: !248)
!239 = !{!240, !244}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !238, file: !2, baseType: !241, size: 128, align: 64, extraData: i64 0)
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !236, file: !2, size: 128, align: 64, elements: !23, templateParams: !242, identifier: "d28a3150cdbae9501568a67346894d10")
!242 = !{!243}
!243 = !DITemplateTypeParameter(name: "T", type: !9)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !238, file: !2, baseType: !245, size: 128, align: 64, extraData: i64 1)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !236, file: !2, size: 128, align: 64, elements: !246, templateParams: !242, identifier: "899f8f47ef45b07334d36d49fd9ce901")
!246 = !{!247}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !245, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", baseType: !250, size: 64, align: 64, dwarfAddressSpace: 0)
!250 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", scope: !231, file: !2, size: 128, align: 64, elements: !251, templateParams: !276, identifier: "5e28ecf3914b09819d72e316072e33ee")
!251 = !{!252, !271}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !250, file: !2, baseType: !253, size: 128, align: 64)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<&str>", scope: !254, file: !2, size: 128, align: 64, elements: !256, templateParams: !46, identifier: "a9c15251dc79008e96723b8dd9fbac8d")
!254 = !DINamespace(name: "iter", scope: !255)
!255 = !DINamespace(name: "slice", scope: !40)
!256 = !{!257, !264, !265}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !253, file: !2, baseType: !258, size: 64, align: 64)
!258 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&str>", scope: !259, file: !2, size: 64, align: 64, elements: !261, templateParams: !46, identifier: "2dbea026a2a7d02a2f95ba53313cdbc3")
!259 = !DINamespace(name: "non_null", scope: !260)
!260 = !DINamespace(name: "ptr", scope: !40)
!261 = !{!262}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !258, file: !2, baseType: !263, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !253, file: !2, baseType: !263, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !253, file: !2, baseType: !266, align: 8)
!266 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&&str>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !268, identifier: "d70daa6c71d035c16fcb5836eb79b40")
!267 = !DINamespace(name: "marker", scope: !40)
!268 = !{!269}
!269 = !DITemplateTypeParameter(name: "T", type: !270)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !250, file: !2, baseType: !272, align: 8)
!272 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<str, u8, &str>", scope: !273, file: !2, align: 8, elements: !23, identifier: "4304e1a816407d6a738c36701a7c1701")
!273 = !DINamespace(name: "{closure#0}", scope: !274)
!274 = !DINamespace(name: "join_generic_copy", scope: !275)
!275 = !DINamespace(name: "str", scope: !223)
!276 = !{!277, !278}
!277 = !DITemplateTypeParameter(name: "I", type: !253)
!278 = !DITemplateTypeParameter(name: "F", type: !272)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(usize, usize) -> core::option::Option<usize>", baseType: !280, size: 64, align: 64, dwarfAddressSpace: 0)
!280 = !DISubroutineType(types: !281)
!281 = !{!236, !9, !9}
!282 = !{!283, !284, !285}
!283 = !DILocalVariable(name: "self", arg: 1, scope: !228, file: !229, line: 111, type: !249)
!284 = !DILocalVariable(name: "init", arg: 2, scope: !228, file: !229, line: 111, type: !9)
!285 = !DILocalVariable(name: "g", arg: 3, scope: !228, file: !229, line: 111, type: !279)
!286 = !{!287, !277, !278, !288, !289, !290}
!287 = !DITemplateTypeParameter(name: "B", type: !9)
!288 = !DITemplateTypeParameter(name: "Acc", type: !9)
!289 = !DITemplateTypeParameter(name: "G", type: !279)
!290 = !DITemplateTypeParameter(name: "R", type: !236)
!291 = !DILocation(line: 111, column: 28, scope: !228)
!292 = !DILocation(line: 111, column: 39, scope: !228)
!293 = !DILocation(line: 111, column: 50, scope: !228)
!294 = !DILocation(line: 117, column: 28, scope: !228)
!295 = !DILocation(line: 117, column: 47, scope: !228)
!296 = !DILocation(line: 117, column: 34, scope: !228)
!297 = !DILocation(line: 117, column: 62, scope: !228)
!298 = !{i8 0, i8 2}
!299 = !DILocation(line: 117, column: 9, scope: !228)
!300 = !DILocation(line: 118, column: 6, scope: !228)
!301 = !DILocation(line: 111, column: 5, scope: !228)
!302 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hd14d3cea297d7d0cE", scope: !304, file: !303, line: 171, type: !307, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !351)
!303 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "94cf8b13d76879430c291e9ed66f42eb")
!304 = !DINamespace(name: "{impl#6}", scope: !305)
!305 = !DINamespace(name: "iter", scope: !306)
!306 = !DINamespace(name: "str", scope: !40)
!307 = !DISubroutineType(types: !308)
!308 = !{!309, !328}
!309 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !39, file: !2, size: 128, align: 64, elements: !310, templateParams: !23, identifier: "85fa18a458ee9aa8f46a13bcbf83088f")
!310 = !{!311}
!311 = !DICompositeType(tag: DW_TAG_variant_part, scope: !309, file: !2, size: 128, align: 64, elements: !312, templateParams: !23, identifier: "2b7081c68955e221fadf6dedf9aba915", discriminator: !326)
!312 = !{!313, !322}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !311, file: !2, baseType: !314, size: 128, align: 64, extraData: i64 1114112)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !309, file: !2, size: 128, align: 64, elements: !23, templateParams: !315, identifier: "fc8085d2a86018f92ed9a18c95023362")
!315 = !{!316}
!316 = !DITemplateTypeParameter(name: "T", type: !317)
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 128, align: 64, elements: !318, templateParams: !23, identifier: "89785b0a14c18bab4f06ff5760e2591e")
!318 = !{!319, !320}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !317, file: !2, baseType: !9, size: 64, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !317, file: !2, baseType: !321, size: 32, align: 32, offset: 64)
!321 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !311, file: !2, baseType: !323, size: 128, align: 64)
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !309, file: !2, size: 128, align: 64, elements: !324, templateParams: !315, identifier: "9daf0ec1b7de50688675eb200ca17009")
!324 = !{!325}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !323, file: !2, baseType: !317, size: 128, align: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, scope: !309, file: !2, baseType: !327, size: 32, align: 32, offset: 64, flags: DIFlagArtificial)
!327 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::CharIndices", baseType: !329, size: 64, align: 64, dwarfAddressSpace: 0)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharIndices", scope: !305, file: !2, size: 192, align: 64, elements: !330, templateParams: !23, identifier: "c8b0ccf5508e2e3183bf0958b75ec85")
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "front_offset", scope: !329, file: !2, baseType: !9, size: 64, align: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !329, file: !2, baseType: !333, size: 128, align: 64, offset: 64)
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !305, file: !2, size: 128, align: 64, elements: !334, templateParams: !23, identifier: "a094238696fc1b1f2c787a9378f6d4d")
!334 = !{!335}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !333, file: !2, baseType: !336, size: 128, align: 64)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !254, file: !2, size: 128, align: 64, elements: !337, templateParams: !343, identifier: "4dbc71d34b408b67ed251b6945679bb")
!337 = !{!338, !345, !346}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !336, file: !2, baseType: !339, size: 64, align: 64)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !259, file: !2, size: 64, align: 64, elements: !340, templateParams: !343, identifier: "81a29f094726bede821b28e09e533a6f")
!340 = !{!341}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !339, file: !2, baseType: !342, size: 64, align: 64)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!343 = !{!344}
!344 = !DITemplateTypeParameter(name: "T", type: !52)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !336, file: !2, baseType: !342, size: 64, align: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !336, file: !2, baseType: !347, align: 8)
!347 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !348, identifier: "f1ac1deb7cc1b3ca1e63bbf3bd94bd15")
!348 = !{!349}
!349 = !DITemplateTypeParameter(name: "T", type: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!351 = !{!352}
!352 = !DILocalVariable(name: "self", arg: 1, scope: !302, file: !303, line: 171, type: !328)
!353 = !DILocation(line: 171, column: 18, scope: !302)
!354 = !DILocation(line: 172, column: 9, scope: !302)
!355 = !DILocalVariable(name: "self", scope: !356, file: !303, line: 172, type: !373, align: 8)
!356 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hfdb9839b25d80a10E", scope: !357, file: !303, line: 81, type: !358, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !374)
!357 = !DINamespace(name: "{impl#2}", scope: !305)
!358 = !DISubroutineType(types: !359)
!359 = !{!360, !373}
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !39, file: !2, size: 32, align: 32, elements: !361, templateParams: !23, identifier: "1f1ce12573c52fb0a9d52326e701485f")
!361 = !{!362}
!362 = !DICompositeType(tag: DW_TAG_variant_part, scope: !360, file: !2, size: 32, align: 32, elements: !363, templateParams: !23, identifier: "84d304249bb7598d94c119aa11117220", discriminator: !372)
!363 = !{!364, !368}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !362, file: !2, baseType: !365, size: 32, align: 32, extraData: i64 1114112)
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !360, file: !2, size: 32, align: 32, elements: !23, templateParams: !366, identifier: "1e4b2f182a3b12e6b1e7d9fc8177f6e9")
!366 = !{!367}
!367 = !DITemplateTypeParameter(name: "T", type: !321)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !362, file: !2, baseType: !369, size: 32, align: 32)
!369 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !360, file: !2, size: 32, align: 32, elements: !370, templateParams: !366, identifier: "e5e0855fe0b45419ffca10e738392c27")
!370 = !{!371}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !369, file: !2, baseType: !321, size: 32, align: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !360, file: !2, baseType: !327, size: 32, align: 32, flags: DIFlagArtificial)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !333, size: 64, align: 64, dwarfAddressSpace: 0)
!374 = !{!355}
!375 = !DILocation(line: 172, column: 9, scope: !356, inlinedAt: !354)
!376 = !{i32 0, i32 1114113}
!377 = !DILocation(line: 172, column: 35, scope: !302)
!378 = !{i64 8}
!379 = !DILocation(line: 176, column: 6, scope: !302)
!380 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h6c6e3c36a8b19a83E", scope: !381, file: !303, line: 172, type: !382, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !390)
!381 = !DINamespace(name: "next_back", scope: !304)
!382 = !DISubroutineType(types: !383)
!383 = !{!317, !384, !321}
!384 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !381, file: !2, size: 128, align: 64, elements: !385, templateParams: !23, identifier: "beaa7a368eed194f319debc8259cdd9b")
!385 = !{!386, !388}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__front_offset", scope: !384, file: !2, baseType: !387, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__iter__iter", scope: !384, file: !2, baseType: !389, size: 64, align: 64, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !336, size: 64, align: 64, dwarfAddressSpace: 0)
!390 = !{!391, !392, !393, !394}
!391 = !DILocalVariable(name: "ch", arg: 2, scope: !380, file: !303, line: 172, type: !321)
!392 = !DILocalVariable(name: "self__front_offset", scope: !380, file: !303, line: 171, type: !9, align: 8)
!393 = !DILocalVariable(name: "self__iter__iter", scope: !380, file: !303, line: 171, type: !336, align: 8)
!394 = !DILocalVariable(name: "index", scope: !395, file: !303, line: 173, type: !9, align: 8)
!395 = distinct !DILexicalBlock(scope: !380, file: !303, line: 173, column: 13)
!396 = !DILocation(line: 171, column: 18, scope: !380)
!397 = !DILocation(line: 172, column: 36, scope: !380)
!398 = !DILocation(line: 173, column: 25, scope: !380)
!399 = !DILocation(line: 173, column: 45, scope: !380)
!400 = !DILocalVariable(name: "self", scope: !401, file: !303, line: 173, type: !389, align: 8)
!401 = !DILexicalBlockFile(scope: !402, file: !303, discriminator: 0)
!402 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !407)
!403 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!404 = !DINamespace(name: "{impl#172}", scope: !254)
!405 = !DISubroutineType(types: !406)
!406 = !{!9, !389}
!407 = !{!400, !408, !411, !414}
!408 = !DILocalVariable(name: "start", scope: !409, file: !303, line: 173, type: !339, align: 8)
!409 = !DILexicalBlockFile(scope: !410, file: !303, discriminator: 0)
!410 = distinct !DILexicalBlock(scope: !402, file: !403, line: 18, column: 9)
!411 = !DILocalVariable(name: "size", scope: !412, file: !303, line: 173, type: !9, align: 8)
!412 = !DILexicalBlockFile(scope: !413, file: !303, discriminator: 0)
!413 = distinct !DILexicalBlock(scope: !410, file: !403, line: 19, column: 9)
!414 = !DILocalVariable(name: "diff", scope: !415, file: !303, line: 173, type: !9, align: 8)
!415 = !DILexicalBlockFile(scope: !416, file: !303, discriminator: 0)
!416 = distinct !DILexicalBlock(scope: !413, file: !403, line: 29, column: 13)
!417 = !DILocation(line: 173, column: 45, scope: !401, inlinedAt: !399)
!418 = !{!"rawptr"}
!419 = !DILocation(line: 173, column: 45, scope: !409, inlinedAt: !399)
!420 = !DILocation(line: 173, column: 45, scope: !421, inlinedAt: !426)
!421 = !DILexicalBlockFile(scope: !422, file: !303, discriminator: 0)
!422 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!423 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "6bfe0b6bf5a91b8a82e2c328defa32fc")
!424 = !DISubroutineType(types: !425)
!425 = !{!9}
!426 = !DILocation(line: 41, column: 5, scope: !427, inlinedAt: !431)
!427 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!428 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "27f6434b5f582e5019a860c5c017d49e")
!429 = !DISubroutineType(types: !430)
!430 = !{!9, !342}
!431 = !DILocation(line: 19, column: 20, scope: !410, inlinedAt: !399)
!432 = !DILocation(line: 173, column: 45, scope: !412, inlinedAt: !399)
!433 = !DILocalVariable(name: "self", scope: !434, file: !303, line: 173, type: !342, align: 8)
!434 = !DILexicalBlockFile(scope: !435, file: !303, discriminator: 0)
!435 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !439)
!436 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "472568b60919158596db0f55d2635676")
!437 = !DINamespace(name: "{impl#0}", scope: !438)
!438 = !DINamespace(name: "const_ptr", scope: !260)
!439 = !{!433}
!440 = !DILocation(line: 173, column: 45, scope: !434, inlinedAt: !441)
!441 = !DILocation(line: 29, column: 47, scope: !413, inlinedAt: !399)
!442 = !DILocalVariable(name: "self", scope: !443, file: !303, line: 173, type: !339, align: 8)
!443 = !DILexicalBlockFile(scope: !444, file: !303, discriminator: 0)
!444 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !449)
!445 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!446 = !DISubroutineType(types: !447)
!447 = !{!448, !339}
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!449 = !{!442}
!450 = !DILocation(line: 173, column: 45, scope: !443, inlinedAt: !451)
!451 = !DILocation(line: 29, column: 65, scope: !413, inlinedAt: !399)
!452 = !DILocalVariable(name: "self", scope: !453, file: !303, line: 173, type: !448, align: 8)
!453 = !DILexicalBlockFile(scope: !454, file: !303, discriminator: 0)
!454 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !460)
!455 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "58042decf85f1a548d50de0519db87d2")
!456 = !DINamespace(name: "{impl#0}", scope: !457)
!457 = !DINamespace(name: "mut_ptr", scope: !260)
!458 = !DISubroutineType(types: !459)
!459 = !{!9, !448}
!460 = !{!452}
!461 = !DILocation(line: 173, column: 45, scope: !453, inlinedAt: !451)
!462 = !DILocation(line: 173, column: 45, scope: !415, inlinedAt: !399)
!463 = !DILocation(line: 173, column: 17, scope: !395)
!464 = !DILocation(line: 174, column: 13, scope: !395)
!465 = !DILocation(line: 175, column: 10, scope: !380)
!466 = !{i32 0, i32 1114112}
!467 = distinct !DISubprogram(name: "next_back<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17hdeb12630264c5c15E", scope: !469, file: !468, line: 677, type: !471, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !499, retainedNodes: !501)
!468 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "4413c12c327e63807a1a57fa4d03df68")
!469 = !DINamespace(name: "{impl#10}", scope: !470)
!470 = !DINamespace(name: "pattern", scope: !306)
!471 = !DISubroutineType(types: !472)
!472 = !{!473, !490}
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "SearchStep", scope: !470, file: !2, size: 192, align: 64, elements: !474, templateParams: !23, identifier: "cd8fe5a99e425e61d87f525e8a81a8e8")
!474 = !{!475}
!475 = !DICompositeType(tag: DW_TAG_variant_part, scope: !473, file: !2, size: 192, align: 64, elements: !476, templateParams: !23, identifier: "44373ab8a0a5e4322b3ba46d1daef74f", discriminator: !489)
!476 = !{!477, !482, !487}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "Match", scope: !475, file: !2, baseType: !478, size: 192, align: 64, extraData: i64 0)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "Match", scope: !473, file: !2, size: 192, align: 64, elements: !479, templateParams: !23, identifier: "5c25bcef9bda7e0968ecb2188743f041")
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !478, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !478, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "Reject", scope: !475, file: !2, baseType: !483, size: 192, align: 64, extraData: i64 1)
!483 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reject", scope: !473, file: !2, size: 192, align: 64, elements: !484, templateParams: !23, identifier: "4375b6cb516f800ea161fb9a4e94b5fd")
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !483, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !483, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "Done", scope: !475, file: !2, baseType: !488, size: 192, align: 64, extraData: i64 2)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Done", scope: !473, file: !2, size: 192, align: 64, elements: !23, identifier: "6736cc52c5334e223fa9030e73e8ecfa")
!489 = !DIDerivedType(tag: DW_TAG_member, scope: !473, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>", baseType: !491, size: 64, align: 64, dwarfAddressSpace: 0)
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>", scope: !470, file: !2, size: 320, align: 64, elements: !492, templateParams: !499, identifier: "93f65e29fc08dc89b6213235ff9f7873")
!492 = !{!493, !497, !498}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "char_eq", scope: !491, file: !2, baseType: !494, align: 8)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !495, file: !2, align: 8, elements: !23, identifier: "27687edefa7903eab1580273c45a1dce")
!495 = !DINamespace(name: "trim", scope: !496)
!496 = !DINamespace(name: "{impl#0}", scope: !306)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !491, file: !2, baseType: !48, size: 128, align: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "char_indices", scope: !491, file: !2, baseType: !329, size: 192, align: 64, offset: 128)
!499 = !{!500}
!500 = !DITemplateTypeParameter(name: "C", type: !494)
!501 = !{!502, !503, !505, !507, !509, !510, !512}
!502 = !DILocalVariable(name: "self", arg: 1, scope: !467, file: !468, line: 677, type: !490)
!503 = !DILocalVariable(name: "s", scope: !504, file: !468, line: 678, type: !328, align: 8)
!504 = distinct !DILexicalBlock(scope: !467, file: !468, line: 678, column: 9)
!505 = !DILocalVariable(name: "pre_len", scope: !506, file: !468, line: 681, type: !9, align: 8)
!506 = distinct !DILexicalBlock(scope: !504, file: !468, line: 681, column: 9)
!507 = !DILocalVariable(name: "i", scope: !508, file: !468, line: 682, type: !9, align: 8)
!508 = distinct !DILexicalBlock(scope: !506, file: !468, line: 682, column: 45)
!509 = !DILocalVariable(name: "c", scope: !508, file: !468, line: 682, type: !321, align: 4)
!510 = !DILocalVariable(name: "len", scope: !511, file: !468, line: 683, type: !9, align: 8)
!511 = distinct !DILexicalBlock(scope: !508, file: !468, line: 683, column: 13)
!512 = !DILocalVariable(name: "char_len", scope: !513, file: !468, line: 684, type: !9, align: 8)
!513 = distinct !DILexicalBlock(scope: !511, file: !468, line: 684, column: 13)
!514 = !DILocation(line: 677, column: 18, scope: !467)
!515 = !DILocation(line: 678, column: 17, scope: !467)
!516 = !DILocation(line: 678, column: 13, scope: !504)
!517 = !DILocation(line: 681, column: 23, scope: !504)
!518 = !DILocalVariable(name: "self", scope: !519, file: !468, line: 681, type: !389, align: 8)
!519 = !DILexicalBlockFile(scope: !520, file: !468, discriminator: 0)
!520 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !521)
!521 = !{!518, !522, !525, !528}
!522 = !DILocalVariable(name: "start", scope: !523, file: !468, line: 681, type: !339, align: 8)
!523 = !DILexicalBlockFile(scope: !524, file: !468, discriminator: 0)
!524 = distinct !DILexicalBlock(scope: !520, file: !403, line: 18, column: 9)
!525 = !DILocalVariable(name: "size", scope: !526, file: !468, line: 681, type: !9, align: 8)
!526 = !DILexicalBlockFile(scope: !527, file: !468, discriminator: 0)
!527 = distinct !DILexicalBlock(scope: !524, file: !403, line: 19, column: 9)
!528 = !DILocalVariable(name: "diff", scope: !529, file: !468, line: 681, type: !9, align: 8)
!529 = !DILexicalBlockFile(scope: !530, file: !468, discriminator: 0)
!530 = distinct !DILexicalBlock(scope: !527, file: !403, line: 29, column: 13)
!531 = !DILocation(line: 681, column: 23, scope: !519, inlinedAt: !517)
!532 = !DILocation(line: 681, column: 23, scope: !523, inlinedAt: !517)
!533 = !DILocation(line: 681, column: 23, scope: !534, inlinedAt: !536)
!534 = !DILexicalBlockFile(scope: !535, file: !468, discriminator: 0)
!535 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!536 = !DILocation(line: 41, column: 5, scope: !537, inlinedAt: !538)
!537 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!538 = !DILocation(line: 19, column: 20, scope: !524, inlinedAt: !517)
!539 = !DILocation(line: 681, column: 23, scope: !526, inlinedAt: !517)
!540 = !DILocalVariable(name: "self", scope: !541, file: !468, line: 681, type: !342, align: 8)
!541 = !DILexicalBlockFile(scope: !542, file: !468, discriminator: 0)
!542 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !543)
!543 = !{!540}
!544 = !DILocation(line: 681, column: 23, scope: !541, inlinedAt: !545)
!545 = !DILocation(line: 29, column: 47, scope: !527, inlinedAt: !517)
!546 = !DILocalVariable(name: "self", scope: !547, file: !468, line: 681, type: !339, align: 8)
!547 = !DILexicalBlockFile(scope: !548, file: !468, discriminator: 0)
!548 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !549)
!549 = !{!546}
!550 = !DILocation(line: 681, column: 23, scope: !547, inlinedAt: !551)
!551 = !DILocation(line: 29, column: 65, scope: !527, inlinedAt: !517)
!552 = !DILocalVariable(name: "self", scope: !553, file: !468, line: 681, type: !448, align: 8)
!553 = !DILexicalBlockFile(scope: !554, file: !468, discriminator: 0)
!554 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !555)
!555 = !{!552}
!556 = !DILocation(line: 681, column: 23, scope: !553, inlinedAt: !551)
!557 = !DILocation(line: 681, column: 23, scope: !529, inlinedAt: !517)
!558 = !DILocation(line: 681, column: 13, scope: !506)
!559 = !DILocation(line: 682, column: 31, scope: !508)
!560 = !DILocation(line: 682, column: 16, scope: !508)
!561 = !DILocation(line: 682, column: 22, scope: !508)
!562 = !DILocation(line: 682, column: 25, scope: !508)
!563 = !DILocation(line: 683, column: 23, scope: !508)
!564 = !DILocalVariable(name: "self", scope: !565, file: !468, line: 683, type: !389, align: 8)
!565 = !DILexicalBlockFile(scope: !566, file: !468, discriminator: 0)
!566 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !567)
!567 = !{!564, !568, !571, !574}
!568 = !DILocalVariable(name: "start", scope: !569, file: !468, line: 683, type: !339, align: 8)
!569 = !DILexicalBlockFile(scope: !570, file: !468, discriminator: 0)
!570 = distinct !DILexicalBlock(scope: !566, file: !403, line: 18, column: 9)
!571 = !DILocalVariable(name: "size", scope: !572, file: !468, line: 683, type: !9, align: 8)
!572 = !DILexicalBlockFile(scope: !573, file: !468, discriminator: 0)
!573 = distinct !DILexicalBlock(scope: !570, file: !403, line: 19, column: 9)
!574 = !DILocalVariable(name: "diff", scope: !575, file: !468, line: 683, type: !9, align: 8)
!575 = !DILexicalBlockFile(scope: !576, file: !468, discriminator: 0)
!576 = distinct !DILexicalBlock(scope: !573, file: !403, line: 29, column: 13)
!577 = !DILocation(line: 683, column: 23, scope: !565, inlinedAt: !563)
!578 = !DILocation(line: 683, column: 23, scope: !569, inlinedAt: !563)
!579 = !DILocation(line: 683, column: 23, scope: !580, inlinedAt: !582)
!580 = !DILexicalBlockFile(scope: !581, file: !468, discriminator: 0)
!581 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!582 = !DILocation(line: 41, column: 5, scope: !583, inlinedAt: !584)
!583 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!584 = !DILocation(line: 19, column: 20, scope: !570, inlinedAt: !563)
!585 = !DILocation(line: 683, column: 23, scope: !572, inlinedAt: !563)
!586 = !DILocalVariable(name: "self", scope: !587, file: !468, line: 683, type: !342, align: 8)
!587 = !DILexicalBlockFile(scope: !588, file: !468, discriminator: 0)
!588 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !589)
!589 = !{!586}
!590 = !DILocation(line: 683, column: 23, scope: !587, inlinedAt: !591)
!591 = !DILocation(line: 29, column: 47, scope: !573, inlinedAt: !563)
!592 = !DILocation(line: 691, column: 9, scope: !506)
!593 = !DILocation(line: 692, column: 6, scope: !467)
!594 = !DILocalVariable(name: "self", scope: !595, file: !468, line: 683, type: !339, align: 8)
!595 = !DILexicalBlockFile(scope: !596, file: !468, discriminator: 0)
!596 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !597)
!597 = !{!594}
!598 = !DILocation(line: 683, column: 23, scope: !595, inlinedAt: !599)
!599 = !DILocation(line: 29, column: 65, scope: !573, inlinedAt: !563)
!600 = !DILocalVariable(name: "self", scope: !601, file: !468, line: 683, type: !448, align: 8)
!601 = !DILexicalBlockFile(scope: !602, file: !468, discriminator: 0)
!602 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !603)
!603 = !{!600}
!604 = !DILocation(line: 683, column: 23, scope: !601, inlinedAt: !599)
!605 = !DILocation(line: 683, column: 23, scope: !575, inlinedAt: !563)
!606 = !DILocation(line: 683, column: 17, scope: !511)
!607 = !DILocation(line: 684, column: 28, scope: !511)
!608 = !DILocation(line: 684, column: 17, scope: !513)
!609 = !DILocation(line: 685, column: 16, scope: !513)
!610 = !DILocation(line: 688, column: 46, scope: !513)
!611 = !DILocation(line: 688, column: 24, scope: !513)
!612 = !DILocation(line: 688, column: 17, scope: !513)
!613 = !DILocation(line: 686, column: 45, scope: !513)
!614 = !DILocation(line: 686, column: 24, scope: !513)
!615 = !DILocation(line: 686, column: 17, scope: !513)
!616 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h76e86bdfaf487fe2E", scope: !618, file: !617, line: 278, type: !620, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !634)
!617 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!618 = !DINamespace(name: "{impl#3}", scope: !619)
!619 = !DINamespace(name: "index", scope: !255)
!620 = !DISubroutineType(types: !621)
!621 = !{!622, !626, !622}
!622 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !623, templateParams: !23, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !622, file: !2, baseType: !51, size: 64, align: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !622, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !627, file: !2, size: 128, align: 64, elements: !629, templateParams: !632, identifier: "3dd0d908635f86b6929fa77339739c9")
!627 = !DINamespace(name: "range", scope: !628)
!628 = !DINamespace(name: "ops", scope: !40)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !626, file: !2, baseType: !9, size: 64, align: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !626, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!632 = !{!633}
!633 = !DITemplateTypeParameter(name: "Idx", type: !9)
!634 = !{!635, !636, !637}
!635 = !DILocalVariable(name: "self", arg: 1, scope: !616, file: !617, line: 278, type: !626)
!636 = !DILocalVariable(name: "slice", arg: 2, scope: !616, file: !617, line: 278, type: !622)
!637 = !DILocalVariable(name: "runtime", scope: !638, file: !617, line: 285, type: !641, align: 8)
!638 = !DILexicalBlockFile(scope: !639, file: !617, discriminator: 0)
!639 = distinct !DILexicalBlock(scope: !616, file: !640, line: 2319, column: 13)
!640 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "522b6baddd07f8f08b1c42bc11a3b4d7")
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !642, file: !2, size: 192, align: 64, elements: !643, templateParams: !23, identifier: "e6ee7db470cd2a78dbba301356b49cfc")
!642 = !DINamespace(name: "get_unchecked", scope: !618)
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !641, file: !2, baseType: !387, size: 64, align: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !641, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !641, file: !2, baseType: !647, size: 64, align: 64, offset: 128)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !622, size: 64, align: 64, dwarfAddressSpace: 0)
!648 = !DILocation(line: 278, column: 29, scope: !616)
!649 = !DILocation(line: 278, column: 35, scope: !616)
!650 = !DILocation(line: 285, column: 13, scope: !638)
!651 = !DILocation(line: 286, column: 39, scope: !616)
!652 = !DILocalVariable(name: "self", scope: !653, file: !617, line: 286, type: !622, align: 8)
!653 = !DILexicalBlockFile(scope: !654, file: !617, discriminator: 0)
!654 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h7a5d128f2f75dde1E", scope: !655, file: !436, line: 1374, type: !656, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !658)
!655 = !DINamespace(name: "{impl#1}", scope: !438)
!656 = !DISubroutineType(types: !657)
!657 = !{!342, !622}
!658 = !{!652}
!659 = !DILocation(line: 286, column: 39, scope: !653, inlinedAt: !651)
!660 = !DILocalVariable(name: "self", scope: !661, file: !617, line: 286, type: !342, align: 8)
!661 = !DILexicalBlockFile(scope: !662, file: !617, discriminator: 0)
!662 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd567d4fde3b4fe62E", scope: !437, file: !436, line: 865, type: !663, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !665)
!663 = !DISubroutineType(types: !664)
!664 = !{!342, !342, !9}
!665 = !{!660, !666}
!666 = !DILocalVariable(name: "count", scope: !661, file: !617, line: 286, type: !9, align: 8)
!667 = !DILocation(line: 286, column: 39, scope: !661, inlinedAt: !651)
!668 = !DILocation(line: 286, column: 58, scope: !616)
!669 = !DILocalVariable(name: "self", scope: !670, file: !617, line: 286, type: !342, align: 8)
!670 = !DILexicalBlockFile(scope: !671, file: !617, discriminator: 0)
!671 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd8f7153041f61580E", scope: !437, file: !436, line: 452, type: !672, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !675)
!672 = !DISubroutineType(types: !673)
!673 = !{!342, !342, !674}
!674 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!675 = !{!669, !676}
!676 = !DILocalVariable(name: "count", scope: !670, file: !617, line: 286, type: !674, align: 8)
!677 = !DILocation(line: 286, column: 39, scope: !670, inlinedAt: !678)
!678 = !DILocation(line: 870, column: 18, scope: !662, inlinedAt: !651)
!679 = !DILocalVariable(name: "data", scope: !680, file: !617, line: 286, type: !342, align: 8)
!680 = !DILexicalBlockFile(scope: !681, file: !617, discriminator: 0)
!681 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !685)
!682 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "8347f3797ea1142e866e50608b9a2204")
!683 = !DISubroutineType(types: !684)
!684 = !{!622, !342, !9}
!685 = !{!679, !686}
!686 = !DILocalVariable(name: "len", scope: !680, file: !617, line: 286, type: !9, align: 8)
!687 = !DILocation(line: 286, column: 13, scope: !680, inlinedAt: !688)
!688 = !DILocation(line: 286, column: 13, scope: !616)
!689 = !DILocation(line: 286, column: 71, scope: !616)
!690 = !DILocalVariable(name: "self", scope: !691, file: !617, line: 286, type: !342, align: 8)
!691 = !DILexicalBlockFile(scope: !692, file: !617, discriminator: 0)
!692 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !695)
!693 = !DISubroutineType(types: !694)
!694 = !{!6, !342}
!695 = !{!690}
!696 = !{!344, !697}
!697 = !DITemplateTypeParameter(name: "U", type: !7)
!698 = !DILocation(line: 286, column: 13, scope: !691, inlinedAt: !699)
!699 = !DILocation(line: 695, column: 20, scope: !681, inlinedAt: !688)
!700 = !DILocalVariable(name: "data_address", scope: !701, file: !617, line: 286, type: !6, align: 8)
!701 = !DILexicalBlockFile(scope: !702, file: !617, discriminator: 0)
!702 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !707)
!703 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1c0696840ef99c8132b364245b959d8b")
!704 = !DINamespace(name: "metadata", scope: !260)
!705 = !DISubroutineType(types: !706)
!706 = !{!622, !6, !9}
!707 = !{!700, !708}
!708 = !DILocalVariable(name: "metadata", scope: !701, file: !617, line: 286, type: !9, align: 8)
!709 = !DILocation(line: 286, column: 13, scope: !701, inlinedAt: !710)
!710 = !DILocation(line: 695, column: 5, scope: !681, inlinedAt: !688)
!711 = !DILocation(line: 288, column: 6, scope: !616)
!712 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h4d1b0eebe640be38E", scope: !618, file: !617, line: 291, type: !713, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !719)
!713 = !DISubroutineType(types: !714)
!714 = !{!715, !626, !715}
!715 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !716, templateParams: !23, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!716 = !{!717, !718}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !715, file: !2, baseType: !51, size: 64, align: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !715, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!719 = !{!720, !721, !722}
!720 = !DILocalVariable(name: "self", arg: 1, scope: !712, file: !617, line: 291, type: !626)
!721 = !DILocalVariable(name: "slice", arg: 2, scope: !712, file: !617, line: 291, type: !715)
!722 = !DILocalVariable(name: "runtime", scope: !723, file: !617, line: 294, type: !725, align: 8)
!723 = !DILexicalBlockFile(scope: !724, file: !617, discriminator: 0)
!724 = distinct !DILexicalBlock(scope: !712, file: !640, line: 2319, column: 13)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !726, file: !2, size: 192, align: 64, elements: !727, templateParams: !23, identifier: "102c41393ca13cb914335cb52dbdc96f")
!726 = !DINamespace(name: "get_unchecked_mut", scope: !618)
!727 = !{!728, !729, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !725, file: !2, baseType: !387, size: 64, align: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !725, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !725, file: !2, baseType: !731, size: 64, align: 64, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [u8]", baseType: !715, size: 64, align: 64, dwarfAddressSpace: 0)
!732 = !DILocation(line: 291, column: 33, scope: !712)
!733 = !DILocation(line: 291, column: 39, scope: !712)
!734 = !DILocation(line: 294, column: 13, scope: !723)
!735 = !DILocation(line: 295, column: 43, scope: !712)
!736 = !DILocalVariable(name: "self", scope: !737, file: !617, line: 295, type: !715, align: 8)
!737 = !DILexicalBlockFile(scope: !738, file: !617, discriminator: 0)
!738 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h43435e6e9174c7c9E", scope: !739, file: !455, line: 1759, type: !740, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !742)
!739 = !DINamespace(name: "{impl#1}", scope: !457)
!740 = !DISubroutineType(types: !741)
!741 = !{!448, !715}
!742 = !{!736}
!743 = !DILocation(line: 295, column: 43, scope: !737, inlinedAt: !735)
!744 = !DILocalVariable(name: "self", scope: !745, file: !617, line: 295, type: !448, align: 8)
!745 = !DILexicalBlockFile(scope: !746, file: !617, discriminator: 0)
!746 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9f321a7d1697cdfcE", scope: !456, file: !455, line: 977, type: !747, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !749)
!747 = !DISubroutineType(types: !748)
!748 = !{!448, !448, !9}
!749 = !{!744, !750}
!750 = !DILocalVariable(name: "count", scope: !745, file: !617, line: 295, type: !9, align: 8)
!751 = !DILocation(line: 295, column: 43, scope: !745, inlinedAt: !735)
!752 = !DILocation(line: 295, column: 66, scope: !712)
!753 = !DILocalVariable(name: "self", scope: !754, file: !617, line: 295, type: !448, align: 8)
!754 = !DILexicalBlockFile(scope: !755, file: !617, discriminator: 0)
!755 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8858ce9471ea0608E", scope: !456, file: !455, line: 462, type: !756, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !758)
!756 = !DISubroutineType(types: !757)
!757 = !{!448, !448, !674}
!758 = !{!753, !759}
!759 = !DILocalVariable(name: "count", scope: !754, file: !617, line: 295, type: !674, align: 8)
!760 = !DILocation(line: 295, column: 43, scope: !754, inlinedAt: !761)
!761 = !DILocation(line: 982, column: 18, scope: !746, inlinedAt: !735)
!762 = !DILocalVariable(name: "data", scope: !763, file: !617, line: 295, type: !448, align: 8)
!763 = !DILexicalBlockFile(scope: !764, file: !617, discriminator: 0)
!764 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hd34dadd7044cb66fE", scope: !260, file: !682, line: 726, type: !765, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !767)
!765 = !DISubroutineType(types: !766)
!766 = !{!715, !448, !9}
!767 = !{!762, !768}
!768 = !DILocalVariable(name: "len", scope: !763, file: !617, line: 295, type: !9, align: 8)
!769 = !DILocation(line: 295, column: 13, scope: !763, inlinedAt: !770)
!770 = !DILocation(line: 295, column: 13, scope: !712)
!771 = !DILocation(line: 295, column: 79, scope: !712)
!772 = !DILocalVariable(name: "self", scope: !773, file: !617, line: 295, type: !448, align: 8)
!773 = !DILexicalBlockFile(scope: !774, file: !617, discriminator: 0)
!774 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2521638f5850fb66E", scope: !456, file: !455, line: 45, type: !775, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !778)
!775 = !DISubroutineType(types: !776)
!776 = !{!777, !448}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!778 = !{!772}
!779 = !DILocation(line: 295, column: 13, scope: !773, inlinedAt: !780)
!780 = !DILocation(line: 727, column: 24, scope: !764, inlinedAt: !770)
!781 = !DILocalVariable(name: "data_address", scope: !782, file: !617, line: 295, type: !777, align: 8)
!782 = !DILexicalBlockFile(scope: !783, file: !617, discriminator: 0)
!783 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h831a101dd10ae1e2E", scope: !704, file: !703, line: 127, type: !784, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !786)
!784 = !DISubroutineType(types: !785)
!785 = !{!715, !777, !9}
!786 = !{!781, !787}
!787 = !DILocalVariable(name: "metadata", scope: !782, file: !617, line: 295, type: !9, align: 8)
!788 = !DILocation(line: 295, column: 13, scope: !782, inlinedAt: !789)
!789 = !DILocation(line: 727, column: 5, scope: !764, inlinedAt: !770)
!790 = !DILocation(line: 297, column: 6, scope: !712)
!791 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he72d74f046ab17e7E", scope: !618, file: !617, line: 291, type: !792, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !808)
!792 = !DISubroutineType(types: !793)
!793 = !{!794, !626, !794}
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !795, templateParams: !23, identifier: "8b1ec13d56517922237b05a437f4e747")
!795 = !{!796, !807}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !794, file: !2, baseType: !797, size: 64, align: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64, align: 64, dwarfAddressSpace: 0)
!798 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !799, file: !2, size: 8, align: 8, elements: !800, templateParams: !343, identifier: "e11af64b0336a536c8aa158c854c3454")
!799 = !DINamespace(name: "maybe_uninit", scope: !79)
!800 = !{!801, !802}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !798, file: !2, baseType: !7, align: 8)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !798, file: !2, baseType: !803, size: 8, align: 8)
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !804, file: !2, size: 8, align: 8, elements: !805, templateParams: !343, identifier: "30bc78cd19981edb6c98698a07e99a75")
!804 = !DINamespace(name: "manually_drop", scope: !79)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !803, file: !2, baseType: !52, size: 8, align: 8)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !794, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!808 = !{!809, !810, !811}
!809 = !DILocalVariable(name: "self", arg: 1, scope: !791, file: !617, line: 291, type: !626)
!810 = !DILocalVariable(name: "slice", arg: 2, scope: !791, file: !617, line: 291, type: !794)
!811 = !DILocalVariable(name: "runtime", scope: !812, file: !617, line: 294, type: !814, align: 8)
!812 = !DILexicalBlockFile(scope: !813, file: !617, discriminator: 0)
!813 = distinct !DILexicalBlock(scope: !791, file: !640, line: 2319, column: 13)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !726, file: !2, size: 192, align: 64, elements: !815, templateParams: !23, identifier: "fb5cf6ecd725a79d2a5afe034c3d70b")
!815 = !{!816, !817, !818}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !814, file: !2, baseType: !387, size: 64, align: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !814, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !814, file: !2, baseType: !819, size: 64, align: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", baseType: !794, size: 64, align: 64, dwarfAddressSpace: 0)
!820 = !{!821}
!821 = !DITemplateTypeParameter(name: "T", type: !798)
!822 = !DILocation(line: 291, column: 33, scope: !791)
!823 = !DILocation(line: 291, column: 39, scope: !791)
!824 = !DILocation(line: 294, column: 13, scope: !812)
!825 = !DILocation(line: 295, column: 43, scope: !791)
!826 = !DILocalVariable(name: "self", scope: !827, file: !617, line: 295, type: !794, align: 8)
!827 = !DILexicalBlockFile(scope: !828, file: !617, discriminator: 0)
!828 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9105349101533c72E", scope: !739, file: !455, line: 1759, type: !829, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !832)
!829 = !DISubroutineType(types: !830)
!830 = !{!831, !794}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !798, size: 64, align: 64, dwarfAddressSpace: 0)
!832 = !{!826}
!833 = !DILocation(line: 295, column: 43, scope: !827, inlinedAt: !825)
!834 = !DILocalVariable(name: "self", scope: !835, file: !617, line: 295, type: !831, align: 8)
!835 = !DILexicalBlockFile(scope: !836, file: !617, discriminator: 0)
!836 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbad4519e0a124963E", scope: !456, file: !455, line: 977, type: !837, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !839)
!837 = !DISubroutineType(types: !838)
!838 = !{!831, !831, !9}
!839 = !{!834, !840}
!840 = !DILocalVariable(name: "count", scope: !835, file: !617, line: 295, type: !9, align: 8)
!841 = !DILocation(line: 295, column: 43, scope: !835, inlinedAt: !825)
!842 = !DILocation(line: 295, column: 66, scope: !791)
!843 = !DILocalVariable(name: "self", scope: !844, file: !617, line: 295, type: !831, align: 8)
!844 = !DILexicalBlockFile(scope: !845, file: !617, discriminator: 0)
!845 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5225df2ed7acc589E", scope: !456, file: !455, line: 462, type: !846, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !848)
!846 = !DISubroutineType(types: !847)
!847 = !{!831, !831, !674}
!848 = !{!843, !849}
!849 = !DILocalVariable(name: "count", scope: !844, file: !617, line: 295, type: !674, align: 8)
!850 = !DILocation(line: 295, column: 43, scope: !844, inlinedAt: !851)
!851 = !DILocation(line: 982, column: 18, scope: !836, inlinedAt: !825)
!852 = !DILocalVariable(name: "data", scope: !853, file: !617, line: 295, type: !831, align: 8)
!853 = !DILexicalBlockFile(scope: !854, file: !617, discriminator: 0)
!854 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h39edb8315f977252E", scope: !260, file: !682, line: 726, type: !855, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !857)
!855 = !DISubroutineType(types: !856)
!856 = !{!794, !831, !9}
!857 = !{!852, !858}
!858 = !DILocalVariable(name: "len", scope: !853, file: !617, line: 295, type: !9, align: 8)
!859 = !DILocation(line: 295, column: 13, scope: !853, inlinedAt: !860)
!860 = !DILocation(line: 295, column: 13, scope: !791)
!861 = !DILocation(line: 295, column: 79, scope: !791)
!862 = !DILocalVariable(name: "self", scope: !863, file: !617, line: 295, type: !831, align: 8)
!863 = !DILexicalBlockFile(scope: !864, file: !617, discriminator: 0)
!864 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf416c97be0df382eE", scope: !456, file: !455, line: 45, type: !865, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !868, retainedNodes: !867)
!865 = !DISubroutineType(types: !866)
!866 = !{!777, !831}
!867 = !{!862}
!868 = !{!821, !697}
!869 = !DILocation(line: 295, column: 13, scope: !863, inlinedAt: !870)
!870 = !DILocation(line: 727, column: 24, scope: !854, inlinedAt: !860)
!871 = !DILocalVariable(name: "data_address", scope: !872, file: !617, line: 295, type: !777, align: 8)
!872 = !DILexicalBlockFile(scope: !873, file: !617, discriminator: 0)
!873 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hcc1411d4fda6f2a1E", scope: !704, file: !703, line: 127, type: !874, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !876)
!874 = !DISubroutineType(types: !875)
!875 = !{!794, !777, !9}
!876 = !{!871, !877}
!877 = !DILocalVariable(name: "metadata", scope: !872, file: !617, line: 295, type: !9, align: 8)
!878 = !DILocation(line: 295, column: 13, scope: !872, inlinedAt: !879)
!879 = !DILocation(line: 727, column: 5, scope: !854, inlinedAt: !860)
!880 = !DILocation(line: 297, column: 6, scope: !791)
!881 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h47415f499ca832f7E", scope: !618, file: !617, line: 258, type: !882, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !901)
!882 = !DISubroutineType(types: !883)
!883 = !{!884, !626, !892}
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8]>", scope: !39, file: !2, size: 128, align: 64, elements: !885, templateParams: !23, identifier: "f8fd4a4d85964be4ab3e8c7fc1e9c5cf")
!885 = !{!886}
!886 = !DICompositeType(tag: DW_TAG_variant_part, scope: !884, file: !2, size: 128, align: 64, elements: !887, templateParams: !23, identifier: "b844dcf570a8fed2a6154e89a40fa598", discriminator: !900)
!887 = !{!888, !896}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !886, file: !2, baseType: !889, size: 128, align: 64, extraData: i64 0)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !884, file: !2, size: 128, align: 64, elements: !23, templateParams: !890, identifier: "44885eb6ec04efdbd9268e91ac52c4a4")
!890 = !{!891}
!891 = !DITemplateTypeParameter(name: "T", type: !892)
!892 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !893, templateParams: !23, identifier: "7d49e60d2ca720f66806f7375f860e2")
!893 = !{!894, !895}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !892, file: !2, baseType: !51, size: 64, align: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !892, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !886, file: !2, baseType: !897, size: 128, align: 64)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !884, file: !2, size: 128, align: 64, elements: !898, templateParams: !890, identifier: "3dcc32832ead7af7bad5b0b117219ef")
!898 = !{!899}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !897, file: !2, baseType: !892, size: 128, align: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, scope: !884, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!901 = !{!902, !903}
!902 = !DILocalVariable(name: "self", arg: 1, scope: !881, file: !617, line: 258, type: !626)
!903 = !DILocalVariable(name: "slice", arg: 2, scope: !881, file: !617, line: 258, type: !892)
!904 = !DILocation(line: 258, column: 12, scope: !881)
!905 = !DILocation(line: 258, column: 18, scope: !881)
!906 = !DILocation(line: 259, column: 12, scope: !881)
!907 = !DILocation(line: 259, column: 37, scope: !881)
!908 = !DILocation(line: 263, column: 29, scope: !881)
!909 = !DILocation(line: 260, column: 13, scope: !881)
!910 = !DILocation(line: 259, column: 9, scope: !881)
!911 = !DILocation(line: 265, column: 6, scope: !881)
!912 = !{i64 1}
!913 = !DILocation(line: 263, column: 22, scope: !881)
!914 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h77b2b2fb35959fa1E", scope: !618, file: !617, line: 300, type: !915, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !925)
!915 = !DISubroutineType(types: !916)
!916 = !{!892, !626, !892, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !918, size: 64, align: 64, dwarfAddressSpace: 0)
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !919, file: !2, size: 192, align: 64, elements: !921, templateParams: !23, identifier: "221b8795f585d602f0086fb6a2d86867")
!919 = !DINamespace(name: "location", scope: !920)
!920 = !DINamespace(name: "panic", scope: !40)
!921 = !{!922, !923, !924}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !918, file: !2, baseType: !48, size: 128, align: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !918, file: !2, baseType: !327, size: 32, align: 32, offset: 128)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !918, file: !2, baseType: !327, size: 32, align: 32, offset: 160)
!925 = !{!926, !927}
!926 = !DILocalVariable(name: "self", arg: 1, scope: !914, file: !617, line: 300, type: !626)
!927 = !DILocalVariable(name: "slice", arg: 2, scope: !914, file: !617, line: 300, type: !892)
!928 = !DILocation(line: 300, column: 14, scope: !914)
!929 = !DILocation(line: 300, column: 20, scope: !914)
!930 = !DILocation(line: 301, column: 12, scope: !914)
!931 = !DILocation(line: 303, column: 19, scope: !914)
!932 = !DILocation(line: 302, column: 13, scope: !914)
!933 = !DILocation(line: 307, column: 20, scope: !914)
!934 = !DILocation(line: 304, column: 13, scope: !914)
!935 = !DILocation(line: 308, column: 6, scope: !914)
!936 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf22b940d4cf19807E", scope: !618, file: !617, line: 311, type: !937, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !943)
!937 = !DISubroutineType(types: !938)
!938 = !{!939, !626, !939, !917}
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !940, templateParams: !23, identifier: "188333407bebfa65121ceca786627665")
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !939, file: !2, baseType: !51, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !939, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!943 = !{!944, !945}
!944 = !DILocalVariable(name: "self", arg: 1, scope: !936, file: !617, line: 311, type: !626)
!945 = !DILocalVariable(name: "slice", arg: 2, scope: !936, file: !617, line: 311, type: !939)
!946 = !DILocation(line: 311, column: 18, scope: !936)
!947 = !DILocation(line: 311, column: 24, scope: !936)
!948 = !DILocation(line: 312, column: 12, scope: !936)
!949 = !DILocation(line: 314, column: 19, scope: !936)
!950 = !DILocation(line: 313, column: 13, scope: !936)
!951 = !DILocation(line: 318, column: 24, scope: !936)
!952 = !DILocation(line: 315, column: 13, scope: !936)
!953 = !DILocation(line: 319, column: 6, scope: !936)
!954 = distinct !DISubprogram(name: "next_back<u8>", linkageName: "_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h094c5f2aa01eda5eE", scope: !955, file: !403, line: 349, type: !956, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !970)
!955 = !DINamespace(name: "{impl#174}", scope: !254)
!956 = !DISubroutineType(types: !957)
!957 = !{!958, !969}
!958 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !39, file: !2, size: 64, align: 64, elements: !959, templateParams: !23, identifier: "379cb6de4516ea36400a272b8a82a0e5")
!959 = !{!960}
!960 = !DICompositeType(tag: DW_TAG_variant_part, scope: !958, file: !2, size: 64, align: 64, elements: !961, templateParams: !23, identifier: "5f130bd14c9c4a97e40efb861e245c6", discriminator: !968)
!961 = !{!962, !964}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !960, file: !2, baseType: !963, size: 64, align: 64, extraData: i64 0)
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !958, file: !2, size: 64, align: 64, elements: !23, templateParams: !348, identifier: "5272a43c993cd4881261672fcadbcb9b")
!964 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !960, file: !2, baseType: !965, size: 64, align: 64)
!965 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !958, file: !2, size: 64, align: 64, elements: !966, templateParams: !348, identifier: "6ecba2538dc7577eb4fcaf7925a2c8b")
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !965, file: !2, baseType: !350, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, scope: !958, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !336, size: 64, align: 64, dwarfAddressSpace: 0)
!970 = !{!971}
!971 = !DILocalVariable(name: "self", arg: 1, scope: !954, file: !403, line: 349, type: !969)
!972 = !DILocation(line: 349, column: 26, scope: !954)
!973 = !DILocalVariable(name: "metadata", scope: !974, file: !403, line: 357, type: !7, align: 1)
!974 = !DILexicalBlockFile(scope: !975, file: !403, discriminator: 0)
!975 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !978)
!976 = !DISubroutineType(types: !977)
!977 = !{!448, !777, !7}
!978 = !{!979, !973}
!979 = !DILocalVariable(name: "data_address", scope: !974, file: !403, line: 357, type: !777, align: 8)
!980 = !DILocation(line: 357, column: 29, scope: !974, inlinedAt: !981)
!981 = !DILocation(line: 668, column: 5, scope: !982, inlinedAt: !985)
!982 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!983 = !DISubroutineType(types: !984)
!984 = !{!448}
!985 = !DILocation(line: 38, column: 41, scope: !986, inlinedAt: !993)
!986 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc23cf25345e04005E", scope: !456, file: !455, line: 35, type: !987, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !990)
!987 = !DISubroutineType(types: !988)
!988 = !{!989, !448}
!989 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!990 = !{!991}
!991 = !DILocalVariable(name: "self", scope: !992, file: !403, line: 357, type: !448, align: 8)
!992 = !DILexicalBlockFile(scope: !986, file: !403, discriminator: 0)
!993 = !DILocation(line: 357, column: 29, scope: !954)
!994 = !DILocalVariable(name: "metadata", scope: !995, file: !403, line: 359, type: !7, align: 1)
!995 = !DILexicalBlockFile(scope: !996, file: !403, discriminator: 0)
!996 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !999)
!997 = !DISubroutineType(types: !998)
!998 = !{!342, !6, !7}
!999 = !{!1000, !994}
!1000 = !DILocalVariable(name: "data_address", scope: !995, file: !403, line: 359, type: !6, align: 8)
!1001 = !DILocation(line: 359, column: 33, scope: !995, inlinedAt: !1002)
!1002 = !DILocation(line: 513, column: 5, scope: !1003, inlinedAt: !1006)
!1003 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!342}
!1006 = !DILocation(line: 39, column: 43, scope: !1007, inlinedAt: !1013)
!1007 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h58ff5562a6698e7eE", scope: !437, file: !436, line: 36, type: !1008, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1010)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!989, !342}
!1010 = !{!1011}
!1011 = !DILocalVariable(name: "self", scope: !1012, file: !403, line: 359, type: !342, align: 8)
!1012 = !DILexicalBlockFile(scope: !1007, file: !403, discriminator: 0)
!1013 = !DILocation(line: 359, column: 33, scope: !954)
!1014 = !DILocalVariable(name: "self", scope: !1015, file: !403, line: 357, type: !339, align: 8)
!1015 = !DILexicalBlockFile(scope: !1016, file: !403, discriminator: 0)
!1016 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1017)
!1017 = !{!1014}
!1018 = !DILocation(line: 357, column: 29, scope: !1015, inlinedAt: !993)
!1019 = !DILocation(line: 357, column: 29, scope: !992, inlinedAt: !993)
!1020 = !DILocalVariable(name: "self", scope: !1021, file: !403, line: 357, type: !448, align: 8)
!1021 = !DILexicalBlockFile(scope: !1022, file: !403, discriminator: 0)
!1022 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1025)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!989, !448, !448}
!1025 = !{!1020, !1026}
!1026 = !DILocalVariable(name: "other", scope: !1021, file: !403, line: 357, type: !448, align: 8)
!1027 = !DILocation(line: 357, column: 29, scope: !1021, inlinedAt: !1028)
!1028 = !DILocation(line: 38, column: 9, scope: !986, inlinedAt: !993)
!1029 = !DILocation(line: 357, column: 29, scope: !1030, inlinedAt: !1038)
!1030 = !DILexicalBlockFile(scope: !1031, file: !403, discriminator: 0)
!1031 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1034)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!777, !9}
!1034 = !{!1035}
!1035 = !DILocalVariable(name: "addr", scope: !1030, file: !403, line: 357, type: !9, align: 8)
!1036 = !{!1037}
!1037 = !DITemplateTypeParameter(name: "T", type: !7)
!1038 = !DILocation(line: 668, column: 24, scope: !982, inlinedAt: !985)
!1039 = !DILocation(line: 357, column: 28, scope: !954)
!1040 = !DILocation(line: 357, column: 21, scope: !954)
!1041 = !DILocation(line: 358, column: 24, scope: !954)
!1042 = !DILocation(line: 358, column: 21, scope: !954)
!1043 = !DILocation(line: 359, column: 33, scope: !1012, inlinedAt: !1013)
!1044 = !DILocalVariable(name: "self", scope: !1045, file: !403, line: 359, type: !342, align: 8)
!1045 = !DILexicalBlockFile(scope: !1046, file: !403, discriminator: 0)
!1046 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1049)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!989, !342, !342}
!1049 = !{!1044, !1050}
!1050 = !DILocalVariable(name: "other", scope: !1045, file: !403, line: 359, type: !342, align: 8)
!1051 = !DILocation(line: 359, column: 33, scope: !1045, inlinedAt: !1052)
!1052 = !DILocation(line: 39, column: 9, scope: !1007, inlinedAt: !1013)
!1053 = !DILocation(line: 359, column: 33, scope: !1054, inlinedAt: !1060)
!1054 = !DILexicalBlockFile(scope: !1055, file: !403, discriminator: 0)
!1055 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1058)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!6, !9}
!1058 = !{!1059}
!1059 = !DILocalVariable(name: "addr", scope: !1054, file: !403, line: 359, type: !9, align: 8)
!1060 = !DILocation(line: 513, column: 20, scope: !1003, inlinedAt: !1006)
!1061 = !DILocation(line: 359, column: 32, scope: !954)
!1062 = !DILocation(line: 359, column: 25, scope: !954)
!1063 = !DILocation(line: 361, column: 24, scope: !954)
!1064 = !DILocalVariable(name: "self", scope: !1065, file: !403, line: 361, type: !339, align: 8)
!1065 = !DILexicalBlockFile(scope: !1066, file: !403, discriminator: 0)
!1066 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1067)
!1067 = !{!1064}
!1068 = !DILocation(line: 361, column: 24, scope: !1065, inlinedAt: !1069)
!1069 = !DILocation(line: 8, column: 9, scope: !954)
!1070 = !DILocation(line: 364, column: 30, scope: !954)
!1071 = !DILocalVariable(name: "self", scope: !1072, file: !403, line: 364, type: !969, align: 8)
!1072 = distinct !DISubprogram(name: "pre_dec_end<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$11pre_dec_end17h8982bcb9e34ce169E", scope: !336, file: !403, line: 102, type: !1073, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1075)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!342, !969, !674}
!1075 = !{!1071, !1076}
!1076 = !DILocalVariable(name: "offset", scope: !1072, file: !403, line: 364, type: !674, align: 8)
!1077 = !DILocation(line: 364, column: 30, scope: !1072, inlinedAt: !1078)
!1078 = !DILocation(line: 60, column: 47, scope: !954)
!1079 = !DILocation(line: 362, column: 25, scope: !954)
!1080 = !DILocation(line: 361, column: 21, scope: !954)
!1081 = !DILocation(line: 367, column: 14, scope: !954)
!1082 = !DILocalVariable(name: "self", scope: !1083, file: !403, line: 364, type: !342, align: 8)
!1083 = !DILexicalBlockFile(scope: !1084, file: !403, discriminator: 0)
!1084 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1085)
!1085 = !{!1082, !1086}
!1086 = !DILocalVariable(name: "count", scope: !1083, file: !403, line: 364, type: !674, align: 8)
!1087 = !DILocation(line: 364, column: 30, scope: !1083, inlinedAt: !1088)
!1088 = !DILocation(line: 67, column: 29, scope: !1072, inlinedAt: !1078)
!1089 = !DILocalVariable(name: "self", scope: !1090, file: !403, line: 364, type: !342, align: 8)
!1090 = !DILexicalBlockFile(scope: !1091, file: !403, discriminator: 0)
!1091 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd8f7153041f61580E", scope: !437, file: !436, line: 452, type: !672, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1092)
!1092 = !{!1089, !1093}
!1093 = !DILocalVariable(name: "count", scope: !1090, file: !403, line: 364, type: !674, align: 8)
!1094 = !DILocation(line: 364, column: 30, scope: !1090, inlinedAt: !1095)
!1095 = !DILocation(line: 110, column: 41, scope: !1072, inlinedAt: !1078)
!1096 = !DILocation(line: 364, column: 25, scope: !954)
!1097 = !DILocalVariable(name: "self", scope: !1098, file: !403, line: 364, type: !339, align: 8)
!1098 = !DILexicalBlockFile(scope: !1099, file: !403, discriminator: 0)
!1099 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1100)
!1100 = !{!1097}
!1101 = !DILocation(line: 364, column: 30, scope: !1098, inlinedAt: !1102)
!1102 = !DILocation(line: 105, column: 21, scope: !1072, inlinedAt: !1078)
!1103 = distinct !DISubprogram(name: "next_reject_back<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h89c0ff6501dbe27dE", scope: !1104, file: !468, line: 770, type: !1105, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1128, retainedNodes: !1130)
!1104 = !DINamespace(name: "{impl#24}", scope: !470)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!1107, !1124}
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, usize)>", scope: !39, file: !2, size: 192, align: 64, elements: !1108, templateParams: !23, identifier: "499068b8ae1d08133bcade0453c8303d")
!1108 = !{!1109}
!1109 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1107, file: !2, size: 192, align: 64, elements: !1110, templateParams: !23, identifier: "ee8df4a6dabe671df97a46331cf0337c", discriminator: !1123)
!1110 = !{!1111, !1119}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1109, file: !2, baseType: !1112, size: 192, align: 64, extraData: i64 0)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1107, file: !2, size: 192, align: 64, elements: !23, templateParams: !1113, identifier: "e065f8ec32a52a49c2dbdb06d2af2e90")
!1113 = !{!1114}
!1114 = !DITemplateTypeParameter(name: "T", type: !1115)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !1116, templateParams: !23, identifier: "105266767139aa3a5d0ea4c0b52d55d0")
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1115, file: !2, baseType: !9, size: 64, align: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1115, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1109, file: !2, baseType: !1120, size: 192, align: 64, extraData: i64 1)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1107, file: !2, size: 192, align: 64, elements: !1121, templateParams: !1113, identifier: "cea11d8a56db2c268a36cbe2981dc4bb")
!1121 = !{!1122}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1120, file: !2, baseType: !1115, size: 128, align: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, scope: !1107, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharPredicateSearcher<core::str::{impl#0}::trim::{closure_env#0}>", baseType: !1125, size: 64, align: 64, dwarfAddressSpace: 0)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharPredicateSearcher<core::str::{impl#0}::trim::{closure_env#0}>", scope: !470, file: !2, size: 320, align: 64, elements: !1126, templateParams: !1128, identifier: "7fdc78503f65b3057cdd3b92e68b09bd")
!1126 = !{!1127}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1125, file: !2, baseType: !491, size: 320, align: 64)
!1128 = !{!1129}
!1129 = !DITemplateTypeParameter(name: "F", type: !494)
!1130 = !{!1131}
!1131 = !DILocalVariable(name: "self", arg: 1, scope: !1103, file: !468, line: 770, type: !1124)
!1132 = !DILocation(line: 770, column: 29, scope: !1103)
!1133 = !DILocation(line: 771, column: 13, scope: !1103)
!1134 = !DILocation(line: 772, column: 10, scope: !1103)
!1135 = distinct !DISubprogram(name: "into_iter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbf56b171ae3f161eE", scope: !1137, file: !1136, line: 1596, type: !1141, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !1400)
!1136 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/btree/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "0e1ae57d5c35fa95d793ae07a31a788f")
!1137 = !DINamespace(name: "{impl#29}", scope: !1138)
!1138 = !DINamespace(name: "map", scope: !1139)
!1139 = !DINamespace(name: "btree", scope: !1140)
!1140 = !DINamespace(name: "collections", scope: !223)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!1143, !1360}
!1143 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !1138, file: !2, size: 576, align: 64, elements: !1144, templateParams: !1359, identifier: "8542f2a37baceacaf51fd6a51acf4001")
!1144 = !{!1145, !1357, !1358}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1143, file: !2, baseType: !1146, size: 512, align: 64)
!1146 = !DICompositeType(tag: DW_TAG_structure_type, name: "LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1147, file: !2, size: 512, align: 64, elements: !1148, templateParams: !1314, identifier: "b2c858bf8935cc4c3dd40558ea6aaf23")
!1147 = !DINamespace(name: "navigate", scope: !1139)
!1148 = !{!1149, !1356}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "front", scope: !1146, file: !2, baseType: !1150, size: 256, align: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !39, file: !2, size: 256, align: 64, elements: !1151, templateParams: !23, identifier: "bbdafed446f773bdea05b64b45e05ab")
!1151 = !{!1152}
!1152 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1150, file: !2, size: 256, align: 64, elements: !1153, templateParams: !23, identifier: "1ec8c4c4fdd15116e18e5240c1ca0f6d", discriminator: !1355)
!1153 = !{!1154, !1351}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1152, file: !2, baseType: !1155, size: 256, align: 64, extraData: i64 2)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1150, file: !2, size: 256, align: 64, elements: !23, templateParams: !1156, identifier: "c15cb2b2582793fb7453ea1d3fab093e")
!1156 = !{!1157}
!1157 = !DITemplateTypeParameter(name: "T", type: !1158)
!1158 = !DICompositeType(tag: DW_TAG_structure_type, name: "LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1147, file: !2, size: 256, align: 64, elements: !1159, templateParams: !23, identifier: "3ac8c103a77af5f811162b2ad4386c17")
!1159 = !{!1160}
!1160 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1158, file: !2, size: 256, align: 64, elements: !1161, templateParams: !23, identifier: "df22fbffff5ae2bb58dc9ee99c2fbf09", discriminator: !1350)
!1161 = !{!1162, !1315}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "Root", scope: !1160, file: !2, baseType: !1163, size: 256, align: 64, extraData: i64 0)
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "Root", scope: !1158, file: !2, size: 256, align: 64, elements: !1164, templateParams: !1314, identifier: "59cd46ee8f35fed72c444a081ad60d98")
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1163, file: !2, baseType: !1166, size: 128, align: 64, offset: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", scope: !1167, file: !2, size: 128, align: 64, elements: !1168, templateParams: !1311, identifier: "534939e66e6f4655382fb928e6958802")
!1167 = !DINamespace(name: "node", scope: !1139)
!1168 = !{!1169, !1170, !1296}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1166, file: !2, baseType: !9, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1166, file: !2, baseType: !1171, size: 64, align: 64, offset: 64)
!1171 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !259, file: !2, size: 64, align: 64, elements: !1172, templateParams: !1294, identifier: "a86380af16780f597078c883fa778ebb")
!1172 = !{!1173}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1171, file: !2, baseType: !1174, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1175, size: 64, align: 64, dwarfAddressSpace: 0)
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1167, file: !2, size: 4352, align: 64, elements: !1176, templateParams: !1206, identifier: "b1683157419180c4aabe0f0bb83ff19")
!1176 = !{!1177, !1260, !1271, !1272, !1283}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1175, file: !2, baseType: !1178, size: 64, align: 64)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !39, file: !2, size: 64, align: 64, elements: !1179, templateParams: !23, identifier: "a1e60cca26499c91a4ae5ad9e1da3160")
!1179 = !{!1180}
!1180 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1178, file: !2, size: 64, align: 64, elements: !1181, templateParams: !23, identifier: "92dbd7d5ae0c60c57326c361cafc76b0", discriminator: !1259)
!1181 = !{!1182, !1255}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1180, file: !2, baseType: !1183, size: 64, align: 64, extraData: i64 0)
!1183 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1178, file: !2, size: 64, align: 64, elements: !23, templateParams: !1184, identifier: "24fe8fe893a65083313850f2af495dcb")
!1184 = !{!1185}
!1185 = !DITemplateTypeParameter(name: "T", type: !1186)
!1186 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !259, file: !2, size: 64, align: 64, elements: !1187, templateParams: !1253, identifier: "a2df641948944acd58dfd70239de000")
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1186, file: !2, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1190, size: 64, align: 64, dwarfAddressSpace: 0)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1167, file: !2, size: 5120, align: 64, elements: !1191, templateParams: !1206, identifier: "29bbe896b1e33577626ac7c9fb98b385")
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1190, file: !2, baseType: !1175, size: 4352, align: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !1190, file: !2, baseType: !1194, size: 768, align: 64, offset: 4352)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1195, size: 768, align: 64, elements: !1204)
!1195 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !799, file: !2, size: 64, align: 64, elements: !1196, templateParams: !1202, identifier: "146a9c7bf9ab7fd3c2683d0dfeea8db")
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1195, file: !2, baseType: !7, align: 8)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1195, file: !2, baseType: !1199, size: 64, align: 64)
!1199 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !804, file: !2, size: 64, align: 64, elements: !1200, templateParams: !1202, identifier: "cee97e726dfc589e99fe9bede1216c26")
!1200 = !{!1201}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1199, file: !2, baseType: !1171, size: 64, align: 64)
!1202 = !{!1203}
!1203 = !DITemplateTypeParameter(name: "T", type: !1171)
!1204 = !{!1205}
!1205 = !DISubrange(count: 12, lowerBound: 0)
!1206 = !{!1207, !1239}
!1207 = !DITemplateTypeParameter(name: "K", type: !1208)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "OsString", scope: !1209, file: !2, size: 192, align: 64, elements: !1211, templateParams: !23, identifier: "64449d55bd377d782ce14d2cdb37c876")
!1209 = !DINamespace(name: "os_str", scope: !1210)
!1210 = !DINamespace(name: "ffi", scope: !17)
!1211 = !{!1212}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1208, file: !2, baseType: !1213, size: 192, align: 64)
!1213 = !DICompositeType(tag: DW_TAG_structure_type, name: "Buf", scope: !1214, file: !2, size: 192, align: 64, elements: !1217, templateParams: !23, identifier: "935141098bda4a87297e2dfab66608a4")
!1214 = !DINamespace(name: "os_str", scope: !1215)
!1215 = !DINamespace(name: "unix", scope: !1216)
!1216 = !DINamespace(name: "sys", scope: !17)
!1217 = !{!1218}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1213, file: !2, baseType: !1219, size: 192, align: 64)
!1219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !1220, file: !2, size: 192, align: 64, elements: !1221, templateParams: !1236, identifier: "8763a7d1bc15d975f03494a2c65f5d4d")
!1220 = !DINamespace(name: "vec", scope: !223)
!1221 = !{!1222, !1238}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1219, file: !2, baseType: !1223, size: 128, align: 64)
!1223 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !222, file: !2, size: 128, align: 64, elements: !1224, templateParams: !1236, identifier: "9354fd3e3c024fba791a9332d2dedcbe")
!1224 = !{!1225, !1232, !1233}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1223, file: !2, baseType: !1226, size: 64, align: 64)
!1226 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !1227, file: !2, size: 64, align: 64, elements: !1228, templateParams: !343, identifier: "4929ea6f5129f45bbb6680fb17ecf7e")
!1227 = !DINamespace(name: "unique", scope: !260)
!1228 = !{!1229, !1230}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1226, file: !2, baseType: !339, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1226, file: !2, baseType: !1231, align: 8)
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !343, identifier: "c93b3b0386f64597e494bf59040db53")
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1223, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1223, file: !2, baseType: !1234, align: 8)
!1234 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !1235, file: !2, align: 8, elements: !23, identifier: "876a5b60ae7e002a42831ead68b26880")
!1235 = !DINamespace(name: "alloc", scope: !223)
!1236 = !{!344, !1237}
!1237 = !DITemplateTypeParameter(name: "A", type: !1234)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1219, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1239 = !DITemplateTypeParameter(name: "V", type: !1240)
!1240 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::ffi::os_str::OsString>", scope: !39, file: !2, size: 192, align: 64, elements: !1241, templateParams: !23, identifier: "bcfb22c8cd945c329ad1101f7eadba2")
!1241 = !{!1242}
!1242 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1240, file: !2, size: 192, align: 64, elements: !1243, templateParams: !23, identifier: "9508fa6d2420e9d0e281f9d1c8c3c376", discriminator: !1252)
!1243 = !{!1244, !1248}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1242, file: !2, baseType: !1245, size: 192, align: 64, extraData: i64 0)
!1245 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1240, file: !2, size: 192, align: 64, elements: !23, templateParams: !1246, identifier: "8ffac229606ddd08408a3528cb2cf88b")
!1246 = !{!1247}
!1247 = !DITemplateTypeParameter(name: "T", type: !1208)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1242, file: !2, baseType: !1249, size: 192, align: 64)
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1240, file: !2, size: 192, align: 64, elements: !1250, templateParams: !1246, identifier: "95a5abbcc180c13385d26cd36bbee2d1")
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1249, file: !2, baseType: !1208, size: 192, align: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, scope: !1240, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!1253 = !{!1254}
!1254 = !DITemplateTypeParameter(name: "T", type: !1190)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1180, file: !2, baseType: !1256, size: 64, align: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1178, file: !2, size: 64, align: 64, elements: !1257, templateParams: !1184, identifier: "bc025fc81f410a7b839517896f440fbd")
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1256, file: !2, baseType: !1186, size: 64, align: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, scope: !1178, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "parent_idx", scope: !1175, file: !2, baseType: !1261, size: 16, align: 16, offset: 4288)
!1261 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u16>", scope: !799, file: !2, size: 16, align: 16, elements: !1262, templateParams: !1269, identifier: "a6d105ae01f6d7e02f3234c18db1793c")
!1262 = !{!1263, !1264}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1261, file: !2, baseType: !7, align: 8)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1261, file: !2, baseType: !1265, size: 16, align: 16)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u16>", scope: !804, file: !2, size: 16, align: 16, elements: !1266, templateParams: !1269, identifier: "e9cfcf19744f5ec75c97bfbdd88d26d8")
!1266 = !{!1267}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1265, file: !2, baseType: !1268, size: 16, align: 16)
!1268 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!1269 = !{!1270}
!1270 = !DITemplateTypeParameter(name: "T", type: !1268)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1175, file: !2, baseType: !1268, size: 16, align: 16, offset: 4304)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1175, file: !2, baseType: !1273, size: 2112, align: 64, offset: 64)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1274, size: 2112, align: 64, elements: !1281)
!1274 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<std::ffi::os_str::OsString>", scope: !799, file: !2, size: 192, align: 64, elements: !1275, templateParams: !1246, identifier: "2215e60bbb0aca32a78972ab40bbd323")
!1275 = !{!1276, !1277}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1274, file: !2, baseType: !7, align: 8)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1274, file: !2, baseType: !1278, size: 192, align: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<std::ffi::os_str::OsString>", scope: !804, file: !2, size: 192, align: 64, elements: !1279, templateParams: !1246, identifier: "a756dcd81af9821beaf34cbceeb87c0")
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1278, file: !2, baseType: !1208, size: 192, align: 64)
!1281 = !{!1282}
!1282 = !DISubrange(count: 11, lowerBound: 0)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !1175, file: !2, baseType: !1284, size: 2112, align: 64, offset: 2176)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 2112, align: 64, elements: !1281)
!1285 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", scope: !799, file: !2, size: 192, align: 64, elements: !1286, templateParams: !1292, identifier: "4e9dfbc6baaed98095030c03604f56d5")
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1285, file: !2, baseType: !7, align: 8)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1285, file: !2, baseType: !1289, size: 192, align: 64)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<std::ffi::os_str::OsString>>", scope: !804, file: !2, size: 192, align: 64, elements: !1290, templateParams: !1292, identifier: "d3f5fded4110586dc5052befe26aa2df")
!1290 = !{!1291}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1289, file: !2, baseType: !1240, size: 192, align: 64)
!1292 = !{!1293}
!1293 = !DITemplateTypeParameter(name: "T", type: !1240)
!1294 = !{!1295}
!1295 = !DITemplateTypeParameter(name: "T", type: !1175)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1166, file: !2, baseType: !1297, align: 8)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !1298, identifier: "86f2999a14ac6fd32288610a10e0235d")
!1298 = !{!1299}
!1299 = !DITemplateTypeParameter(name: "T", type: !1300)
!1300 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)", file: !2, align: 8, elements: !1301, templateParams: !23, identifier: "15a99ef147cc962452a95b3ca412aaea")
!1301 = !{!1302, !1307}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1300, file: !2, baseType: !1303, align: 8)
!1303 = !DICompositeType(tag: DW_TAG_structure_type, name: "Dying", scope: !1304, file: !2, align: 8, elements: !1305, templateParams: !23, identifier: "d55e7455337afddab9c79d8113d94fb7")
!1304 = !DINamespace(name: "marker", scope: !1167)
!1305 = !{!1306}
!1306 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1303, file: !2, align: 8, elements: !23, identifier: "ab527dd7bc31c4f8c939456355e3d9ec")
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1300, file: !2, baseType: !1308, align: 8)
!1308 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeafOrInternal", scope: !1304, file: !2, align: 8, elements: !1309, templateParams: !23, identifier: "44823382d2e546f2fa0179d9140215f2")
!1309 = !{!1310}
!1310 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1308, file: !2, align: 8, elements: !23, identifier: "1c1188ee474ca57f7202a7a2c112d9f2")
!1311 = !{!1312, !1207, !1239, !1313}
!1312 = !DITemplateTypeParameter(name: "BorrowType", type: !1303)
!1313 = !DITemplateTypeParameter(name: "Type", type: !1308)
!1314 = !{!1312, !1207, !1239}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "Edge", scope: !1160, file: !2, baseType: !1316, size: 256, align: 64, extraData: i64 1)
!1316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Edge", scope: !1158, file: !2, size: 256, align: 64, elements: !1317, templateParams: !1314, identifier: "5ab959c9c1134a475bdccec2b2d36ad1")
!1317 = !{!1318}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1316, file: !2, baseType: !1319, size: 192, align: 64, offset: 64)
!1319 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", scope: !1167, file: !2, size: 192, align: 64, elements: !1320, templateParams: !1347, identifier: "c24bf9dc20a3cd5c891a035774b2ed81")
!1320 = !{!1321, !1339, !1340}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1319, file: !2, baseType: !1322, size: 128, align: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", scope: !1167, file: !2, size: 128, align: 64, elements: !1323, templateParams: !1337, identifier: "7eb5161b44efb659f86eb6d8058acf4f")
!1323 = !{!1324, !1325, !1326}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1322, file: !2, baseType: !9, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1322, file: !2, baseType: !1171, size: 64, align: 64, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1322, file: !2, baseType: !1327, align: 8)
!1327 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !1328, identifier: "d09e990ec0d09b94b9a0736616f74571")
!1328 = !{!1329}
!1329 = !DITemplateTypeParameter(name: "T", type: !1330)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)", file: !2, align: 8, elements: !1331, templateParams: !23, identifier: "b5e2a985d00dc3bc608c180c783c976e")
!1331 = !{!1332, !1333}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1330, file: !2, baseType: !1303, align: 8)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1330, file: !2, baseType: !1334, align: 8)
!1334 = !DICompositeType(tag: DW_TAG_structure_type, name: "Leaf", scope: !1304, file: !2, align: 8, elements: !1335, templateParams: !23, identifier: "a1af22ddf6007410bd503fdcb5a8e3e6")
!1335 = !{!1336}
!1336 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1334, file: !2, align: 8, elements: !23, identifier: "38f7e0a3a48fd0863e434683450e0b68")
!1337 = !{!1312, !1207, !1239, !1338}
!1338 = !DITemplateTypeParameter(name: "Type", type: !1334)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !1319, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1319, file: !2, baseType: !1341, align: 8)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::collections::btree::node::marker::Edge>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !1342, identifier: "7f698258de535fab1b7de571c8f3d3fe")
!1342 = !{!1343}
!1343 = !DITemplateTypeParameter(name: "T", type: !1344)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "Edge", scope: !1304, file: !2, align: 8, elements: !1345, templateParams: !23, identifier: "4c3738827c7329f5cd35e8c30ac97")
!1345 = !{!1346}
!1346 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1344, file: !2, align: 8, elements: !23, identifier: "a029cc3b838b95cbaa49d6e86dbf5")
!1347 = !{!1348, !1349}
!1348 = !DITemplateTypeParameter(name: "Node", type: !1322)
!1349 = !DITemplateTypeParameter(name: "Type", type: !1344)
!1350 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1152, file: !2, baseType: !1352, size: 256, align: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1150, file: !2, size: 256, align: 64, elements: !1353, templateParams: !1156, identifier: "da6818d2da75b46482f94540e3d9e380")
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1352, file: !2, baseType: !1158, size: 256, align: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, scope: !1150, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1146, file: !2, baseType: !1150, size: 256, align: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1143, file: !2, baseType: !9, size: 64, align: 64, offset: 512)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1143, file: !2, baseType: !1234, align: 8)
!1359 = !{!1207, !1239, !1237}
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !1138, file: !2, size: 192, align: 64, elements: !1361, templateParams: !1359, identifier: "6ea1146763a3131f44ecf2452a7d84a3")
!1361 = !{!1362, !1393, !1394}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1360, file: !2, baseType: !1363, size: 128, align: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !39, file: !2, size: 128, align: 64, elements: !1364, templateParams: !23, identifier: "56f3f6a75bf569ac360f52f5a477b5fd")
!1364 = !{!1365}
!1365 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1363, file: !2, size: 128, align: 64, elements: !1366, templateParams: !23, identifier: "182539a95f788e4e20a061f02a923cb1", discriminator: !1392)
!1366 = !{!1367, !1388}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1365, file: !2, baseType: !1368, size: 128, align: 64, extraData: i64 0)
!1368 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1363, file: !2, size: 128, align: 64, elements: !23, templateParams: !1369, identifier: "5c7625850fcdf3b131d960e63c04ef5b")
!1369 = !{!1370}
!1370 = !DITemplateTypeParameter(name: "T", type: !1371)
!1371 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", scope: !1167, file: !2, size: 128, align: 64, elements: !1372, templateParams: !1386, identifier: "a438a872eb55472a329b855eb0e4f6bd")
!1372 = !{!1373, !1374, !1375}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1371, file: !2, baseType: !9, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1371, file: !2, baseType: !1171, size: 64, align: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1371, file: !2, baseType: !1376, align: 8)
!1376 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !1377, identifier: "646d418a1b72b9754bf47a26225b159c")
!1377 = !{!1378}
!1378 = !DITemplateTypeParameter(name: "T", type: !1379)
!1379 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)", file: !2, align: 8, elements: !1380, templateParams: !23, identifier: "8e01bed1d3d905b7abe4738aa53831dd")
!1380 = !{!1381, !1385}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1379, file: !2, baseType: !1382, align: 8)
!1382 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !1304, file: !2, align: 8, elements: !1383, templateParams: !23, identifier: "cd7d2bb83bb9a9453f4eff689069aad0")
!1383 = !{!1384}
!1384 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1382, file: !2, align: 8, elements: !23, identifier: "a98a7445f5fd52795649039ec7755f5")
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1379, file: !2, baseType: !1308, align: 8)
!1386 = !{!1387, !1207, !1239, !1313}
!1387 = !DITemplateTypeParameter(name: "BorrowType", type: !1382)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1365, file: !2, baseType: !1389, size: 128, align: 64)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1363, file: !2, size: 128, align: 64, elements: !1390, templateParams: !1369, identifier: "150d0a547fda5b73509d3071eece069")
!1390 = !{!1391}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1389, file: !2, baseType: !1371, size: 128, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, scope: !1363, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1360, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1360, file: !2, baseType: !1395, align: 8)
!1395 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::alloc::Global>", scope: !804, file: !2, align: 8, elements: !1396, templateParams: !1398, identifier: "9ab7762a8a08d28a7395b17cbb8270e9")
!1396 = !{!1397}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1395, file: !2, baseType: !1234, align: 8)
!1398 = !{!1399}
!1399 = !DITemplateTypeParameter(name: "T", type: !1234)
!1400 = !{!1401, !1402, !1409, !1411}
!1401 = !DILocalVariable(name: "self", arg: 1, scope: !1135, file: !1136, line: 1596, type: !1360)
!1402 = !DILocalVariable(name: "me", scope: !1403, file: !1136, line: 1597, type: !1404, align: 8)
!1403 = distinct !DILexicalBlock(scope: !1135, file: !1136, line: 1597, column: 9)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", scope: !804, file: !2, size: 192, align: 64, elements: !1405, templateParams: !1407, identifier: "3b108d4129ce1d9d6e440f7523d8e403")
!1405 = !{!1406}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1404, file: !2, baseType: !1360, size: 192, align: 64)
!1407 = !{!1408}
!1408 = !DITemplateTypeParameter(name: "T", type: !1360)
!1409 = !DILocalVariable(name: "root", scope: !1410, file: !1136, line: 1598, type: !1371, align: 8)
!1410 = distinct !DILexicalBlock(scope: !1403, file: !1136, line: 1598, column: 44)
!1411 = !DILocalVariable(name: "full_range", scope: !1412, file: !1136, line: 1599, type: !1146, align: 8)
!1412 = distinct !DILexicalBlock(scope: !1410, file: !1136, line: 1599, column: 13)
!1413 = !DILocation(line: 1596, column: 18, scope: !1135)
!1414 = !DILocation(line: 1597, column: 13, scope: !1403)
!1415 = !DILocalVariable(name: "value", scope: !1416, file: !1136, line: 1597, type: !1360, align: 8)
!1416 = !DILexicalBlockFile(scope: !1417, file: !1136, discriminator: 0)
!1417 = distinct !DISubprogram(name: "new<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h50d127e0449d26d7E", scope: !1404, file: !1418, line: 70, type: !1419, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !1421)
!1418 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!1404, !1360}
!1421 = !{!1415}
!1422 = !DILocation(line: 1597, column: 22, scope: !1416, inlinedAt: !1423)
!1423 = !DILocation(line: 1597, column: 22, scope: !1135)
!1424 = !DILocation(line: 1599, column: 17, scope: !1412)
!1425 = !DILocalVariable(name: "tmp", scope: !1426, file: !1136, line: 1604, type: !1435, align: 1)
!1426 = !DILexicalBlockFile(scope: !1427, file: !1136, discriminator: 0)
!1427 = distinct !DILexicalBlock(scope: !1428, file: !682, line: 1105, column: 5)
!1428 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17hceebf0c7b107f254E", scope: !260, file: !682, line: 1097, type: !1429, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1432)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1431}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::alloc::Global", baseType: !1234, size: 64, align: 64, dwarfAddressSpace: 0)
!1432 = !{!1433, !1425}
!1433 = !DILocalVariable(name: "src", scope: !1434, file: !1136, line: 1604, type: !1431, align: 8)
!1434 = !DILexicalBlockFile(scope: !1428, file: !1136, discriminator: 0)
!1435 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::alloc::Global>", scope: !799, file: !2, align: 8, elements: !1436, templateParams: !1398, identifier: "aa5dc2cfa1d85f616c8719fd6bf34712")
!1436 = !{!1437, !1438}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1435, file: !2, baseType: !7, align: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1435, file: !2, baseType: !1395, align: 8)
!1439 = !DILocation(line: 1604, column: 33, scope: !1426, inlinedAt: !1440)
!1440 = !DILocation(line: 113, column: 18, scope: !1441, inlinedAt: !1448)
!1441 = distinct !DISubprogram(name: "take<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17h6158025f57c4b9c8E", scope: !1395, file: !1418, line: 110, type: !1442, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1445)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1444}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", baseType: !1395, size: 64, align: 64, dwarfAddressSpace: 0)
!1445 = !{!1446}
!1446 = !DILocalVariable(name: "slot", scope: !1447, file: !1136, line: 1604, type: !1444, align: 8)
!1447 = !DILexicalBlockFile(scope: !1441, file: !1136, discriminator: 0)
!1448 = !DILocation(line: 1604, column: 33, scope: !1412)
!1449 = !DILocalVariable(name: "self", scope: !1450, file: !1136, line: 1604, type: !1435, align: 1)
!1450 = !DILexicalBlockFile(scope: !1451, file: !1136, discriminator: 0)
!1451 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h28d78f971b6a73e8E", scope: !1435, file: !1452, line: 629, type: !1453, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1455)
!1452 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !1435, !917}
!1455 = !{!1449}
!1456 = !DILocation(line: 1604, column: 33, scope: !1450, inlinedAt: !1457)
!1457 = !DILocation(line: 1114, column: 9, scope: !1427, inlinedAt: !1440)
!1458 = !DILocalVariable(name: "slot", scope: !1459, file: !1136, line: 1604, type: !1395, align: 1)
!1459 = !DILexicalBlockFile(scope: !1460, file: !1136, discriminator: 0)
!1460 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hc6b55e47bcc3b97aE", scope: !1395, file: !1418, line: 88, type: !1461, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1463)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{null, !1395}
!1463 = !{!1458}
!1464 = !DILocation(line: 1604, column: 33, scope: !1459, inlinedAt: !1465)
!1465 = !DILocation(line: 634, column: 13, scope: !1451, inlinedAt: !1457)
!1466 = !DILocalVariable(name: "tmp", scope: !1467, file: !1136, line: 1610, type: !1435, align: 1)
!1467 = !DILexicalBlockFile(scope: !1468, file: !1136, discriminator: 0)
!1468 = distinct !DILexicalBlock(scope: !1469, file: !682, line: 1105, column: 5)
!1469 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17hceebf0c7b107f254E", scope: !260, file: !682, line: 1097, type: !1429, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1470)
!1470 = !{!1471, !1466}
!1471 = !DILocalVariable(name: "src", scope: !1472, file: !1136, line: 1610, type: !1431, align: 8)
!1472 = !DILexicalBlockFile(scope: !1469, file: !1136, discriminator: 0)
!1473 = !DILocation(line: 1610, column: 33, scope: !1467, inlinedAt: !1474)
!1474 = !DILocation(line: 113, column: 18, scope: !1475, inlinedAt: !1479)
!1475 = distinct !DISubprogram(name: "take<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17h6158025f57c4b9c8E", scope: !1395, file: !1418, line: 110, type: !1442, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1476)
!1476 = !{!1477}
!1477 = !DILocalVariable(name: "slot", scope: !1478, file: !1136, line: 1610, type: !1444, align: 8)
!1478 = !DILexicalBlockFile(scope: !1475, file: !1136, discriminator: 0)
!1479 = !DILocation(line: 1610, column: 33, scope: !1403)
!1480 = !DILocalVariable(name: "self", scope: !1481, file: !1136, line: 1610, type: !1435, align: 1)
!1481 = !DILexicalBlockFile(scope: !1482, file: !1136, discriminator: 0)
!1482 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h28d78f971b6a73e8E", scope: !1435, file: !1452, line: 629, type: !1453, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1483)
!1483 = !{!1480}
!1484 = !DILocation(line: 1610, column: 33, scope: !1481, inlinedAt: !1485)
!1485 = !DILocation(line: 1114, column: 9, scope: !1468, inlinedAt: !1474)
!1486 = !DILocalVariable(name: "slot", scope: !1487, file: !1136, line: 1610, type: !1395, align: 1)
!1487 = !DILexicalBlockFile(scope: !1488, file: !1136, discriminator: 0)
!1488 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hc6b55e47bcc3b97aE", scope: !1395, file: !1418, line: 88, type: !1461, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1489)
!1489 = !{!1486}
!1490 = !DILocation(line: 1610, column: 33, scope: !1487, inlinedAt: !1491)
!1491 = !DILocation(line: 634, column: 13, scope: !1482, inlinedAt: !1485)
!1492 = !DILocation(line: 1597, column: 40, scope: !1135)
!1493 = !DILocation(line: 1598, column: 29, scope: !1410)
!1494 = !DILocalVariable(name: "self", scope: !1495, file: !1136, line: 1598, type: !1501, align: 8)
!1495 = !DILexicalBlockFile(scope: !1496, file: !1136, discriminator: 0)
!1496 = distinct !DISubprogram(name: "deref_mut<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hec37c363e2a4b986E", scope: !1497, file: !1418, line: 162, type: !1498, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !1502)
!1497 = !DINamespace(name: "{impl#3}", scope: !804)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1360, size: 64, align: 64, dwarfAddressSpace: 0)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", baseType: !1404, size: 64, align: 64, dwarfAddressSpace: 0)
!1502 = !{!1494}
!1503 = !DILocation(line: 1598, column: 29, scope: !1495, inlinedAt: !1493)
!1504 = !DILocalVariable(name: "self", scope: !1505, file: !1136, line: 1598, type: !1510, align: 8)
!1505 = !DILexicalBlockFile(scope: !1506, file: !1136, discriminator: 0)
!1506 = distinct !DISubprogram(name: "take<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h3a55451ca319d9b0E", scope: !1363, file: !1507, line: 1574, type: !1508, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1369, retainedNodes: !1511)
!1507 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "0851600740c598ff94f46e105ea98a6f")
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!1363, !1510}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!1511 = !{!1504}
!1512 = !DILocation(line: 1598, column: 29, scope: !1505, inlinedAt: !1493)
!1513 = !DILocation(line: 1598, column: 16, scope: !1410)
!1514 = !DILocation(line: 1598, column: 21, scope: !1410)
!1515 = !DILocation(line: 1599, column: 30, scope: !1410)
!1516 = !DILocation(line: 1608, column: 24, scope: !1403)
!1517 = !DILocation(line: 1610, column: 57, scope: !1403)
!1518 = !DILocalVariable(name: "self", scope: !1519, file: !1136, line: 1610, type: !1501, align: 8)
!1519 = !DILexicalBlockFile(scope: !1520, file: !1136, discriminator: 0)
!1520 = distinct !DISubprogram(name: "deref_mut<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hec37c363e2a4b986E", scope: !1497, file: !1418, line: 162, type: !1498, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !1521)
!1521 = !{!1518}
!1522 = !DILocation(line: 1610, column: 57, scope: !1519, inlinedAt: !1517)
!1523 = !DILocation(line: 1610, column: 52, scope: !1403)
!1524 = !DILocation(line: 1610, column: 33, scope: !1478, inlinedAt: !1479)
!1525 = !DILocation(line: 1610, column: 33, scope: !1472, inlinedAt: !1474)
!1526 = !DILocation(line: 1610, column: 33, scope: !1527, inlinedAt: !1529)
!1527 = !DILexicalBlockFile(scope: !1528, file: !1136, discriminator: 0)
!1528 = distinct !DISubprogram(name: "uninit<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h3f74ad3fc1be4053E", scope: !1435, file: !1452, line: 320, type: !21, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !23)
!1529 = !DILocation(line: 1105, column: 19, scope: !1469, inlinedAt: !1474)
!1530 = !DILocalVariable(name: "self", scope: !1531, file: !1136, line: 1610, type: !1536, align: 8)
!1531 = !DILexicalBlockFile(scope: !1532, file: !1136, discriminator: 0)
!1532 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9af952779b6888efE", scope: !1435, file: !1452, line: 574, type: !1533, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1537)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!1535, !1536}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::alloc::Global", baseType: !1234, size: 64, align: 64, dwarfAddressSpace: 0)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", baseType: !1435, size: 64, align: 64, dwarfAddressSpace: 0)
!1537 = !{!1530}
!1538 = !DILocation(line: 1610, column: 33, scope: !1531, inlinedAt: !1539)
!1539 = !DILocation(line: 1113, column: 34, scope: !1468, inlinedAt: !1474)
!1540 = !DILocation(line: 1607, column: 13, scope: !1403)
!1541 = !DILocation(line: 1598, column: 9, scope: !1403)
!1542 = !DILocation(line: 1613, column: 6, scope: !1135)
!1543 = !DILocation(line: 1602, column: 24, scope: !1412)
!1544 = !DILocation(line: 1603, column: 25, scope: !1412)
!1545 = !DILocalVariable(name: "self", scope: !1546, file: !1136, line: 1603, type: !1552, align: 8)
!1546 = !DILexicalBlockFile(scope: !1547, file: !1136, discriminator: 0)
!1547 = distinct !DISubprogram(name: "deref<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h69c5b8d1a701fa12E", scope: !1548, file: !1418, line: 153, type: !1549, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !1553)
!1548 = !DINamespace(name: "{impl#2}", scope: !804)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1360, size: 64, align: 64, dwarfAddressSpace: 0)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", baseType: !1404, size: 64, align: 64, dwarfAddressSpace: 0)
!1553 = !{!1545}
!1554 = !DILocation(line: 1603, column: 25, scope: !1546, inlinedAt: !1544)
!1555 = !DILocation(line: 1604, column: 57, scope: !1412)
!1556 = !DILocalVariable(name: "self", scope: !1557, file: !1136, line: 1604, type: !1501, align: 8)
!1557 = !DILexicalBlockFile(scope: !1558, file: !1136, discriminator: 0)
!1558 = distinct !DISubprogram(name: "deref_mut<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hec37c363e2a4b986E", scope: !1497, file: !1418, line: 162, type: !1498, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !1559)
!1559 = !{!1556}
!1560 = !DILocation(line: 1604, column: 57, scope: !1557, inlinedAt: !1555)
!1561 = !DILocation(line: 1604, column: 52, scope: !1412)
!1562 = !DILocation(line: 1604, column: 33, scope: !1447, inlinedAt: !1448)
!1563 = !DILocation(line: 1604, column: 33, scope: !1434, inlinedAt: !1440)
!1564 = !DILocation(line: 1604, column: 33, scope: !1565, inlinedAt: !1567)
!1565 = !DILexicalBlockFile(scope: !1566, file: !1136, discriminator: 0)
!1566 = distinct !DISubprogram(name: "uninit<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h3f74ad3fc1be4053E", scope: !1435, file: !1452, line: 320, type: !21, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !23)
!1567 = !DILocation(line: 1105, column: 19, scope: !1428, inlinedAt: !1440)
!1568 = !DILocalVariable(name: "self", scope: !1569, file: !1136, line: 1604, type: !1536, align: 8)
!1569 = !DILexicalBlockFile(scope: !1570, file: !1136, discriminator: 0)
!1570 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9af952779b6888efE", scope: !1435, file: !1452, line: 574, type: !1533, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !1571)
!1571 = !{!1568}
!1572 = !DILocation(line: 1604, column: 33, scope: !1569, inlinedAt: !1573)
!1573 = !DILocation(line: 1113, column: 34, scope: !1427, inlinedAt: !1440)
!1574 = !DILocation(line: 1601, column: 13, scope: !1412)
!1575 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1579)
!1576 = !DINamespace(name: "{impl#16}", scope: !259)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!339, !1226}
!1579 = !{!1580}
!1580 = !DILocalVariable(name: "unique", arg: 1, scope: !1575, file: !445, line: 770, type: !1226)
!1581 = !DILocation(line: 770, column: 13, scope: !1575)
!1582 = !DILocation(line: 773, column: 41, scope: !1575)
!1583 = !DILocalVariable(name: "self", scope: !1584, file: !445, line: 773, type: !1226, align: 8)
!1584 = !DILexicalBlockFile(scope: !1585, file: !445, discriminator: 0)
!1585 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1589)
!1586 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!448, !1226}
!1589 = !{!1583}
!1590 = !DILocation(line: 773, column: 41, scope: !1584, inlinedAt: !1582)
!1591 = !DILocalVariable(name: "self", scope: !1592, file: !445, line: 773, type: !339, align: 8)
!1592 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1593)
!1593 = !{!1591}
!1594 = !DILocation(line: 773, column: 41, scope: !1592, inlinedAt: !1595)
!1595 = !DILocation(line: 104, column: 9, scope: !1585, inlinedAt: !1582)
!1596 = !DILocalVariable(name: "ptr", scope: !1597, file: !445, line: 773, type: !448, align: 8)
!1597 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1600)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!339, !448}
!1600 = !{!1596}
!1601 = !DILocation(line: 773, column: 18, scope: !1597, inlinedAt: !1602)
!1602 = !DILocation(line: 773, column: 18, scope: !1575)
!1603 = !DILocation(line: 774, column: 6, scope: !1575)
!1604 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hee871011a5f2812eE", scope: !1606, file: !1605, line: 116, type: !1607, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !1633)
!1605 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!1606 = !DINamespace(name: "{impl#1}", scope: !1140)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!1609, !1612}
!1609 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !1140, file: !2, size: 128, align: 64, elements: !1610, templateParams: !23, identifier: "4a3ee9a904fff4107e3178798aff45ad")
!1610 = !{!1611}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1609, file: !2, baseType: !1612, size: 128, align: 64)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !1140, file: !2, size: 128, align: 64, elements: !1613, templateParams: !23, identifier: "784b45bddf30f6f3a7537dbec62ac442")
!1613 = !{!1614}
!1614 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1612, file: !2, size: 128, align: 64, elements: !1615, templateParams: !23, identifier: "229e5f6648e4fee8e64f2a10d22b2c3c", discriminator: !1632)
!1615 = !{!1616, !1618}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !1614, file: !2, baseType: !1617, size: 128, align: 64, extraData: i64 0)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !1612, file: !2, size: 128, align: 64, elements: !23, identifier: "e45151ab157591bf62e39673907ebcaf")
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !1614, file: !2, baseType: !1619, size: 128, align: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1612, file: !2, size: 128, align: 64, elements: !1620, templateParams: !23, identifier: "6c9c243b1d4fa1e8ae489423f4d6e73")
!1620 = !{!1621, !1631}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1619, file: !2, baseType: !1622, size: 128, align: 64)
!1622 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !1623, file: !2, size: 128, align: 64, elements: !1625, templateParams: !23, identifier: "5dec4dbe9669c628ec37ecb63ce77828")
!1623 = !DINamespace(name: "layout", scope: !1624)
!1624 = !DINamespace(name: "alloc", scope: !40)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1622, file: !2, baseType: !9, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1622, file: !2, baseType: !1628, size: 64, align: 64, offset: 64)
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !78, file: !2, size: 64, align: 64, elements: !1629, templateParams: !23, identifier: "b0b159fe5bbc2fcc69e3933af20e4156")
!1629 = !{!1630}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1628, file: !2, baseType: !77, size: 64, align: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !1619, file: !2, baseType: !7, align: 8)
!1632 = !DIDerivedType(tag: DW_TAG_member, scope: !1612, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1633 = !{!1634}
!1634 = !DILocalVariable(name: "kind", arg: 1, scope: !1604, file: !1605, line: 116, type: !1612)
!1635 = !DILocation(line: 116, column: 13, scope: !1604)
!1636 = !DILocation(line: 117, column: 9, scope: !1604)
!1637 = !DILocation(line: 118, column: 6, scope: !1604)
!1638 = !{i64 0, i64 -9223372036854775807}
!1639 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hefa5c5f8ce8f522aE", scope: !1641, file: !1640, line: 83, type: !1643, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !1646)
!1640 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "f621a160b67dfe2bb567901fc380da7e")
!1641 = !DINamespace(name: "{impl#4}", scope: !1642)
!1642 = !DINamespace(name: "spec_extend", scope: !1220)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{null, !1645, !336}
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !1219, size: 64, align: 64, dwarfAddressSpace: 0)
!1646 = !{!1647, !1648, !1649}
!1647 = !DILocalVariable(name: "self", arg: 1, scope: !1639, file: !1640, line: 83, type: !1645)
!1648 = !DILocalVariable(name: "iterator", arg: 2, scope: !1639, file: !1640, line: 83, type: !336)
!1649 = !DILocalVariable(name: "slice", scope: !1650, file: !1640, line: 84, type: !892, align: 8)
!1650 = distinct !DILexicalBlock(scope: !1639, file: !1640, line: 84, column: 9)
!1651 = !DILocation(line: 83, column: 20, scope: !1639)
!1652 = !DILocation(line: 83, column: 31, scope: !1639)
!1653 = !DILocation(line: 84, column: 21, scope: !1639)
!1654 = !DILocation(line: 84, column: 13, scope: !1650)
!1655 = !DILocation(line: 85, column: 18, scope: !1650)
!1656 = !DILocation(line: 86, column: 6, scope: !1639)
!1657 = distinct !DISubprogram(name: "drop<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c56c1d8ecc9f7c5E", scope: !1658, file: !1136, line: 1622, type: !1661, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !1668)
!1658 = !DINamespace(name: "{impl#0}", scope: !1659)
!1659 = !DINamespace(name: "drop", scope: !1660)
!1660 = !DINamespace(name: "{impl#30}", scope: !1138)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !1663}
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::map::{impl#30}::drop::DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1664, size: 64, align: 64, dwarfAddressSpace: 0)
!1664 = !DICompositeType(tag: DW_TAG_structure_type, name: "DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !1659, file: !2, size: 64, align: 64, elements: !1665, templateParams: !1359, identifier: "5ddc7610b3dbf2cf30ccce594a9e9be5")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1664, file: !2, baseType: !1667, size: 64, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1143, size: 64, align: 64, dwarfAddressSpace: 0)
!1668 = !{!1669, !1670}
!1669 = !DILocalVariable(name: "self", arg: 1, scope: !1657, file: !1136, line: 1622, type: !1663)
!1670 = !DILocalVariable(name: "kv", scope: !1671, file: !1136, line: 1625, type: !1672, align: 8)
!1671 = distinct !DILexicalBlock(scope: !1657, file: !1136, line: 1625, column: 58)
!1672 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", scope: !1167, file: !2, size: 192, align: 64, elements: !1673, templateParams: !1683, identifier: "85c379a6fa6779e62834ba4db3e273db")
!1673 = !{!1674, !1675, !1676}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1672, file: !2, baseType: !1166, size: 128, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !1672, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1672, file: !2, baseType: !1677, align: 8)
!1677 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::collections::btree::node::marker::KV>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !1678, identifier: "8658902dd810431258effa8f15ce8f97")
!1678 = !{!1679}
!1679 = !DITemplateTypeParameter(name: "T", type: !1680)
!1680 = !DICompositeType(tag: DW_TAG_structure_type, name: "KV", scope: !1304, file: !2, align: 8, elements: !1681, templateParams: !23, identifier: "bf577b81bd2374a53381562f85f4d23e")
!1681 = !{!1682}
!1682 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1680, file: !2, align: 8, elements: !23, identifier: "8a86ed383da7337a74cef3ebc6cb19b")
!1683 = !{!1684, !1685}
!1684 = !DITemplateTypeParameter(name: "Node", type: !1166)
!1685 = !DITemplateTypeParameter(name: "Type", type: !1680)
!1686 = !DILocation(line: 1622, column: 21, scope: !1657)
!1687 = !DILocation(line: 1625, column: 32, scope: !1671)
!1688 = !DILocation(line: 1625, column: 17, scope: !1657)
!1689 = !DILocation(line: 1625, column: 38, scope: !1671)
!1690 = !DILocation(line: 1625, column: 27, scope: !1671)
!1691 = !DILocation(line: 1627, column: 30, scope: !1671)
!1692 = !DILocation(line: 1629, column: 14, scope: !1657)
!1693 = distinct !DISubprogram(name: "type_id<&str>", linkageName: "_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hf7f2343961048f8cE", scope: !1695, file: !1694, line: 204, type: !1697, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !1702)
!1694 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/any.rs", directory: "", checksumkind: CSK_MD5, checksum: "3466264e23ce815302b7870772b55956")
!1695 = !DINamespace(name: "{impl#0}", scope: !1696)
!1696 = !DINamespace(name: "any", scope: !40)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!1699, !270}
!1699 = !DICompositeType(tag: DW_TAG_structure_type, name: "TypeId", scope: !1696, file: !2, size: 64, align: 64, elements: !1700, templateParams: !23, identifier: "fd37e7aff09bb71e9ebe625b99ecde05")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1699, file: !2, baseType: !59, size: 64, align: 64)
!1702 = !{!1703}
!1703 = !DILocalVariable(name: "self", arg: 1, scope: !1693, file: !1694, line: 204, type: !270)
!1704 = !DILocation(line: 204, column: 16, scope: !1693)
!1705 = !DILocation(line: 205, column: 9, scope: !1693)
!1706 = !DILocation(line: 206, column: 6, scope: !1693)
!1707 = distinct !DISubprogram(name: "__rust_end_short_backtrace<std::panicking::begin_panic::{closure_env#0}<&str>, !>", linkageName: "_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hde2104638b323179E", scope: !1709, file: !1708, line: 134, type: !1711, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1722, retainedNodes: !1717)
!1708 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!1709 = !DINamespace(name: "backtrace", scope: !1710)
!1710 = !DINamespace(name: "sys_common", scope: !17)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{null, !1713}
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&str>", scope: !34, file: !2, size: 192, align: 64, elements: !1714, templateParams: !23, identifier: "31c6d4304fbfdb1ac798f542a99b5088")
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !1713, file: !2, baseType: !48, size: 128, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1713, file: !2, baseType: !917, size: 64, align: 64, offset: 128)
!1717 = !{!1718, !1719}
!1718 = !DILocalVariable(name: "f", arg: 1, scope: !1707, file: !1708, line: 134, type: !1713)
!1719 = !DILocalVariable(name: "result", scope: !1720, file: !1708, line: 138, type: !1721, align: 1)
!1720 = distinct !DILexicalBlock(scope: !1707, file: !1708, line: 138, column: 5)
!1721 = !DIBasicType(name: "!", encoding: DW_ATE_unsigned)
!1722 = !{!1723, !1724}
!1723 = !DITemplateTypeParameter(name: "F", type: !1713)
!1724 = !DITemplateTypeParameter(name: "T", type: !1721)
!1725 = !DILocation(line: 138, column: 9, scope: !1720)
!1726 = !DILocation(line: 134, column: 41, scope: !1707)
!1727 = !DILocalVariable(name: "dummy", scope: !1728, file: !1708, line: 141, type: !7, align: 1)
!1728 = !DILexicalBlockFile(scope: !1729, file: !1708, discriminator: 0)
!1729 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17h8d0405639e8c9374E", scope: !1731, file: !1730, line: 224, type: !1732, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1734)
!1730 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "fa192aef52724158854d1e5ce88991e5")
!1731 = !DINamespace(name: "hint", scope: !40)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{null, !7}
!1734 = !{!1727}
!1735 = !DILocation(line: 141, column: 5, scope: !1728, inlinedAt: !1736)
!1736 = !DILocation(line: 141, column: 5, scope: !1720)
!1737 = !DILocation(line: 138, column: 18, scope: !1707)
!1738 = !{i32 3325069}
!1739 = !DILocation(line: 144, column: 2, scope: !1707)
!1740 = !DILocation(line: 144, column: 1, scope: !1707)
!1741 = !DILocation(line: 134, column: 1, scope: !1707)
!1742 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<fn(), ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hbb2e76f8d8ac95d7E", scope: !1709, file: !1708, line: 118, type: !1743, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1749, retainedNodes: !1745)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !20}
!1745 = !{!1746, !1747}
!1746 = !DILocalVariable(name: "f", arg: 1, scope: !1742, file: !1708, line: 118, type: !20)
!1747 = !DILocalVariable(name: "result", scope: !1748, file: !1708, line: 122, type: !7, align: 1)
!1748 = distinct !DILexicalBlock(scope: !1742, file: !1708, line: 122, column: 5)
!1749 = !{!1750, !1037}
!1750 = !DITemplateTypeParameter(name: "F", type: !20)
!1751 = !DILocation(line: 122, column: 9, scope: !1748)
!1752 = !DILocation(line: 118, column: 43, scope: !1742)
!1753 = !DILocalVariable(name: "dummy", scope: !1754, file: !1708, line: 125, type: !7, align: 1)
!1754 = !DILexicalBlockFile(scope: !1755, file: !1708, discriminator: 0)
!1755 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17h8d0405639e8c9374E", scope: !1731, file: !1730, line: 224, type: !1732, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1756)
!1756 = !{!1753}
!1757 = !DILocation(line: 125, column: 5, scope: !1754, inlinedAt: !1758)
!1758 = !DILocation(line: 125, column: 5, scope: !1748)
!1759 = !DILocation(line: 122, column: 18, scope: !1742)
!1760 = !DILocation(line: 128, column: 2, scope: !1742)
!1761 = !DILocation(line: 128, column: 1, scope: !1742)
!1762 = !DILocation(line: 118, column: 1, scope: !1742)
!1763 = distinct !DISubprogram(name: "decode_repr<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr17h455b74023f42e153E", scope: !1765, file: !1764, line: 237, type: !1766, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1832, retainedNodes: !1818)
!1764 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/io/error/repr_bitpacked.rs", directory: "", checksumkind: CSK_MD5, checksum: "6ff0180874ca3db031cba720e0f2c946")
!1765 = !DINamespace(name: "repr_bitpacked", scope: !146)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{!1768, !1812, !1815}
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", scope: !146, file: !2, size: 128, align: 64, elements: !1769, templateParams: !23, identifier: "4e9d62219208f28c69d498232b6a39a7")
!1769 = !{!1770}
!1770 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1768, file: !2, size: 128, align: 64, elements: !1771, templateParams: !23, identifier: "4ff4860cd09ba202519770a834f08c6", discriminator: !1811)
!1771 = !{!1772, !1794, !1798, !1807}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "Os", scope: !1770, file: !2, baseType: !1773, size: 128, align: 64, extraData: i64 0)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "Os", scope: !1768, file: !2, size: 128, align: 64, elements: !1774, templateParams: !1777, identifier: "f1967eb0aa257833e7da4e726a42cbf0")
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1773, file: !2, baseType: !1776, size: 32, align: 32, offset: 32)
!1776 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!1777 = !{!1778}
!1778 = !DITemplateTypeParameter(name: "C", type: !1779)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !1780, size: 64, align: 64, dwarfAddressSpace: 0)
!1780 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !146, file: !2, size: 192, align: 64, elements: !1781, templateParams: !23, identifier: "43bb1ddfbbbd5357929fa5e7fcf3f45b")
!1781 = !{!1782, !1783}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1780, file: !2, baseType: !145, size: 8, align: 8, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1780, file: !2, baseType: !1784, size: 128, align: 64)
!1784 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !1785, templateParams: !23, identifier: "7ba32488f5a5ccbb551f02550c337f6c")
!1785 = !{!1786, !1789}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1784, file: !2, baseType: !1787, size: 64, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64, dwarfAddressSpace: 0)
!1788 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !23, identifier: "ecdc1cd72c10c8a3b8233864b3cf6972")
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1784, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !1791, size: 64, align: 64, dwarfAddressSpace: 0)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !1792)
!1792 = !{!1793}
!1793 = !DISubrange(count: 3, lowerBound: 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "Simple", scope: !1770, file: !2, baseType: !1795, size: 128, align: 64, extraData: i64 1)
!1795 = !DICompositeType(tag: DW_TAG_structure_type, name: "Simple", scope: !1768, file: !2, size: 128, align: 64, elements: !1796, templateParams: !1777, identifier: "cd565106f250deeaf81c31f699aff516")
!1796 = !{!1797}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1795, file: !2, baseType: !145, size: 8, align: 8, offset: 8)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "SimpleMessage", scope: !1770, file: !2, baseType: !1799, size: 128, align: 64, extraData: i64 2)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !1768, file: !2, size: 128, align: 64, elements: !1800, templateParams: !1777, identifier: "7520bc529a65310efa9135426541a647")
!1800 = !{!1801}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1799, file: !2, baseType: !1802, size: 64, align: 64, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::SimpleMessage", baseType: !1803, size: 64, align: 64, dwarfAddressSpace: 0)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !146, file: !2, size: 192, align: 64, elements: !1804, templateParams: !23, identifier: "fd534cc7a6dd804a84f964fd2ac2736a")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1803, file: !2, baseType: !145, size: 8, align: 8, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1803, file: !2, baseType: !48, size: 128, align: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "Custom", scope: !1770, file: !2, baseType: !1808, size: 128, align: 64, extraData: i64 3)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !1768, file: !2, size: 128, align: 64, elements: !1809, templateParams: !1777, identifier: "874af41bfaf6f9f8eb98a98232ba696")
!1809 = !{!1810}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1808, file: !2, baseType: !1779, size: 64, align: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, scope: !1768, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !259, file: !2, size: 64, align: 64, elements: !1813, templateParams: !1036, identifier: "4e101f063240e56be3c7c9224266b0fe")
!1813 = !{!1814}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1812, file: !2, baseType: !6, size: 64, align: 64)
!1815 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1816, file: !2, align: 8, elements: !23, identifier: "426a263cafd27fc5570601642a03cbdc")
!1816 = !DINamespace(name: "drop", scope: !1817)
!1817 = !DINamespace(name: "{impl#3}", scope: !1765)
!1818 = !{!1819, !1820, !1821, !1823, !1825, !1827, !1829}
!1819 = !DILocalVariable(name: "ptr", arg: 1, scope: !1763, file: !1764, line: 237, type: !1812)
!1820 = !DILocalVariable(name: "make_custom", arg: 2, scope: !1763, file: !1764, line: 237, type: !1815)
!1821 = !DILocalVariable(name: "bits", scope: !1822, file: !1764, line: 241, type: !9, align: 8)
!1822 = distinct !DILexicalBlock(scope: !1763, file: !1764, line: 241, column: 5)
!1823 = !DILocalVariable(name: "code", scope: !1824, file: !1764, line: 244, type: !1776, align: 4)
!1824 = distinct !DILexicalBlock(scope: !1822, file: !1764, line: 244, column: 13)
!1825 = !DILocalVariable(name: "kind_bits", scope: !1826, file: !1764, line: 248, type: !327, align: 4)
!1826 = distinct !DILexicalBlock(scope: !1822, file: !1764, line: 248, column: 13)
!1827 = !DILocalVariable(name: "kind", scope: !1828, file: !1764, line: 249, type: !145, align: 1)
!1828 = distinct !DILexicalBlock(scope: !1826, file: !1764, line: 249, column: 13)
!1829 = !DILocalVariable(name: "custom", scope: !1830, file: !1764, line: 266, type: !1831, align: 8)
!1830 = distinct !DILexicalBlock(scope: !1822, file: !1764, line: 266, column: 13)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Custom", baseType: !1780, size: 64, align: 64, dwarfAddressSpace: 0)
!1832 = !{!1778, !1833}
!1833 = !DITemplateTypeParameter(name: "F", type: !1815)
!1834 = !DILocation(line: 237, column: 29, scope: !1763)
!1835 = !DILocation(line: 237, column: 47, scope: !1763)
!1836 = !DILocation(line: 241, column: 9, scope: !1822)
!1837 = !DILocation(line: 249, column: 17, scope: !1828)
!1838 = !DILocalVariable(name: "self", scope: !1839, file: !1764, line: 249, type: !1841, align: 1)
!1839 = !DILexicalBlockFile(scope: !1840, file: !1764, discriminator: 0)
!1840 = distinct !DISubprogram(name: "unwrap_or_else<std::io::error::ErrorKind, std::io::error::repr_bitpacked::decode_repr::{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h96cfb801476dda3cE", scope: !1841, file: !1507, line: 818, type: !1854, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1865, retainedNodes: !1860)
!1841 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::io::error::ErrorKind>", scope: !39, file: !2, size: 8, align: 8, elements: !1842, templateParams: !23, identifier: "904767d6538badca91bae657cbdb7d9b")
!1842 = !{!1843}
!1843 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1841, file: !2, size: 8, align: 8, elements: !1844, templateParams: !23, identifier: "2c185048ce8cbb632ee28b46772c5606", discriminator: !1853)
!1844 = !{!1845, !1849}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1843, file: !2, baseType: !1846, size: 8, align: 8, extraData: i64 41)
!1846 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1841, file: !2, size: 8, align: 8, elements: !23, templateParams: !1847, identifier: "9faa5035d13017dc34c4040af3a929e")
!1847 = !{!1848}
!1848 = !DITemplateTypeParameter(name: "T", type: !145)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1843, file: !2, baseType: !1850, size: 8, align: 8)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1841, file: !2, size: 8, align: 8, elements: !1851, templateParams: !1847, identifier: "e05b97ad07e674616e1f886ae41b1eff")
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1850, file: !2, baseType: !145, size: 8, align: 8)
!1853 = !DIDerivedType(tag: DW_TAG_member, scope: !1841, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!145, !1841, !1856}
!1856 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", scope: !1857, file: !2, size: 64, align: 64, elements: !1858, templateParams: !23, identifier: "5e07f42f816e53d8d4a6456c3fa65cd")
!1857 = !DINamespace(name: "decode_repr", scope: !1765)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__bits", scope: !1856, file: !2, baseType: !387, size: 64, align: 64)
!1860 = !{!1838, !1861, !1862}
!1861 = !DILocalVariable(name: "f", scope: !1839, file: !1764, line: 249, type: !1856, align: 8)
!1862 = !DILocalVariable(name: "x", scope: !1863, file: !1764, line: 249, type: !145, align: 1)
!1863 = !DILexicalBlockFile(scope: !1864, file: !1764, discriminator: 0)
!1864 = distinct !DILexicalBlock(scope: !1840, file: !1507, line: 824, column: 13)
!1865 = !{!1848, !1866}
!1866 = !DITemplateTypeParameter(name: "F", type: !1856)
!1867 = !DILocation(line: 249, column: 24, scope: !1839, inlinedAt: !1868)
!1868 = !DILocation(line: 249, column: 24, scope: !1826)
!1869 = !DILocalVariable(name: "self", scope: !1870, file: !1764, line: 261, type: !1872, align: 8)
!1870 = !DILexicalBlockFile(scope: !1871, file: !1764, discriminator: 0)
!1871 = distinct !DISubprogram(name: "as_ptr<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2cbb4f5f1b7ada3E", scope: !1872, file: !445, line: 330, type: !1878, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1876, retainedNodes: !1881)
!1872 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::SimpleMessage>", scope: !259, file: !2, size: 64, align: 64, elements: !1873, templateParams: !1876, identifier: "1599009cc11dac34a1cc59f1bf9d9b")
!1873 = !{!1874}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1872, file: !2, baseType: !1875, size: 64, align: 64)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::SimpleMessage", baseType: !1803, size: 64, align: 64, dwarfAddressSpace: 0)
!1876 = !{!1877}
!1877 = !DITemplateTypeParameter(name: "T", type: !1803)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!1880, !1872}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::SimpleMessage", baseType: !1803, size: 64, align: 64, dwarfAddressSpace: 0)
!1881 = !{!1869}
!1882 = !DILocation(line: 261, column: 58, scope: !1870, inlinedAt: !1883)
!1883 = !DILocation(line: 261, column: 58, scope: !1822)
!1884 = !DILocation(line: 241, column: 9, scope: !1763)
!1885 = !DILocation(line: 241, column: 16, scope: !1763)
!1886 = !DILocalVariable(name: "self", scope: !1887, file: !1764, line: 241, type: !1812, align: 8)
!1887 = !DILexicalBlockFile(scope: !1888, file: !1764, discriminator: 0)
!1888 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h573ab648430679d8E", scope: !1812, file: !445, line: 330, type: !1889, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1891)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!777, !1812}
!1891 = !{!1886}
!1892 = !DILocation(line: 241, column: 16, scope: !1887, inlinedAt: !1885)
!1893 = !DILocalVariable(name: "self", scope: !1894, file: !1764, line: 241, type: !777, align: 8)
!1894 = !DILexicalBlockFile(scope: !1895, file: !1764, discriminator: 0)
!1895 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h2551ddceb3303457E", scope: !456, file: !455, line: 182, type: !1896, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1898)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!9, !777}
!1898 = !{!1893}
!1899 = !DILocation(line: 241, column: 16, scope: !1894, inlinedAt: !1885)
!1900 = !DILocation(line: 242, column: 11, scope: !1822)
!1901 = !DILocation(line: 242, column: 5, scope: !1822)
!1902 = !DILocation(line: 271, column: 13, scope: !1822)
!1903 = !DILocation(line: 244, column: 26, scope: !1822)
!1904 = !DILocation(line: 244, column: 24, scope: !1822)
!1905 = !DILocation(line: 244, column: 17, scope: !1824)
!1906 = !DILocation(line: 245, column: 13, scope: !1824)
!1907 = !DILocation(line: 246, column: 9, scope: !1822)
!1908 = !DILocation(line: 248, column: 30, scope: !1822)
!1909 = !DILocation(line: 248, column: 29, scope: !1822)
!1910 = !DILocation(line: 248, column: 17, scope: !1826)
!1911 = !{i8 0, i8 42}
!1912 = !DILocalVariable(name: "self", scope: !1913, file: !1764, line: 261, type: !1812, align: 8)
!1913 = !DILexicalBlockFile(scope: !1914, file: !1764, discriminator: 0)
!1914 = distinct !DISubprogram(name: "cast<(), std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2dba219c37061198E", scope: !1812, file: !445, line: 453, type: !1915, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1918, retainedNodes: !1917)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!1872, !1812}
!1917 = !{!1912}
!1918 = !{!1037, !1919}
!1919 = !DITemplateTypeParameter(name: "U", type: !1803)
!1920 = !DILocation(line: 261, column: 58, scope: !1913, inlinedAt: !1883)
!1921 = !DILocalVariable(name: "self", scope: !1922, file: !1764, line: 261, type: !1812, align: 8)
!1922 = !DILexicalBlockFile(scope: !1923, file: !1764, discriminator: 0)
!1923 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h573ab648430679d8E", scope: !1812, file: !445, line: 330, type: !1889, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1924)
!1924 = !{!1921}
!1925 = !DILocation(line: 261, column: 58, scope: !1922, inlinedAt: !1926)
!1926 = !DILocation(line: 455, column: 41, scope: !1914, inlinedAt: !1883)
!1927 = !DILocalVariable(name: "ptr", scope: !1928, file: !1764, line: 261, type: !1880, align: 8)
!1928 = !DILexicalBlockFile(scope: !1929, file: !1764, discriminator: 0)
!1929 = distinct !DISubprogram(name: "new_unchecked<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h97c3869e20ee8ee5E", scope: !1872, file: !445, line: 196, type: !1930, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1876, retainedNodes: !1932)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{!1872, !1880}
!1932 = !{!1927}
!1933 = !DILocation(line: 261, column: 58, scope: !1928, inlinedAt: !1934)
!1934 = !DILocation(line: 455, column: 18, scope: !1914, inlinedAt: !1883)
!1935 = !DILocation(line: 261, column: 31, scope: !1822)
!1936 = !DILocation(line: 261, column: 94, scope: !1822)
!1937 = !DILocation(line: 266, column: 26, scope: !1822)
!1938 = !DILocalVariable(name: "self", scope: !1939, file: !1764, line: 266, type: !1812, align: 8)
!1939 = !DILexicalBlockFile(scope: !1940, file: !1764, discriminator: 0)
!1940 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h573ab648430679d8E", scope: !1812, file: !445, line: 330, type: !1889, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !1941)
!1941 = !{!1938}
!1942 = !DILocation(line: 266, column: 26, scope: !1939, inlinedAt: !1937)
!1943 = !DILocalVariable(name: "self", scope: !1944, file: !1764, line: 266, type: !777, align: 8)
!1944 = !DILexicalBlockFile(scope: !1945, file: !1764, discriminator: 0)
!1945 = distinct !DISubprogram(name: "cast<(), u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hcc187a23bc193492E", scope: !456, file: !455, line: 45, type: !1946, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1949, retainedNodes: !1948)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!448, !777}
!1948 = !{!1943}
!1949 = !{!1037, !1950}
!1950 = !DITemplateTypeParameter(name: "U", type: !52)
!1951 = !DILocation(line: 266, column: 26, scope: !1944, inlinedAt: !1937)
!1952 = !DILocalVariable(name: "self", scope: !1953, file: !1764, line: 266, type: !448, align: 8)
!1953 = !DILexicalBlockFile(scope: !1954, file: !1764, discriminator: 0)
!1954 = distinct !DISubprogram(name: "wrapping_sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17h18485b3ad790e07dE", scope: !456, file: !455, line: 1225, type: !747, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1955)
!1955 = !{!1952, !1956}
!1956 = !DILocalVariable(name: "count", scope: !1953, file: !1764, line: 266, type: !9, align: 8)
!1957 = !DILocation(line: 266, column: 26, scope: !1953, inlinedAt: !1937)
!1958 = !DILocalVariable(name: "self", scope: !1959, file: !1764, line: 266, type: !448, align: 8)
!1959 = !DILexicalBlockFile(scope: !1960, file: !1764, discriminator: 0)
!1960 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17hae14a59d08b9d3f9E", scope: !456, file: !455, line: 545, type: !756, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !1961)
!1961 = !{!1958, !1962}
!1962 = !DILocalVariable(name: "count", scope: !1959, file: !1764, line: 266, type: !674, align: 8)
!1963 = !DILocation(line: 266, column: 26, scope: !1959, inlinedAt: !1964)
!1964 = !DILocation(line: 1229, column: 9, scope: !1954, inlinedAt: !1937)
!1965 = !DILocation(line: 274, column: 1, scope: !1763)
!1966 = !DILocalVariable(name: "self", scope: !1967, file: !1764, line: 266, type: !448, align: 8)
!1967 = !DILexicalBlockFile(scope: !1968, file: !1764, discriminator: 0)
!1968 = distinct !DISubprogram(name: "cast<u8, std::io::error::Custom>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h3961c7bd452b4006E", scope: !456, file: !455, line: 45, type: !1969, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1972, retainedNodes: !1971)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!1831, !448}
!1971 = !{!1966}
!1972 = !{!344, !1973}
!1973 = !DITemplateTypeParameter(name: "U", type: !1780)
!1974 = !DILocation(line: 266, column: 26, scope: !1967, inlinedAt: !1937)
!1975 = !DILocation(line: 266, column: 17, scope: !1830)
!1976 = !DILocation(line: 267, column: 31, scope: !1830)
!1977 = !DILocation(line: 267, column: 13, scope: !1830)
!1978 = !DILocation(line: 268, column: 9, scope: !1822)
!1979 = !DILocation(line: 249, column: 65, scope: !1826)
!1980 = !{i8 0, i8 41}
!1981 = !DILocation(line: 249, column: 24, scope: !1863, inlinedAt: !1868)
!1982 = !DILocation(line: 259, column: 31, scope: !1828)
!1983 = !DILocation(line: 259, column: 13, scope: !1828)
!1984 = !DILocation(line: 260, column: 9, scope: !1822)
!1985 = !DILocation(line: 237, column: 1, scope: !1763)
!1986 = !DILocation(line: 274, column: 2, scope: !1763)
!1987 = distinct !DISubprogram(name: "{closure#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17he0f371ca16a4a646E", scope: !1857, file: !1764, line: 249, type: !1988, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1832, retainedNodes: !1990)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!145, !1856}
!1990 = !{!1991}
!1991 = !DILocalVariable(name: "bits", scope: !1987, file: !1764, line: 241, type: !9, align: 8)
!1992 = !DILocation(line: 241, column: 9, scope: !1987)
!1993 = !DILocalVariable(name: "_unsafe_arg", scope: !1994, file: !1764, line: 250, type: !2100, align: 1)
!1994 = !DILexicalBlockFile(scope: !1995, file: !1764, discriminator: 0)
!1995 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17hb182665dc11afb3fE", scope: !1997, file: !1996, line: 410, type: !2098, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2103)
!1996 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c5de8437ceab25c34a962d42d2628f53")
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !193, file: !2, size: 384, align: 64, elements: !1998, templateParams: !23, identifier: "a0aec1d1ea3bdf613439a5e04a2603cb")
!1998 = !{!1999, !2005, !2050}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !1997, file: !2, baseType: !2000, size: 128, align: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !2001, templateParams: !23, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!2001 = !{!2002, !2004}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2000, file: !2, baseType: !2003, size: 64, align: 64)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2000, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !1997, file: !2, baseType: !2006, size: 128, align: 64, offset: 128)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !39, file: !2, size: 128, align: 64, elements: !2007, templateParams: !23, identifier: "b8e2606f2acd3eb73158be541d1813f2")
!2007 = !{!2008}
!2008 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2006, file: !2, size: 128, align: 64, elements: !2009, templateParams: !23, identifier: "61b072b58b5d70caf9daa9abacb5ef58", discriminator: !2049)
!2009 = !{!2010, !2045}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2008, file: !2, baseType: !2011, size: 128, align: 64, extraData: i64 0)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2006, file: !2, size: 128, align: 64, elements: !23, templateParams: !2012, identifier: "16848bde27f54ab132d75bd4989ebe65")
!2012 = !{!2013}
!2013 = !DITemplateTypeParameter(name: "T", type: !2014)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !2015, templateParams: !23, identifier: "3428bfdd2bbbe5118f643cca84499de0")
!2015 = !{!2016, !2044}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2014, file: !2, baseType: !2017, size: 64, align: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64, align: 64, dwarfAddressSpace: 0)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !191, file: !2, size: 448, align: 64, elements: !2019, templateParams: !23, identifier: "83a2ed6cdf3a4449d15fd810f59936b5")
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2018, file: !2, baseType: !9, size: 64, align: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2018, file: !2, baseType: !2022, size: 384, align: 64, offset: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !191, file: !2, size: 384, align: 64, elements: !2023, templateParams: !23, identifier: "b421e176fffabb1a9422c957b838033e")
!2023 = !{!2024, !2025, !2026, !2027, !2043}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2022, file: !2, baseType: !321, size: 32, align: 32, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2022, file: !2, baseType: !190, size: 8, align: 8, offset: 320)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2022, file: !2, baseType: !327, size: 32, align: 32, offset: 288)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2022, file: !2, baseType: !2028, size: 128, align: 64)
!2028 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !191, file: !2, size: 128, align: 64, elements: !2029, templateParams: !23, identifier: "2f622710b340f12e25011af1d803f134")
!2029 = !{!2030}
!2030 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2028, file: !2, size: 128, align: 64, elements: !2031, templateParams: !23, identifier: "51002d1103e4bfd0e36408497abeae83", discriminator: !2042)
!2031 = !{!2032, !2036, !2040}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !2030, file: !2, baseType: !2033, size: 128, align: 64, extraData: i64 0)
!2033 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !2028, file: !2, size: 128, align: 64, elements: !2034, templateParams: !23, identifier: "1444484c4dce485f1290a5a1787848de")
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2033, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !2030, file: !2, baseType: !2037, size: 128, align: 64, extraData: i64 1)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !2028, file: !2, size: 128, align: 64, elements: !2038, templateParams: !23, identifier: "e4eec8bef520573b70171b367b1cd2b3")
!2038 = !{!2039}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2037, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !2030, file: !2, baseType: !2041, size: 128, align: 64, extraData: i64 2)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !2028, file: !2, size: 128, align: 64, elements: !23, identifier: "884829b33a492cff1c046a186fd09be2")
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2028, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2022, file: !2, baseType: !2028, size: 128, align: 64, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2014, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2008, file: !2, baseType: !2046, size: 128, align: 64)
!2046 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2006, file: !2, size: 128, align: 64, elements: !2047, templateParams: !2012, identifier: "a9d1aef8652ae3fb1ce43bf5a816afb5")
!2047 = !{!2048}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2046, file: !2, baseType: !2014, size: 128, align: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, scope: !2006, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1997, file: !2, baseType: !2051, size: 128, align: 64, offset: 256)
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !2052, templateParams: !23, identifier: "f71d9e8c03564763165f832ee1a6f5f9")
!2052 = !{!2053, !2097}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2051, file: !2, baseType: !2054, size: 64, align: 64)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64, align: 64, dwarfAddressSpace: 0)
!2055 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !193, file: !2, size: 128, align: 64, elements: !2056, templateParams: !23, identifier: "ee6afbf689c0bee499d5104ca6bc0325")
!2056 = !{!2057, !2061}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2055, file: !2, baseType: !2058, size: 64, align: 64)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !2059, size: 64, align: 64, dwarfAddressSpace: 0)
!2059 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !2060, file: !2, align: 8, elements: !23, identifier: "34b15e58e715eb947795ec8f7a6436c0")
!2060 = !DINamespace(name: "{extern#0}", scope: !193)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !2055, file: !2, baseType: !2062, size: 64, align: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2063, size: 64, align: 64, dwarfAddressSpace: 0)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!2065, !2058, !2082}
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !2066, file: !2, size: 8, align: 8, elements: !2067, templateParams: !23, identifier: "447757be4c16082e69889932eb17f9c")
!2066 = !DINamespace(name: "result", scope: !40)
!2067 = !{!2068}
!2068 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2065, file: !2, size: 8, align: 8, elements: !2069, templateParams: !23, identifier: "96c807d207af80b29492385694908cd3", discriminator: !2081)
!2069 = !{!2070, !2077}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2068, file: !2, baseType: !2071, size: 8, align: 8, extraData: i64 0)
!2071 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2065, file: !2, size: 8, align: 8, elements: !2072, templateParams: !2074, identifier: "68fc9cadc38fd89dc5314147fe1c04c5")
!2072 = !{!2073}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2071, file: !2, baseType: !7, align: 8, offset: 8)
!2074 = !{!1037, !2075}
!2075 = !DITemplateTypeParameter(name: "E", type: !2076)
!2076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !193, file: !2, align: 8, elements: !23, identifier: "1311c183d6f2d58f3dad194adbe49b3a")
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2068, file: !2, baseType: !2078, size: 8, align: 8, extraData: i64 1)
!2078 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2065, file: !2, size: 8, align: 8, elements: !2079, templateParams: !2074, identifier: "c8f00e71d7b7aec3720e840d9348dce6")
!2079 = !{!2080}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2078, file: !2, baseType: !2076, align: 8, offset: 8)
!2081 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !2083, size: 64, align: 64, dwarfAddressSpace: 0)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !193, file: !2, size: 512, align: 64, elements: !2084, templateParams: !23, identifier: "97569f54ab5a7c989a71423c5556f817")
!2084 = !{!2085, !2086, !2087, !2088, !2089, !2090}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2083, file: !2, baseType: !327, size: 32, align: 32, offset: 384)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2083, file: !2, baseType: !321, size: 32, align: 32, offset: 416)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2083, file: !2, baseType: !190, size: 8, align: 8, offset: 448)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2083, file: !2, baseType: !236, size: 128, align: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2083, file: !2, baseType: !236, size: 128, align: 64, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2083, file: !2, baseType: !2091, size: 128, align: 64, offset: 256)
!2091 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !2092, templateParams: !23, identifier: "82c572e17c15a0d86f20372e18a95685")
!2092 = !{!2093, !2096}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2091, file: !2, baseType: !2094, size: 64, align: 64)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64, align: 64, dwarfAddressSpace: 0)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !23, identifier: "9ac45caf5d58874c6d7da3fea362c3ba")
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2091, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2051, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!1997, !2000, !2051, !2014, !2100}
!2100 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !193, file: !2, align: 8, elements: !2101, templateParams: !23, identifier: "64ce58698bc2b926451a63c20bf492c6")
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !2100, file: !2, baseType: !7, align: 8)
!2103 = !{!2104, !2105, !2106, !1993}
!2104 = !DILocalVariable(name: "pieces", scope: !1994, file: !1764, line: 250, type: !2000, align: 8)
!2105 = !DILocalVariable(name: "args", scope: !1994, file: !1764, line: 250, type: !2051, align: 8)
!2106 = !DILocalVariable(name: "fmt", scope: !1994, file: !1764, line: 250, type: !2014, align: 8)
!2107 = !DILocation(line: 250, column: 17, scope: !1994, inlinedAt: !2108)
!2108 = !DILocation(line: 57, column: 38, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !1987, file: !2110, discriminator: 0)
!2110 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "fdc6e43203342ea3dc7947f5f0419604")
!2111 = !DILocation(line: 257, column: 17, scope: !2112, inlinedAt: !2114)
!2112 = !DILexicalBlockFile(scope: !2113, file: !1764, discriminator: 0)
!2113 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!2114 = !DILocation(line: 257, column: 17, scope: !1987)
!2115 = distinct !DISubprogram(name: "kind_from_prim", linkageName: "_ZN3std2io5error14repr_bitpacked14kind_from_prim17hea841811d99fc47eE", scope: !1765, file: !1764, line: 280, type: !2116, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2118)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!1841, !327}
!2118 = !{!2119, !2120, !2122, !2124, !2126, !2127, !2129, !2130, !2132, !2133, !2135, !2136, !2138, !2139, !2141, !2142, !2144, !2145, !2147, !2148, !2150, !2151, !2153, !2154, !2156, !2157, !2159, !2160, !2162, !2163, !2165, !2166, !2168, !2169, !2171, !2172, !2174, !2175, !2177, !2178, !2180, !2181, !2183, !2184, !2186, !2187, !2189, !2190, !2192, !2193, !2195, !2196, !2198, !2199, !2201, !2202, !2204, !2205, !2207, !2208, !2210, !2211, !2213, !2214, !2216, !2217, !2219, !2220, !2222, !2223, !2225, !2226, !2228, !2229, !2231, !2232, !2234, !2235, !2237, !2238, !2240, !2241, !2243}
!2119 = !DILocalVariable(name: "ek", arg: 1, scope: !2115, file: !1764, line: 280, type: !327)
!2120 = !DILocalVariable(name: "v", scope: !2121, file: !1764, line: 293, type: !327, align: 4)
!2121 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2122 = !DILocalVariable(name: "v", scope: !2121, file: !1764, line: 293, type: !2123, align: 8)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!2124 = !DILocalVariable(name: "v", scope: !2125, file: !1764, line: 293, type: !327, align: 4)
!2125 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2126 = !DILocalVariable(name: "v", scope: !2125, file: !1764, line: 293, type: !2123, align: 8)
!2127 = !DILocalVariable(name: "v", scope: !2128, file: !1764, line: 293, type: !327, align: 4)
!2128 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2129 = !DILocalVariable(name: "v", scope: !2128, file: !1764, line: 293, type: !2123, align: 8)
!2130 = !DILocalVariable(name: "v", scope: !2131, file: !1764, line: 293, type: !327, align: 4)
!2131 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2132 = !DILocalVariable(name: "v", scope: !2131, file: !1764, line: 293, type: !2123, align: 8)
!2133 = !DILocalVariable(name: "v", scope: !2134, file: !1764, line: 293, type: !327, align: 4)
!2134 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2135 = !DILocalVariable(name: "v", scope: !2134, file: !1764, line: 293, type: !2123, align: 8)
!2136 = !DILocalVariable(name: "v", scope: !2137, file: !1764, line: 293, type: !327, align: 4)
!2137 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2138 = !DILocalVariable(name: "v", scope: !2137, file: !1764, line: 293, type: !2123, align: 8)
!2139 = !DILocalVariable(name: "v", scope: !2140, file: !1764, line: 293, type: !327, align: 4)
!2140 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2141 = !DILocalVariable(name: "v", scope: !2140, file: !1764, line: 293, type: !2123, align: 8)
!2142 = !DILocalVariable(name: "v", scope: !2143, file: !1764, line: 293, type: !327, align: 4)
!2143 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2144 = !DILocalVariable(name: "v", scope: !2143, file: !1764, line: 293, type: !2123, align: 8)
!2145 = !DILocalVariable(name: "v", scope: !2146, file: !1764, line: 293, type: !327, align: 4)
!2146 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2147 = !DILocalVariable(name: "v", scope: !2146, file: !1764, line: 293, type: !2123, align: 8)
!2148 = !DILocalVariable(name: "v", scope: !2149, file: !1764, line: 293, type: !327, align: 4)
!2149 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2150 = !DILocalVariable(name: "v", scope: !2149, file: !1764, line: 293, type: !2123, align: 8)
!2151 = !DILocalVariable(name: "v", scope: !2152, file: !1764, line: 293, type: !327, align: 4)
!2152 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2153 = !DILocalVariable(name: "v", scope: !2152, file: !1764, line: 293, type: !2123, align: 8)
!2154 = !DILocalVariable(name: "v", scope: !2155, file: !1764, line: 293, type: !327, align: 4)
!2155 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2156 = !DILocalVariable(name: "v", scope: !2155, file: !1764, line: 293, type: !2123, align: 8)
!2157 = !DILocalVariable(name: "v", scope: !2158, file: !1764, line: 293, type: !327, align: 4)
!2158 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2159 = !DILocalVariable(name: "v", scope: !2158, file: !1764, line: 293, type: !2123, align: 8)
!2160 = !DILocalVariable(name: "v", scope: !2161, file: !1764, line: 293, type: !327, align: 4)
!2161 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2162 = !DILocalVariable(name: "v", scope: !2161, file: !1764, line: 293, type: !2123, align: 8)
!2163 = !DILocalVariable(name: "v", scope: !2164, file: !1764, line: 293, type: !327, align: 4)
!2164 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2165 = !DILocalVariable(name: "v", scope: !2164, file: !1764, line: 293, type: !2123, align: 8)
!2166 = !DILocalVariable(name: "v", scope: !2167, file: !1764, line: 293, type: !327, align: 4)
!2167 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2168 = !DILocalVariable(name: "v", scope: !2167, file: !1764, line: 293, type: !2123, align: 8)
!2169 = !DILocalVariable(name: "v", scope: !2170, file: !1764, line: 293, type: !327, align: 4)
!2170 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2171 = !DILocalVariable(name: "v", scope: !2170, file: !1764, line: 293, type: !2123, align: 8)
!2172 = !DILocalVariable(name: "v", scope: !2173, file: !1764, line: 293, type: !327, align: 4)
!2173 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2174 = !DILocalVariable(name: "v", scope: !2173, file: !1764, line: 293, type: !2123, align: 8)
!2175 = !DILocalVariable(name: "v", scope: !2176, file: !1764, line: 293, type: !327, align: 4)
!2176 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2177 = !DILocalVariable(name: "v", scope: !2176, file: !1764, line: 293, type: !2123, align: 8)
!2178 = !DILocalVariable(name: "v", scope: !2179, file: !1764, line: 293, type: !327, align: 4)
!2179 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2180 = !DILocalVariable(name: "v", scope: !2179, file: !1764, line: 293, type: !2123, align: 8)
!2181 = !DILocalVariable(name: "v", scope: !2182, file: !1764, line: 293, type: !327, align: 4)
!2182 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2183 = !DILocalVariable(name: "v", scope: !2182, file: !1764, line: 293, type: !2123, align: 8)
!2184 = !DILocalVariable(name: "v", scope: !2185, file: !1764, line: 293, type: !327, align: 4)
!2185 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2186 = !DILocalVariable(name: "v", scope: !2185, file: !1764, line: 293, type: !2123, align: 8)
!2187 = !DILocalVariable(name: "v", scope: !2188, file: !1764, line: 293, type: !327, align: 4)
!2188 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2189 = !DILocalVariable(name: "v", scope: !2188, file: !1764, line: 293, type: !2123, align: 8)
!2190 = !DILocalVariable(name: "v", scope: !2191, file: !1764, line: 293, type: !327, align: 4)
!2191 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2192 = !DILocalVariable(name: "v", scope: !2191, file: !1764, line: 293, type: !2123, align: 8)
!2193 = !DILocalVariable(name: "v", scope: !2194, file: !1764, line: 293, type: !327, align: 4)
!2194 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2195 = !DILocalVariable(name: "v", scope: !2194, file: !1764, line: 293, type: !2123, align: 8)
!2196 = !DILocalVariable(name: "v", scope: !2197, file: !1764, line: 293, type: !327, align: 4)
!2197 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2198 = !DILocalVariable(name: "v", scope: !2197, file: !1764, line: 293, type: !2123, align: 8)
!2199 = !DILocalVariable(name: "v", scope: !2200, file: !1764, line: 293, type: !327, align: 4)
!2200 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2201 = !DILocalVariable(name: "v", scope: !2200, file: !1764, line: 293, type: !2123, align: 8)
!2202 = !DILocalVariable(name: "v", scope: !2203, file: !1764, line: 293, type: !327, align: 4)
!2203 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2204 = !DILocalVariable(name: "v", scope: !2203, file: !1764, line: 293, type: !2123, align: 8)
!2205 = !DILocalVariable(name: "v", scope: !2206, file: !1764, line: 293, type: !327, align: 4)
!2206 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2207 = !DILocalVariable(name: "v", scope: !2206, file: !1764, line: 293, type: !2123, align: 8)
!2208 = !DILocalVariable(name: "v", scope: !2209, file: !1764, line: 293, type: !327, align: 4)
!2209 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2210 = !DILocalVariable(name: "v", scope: !2209, file: !1764, line: 293, type: !2123, align: 8)
!2211 = !DILocalVariable(name: "v", scope: !2212, file: !1764, line: 293, type: !327, align: 4)
!2212 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2213 = !DILocalVariable(name: "v", scope: !2212, file: !1764, line: 293, type: !2123, align: 8)
!2214 = !DILocalVariable(name: "v", scope: !2215, file: !1764, line: 293, type: !327, align: 4)
!2215 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2216 = !DILocalVariable(name: "v", scope: !2215, file: !1764, line: 293, type: !2123, align: 8)
!2217 = !DILocalVariable(name: "v", scope: !2218, file: !1764, line: 293, type: !327, align: 4)
!2218 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2219 = !DILocalVariable(name: "v", scope: !2218, file: !1764, line: 293, type: !2123, align: 8)
!2220 = !DILocalVariable(name: "v", scope: !2221, file: !1764, line: 293, type: !327, align: 4)
!2221 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2222 = !DILocalVariable(name: "v", scope: !2221, file: !1764, line: 293, type: !2123, align: 8)
!2223 = !DILocalVariable(name: "v", scope: !2224, file: !1764, line: 293, type: !327, align: 4)
!2224 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2225 = !DILocalVariable(name: "v", scope: !2224, file: !1764, line: 293, type: !2123, align: 8)
!2226 = !DILocalVariable(name: "v", scope: !2227, file: !1764, line: 293, type: !327, align: 4)
!2227 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2228 = !DILocalVariable(name: "v", scope: !2227, file: !1764, line: 293, type: !2123, align: 8)
!2229 = !DILocalVariable(name: "v", scope: !2230, file: !1764, line: 293, type: !327, align: 4)
!2230 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2231 = !DILocalVariable(name: "v", scope: !2230, file: !1764, line: 293, type: !2123, align: 8)
!2232 = !DILocalVariable(name: "v", scope: !2233, file: !1764, line: 293, type: !327, align: 4)
!2233 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2234 = !DILocalVariable(name: "v", scope: !2233, file: !1764, line: 293, type: !2123, align: 8)
!2235 = !DILocalVariable(name: "v", scope: !2236, file: !1764, line: 293, type: !327, align: 4)
!2236 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2237 = !DILocalVariable(name: "v", scope: !2236, file: !1764, line: 293, type: !2123, align: 8)
!2238 = !DILocalVariable(name: "v", scope: !2239, file: !1764, line: 293, type: !327, align: 4)
!2239 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2240 = !DILocalVariable(name: "v", scope: !2239, file: !1764, line: 293, type: !2123, align: 8)
!2241 = !DILocalVariable(name: "v", scope: !2242, file: !1764, line: 293, type: !327, align: 4)
!2242 = distinct !DILexicalBlock(scope: !2115, file: !1764, line: 288, column: 19)
!2243 = !DILocalVariable(name: "v", scope: !2242, file: !1764, line: 293, type: !2123, align: 8)
!2244 = !DILocation(line: 280, column: 19, scope: !2115)
!2245 = !DILocation(line: 293, column: 5, scope: !2115)
!2246 = !DILocation(line: 293, column: 5, scope: !2121)
!2247 = !DILocation(line: 293, column: 5, scope: !2125)
!2248 = !DILocation(line: 336, column: 2, scope: !2115)
!2249 = !DILocation(line: 293, column: 5, scope: !2128)
!2250 = !DILocation(line: 293, column: 5, scope: !2131)
!2251 = !DILocation(line: 293, column: 5, scope: !2134)
!2252 = !DILocation(line: 293, column: 5, scope: !2137)
!2253 = !DILocation(line: 293, column: 5, scope: !2140)
!2254 = !DILocation(line: 293, column: 5, scope: !2143)
!2255 = !DILocation(line: 293, column: 5, scope: !2146)
!2256 = !DILocation(line: 293, column: 5, scope: !2149)
!2257 = !DILocation(line: 293, column: 5, scope: !2152)
!2258 = !DILocation(line: 293, column: 5, scope: !2155)
!2259 = !DILocation(line: 293, column: 5, scope: !2158)
!2260 = !DILocation(line: 293, column: 5, scope: !2161)
!2261 = !DILocation(line: 293, column: 5, scope: !2164)
!2262 = !DILocation(line: 293, column: 5, scope: !2167)
!2263 = !DILocation(line: 293, column: 5, scope: !2170)
!2264 = !DILocation(line: 293, column: 5, scope: !2173)
!2265 = !DILocation(line: 293, column: 5, scope: !2176)
!2266 = !DILocation(line: 293, column: 5, scope: !2179)
!2267 = !DILocation(line: 293, column: 5, scope: !2182)
!2268 = !DILocation(line: 293, column: 5, scope: !2185)
!2269 = !DILocation(line: 293, column: 5, scope: !2188)
!2270 = !DILocation(line: 293, column: 5, scope: !2191)
!2271 = !DILocation(line: 293, column: 5, scope: !2194)
!2272 = !DILocation(line: 293, column: 5, scope: !2197)
!2273 = !DILocation(line: 293, column: 5, scope: !2200)
!2274 = !DILocation(line: 293, column: 5, scope: !2203)
!2275 = !DILocation(line: 293, column: 5, scope: !2206)
!2276 = !DILocation(line: 293, column: 5, scope: !2209)
!2277 = !DILocation(line: 293, column: 5, scope: !2212)
!2278 = !DILocation(line: 293, column: 5, scope: !2215)
!2279 = !DILocation(line: 293, column: 5, scope: !2218)
!2280 = !DILocation(line: 293, column: 5, scope: !2221)
!2281 = !DILocation(line: 293, column: 5, scope: !2224)
!2282 = !DILocation(line: 293, column: 5, scope: !2227)
!2283 = !DILocation(line: 293, column: 5, scope: !2230)
!2284 = !DILocation(line: 293, column: 5, scope: !2233)
!2285 = !DILocation(line: 293, column: 5, scope: !2236)
!2286 = !DILocation(line: 293, column: 5, scope: !2239)
!2287 = !DILocation(line: 293, column: 5, scope: !2242)
!2288 = distinct !DISubprogram(name: "lang_start<()>", linkageName: "_ZN3std2rt10lang_start17hdbdcadb0c4d08e85E", scope: !16, file: !2289, line: 139, type: !2290, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !2293)
!2289 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "53ba40c54b421907f2e3ab22fb96d5b4")
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!674, !20, !674, !2292}
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !342, size: 64, align: 64, dwarfAddressSpace: 0)
!2293 = !{!2294, !2295, !2296, !2297}
!2294 = !DILocalVariable(name: "main", arg: 1, scope: !2288, file: !2289, line: 140, type: !20)
!2295 = !DILocalVariable(name: "argc", arg: 2, scope: !2288, file: !2289, line: 141, type: !674)
!2296 = !DILocalVariable(name: "argv", arg: 3, scope: !2288, file: !2289, line: 142, type: !2292)
!2297 = !DILocalVariable(name: "v", scope: !2298, file: !2289, line: 144, type: !674, align: 8)
!2298 = distinct !DILexicalBlock(scope: !2288, file: !2289, line: 144, column: 5)
!2299 = !DILocation(line: 140, column: 5, scope: !2288)
!2300 = !DILocation(line: 141, column: 5, scope: !2288)
!2301 = !DILocation(line: 142, column: 5, scope: !2288)
!2302 = !DILocation(line: 145, column: 10, scope: !2288)
!2303 = !DILocation(line: 145, column: 9, scope: !2288)
!2304 = !DILocation(line: 144, column: 17, scope: !2288)
!2305 = !DILocation(line: 144, column: 12, scope: !2288)
!2306 = !DILocation(line: 144, column: 12, scope: !2298)
!2307 = !DILocation(line: 150, column: 2, scope: !2288)
!2308 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hfd338f81e5b45273E", scope: !15, file: !2289, line: 145, type: !2309, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !2312)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!1776, !2311}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!2312 = !{!2313}
!2313 = !DILocalVariable(name: "main", scope: !2308, file: !2289, line: 140, type: !20, align: 8)
!2314 = !DILocation(line: 140, column: 5, scope: !2308)
!2315 = !DILocalVariable(name: "self", scope: !2316, file: !2289, line: 145, type: !2319, align: 1)
!2316 = !DILexicalBlockFile(scope: !2317, file: !2289, discriminator: 0)
!2317 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h04889dbb21d91c45E", scope: !2319, file: !2318, line: 1804, type: !2328, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2330)
!2318 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/process.rs", directory: "", checksumkind: CSK_MD5, checksum: "0e922fc53c161078e5cdc7db8af68845")
!2319 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !2320, file: !2, size: 8, align: 8, elements: !2321, templateParams: !23, identifier: "34833ea77da7e65050ab59ab2920d5b1")
!2320 = !DINamespace(name: "process", scope: !17)
!2321 = !{!2322}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2319, file: !2, baseType: !2323, size: 8, align: 8)
!2323 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !2324, file: !2, size: 8, align: 8, elements: !2326, templateParams: !23, identifier: "ad1dce0e523bc5db9bfe6837ee1d8946")
!2324 = !DINamespace(name: "process_common", scope: !2325)
!2325 = !DINamespace(name: "process", scope: !1215)
!2326 = !{!2327}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2323, file: !2, baseType: !52, size: 8, align: 8)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!1776, !2319}
!2330 = !{!2315}
!2331 = !DILocation(line: 145, column: 18, scope: !2316, inlinedAt: !2332)
!2332 = !DILocation(line: 145, column: 18, scope: !2308)
!2333 = !DILocation(line: 145, column: 77, scope: !2308)
!2334 = !DILocalVariable(name: "self", scope: !2335, file: !2289, line: 145, type: !2340, align: 8)
!2335 = !DILexicalBlockFile(scope: !2336, file: !2289, discriminator: 0)
!2336 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h700ac2796b83a118E", scope: !2323, file: !2337, line: 485, type: !2338, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2341)
!2337 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/sys/unix/process/process_common.rs", directory: "", checksumkind: CSK_MD5, checksum: "0172c472c69d772c784713c132680582")
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!1776, !2340}
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::process::process_common::ExitCode", baseType: !2323, size: 64, align: 64, dwarfAddressSpace: 0)
!2341 = !{!2334}
!2342 = !DILocation(line: 145, column: 18, scope: !2335, inlinedAt: !2343)
!2343 = !DILocation(line: 1805, column: 9, scope: !2317, inlinedAt: !2332)
!2344 = !DILocation(line: 145, column: 100, scope: !2308)
!2345 = distinct !DISubprogram(name: "var<&str>", linkageName: "_ZN3std3env3var17h04c56fa03262f5f6E", scope: !2347, file: !2346, line: 227, type: !2348, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2383, retainedNodes: !2381)
!2346 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/env.rs", directory: "", checksumkind: CSK_MD5, checksum: "eb997a355b779581a425ead6cf0f1655")
!2347 = !DINamespace(name: "env", scope: !17)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{!2350, !48}
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, std::env::VarError>", scope: !2066, file: !2, size: 256, align: 64, elements: !2351, templateParams: !23, identifier: "c4544bdbfa321ed4f981f5d562e8c159")
!2351 = !{!2352}
!2352 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2350, file: !2, size: 256, align: 64, elements: !2353, templateParams: !23, identifier: "77682f1c60b1ea13d60713443d9e87b1", discriminator: !2380)
!2353 = !{!2354, !2376}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2352, file: !2, baseType: !2355, size: 256, align: 64, extraData: i64 0)
!2355 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2350, file: !2, size: 256, align: 64, elements: !2356, templateParams: !2362, identifier: "7dc5558260ff5aa83d58926eb476066f")
!2356 = !{!2357}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2355, file: !2, baseType: !2358, size: 192, align: 64, offset: 64)
!2358 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !2359, file: !2, size: 192, align: 64, elements: !2360, templateParams: !23, identifier: "eb8ab00598fad2d9340900a5895e2643")
!2359 = !DINamespace(name: "string", scope: !223)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2358, file: !2, baseType: !1219, size: 192, align: 64)
!2362 = !{!2363, !2364}
!2363 = !DITemplateTypeParameter(name: "T", type: !2358)
!2364 = !DITemplateTypeParameter(name: "E", type: !2365)
!2365 = !DICompositeType(tag: DW_TAG_structure_type, name: "VarError", scope: !2347, file: !2, size: 192, align: 64, elements: !2366, templateParams: !23, identifier: "bbfd2c83839e75291b5264c54bab079d")
!2366 = !{!2367}
!2367 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2365, file: !2, size: 192, align: 64, elements: !2368, templateParams: !23, identifier: "eb5d410fac5725432809c7adfd5f69f9", discriminator: !2375)
!2368 = !{!2369, !2371}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "NotPresent", scope: !2367, file: !2, baseType: !2370, size: 192, align: 64, extraData: i64 0)
!2370 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotPresent", scope: !2365, file: !2, size: 192, align: 64, elements: !23, identifier: "28dba17a251fb0c0227d8f48b3c2f2d7")
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "NotUnicode", scope: !2367, file: !2, baseType: !2372, size: 192, align: 64)
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotUnicode", scope: !2365, file: !2, size: 192, align: 64, elements: !2373, templateParams: !23, identifier: "3409cc7ec0a4ebb448b5a139190ff40c")
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2372, file: !2, baseType: !1208, size: 192, align: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2365, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2352, file: !2, baseType: !2377, size: 256, align: 64, extraData: i64 1)
!2377 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2350, file: !2, size: 256, align: 64, elements: !2378, templateParams: !2362, identifier: "f615da685d1c8b5fe698767924195c7b")
!2378 = !{!2379}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2377, file: !2, baseType: !2365, size: 192, align: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!2381 = !{!2382}
!2382 = !DILocalVariable(name: "key", arg: 1, scope: !2345, file: !2346, line: 227, type: !48)
!2383 = !{!2384}
!2384 = !DITemplateTypeParameter(name: "K", type: !48)
!2385 = !DILocation(line: 227, column: 29, scope: !2345)
!2386 = !DILocation(line: 228, column: 10, scope: !2345)
!2387 = !DILocation(line: 229, column: 1, scope: !2345)
!2388 = !DILocation(line: 228, column: 5, scope: !2345)
!2389 = !DILocation(line: 227, column: 1, scope: !2345)
!2390 = !DILocation(line: 229, column: 2, scope: !2345)
!2391 = distinct !DISubprogram(name: "var_os<&str>", linkageName: "_ZN3std3env6var_os17h95320143ad2097f6E", scope: !2347, file: !2346, line: 268, type: !2392, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2383, retainedNodes: !2394)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!1240, !48}
!2394 = !{!2395}
!2395 = !DILocalVariable(name: "key", arg: 1, scope: !2391, file: !2346, line: 268, type: !48)
!2396 = !DILocation(line: 268, column: 32, scope: !2391)
!2397 = !DILocation(line: 269, column: 13, scope: !2391)
!2398 = !DILocation(line: 270, column: 1, scope: !2391)
!2399 = !DILocation(line: 269, column: 5, scope: !2391)
!2400 = !DILocation(line: 268, column: 1, scope: !2391)
!2401 = !DILocation(line: 270, column: 2, scope: !2391)
!2402 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h853104b9acaaf0b1E", scope: !2404, file: !2403, line: 1312, type: !2405, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2418)
!2403 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/ffi/os_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "1034ec934c8ecfc8e46ec72c50ae72fa")
!2404 = !DINamespace(name: "{impl#53}", scope: !1209)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{!2407, !48}
!2407 = !DICompositeType(tag: DW_TAG_structure_type, name: "&std::ffi::os_str::OsStr", file: !2, size: 128, align: 64, elements: !2408, templateParams: !23, identifier: "be595a3017bd3eeda0a829c682aa8177")
!2408 = !{!2409, !2417}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2407, file: !2, baseType: !2410, size: 64, align: 64)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64, align: 64, dwarfAddressSpace: 0)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "OsStr", scope: !1209, file: !2, align: 8, elements: !2412, templateParams: !23, identifier: "9b26581c3f49fbd5c5354be4de75ba8")
!2412 = !{!2413}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2411, file: !2, baseType: !2414, align: 8)
!2414 = !DICompositeType(tag: DW_TAG_structure_type, name: "Slice", scope: !1214, file: !2, align: 8, elements: !2415, templateParams: !23, identifier: "522f7429f475b619694083fb7d5a2e84")
!2415 = !{!2416}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2414, file: !2, baseType: !52, align: 8)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2407, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2418 = !{!2419}
!2419 = !DILocalVariable(name: "self", arg: 1, scope: !2402, file: !2403, line: 1312, type: !48)
!2420 = !DILocation(line: 1312, column: 15, scope: !2402)
!2421 = !DILocation(line: 1313, column: 43, scope: !2402)
!2422 = !DILocalVariable(name: "s", scope: !2423, file: !2403, line: 1313, type: !48, align: 8)
!2423 = !DILexicalBlockFile(scope: !2424, file: !2403, discriminator: 0)
!2424 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN3std3sys4unix6os_str5Slice8from_str17hfe9341f08b2a6d87E", scope: !2414, file: !2425, line: 194, type: !2426, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2433)
!2425 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/sys/unix/os_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fffa48778a70506c3ad2634683a31ef")
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!2428, !48}
!2428 = !DICompositeType(tag: DW_TAG_structure_type, name: "&std::sys::unix::os_str::Slice", file: !2, size: 128, align: 64, elements: !2429, templateParams: !23, identifier: "a942202ee446b0d651185bde7026b9")
!2429 = !{!2430, !2432}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2428, file: !2, baseType: !2431, size: 64, align: 64)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64, align: 64, dwarfAddressSpace: 0)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2428, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2433 = !{!2422}
!2434 = !DILocation(line: 1313, column: 27, scope: !2423, inlinedAt: !2435)
!2435 = !DILocation(line: 1313, column: 27, scope: !2402)
!2436 = !DILocalVariable(name: "self", scope: !2437, file: !2403, line: 1313, type: !48, align: 8)
!2437 = !DILexicalBlockFile(scope: !2438, file: !2403, discriminator: 0)
!2438 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2442)
!2439 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "8352df8206aaaed06ac4b697a5784e45")
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!892, !48}
!2442 = !{!2436}
!2443 = !DILocation(line: 1313, column: 27, scope: !2437, inlinedAt: !2444)
!2444 = !DILocation(line: 195, column: 30, scope: !2424, inlinedAt: !2435)
!2445 = !DILocalVariable(name: "s", scope: !2446, file: !2403, line: 1313, type: !892, align: 8)
!2446 = !DILexicalBlockFile(scope: !2447, file: !2403, discriminator: 0)
!2447 = distinct !DISubprogram(name: "from_u8_slice", linkageName: "_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h16b546910ee68ba1E", scope: !2414, file: !2425, line: 189, type: !2448, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2450)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!2428, !892}
!2450 = !{!2445}
!2451 = !DILocation(line: 1313, column: 27, scope: !2446, inlinedAt: !2452)
!2452 = !DILocation(line: 195, column: 9, scope: !2424, inlinedAt: !2435)
!2453 = !DILocalVariable(name: "inner", scope: !2454, file: !2403, line: 1313, type: !2428, align: 8)
!2454 = distinct !DISubprogram(name: "from_inner", linkageName: "_ZN3std3ffi6os_str5OsStr10from_inner17h8977c59cbb586defE", scope: !2411, file: !2403, line: 663, type: !2455, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2457)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!2407, !2428}
!2457 = !{!2453}
!2458 = !DILocation(line: 1313, column: 9, scope: !2454, inlinedAt: !2459)
!2459 = !DILocation(line: 1313, column: 9, scope: !2402)
!2460 = !DILocation(line: 1314, column: 6, scope: !2402)
!2461 = distinct !DISubprogram(name: "as_slice", linkageName: "_ZN3std3sys4unix6os_str3Buf8as_slice17h7c81f02cc6b0dd96E", scope: !1213, file: !2425, line: 142, type: !2462, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2465)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!2428, !2464}
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::os_str::Buf", baseType: !1213, size: 64, align: 64, dwarfAddressSpace: 0)
!2465 = !{!2466}
!2466 = !DILocalVariable(name: "self", arg: 1, scope: !2461, file: !2425, line: 142, type: !2464)
!2467 = !DILocation(line: 142, column: 21, scope: !2461)
!2468 = !DILocation(line: 146, column: 35, scope: !2461)
!2469 = !DILocalVariable(name: "self", scope: !2470, file: !2425, line: 146, type: !2476, align: 8)
!2470 = !DILexicalBlockFile(scope: !2471, file: !2425, discriminator: 0)
!2471 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E", scope: !2473, file: !2472, line: 2531, type: !2474, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !2477)
!2472 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!2473 = !DINamespace(name: "{impl#10}", scope: !1220)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!892, !2476}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !1219, size: 64, align: 64, dwarfAddressSpace: 0)
!2477 = !{!2469}
!2478 = !DILocation(line: 146, column: 34, scope: !2470, inlinedAt: !2479)
!2479 = !DILocation(line: 146, column: 34, scope: !2461)
!2480 = !DILocalVariable(name: "data", scope: !2481, file: !2425, line: 146, type: !342, align: 8)
!2481 = !DILexicalBlockFile(scope: !2482, file: !2425, discriminator: 0)
!2482 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h7379c702bbd7bb59E", scope: !2484, file: !2483, line: 90, type: !2485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !2487)
!2483 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "088c8c8f39879d7962a98cde38c490e4")
!2484 = !DINamespace(name: "raw", scope: !255)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!892, !342, !9}
!2487 = !{!2480, !2488, !2489}
!2488 = !DILocalVariable(name: "len", scope: !2481, file: !2425, line: 146, type: !9, align: 8)
!2489 = !DILocalVariable(name: "runtime", scope: !2490, file: !2425, line: 146, type: !2492, align: 8)
!2490 = !DILexicalBlockFile(scope: !2491, file: !2425, discriminator: 0)
!2491 = distinct !DILexicalBlock(scope: !2482, file: !640, line: 2319, column: 13)
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !2493, file: !2, size: 128, align: 64, elements: !2494, templateParams: !23, identifier: "b67666f88102bede2df5d7a4c2052977")
!2493 = !DINamespace(name: "from_raw_parts", scope: !2484)
!2494 = !{!2495, !2497}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !2492, file: !2, baseType: !2496, size: 64, align: 64)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !342, size: 64, align: 64, dwarfAddressSpace: 0)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !2492, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!2498 = !DILocation(line: 146, column: 34, scope: !2481, inlinedAt: !2499)
!2499 = !DILocation(line: 2532, column: 18, scope: !2471, inlinedAt: !2479)
!2500 = !DILocalVariable(name: "data", scope: !2501, file: !2425, line: 146, type: !342, align: 8)
!2501 = !DILexicalBlockFile(scope: !2502, file: !2425, discriminator: 0)
!2502 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !2503)
!2503 = !{!2500, !2504}
!2504 = !DILocalVariable(name: "len", scope: !2501, file: !2425, line: 146, type: !9, align: 8)
!2505 = !DILocation(line: 146, column: 34, scope: !2501, inlinedAt: !2506)
!2506 = !DILocation(line: 97, column: 11, scope: !2482, inlinedAt: !2499)
!2507 = !DILocalVariable(name: "self", scope: !2508, file: !2425, line: 146, type: !342, align: 8)
!2508 = !DILexicalBlockFile(scope: !2509, file: !2425, discriminator: 0)
!2509 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !2510)
!2510 = !{!2507}
!2511 = !DILocation(line: 146, column: 34, scope: !2508, inlinedAt: !2512)
!2512 = !DILocation(line: 695, column: 20, scope: !2502, inlinedAt: !2506)
!2513 = !DILocalVariable(name: "data_address", scope: !2514, file: !2425, line: 146, type: !6, align: 8)
!2514 = !DILexicalBlockFile(scope: !2515, file: !2425, discriminator: 0)
!2515 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !2516)
!2516 = !{!2513, !2517}
!2517 = !DILocalVariable(name: "metadata", scope: !2514, file: !2425, line: 146, type: !9, align: 8)
!2518 = !DILocation(line: 146, column: 34, scope: !2514, inlinedAt: !2519)
!2519 = !DILocation(line: 695, column: 5, scope: !2502, inlinedAt: !2506)
!2520 = !DILocation(line: 146, column: 18, scope: !2461)
!2521 = !DILocation(line: 147, column: 6, scope: !2461)
!2522 = distinct !DISubprogram(name: "arg<&str>", linkageName: "_ZN3std7process7Command3arg17h40e8406b4949a826E", scope: !2523, file: !2318, line: 603, type: !2724, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2730, retainedNodes: !2727)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Command", scope: !2320, file: !2, size: 1664, align: 64, elements: !2524, templateParams: !23, identifier: "154c0c69e3b20b071c1d88b38f3c4b95")
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2523, file: !2, baseType: !2526, size: 1664, align: 64)
!2526 = !DICompositeType(tag: DW_TAG_structure_type, name: "Command", scope: !2324, file: !2, size: 1664, align: 64, elements: !2527, templateParams: !23, identifier: "50077901367c83a32accf1bbc9af1ee")
!2527 = !{!2528, !2538, !2560, !2586, !2593, !2605, !2619, !2620, !2621, !2649, !2668, !2707, !2708, !2709, !2710}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !2526, file: !2, baseType: !2529, size: 128, align: 64)
!2529 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !2530, file: !2, size: 128, align: 64, elements: !2532, templateParams: !23, identifier: "913dc43b3fe656d77f0665d488019cf")
!2530 = !DINamespace(name: "c_str", scope: !2531)
!2531 = !DINamespace(name: "ffi", scope: !223)
!2532 = !{!2533}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2529, file: !2, baseType: !2534, size: 128, align: 64)
!2534 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2535, templateParams: !23, identifier: "a0a2a54995f7c1a02ab86cae24082910")
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2534, file: !2, baseType: !51, size: 64, align: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2534, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2526, file: !2, baseType: !2539, size: 192, align: 64, offset: 128)
!2539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>", scope: !1220, file: !2, size: 192, align: 64, elements: !2540, templateParams: !2558, identifier: "ba1933352ff3bcf7cd0cf1cfcbafe406")
!2540 = !{!2541, !2559}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2539, file: !2, baseType: !2542, size: 128, align: 64)
!2542 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", scope: !222, file: !2, size: 128, align: 64, elements: !2543, templateParams: !2558, identifier: "12eb93e84fbd874dd8c141ca8a702d34")
!2543 = !{!2544, !2556, !2557}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2542, file: !2, baseType: !2545, size: 64, align: 64)
!2545 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::ffi::c_str::CString>", scope: !1227, file: !2, size: 64, align: 64, elements: !2546, templateParams: !2552, identifier: "c8a3783679139d57f9565106146ca68b")
!2546 = !{!2547, !2554}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2545, file: !2, baseType: !2548, size: 64, align: 64)
!2548 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::ffi::c_str::CString>", scope: !259, file: !2, size: 64, align: 64, elements: !2549, templateParams: !2552, identifier: "6108160f7c629bcab3f77315bb20ed8d")
!2549 = !{!2550}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2548, file: !2, baseType: !2551, size: 64, align: 64)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::ffi::c_str::CString", baseType: !2529, size: 64, align: 64, dwarfAddressSpace: 0)
!2552 = !{!2553}
!2553 = !DITemplateTypeParameter(name: "T", type: !2529)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2545, file: !2, baseType: !2555, align: 8)
!2555 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::ffi::c_str::CString>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !2552, identifier: "da850e102b1798006dd299ba0df304c3")
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2542, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2542, file: !2, baseType: !1234, align: 8)
!2558 = !{!2553, !1237}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2539, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2526, file: !2, baseType: !2561, size: 192, align: 64, offset: 320)
!2561 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argv", scope: !2324, file: !2, size: 192, align: 64, elements: !2562, templateParams: !23, identifier: "8449fe8ee28ba8f3f071dd3203797920")
!2562 = !{!2563}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2561, file: !2, baseType: !2564, size: 192, align: 64)
!2564 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<*const i8, alloc::alloc::Global>", scope: !1220, file: !2, size: 192, align: 64, elements: !2565, templateParams: !2584, identifier: "845acb9a5ae83993cc55ac7ba851b171")
!2565 = !{!2566, !2585}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2564, file: !2, baseType: !2567, size: 128, align: 64)
!2567 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<*const i8, alloc::alloc::Global>", scope: !222, file: !2, size: 128, align: 64, elements: !2568, templateParams: !2584, identifier: "e6fe34c67c1eab9b3300ace8ce74b19a")
!2568 = !{!2569, !2582, !2583}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2567, file: !2, baseType: !2570, size: 64, align: 64)
!2570 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<*const i8>", scope: !1227, file: !2, size: 64, align: 64, elements: !2571, templateParams: !2578, identifier: "afe351026fb68f7ff9589348f37c46c0")
!2571 = !{!2572, !2580}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2570, file: !2, baseType: !2573, size: 64, align: 64)
!2573 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<*const i8>", scope: !259, file: !2, size: 64, align: 64, elements: !2574, templateParams: !2578, identifier: "35ae0f0df3709dedb8d6b774037d56a2")
!2574 = !{!2575}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2573, file: !2, baseType: !2576, size: 64, align: 64)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const i8", baseType: !2577, size: 64, align: 64, dwarfAddressSpace: 0)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !201, size: 64, align: 64, dwarfAddressSpace: 0)
!2578 = !{!2579}
!2579 = !DITemplateTypeParameter(name: "T", type: !2577)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2570, file: !2, baseType: !2581, align: 8)
!2581 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<*const i8>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !2578, identifier: "c7d472b8ace256ebb919f17affda93dd")
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2567, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2567, file: !2, baseType: !1234, align: 8)
!2584 = !{!2579, !1237}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2564, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2526, file: !2, baseType: !2587, size: 256, align: 64, offset: 512)
!2587 = !DICompositeType(tag: DW_TAG_structure_type, name: "CommandEnv", scope: !2588, file: !2, size: 256, align: 64, elements: !2589, templateParams: !23, identifier: "8592a588e7ee644019d53a8de4696168")
!2588 = !DINamespace(name: "process", scope: !1710)
!2589 = !{!2590, !2591, !2592}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "clear", scope: !2587, file: !2, baseType: !989, size: 8, align: 8, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "saw_path", scope: !2587, file: !2, baseType: !989, size: 8, align: 8, offset: 200)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2587, file: !2, baseType: !1360, size: 192, align: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2526, file: !2, baseType: !2594, size: 128, align: 64, offset: 768)
!2594 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::ffi::c_str::CString>", scope: !39, file: !2, size: 128, align: 64, elements: !2595, templateParams: !23, identifier: "bcfb4336eef966d354c10f911a3ba28")
!2595 = !{!2596}
!2596 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2594, file: !2, size: 128, align: 64, elements: !2597, templateParams: !23, identifier: "4fbb849e7ea8409911db07cbd02623a2", discriminator: !2604)
!2597 = !{!2598, !2600}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2596, file: !2, baseType: !2599, size: 128, align: 64, extraData: i64 0)
!2599 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2594, file: !2, size: 128, align: 64, elements: !23, templateParams: !2552, identifier: "36518db1b560e4094bc03a97d9c60aa9")
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2596, file: !2, baseType: !2601, size: 128, align: 64)
!2601 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2594, file: !2, size: 128, align: 64, elements: !2602, templateParams: !2552, identifier: "9894e6c32f35f4b281713e037f0f2906")
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2601, file: !2, baseType: !2529, size: 128, align: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, scope: !2594, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2526, file: !2, baseType: !2606, size: 64, align: 32, offset: 1216)
!2606 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !39, file: !2, size: 64, align: 32, elements: !2607, templateParams: !23, identifier: "e42adc431e63a05fdb19997ffd795bf")
!2607 = !{!2608}
!2608 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2606, file: !2, size: 64, align: 32, elements: !2609, templateParams: !23, identifier: "dd73d21752668c102b4d6e6dee7ca3cc", discriminator: !2618)
!2609 = !{!2610, !2614}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2608, file: !2, baseType: !2611, size: 64, align: 32, extraData: i64 0)
!2611 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2606, file: !2, size: 64, align: 32, elements: !23, templateParams: !2612, identifier: "3498c3fa7bdff8779b925955021b9b15")
!2612 = !{!2613}
!2613 = !DITemplateTypeParameter(name: "T", type: !327)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2608, file: !2, baseType: !2615, size: 64, align: 32, extraData: i64 1)
!2615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2606, file: !2, size: 64, align: 32, elements: !2616, templateParams: !2612, identifier: "7ee1c9f73e016579beca6771b4b5aaa9")
!2616 = !{!2617}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2615, file: !2, baseType: !327, size: 32, align: 32, offset: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2, baseType: !327, size: 32, align: 32, flags: DIFlagArtificial)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2526, file: !2, baseType: !2606, size: 64, align: 32, offset: 1280)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "saw_nul", scope: !2526, file: !2, baseType: !989, size: 8, align: 8, offset: 1600)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "closures", scope: !2526, file: !2, baseType: !2622, size: 192, align: 64, offset: 896)
!2622 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", scope: !1220, file: !2, size: 192, align: 64, elements: !2623, templateParams: !2647, identifier: "788ca1e9037638f472e3765421553959")
!2623 = !{!2624, !2648}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2622, file: !2, baseType: !2625, size: 128, align: 64)
!2625 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", scope: !222, file: !2, size: 128, align: 64, elements: !2626, templateParams: !2647, identifier: "f07ed91dc7bf9da3dcc8e4f008d58a8b")
!2626 = !{!2627, !2645, !2646}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2625, file: !2, baseType: !2628, size: 64, align: 64)
!2628 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", scope: !1227, file: !2, size: 64, align: 64, elements: !2629, templateParams: !2641, identifier: "2b3a4a36923d3b5c4b12244c61ca577d")
!2629 = !{!2630, !2643}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2628, file: !2, baseType: !2631, size: 64, align: 64)
!2631 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", scope: !259, file: !2, size: 64, align: 64, elements: !2632, templateParams: !2641, identifier: "be24a4e1927321cce0071b9364efd602")
!2632 = !{!2633}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2631, file: !2, baseType: !2634, size: 64, align: 64)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !2635, size: 64, align: 64, dwarfAddressSpace: 0)
!2635 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2636, templateParams: !23, identifier: "bd2418adfccf9951253478aa131e4cef")
!2636 = !{!2637, !2640}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2635, file: !2, baseType: !2638, size: 64, align: 64)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64, align: 64, dwarfAddressSpace: 0)
!2639 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !23, identifier: "3fb250b31e640a08d9ded23fa7bc1d9c")
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2635, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!2641 = !{!2642}
!2642 = !DITemplateTypeParameter(name: "T", type: !2635)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2628, file: !2, baseType: !2644, align: 8)
!2644 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !2641, identifier: "9f3011154d9cee50dbe53721f9d6f411")
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2625, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2625, file: !2, baseType: !1234, align: 8)
!2647 = !{!2642, !1237}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2622, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2526, file: !2, baseType: !2650, size: 128, align: 64, offset: 1088)
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::boxed::Box<[u32], alloc::alloc::Global>>", scope: !39, file: !2, size: 128, align: 64, elements: !2651, templateParams: !23, identifier: "5a5ae55ca063783cd49c1157e8c05939")
!2651 = !{!2652}
!2652 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2650, file: !2, size: 128, align: 64, elements: !2653, templateParams: !23, identifier: "9966e054db905dedf8c66dbc6b683ec0", discriminator: !2667)
!2653 = !{!2654, !2663}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2652, file: !2, baseType: !2655, size: 128, align: 64, extraData: i64 0)
!2655 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2650, file: !2, size: 128, align: 64, elements: !23, templateParams: !2656, identifier: "b653d403ec4585f9fa3d57d7fd71580a")
!2656 = !{!2657}
!2657 = !DITemplateTypeParameter(name: "T", type: !2658)
!2658 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u32], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2659, templateParams: !23, identifier: "7ca87e3b6c18c120c4256ae26402681e")
!2659 = !{!2660, !2662}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2658, file: !2, baseType: !2661, size: 64, align: 64)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2658, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2652, file: !2, baseType: !2664, size: 128, align: 64)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2650, file: !2, size: 128, align: 64, elements: !2665, templateParams: !2656, identifier: "ad623cd15fe44f61f747a86ab6cae876")
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2664, file: !2, baseType: !2658, size: 128, align: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "stdin", scope: !2526, file: !2, baseType: !2669, size: 64, align: 32, offset: 1344)
!2669 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::sys::unix::process::process_common::Stdio>", scope: !39, file: !2, size: 64, align: 32, elements: !2670, templateParams: !23, identifier: "137f5b2c5b886a2c7a54aed4f2dc962e")
!2670 = !{!2671}
!2671 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2669, file: !2, size: 64, align: 32, elements: !2672, templateParams: !23, identifier: "9bf5b44579a30e843d83a53634b9ca4b", discriminator: !2706)
!2672 = !{!2673, !2702}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2671, file: !2, baseType: !2674, size: 64, align: 32, extraData: i64 4)
!2674 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2669, file: !2, size: 64, align: 32, elements: !23, templateParams: !2675, identifier: "a359386c9512b48c26b97b502f563e3")
!2675 = !{!2676}
!2676 = !DITemplateTypeParameter(name: "T", type: !2677)
!2677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Stdio", scope: !2324, file: !2, size: 64, align: 32, elements: !2678, templateParams: !23, identifier: "cd6ffc093d9d386ecb87c790b39797b")
!2678 = !{!2679}
!2679 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2677, file: !2, size: 64, align: 32, elements: !2680, templateParams: !23, identifier: "6fefbb6a2dd3632b3fa761db69094b73", discriminator: !2701)
!2680 = !{!2681, !2683, !2685, !2687}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "Inherit", scope: !2679, file: !2, baseType: !2682, size: 64, align: 32, extraData: i64 0)
!2682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Inherit", scope: !2677, file: !2, size: 64, align: 32, elements: !23, identifier: "e64c8fab64c5f20140650b4bf750b141")
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "Null", scope: !2679, file: !2, baseType: !2684, size: 64, align: 32, extraData: i64 1)
!2684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Null", scope: !2677, file: !2, size: 64, align: 32, elements: !23, identifier: "6ea6f9b836d5c7b72b741ed48f9cc578")
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "MakePipe", scope: !2679, file: !2, baseType: !2686, size: 64, align: 32, extraData: i64 2)
!2686 = !DICompositeType(tag: DW_TAG_structure_type, name: "MakePipe", scope: !2677, file: !2, size: 64, align: 32, elements: !23, identifier: "8782e90f6096565bd3b43e80b3606f6b")
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "Fd", scope: !2679, file: !2, baseType: !2688, size: 64, align: 32, extraData: i64 3)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Fd", scope: !2677, file: !2, size: 64, align: 32, elements: !2689, templateParams: !23, identifier: "57632841c1703e485bf802969e5d1254")
!2689 = !{!2690}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2688, file: !2, baseType: !2691, size: 32, align: 32, offset: 32)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileDesc", scope: !2692, file: !2, size: 32, align: 32, elements: !2693, templateParams: !23, identifier: "2e1932469f3113d2bdf59099233c0f3")
!2692 = !DINamespace(name: "fd", scope: !1215)
!2693 = !{!2694}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2691, file: !2, baseType: !2695, size: 32, align: 32)
!2695 = !DICompositeType(tag: DW_TAG_structure_type, name: "OwnedFd", scope: !2696, file: !2, size: 32, align: 32, elements: !2699, templateParams: !23, identifier: "b0198eba00b6993dfb19965ebb2fca04")
!2696 = !DINamespace(name: "owned", scope: !2697)
!2697 = !DINamespace(name: "fd", scope: !2698)
!2698 = !DINamespace(name: "os", scope: !17)
!2699 = !{!2700}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2695, file: !2, baseType: !1776, size: 32, align: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, scope: !2677, file: !2, baseType: !327, size: 32, align: 32, flags: DIFlagArtificial)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2671, file: !2, baseType: !2703, size: 64, align: 32)
!2703 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2669, file: !2, size: 64, align: 32, elements: !2704, templateParams: !2675, identifier: "426f403e68d715c55fe1851b3f414ea3")
!2704 = !{!2705}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2703, file: !2, baseType: !2677, size: 64, align: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2, baseType: !327, size: 32, align: 32, flags: DIFlagArtificial)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "stdout", scope: !2526, file: !2, baseType: !2669, size: 64, align: 32, offset: 1408)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "stderr", scope: !2526, file: !2, baseType: !2669, size: 64, align: 32, offset: 1472)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "create_pidfd", scope: !2526, file: !2, baseType: !989, size: 8, align: 8, offset: 1608)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pgroup", scope: !2526, file: !2, baseType: !2711, size: 64, align: 32, offset: 1536)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i32>", scope: !39, file: !2, size: 64, align: 32, elements: !2712, templateParams: !23, identifier: "3e4f95dd48e7df2a2ca010a239c4be7d")
!2712 = !{!2713}
!2713 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2711, file: !2, size: 64, align: 32, elements: !2714, templateParams: !23, identifier: "e3d2114cbac34424f4eb38c19527e60e", discriminator: !2723)
!2714 = !{!2715, !2719}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2713, file: !2, baseType: !2716, size: 64, align: 32, extraData: i64 0)
!2716 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2711, file: !2, size: 64, align: 32, elements: !23, templateParams: !2717, identifier: "cb2fb05e81b87150a6b0083d1daee96")
!2717 = !{!2718}
!2718 = !DITemplateTypeParameter(name: "T", type: !1776)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2713, file: !2, baseType: !2720, size: 64, align: 32, extraData: i64 1)
!2720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2711, file: !2, size: 64, align: 32, elements: !2721, templateParams: !2717, identifier: "abd106fb1334eff870fed9bb24bbaf7")
!2721 = !{!2722}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2720, file: !2, baseType: !1776, size: 32, align: 32, offset: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2711, file: !2, baseType: !327, size: 32, align: 32, flags: DIFlagArtificial)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!2726, !2726, !48}
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::process::Command", baseType: !2523, size: 64, align: 64, dwarfAddressSpace: 0)
!2727 = !{!2728, !2729}
!2728 = !DILocalVariable(name: "self", arg: 1, scope: !2522, file: !2318, line: 603, type: !2726)
!2729 = !DILocalVariable(name: "arg", arg: 2, scope: !2522, file: !2318, line: 603, type: !48)
!2730 = !{!2731}
!2731 = !DITemplateTypeParameter(name: "S", type: !48)
!2732 = !DILocation(line: 603, column: 33, scope: !2522)
!2733 = !DILocation(line: 603, column: 44, scope: !2522)
!2734 = !DILocation(line: 604, column: 9, scope: !2522)
!2735 = !DILocation(line: 604, column: 24, scope: !2522)
!2736 = !DILocation(line: 606, column: 5, scope: !2522)
!2737 = !DILocation(line: 603, column: 5, scope: !2522)
!2738 = !DILocation(line: 606, column: 6, scope: !2522)
!2739 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN3std7process7Command3new17h670ad35140f40c15E", scope: !2523, file: !2318, line: 557, type: !2740, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2730, retainedNodes: !2742)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!2523, !48}
!2742 = !{!2743}
!2743 = !DILocalVariable(name: "program", arg: 1, scope: !2739, file: !2318, line: 557, type: !48)
!2744 = !DILocation(line: 557, column: 33, scope: !2739)
!2745 = !DILocation(line: 558, column: 44, scope: !2739)
!2746 = !DILocation(line: 559, column: 5, scope: !2739)
!2747 = !DILocation(line: 558, column: 26, scope: !2739)
!2748 = !DILocation(line: 558, column: 9, scope: !2739)
!2749 = !DILocation(line: 557, column: 5, scope: !2739)
!2750 = !DILocation(line: 559, column: 6, scope: !2739)
!2751 = distinct !DISubprogram(name: "new<std::ffi::os_str::OsString>", linkageName: "_ZN3std7process7Command3new17h9f99ecca9871a14cE", scope: !2523, file: !2318, line: 557, type: !2752, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2756, retainedNodes: !2754)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!2523, !1208}
!2754 = !{!2755}
!2755 = !DILocalVariable(name: "program", arg: 1, scope: !2751, file: !2318, line: 557, type: !1208)
!2756 = !{!2757}
!2757 = !DITemplateTypeParameter(name: "S", type: !1208)
!2758 = !DILocation(line: 557, column: 33, scope: !2751)
!2759 = !DILocation(line: 558, column: 44, scope: !2751)
!2760 = !DILocation(line: 559, column: 5, scope: !2751)
!2761 = !DILocation(line: 558, column: 26, scope: !2751)
!2762 = !DILocation(line: 558, column: 9, scope: !2751)
!2763 = !DILocation(line: 557, column: 5, scope: !2751)
!2764 = !DILocation(line: 559, column: 6, scope: !2751)
!2765 = distinct !DISubprogram(name: "begin_panic<&str>", linkageName: "_ZN3std9panicking11begin_panic17he50ffc7fe93cc4e0E", scope: !35, file: !2766, line: 610, type: !2767, scopeLine: 610, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2773, retainedNodes: !2769)
!2766 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "458921563954eb00514d12aed6f47a06")
!2767 = !DISubroutineType(types: !2768)
!2768 = !{null, !48, !917}
!2769 = !{!2770, !2771}
!2770 = !DILocalVariable(name: "msg", arg: 1, scope: !2765, file: !2766, line: 610, type: !48)
!2771 = !DILocalVariable(name: "loc", scope: !2772, file: !2766, line: 615, type: !917, align: 8)
!2772 = distinct !DILexicalBlock(scope: !2765, file: !2766, line: 615, column: 5)
!2773 = !{!2774}
!2774 = !DITemplateTypeParameter(name: "M", type: !48)
!2775 = !DILocation(line: 610, column: 41, scope: !2765)
!2776 = !DILocation(line: 611, column: 5, scope: !2765)
!2777 = !DILocation(line: 615, column: 15, scope: !2778, inlinedAt: !2783)
!2778 = !DILexicalBlockFile(scope: !2779, file: !2766, discriminator: 0)
!2779 = distinct !DISubprogram(name: "caller", linkageName: "_ZN4core5panic8location8Location6caller17he60759116b8e9227E", scope: !918, file: !2780, line: 87, type: !2781, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!2780 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/panic/location.rs", directory: "", checksumkind: CSK_MD5, checksum: "231a628cd3f0fd4f225c41bb55e2fc7d")
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!917, !917}
!2783 = !DILocation(line: 615, column: 15, scope: !2765)
!2784 = !DILocation(line: 615, column: 9, scope: !2772)
!2785 = !DILocation(line: 616, column: 69, scope: !2772)
!2786 = !DILocation(line: 616, column: 12, scope: !2772)
!2787 = !DILocation(line: 651, column: 1, scope: !2765)
!2788 = !DILocation(line: 610, column: 1, scope: !2765)
!2789 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h0c86411d559645d7E", scope: !33, file: !2766, line: 625, type: !2790, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !60, retainedNodes: !2792)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!33, !48}
!2792 = !{!2793}
!2793 = !DILocalVariable(name: "inner", arg: 1, scope: !2789, file: !2766, line: 625, type: !48)
!2794 = !DILocation(line: 625, column: 16, scope: !2789)
!2795 = !DILocation(line: 626, column: 35, scope: !2789)
!2796 = !DILocation(line: 626, column: 13, scope: !2789)
!2797 = !DILocation(line: 627, column: 10, scope: !2789)
!2798 = distinct !DISubprogram(name: "{closure#0}<&str>", linkageName: "_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h83e0383ceb9b4c80E", scope: !34, file: !2766, line: 616, type: !1711, scopeLine: 616, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2773, retainedNodes: !2799)
!2799 = !{!2800, !2801}
!2800 = !DILocalVariable(name: "msg", scope: !2798, file: !2766, line: 610, type: !48, align: 8)
!2801 = !DILocalVariable(name: "loc", scope: !2798, file: !2766, line: 615, type: !917, align: 8)
!2802 = !DILocation(line: 610, column: 41, scope: !2798)
!2803 = !DILocation(line: 615, column: 9, scope: !2798)
!2804 = !DILocation(line: 617, column: 53, scope: !2798)
!2805 = !DILocation(line: 617, column: 35, scope: !2798)
!2806 = !DILocation(line: 617, column: 30, scope: !2798)
!2807 = !DILocation(line: 617, column: 59, scope: !2798)
!2808 = !DILocation(line: 617, column: 65, scope: !2798)
!2809 = !DILocation(line: 617, column: 9, scope: !2798)
!2810 = !DILocation(line: 618, column: 5, scope: !2798)
!2811 = !DILocation(line: 616, column: 69, scope: !2798)
!2812 = distinct !DISubprogram(name: "fmt<&str>", linkageName: "_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0427302dc23aab41E", scope: !2813, file: !1996, line: 2361, type: !2814, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !2817)
!2813 = !DINamespace(name: "{impl#61}", scope: !193)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!2065, !2816, !2082}
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&&str", baseType: !270, size: 64, align: 64, dwarfAddressSpace: 0)
!2817 = !{!2818, !2819}
!2818 = !DILocalVariable(name: "self", arg: 1, scope: !2812, file: !1996, line: 2361, type: !2816)
!2819 = !DILocalVariable(name: "f", arg: 2, scope: !2812, file: !1996, line: 2361, type: !2082)
!2820 = !DILocation(line: 2361, column: 20, scope: !2812)
!2821 = !DILocation(line: 2361, column: 27, scope: !2812)
!2822 = !DILocation(line: 2361, column: 71, scope: !2812)
!2823 = !DILocation(line: 2361, column: 62, scope: !2812)
!2824 = !DILocation(line: 2361, column: 84, scope: !2812)
!2825 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hd7038587a5bd85f2E", scope: !2813, file: !1996, line: 2361, type: !2826, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !2828)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!2065, !270, !2082}
!2828 = !{!2829, !2830}
!2829 = !DILocalVariable(name: "self", arg: 1, scope: !2825, file: !1996, line: 2361, type: !270)
!2830 = !DILocalVariable(name: "f", arg: 2, scope: !2825, file: !1996, line: 2361, type: !2082)
!2831 = !DILocation(line: 2361, column: 20, scope: !2825)
!2832 = !DILocation(line: 2361, column: 27, scope: !2825)
!2833 = !DILocation(line: 2361, column: 71, scope: !2825)
!2834 = !DILocation(line: 2361, column: 62, scope: !2825)
!2835 = !DILocation(line: 2361, column: 84, scope: !2825)
!2836 = distinct !DISubprogram(name: "into_searcher<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6926105b05642888E", scope: !2837, file: !468, line: 704, type: !2838, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1128, retainedNodes: !2840)
!2837 = !DINamespace(name: "{impl#26}", scope: !470)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!1125, !494, !48}
!2840 = !{!2841, !2842}
!2841 = !DILocalVariable(name: "self", arg: 1, scope: !2836, file: !468, line: 704, type: !494)
!2842 = !DILocalVariable(name: "haystack", arg: 2, scope: !2836, file: !468, line: 704, type: !48)
!2843 = !DILocation(line: 704, column: 26, scope: !2836)
!2844 = !DILocation(line: 704, column: 32, scope: !2836)
!2845 = !DILocation(line: 705, column: 21, scope: !2836)
!2846 = !DILocation(line: 705, column: 13, scope: !2836)
!2847 = !DILocation(line: 706, column: 10, scope: !2836)
!2848 = distinct !DISubprogram(name: "into_searcher<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h9497189a00934520E", scope: !2837, file: !468, line: 704, type: !2849, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2864, retainedNodes: !2866)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!2851, !2857, !48}
!2851 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharPredicateSearcher<build_script_build::emcc_version_code::{closure_env#0}>", scope: !470, file: !2, size: 320, align: 64, elements: !2852, templateParams: !2864, identifier: "f319d5b201b2f5c4f81d413510bf6524")
!2852 = !{!2853}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2851, file: !2, baseType: !2854, size: 320, align: 64)
!2854 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqSearcher<build_script_build::emcc_version_code::{closure_env#0}>", scope: !470, file: !2, size: 320, align: 64, elements: !2855, templateParams: !2862, identifier: "c16a25ad5072c6fe898d90eb17c14a1f")
!2855 = !{!2856, !2860, !2861}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "char_eq", scope: !2854, file: !2, baseType: !2857, align: 8)
!2857 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2858, file: !2, align: 8, elements: !23, identifier: "79ff2c21963531f9c4a9b42bda3ac105")
!2858 = !DINamespace(name: "emcc_version_code", scope: !2859)
!2859 = !DINamespace(name: "build_script_build", scope: null)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !2854, file: !2, baseType: !48, size: 128, align: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "char_indices", scope: !2854, file: !2, baseType: !329, size: 192, align: 64, offset: 128)
!2862 = !{!2863}
!2863 = !DITemplateTypeParameter(name: "C", type: !2857)
!2864 = !{!2865}
!2865 = !DITemplateTypeParameter(name: "F", type: !2857)
!2866 = !{!2867, !2868}
!2867 = !DILocalVariable(name: "self", arg: 1, scope: !2848, file: !468, line: 704, type: !2857)
!2868 = !DILocalVariable(name: "haystack", arg: 2, scope: !2848, file: !468, line: 704, type: !48)
!2869 = !DILocation(line: 704, column: 26, scope: !2848)
!2870 = !DILocation(line: 704, column: 32, scope: !2848)
!2871 = !DILocation(line: 705, column: 21, scope: !2848)
!2872 = !DILocation(line: 705, column: 13, scope: !2848)
!2873 = !DILocation(line: 706, column: 10, scope: !2848)
!2874 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1d4dcef1ac74e1c9E", scope: !2876, file: !2875, line: 189, type: !2878, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2880)
!2875 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!2876 = !DINamespace(name: "{impl#37}", scope: !2877)
!2877 = !DINamespace(name: "range", scope: !233)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!9, !9, !9}
!2880 = !{!2881, !2882}
!2881 = !DILocalVariable(name: "start", arg: 1, scope: !2874, file: !2875, line: 189, type: !9)
!2882 = !DILocalVariable(name: "n", arg: 2, scope: !2874, file: !2875, line: 189, type: !9)
!2883 = !DILocation(line: 189, column: 37, scope: !2874)
!2884 = !DILocation(line: 189, column: 50, scope: !2874)
!2885 = !DILocation(line: 191, column: 22, scope: !2874)
!2886 = !DILocalVariable(name: "self", scope: !2887, file: !2875, line: 191, type: !9, align: 8)
!2887 = !DILexicalBlockFile(scope: !2888, file: !2875, discriminator: 0)
!2888 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17hab30dbab5a9e7a80E", scope: !2890, file: !2889, line: 461, type: !2878, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2891)
!2889 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "60fdadbd334dce6d03de842cfe3a5c0c")
!2890 = !DINamespace(name: "{impl#11}", scope: !208)
!2891 = !{!2886, !2892}
!2892 = !DILocalVariable(name: "rhs", scope: !2887, file: !2875, line: 191, type: !9, align: 8)
!2893 = !DILocation(line: 191, column: 22, scope: !2887, inlinedAt: !2885)
!2894 = !DILocation(line: 191, column: 42, scope: !2874)
!2895 = !DILocation(line: 192, column: 10, scope: !2874)
!2896 = distinct !DISubprogram(name: "of<&str>", linkageName: "_ZN4core3any6TypeId2of17h7b64711a00802d80E", scope: !1699, file: !1694, line: 693, type: !2897, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !23)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!1699}
!2899 = !DILocation(line: 694, column: 21, scope: !2896)
!2900 = !DILocation(line: 694, column: 9, scope: !2896)
!2901 = !DILocation(line: 695, column: 6, scope: !2896)
!2902 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hf8a1ee2773dc55ecE", scope: !2904, file: !2903, line: 1405, type: !2906, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2908)
!2903 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "ab23074fa028287825e74e2bf421a441")
!2904 = !DINamespace(name: "{impl#55}", scope: !2905)
!2905 = !DINamespace(name: "impls", scope: !200)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!199, !387, !387}
!2908 = !{!2909, !2910}
!2909 = !DILocalVariable(name: "self", arg: 1, scope: !2902, file: !2903, line: 1405, type: !387)
!2910 = !DILocalVariable(name: "other", arg: 2, scope: !2902, file: !2903, line: 1405, type: !387)
!2911 = !DILocation(line: 1405, column: 24, scope: !2902)
!2912 = !DILocation(line: 1405, column: 31, scope: !2902)
!2913 = !DILocation(line: 1408, column: 24, scope: !2902)
!2914 = !DILocation(line: 1408, column: 32, scope: !2902)
!2915 = !DILocation(line: 1409, column: 29, scope: !2902)
!2916 = !DILocation(line: 1409, column: 38, scope: !2902)
!2917 = !DILocation(line: 1408, column: 41, scope: !2902)
!2918 = !DILocation(line: 1408, column: 21, scope: !2902)
!2919 = !DILocation(line: 1411, column: 18, scope: !2902)
!2920 = !{i8 -1, i8 2}
!2921 = !DILocation(line: 1410, column: 28, scope: !2902)
!2922 = !DILocation(line: 1409, column: 26, scope: !2902)
!2923 = !DILocation(line: 1409, column: 47, scope: !2902)
!2924 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hf4a1568806407259E", scope: !2925, file: !2903, line: 1393, type: !2926, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !2928)
!2925 = !DINamespace(name: "{impl#54}", scope: !2905)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!989, !387, !387}
!2928 = !{!2929, !2930}
!2929 = !DILocalVariable(name: "self", arg: 1, scope: !2924, file: !2903, line: 1393, type: !387)
!2930 = !DILocalVariable(name: "other", arg: 2, scope: !2924, file: !2903, line: 1393, type: !387)
!2931 = !DILocation(line: 1393, column: 23, scope: !2924)
!2932 = !DILocation(line: 1393, column: 30, scope: !2924)
!2933 = !DILocation(line: 1393, column: 52, scope: !2924)
!2934 = !DILocation(line: 1393, column: 62, scope: !2924)
!2935 = !DILocation(line: 1393, column: 72, scope: !2924)
!2936 = distinct !DISubprogram(name: "eq<str, str>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4d4a3809c8de9910E", scope: !2937, file: !2903, line: 1475, type: !2938, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !2940)
!2937 = !DINamespace(name: "{impl#9}", scope: !2905)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!989, !270, !270}
!2940 = !{!2941, !2942}
!2941 = !DILocalVariable(name: "self", arg: 1, scope: !2936, file: !2903, line: 1475, type: !270)
!2942 = !DILocalVariable(name: "other", arg: 2, scope: !2936, file: !2903, line: 1475, type: !270)
!2943 = !{!2944, !2945}
!2944 = !DITemplateTypeParameter(name: "A", type: !52)
!2945 = !DITemplateTypeParameter(name: "B", type: !52)
!2946 = !DILocation(line: 1475, column: 15, scope: !2936)
!2947 = !DILocation(line: 1475, column: 22, scope: !2936)
!2948 = !DILocation(line: 1476, column: 27, scope: !2936)
!2949 = !DILocation(line: 1476, column: 34, scope: !2936)
!2950 = !DILocation(line: 1476, column: 13, scope: !2936)
!2951 = !DILocation(line: 1477, column: 10, scope: !2936)
!2952 = distinct !DISubprogram(name: "ne<str, str>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h8462e05dd5d789ddE", scope: !2937, file: !2903, line: 1479, type: !2938, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !2953)
!2953 = !{!2954, !2955}
!2954 = !DILocalVariable(name: "self", arg: 1, scope: !2952, file: !2903, line: 1479, type: !270)
!2955 = !DILocalVariable(name: "other", arg: 2, scope: !2952, file: !2903, line: 1479, type: !270)
!2956 = !DILocation(line: 1479, column: 15, scope: !2952)
!2957 = !DILocation(line: 1479, column: 22, scope: !2952)
!2958 = !DILocation(line: 1480, column: 27, scope: !2952)
!2959 = !DILocation(line: 1480, column: 34, scope: !2952)
!2960 = !DILocation(line: 1480, column: 13, scope: !2952)
!2961 = !DILocation(line: 1481, column: 10, scope: !2952)
!2962 = distinct !DISubprogram(name: "max_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6max_by17h5c898ecc66be43b9E", scope: !200, file: !2903, line: 1273, type: !2963, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2970, retainedNodes: !2966)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!9, !9, !9, !2965}
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &usize) -> core::cmp::Ordering", baseType: !2906, size: 64, align: 64, dwarfAddressSpace: 0)
!2966 = !{!2967, !2968, !2969}
!2967 = !DILocalVariable(name: "v1", arg: 1, scope: !2962, file: !2903, line: 1273, type: !9)
!2968 = !DILocalVariable(name: "v2", arg: 2, scope: !2962, file: !2903, line: 1273, type: !9)
!2969 = !DILocalVariable(name: "compare", arg: 3, scope: !2962, file: !2903, line: 1273, type: !2965)
!2970 = !{!243, !2971}
!2971 = !DITemplateTypeParameter(name: "F", type: !2965)
!2972 = !DILocation(line: 1273, column: 49, scope: !2962)
!2973 = !DILocation(line: 1273, column: 56, scope: !2962)
!2974 = !DILocation(line: 1273, column: 63, scope: !2962)
!2975 = !DILocation(line: 1274, column: 11, scope: !2962)
!2976 = !DILocation(line: 1278, column: 1, scope: !2962)
!2977 = !DILocation(line: 1274, column: 5, scope: !2962)
!2978 = !DILocation(line: 1275, column: 45, scope: !2962)
!2979 = !DILocation(line: 1276, column: 30, scope: !2962)
!2980 = !DILocation(line: 1273, column: 1, scope: !2962)
!2981 = !DILocation(line: 1278, column: 2, scope: !2962)
!2982 = distinct !DISubprogram(name: "new_display<alloc::string::String>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h19ccdb0c77e0394cE", scope: !2055, file: !1996, line: 318, type: !2983, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2988, retainedNodes: !2986)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{!2055, !2985}
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !2358, size: 64, align: 64, dwarfAddressSpace: 0)
!2986 = !{!2987}
!2987 = !DILocalVariable(name: "x", arg: 1, scope: !2982, file: !1996, line: 318, type: !2985)
!2988 = !{!2363}
!2989 = !DILocation(line: 318, column: 30, scope: !2982)
!2990 = !DILocation(line: 319, column: 23, scope: !2982)
!2991 = !DILocalVariable(name: "x", scope: !2992, file: !1996, line: 319, type: !2985, align: 8)
!2992 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN4core3fmt10ArgumentV13new17ha4b3a83c05269a87E", scope: !2055, file: !1996, line: 329, type: !2993, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2988, retainedNodes: !2998)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!2055, !2985, !2995}
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&alloc::string::String, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2996, size: 64, align: 64, dwarfAddressSpace: 0)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!2065, !2985, !2082}
!2998 = !{!2991, !2999}
!2999 = !DILocalVariable(name: "f", scope: !2992, file: !1996, line: 319, type: !2995, align: 8)
!3000 = !DILocation(line: 319, column: 13, scope: !2992, inlinedAt: !3001)
!3001 = !DILocation(line: 319, column: 13, scope: !2982)
!3002 = !DILocation(line: 319, column: 26, scope: !2982)
!3003 = !DILocation(line: 320, column: 10, scope: !2982)
!3004 = distinct !DISubprogram(name: "new_display<&str>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h582ab69c2d5a85f5E", scope: !2055, file: !1996, line: 318, type: !3005, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !3007)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!2055, !270}
!3007 = !{!3008}
!3008 = !DILocalVariable(name: "x", arg: 1, scope: !3004, file: !1996, line: 318, type: !270)
!3009 = !DILocation(line: 318, column: 30, scope: !3004)
!3010 = !DILocation(line: 319, column: 23, scope: !3004)
!3011 = !DILocalVariable(name: "x", scope: !3012, file: !1996, line: 319, type: !270, align: 8)
!3012 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core3fmt10ArgumentV13new17h59f89c7c111c7356E", scope: !2055, file: !1996, line: 329, type: !3013, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !3016)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!2055, !270, !3015}
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2826, size: 64, align: 64, dwarfAddressSpace: 0)
!3016 = !{!3011, !3017}
!3017 = !DILocalVariable(name: "f", scope: !3012, file: !1996, line: 319, type: !3015, align: 8)
!3018 = !DILocation(line: 319, column: 13, scope: !3012, inlinedAt: !3019)
!3019 = !DILocation(line: 319, column: 13, scope: !3004)
!3020 = !DILocation(line: 319, column: 26, scope: !3004)
!3021 = !DILocation(line: 320, column: 10, scope: !3004)
!3022 = distinct !DISubprogram(name: "new_display<&&str>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h5e8def8530a18430E", scope: !2055, file: !1996, line: 318, type: !3023, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !268, retainedNodes: !3025)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!2055, !2816}
!3025 = !{!3026}
!3026 = !DILocalVariable(name: "x", arg: 1, scope: !3022, file: !1996, line: 318, type: !2816)
!3027 = !DILocation(line: 318, column: 30, scope: !3022)
!3028 = !DILocation(line: 319, column: 23, scope: !3022)
!3029 = !DILocalVariable(name: "x", scope: !3030, file: !1996, line: 319, type: !2816, align: 8)
!3030 = distinct !DISubprogram(name: "new<&&str>", linkageName: "_ZN4core3fmt10ArgumentV13new17h62df5349c9f041ecE", scope: !2055, file: !1996, line: 329, type: !3031, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !268, retainedNodes: !3034)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!2055, !2816, !3033}
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2814, size: 64, align: 64, dwarfAddressSpace: 0)
!3034 = !{!3029, !3035}
!3035 = !DILocalVariable(name: "f", scope: !3030, file: !1996, line: 319, type: !3033, align: 8)
!3036 = !DILocation(line: 319, column: 13, scope: !3030, inlinedAt: !3037)
!3037 = !DILocation(line: 319, column: 13, scope: !3022)
!3038 = !DILocation(line: 319, column: 26, scope: !3022)
!3039 = !DILocation(line: 320, column: 10, scope: !3022)
!3040 = distinct !DISubprogram(name: "new_display<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hfe8b01c3bbed3f42E", scope: !2055, file: !1996, line: 318, type: !3041, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3061, retainedNodes: !3059)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!2055, !3043}
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::borrow::Cow<str>", baseType: !3044, size: 64, align: 64, dwarfAddressSpace: 0)
!3044 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<str>", scope: !3045, file: !2, size: 256, align: 64, elements: !3046, templateParams: !23, identifier: "e48db592109fc1acadcccac621b8d60e")
!3045 = !DINamespace(name: "borrow", scope: !223)
!3046 = !{!3047}
!3047 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3044, file: !2, size: 256, align: 64, elements: !3048, templateParams: !23, identifier: "6e2c9b702d616db4ab45c8c9894a09b5", discriminator: !3058)
!3048 = !{!3049, !3054}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !3047, file: !2, baseType: !3050, size: 256, align: 64, extraData: i64 0)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !3044, file: !2, size: 256, align: 64, elements: !3051, templateParams: !3053, identifier: "d4068ed9ead1b1e1580f45ba6f878c43")
!3051 = !{!3052}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3050, file: !2, baseType: !48, size: 128, align: 64, offset: 64)
!3053 = !{!2945}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !3047, file: !2, baseType: !3055, size: 256, align: 64, extraData: i64 1)
!3055 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !3044, file: !2, size: 256, align: 64, elements: !3056, templateParams: !3053, identifier: "23b55df37bd548115a63a3a94b64c845")
!3056 = !{!3057}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3055, file: !2, baseType: !2358, size: 192, align: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, scope: !3044, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!3059 = !{!3060}
!3060 = !DILocalVariable(name: "x", arg: 1, scope: !3040, file: !1996, line: 318, type: !3043)
!3061 = !{!3062}
!3062 = !DITemplateTypeParameter(name: "T", type: !3044)
!3063 = !DILocation(line: 318, column: 30, scope: !3040)
!3064 = !DILocation(line: 319, column: 23, scope: !3040)
!3065 = !DILocalVariable(name: "x", scope: !3066, file: !1996, line: 319, type: !3043, align: 8)
!3066 = distinct !DISubprogram(name: "new<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3fmt10ArgumentV13new17h65bbf0d7a2c67acfE", scope: !2055, file: !1996, line: 329, type: !3067, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3061, retainedNodes: !3072)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!2055, !3043, !3069}
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&alloc::borrow::Cow<str>, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3070, size: 64, align: 64, dwarfAddressSpace: 0)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!2065, !3043, !2082}
!3072 = !{!3065, !3073}
!3073 = !DILocalVariable(name: "f", scope: !3066, file: !1996, line: 319, type: !3069, align: 8)
!3074 = !DILocation(line: 319, column: 13, scope: !3066, inlinedAt: !3075)
!3075 = !DILocation(line: 319, column: 13, scope: !3040)
!3076 = !DILocation(line: 319, column: 26, scope: !3040)
!3077 = !DILocation(line: 320, column: 10, scope: !3040)
!3078 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h50e8618224d4cb08E", scope: !1997, file: !1996, line: 390, type: !3079, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !3081)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!1997, !2000, !2051}
!3081 = !{!3082, !3083}
!3082 = !DILocalVariable(name: "pieces", arg: 1, scope: !3078, file: !1996, line: 390, type: !2000)
!3083 = !DILocalVariable(name: "args", arg: 2, scope: !3078, file: !1996, line: 390, type: !2051)
!3084 = !DILocation(line: 390, column: 25, scope: !3078)
!3085 = !DILocation(line: 390, column: 53, scope: !3078)
!3086 = !DILocation(line: 391, column: 12, scope: !3078)
!3087 = !DILocation(line: 391, column: 56, scope: !3078)
!3088 = !DILocation(line: 391, column: 41, scope: !3078)
!3089 = !DILocation(line: 394, column: 34, scope: !3078)
!3090 = !DILocation(line: 394, column: 9, scope: !3078)
!3091 = !DILocation(line: 395, column: 6, scope: !3078)
!3092 = !DILocation(line: 392, column: 13, scope: !3078)
!3093 = distinct !DISubprogram(name: "assume_init_drop<core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h15d11afacc377d43E", scope: !1285, file: !1452, line: 731, type: !3094, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1292, retainedNodes: !3097)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{null, !3096}
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", baseType: !1285, size: 64, align: 64, dwarfAddressSpace: 0)
!3097 = !{!3098}
!3098 = !DILocalVariable(name: "self", arg: 1, scope: !3093, file: !1452, line: 731, type: !3096)
!3099 = !DILocation(line: 731, column: 36, scope: !3093)
!3100 = !DILocation(line: 735, column: 37, scope: !3093)
!3101 = !DILocalVariable(name: "self", scope: !3102, file: !1452, line: 735, type: !3096, align: 8)
!3102 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb749d638f839b980E", scope: !1285, file: !1452, line: 574, type: !3103, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1292, retainedNodes: !3106)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!3105, !3096}
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<std::ffi::os_str::OsString>", baseType: !1240, size: 64, align: 64, dwarfAddressSpace: 0)
!3106 = !{!3101}
!3107 = !DILocation(line: 735, column: 37, scope: !3102, inlinedAt: !3100)
!3108 = !DILocation(line: 735, column: 18, scope: !3093)
!3109 = !DILocation(line: 736, column: 6, scope: !3093)
!3110 = distinct !DISubprogram(name: "assume_init_drop<std::ffi::os_str::OsString>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h4d58a7e204cdda1dE", scope: !1274, file: !1452, line: 731, type: !3111, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1246, retainedNodes: !3114)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{null, !3113}
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", baseType: !1274, size: 64, align: 64, dwarfAddressSpace: 0)
!3114 = !{!3115}
!3115 = !DILocalVariable(name: "self", arg: 1, scope: !3110, file: !1452, line: 731, type: !3113)
!3116 = !DILocation(line: 731, column: 36, scope: !3110)
!3117 = !DILocation(line: 735, column: 37, scope: !3110)
!3118 = !DILocalVariable(name: "self", scope: !3119, file: !1452, line: 735, type: !3113, align: 8)
!3119 = distinct !DISubprogram(name: "as_mut_ptr<std::ffi::os_str::OsString>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17heb142a516a58250aE", scope: !1274, file: !1452, line: 574, type: !3120, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1246, retainedNodes: !3123)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!3122, !3113}
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::ffi::os_str::OsString", baseType: !1208, size: 64, align: 64, dwarfAddressSpace: 0)
!3123 = !{!3118}
!3124 = !DILocation(line: 735, column: 37, scope: !3119, inlinedAt: !3117)
!3125 = !DILocation(line: 735, column: 18, scope: !3110)
!3126 = !DILocation(line: 736, column: 6, scope: !3110)
!3127 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17h0284928425902346E", scope: !79, file: !423, line: 899, type: !3128, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !3131)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!9, !3130, !9}
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3131 = !{!3132, !3133, !3134}
!3132 = !DILocalVariable(name: "dest", arg: 1, scope: !3127, file: !423, line: 899, type: !3130)
!3133 = !DILocalVariable(name: "src", arg: 2, scope: !3127, file: !423, line: 899, type: !9)
!3134 = !DILocalVariable(name: "result", scope: !3135, file: !423, line: 904, type: !9, align: 8)
!3135 = distinct !DILexicalBlock(scope: !3127, file: !423, line: 904, column: 9)
!3136 = !DILocation(line: 899, column: 25, scope: !3127)
!3137 = !DILocation(line: 899, column: 39, scope: !3127)
!3138 = !DILocalVariable(name: "src", scope: !3139, file: !423, line: 905, type: !9, align: 8)
!3139 = !DILexicalBlockFile(scope: !3140, file: !423, discriminator: 0)
!3140 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17h7d14387a5600cb16E", scope: !260, file: !682, line: 1292, type: !3141, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !3144)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{null, !3143, !9}
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3144 = !{!3145, !3138}
!3145 = !DILocalVariable(name: "dst", scope: !3139, file: !423, line: 905, type: !3143, align: 8)
!3146 = !DILocation(line: 905, column: 9, scope: !3139, inlinedAt: !3147)
!3147 = !DILocation(line: 905, column: 9, scope: !3135)
!3148 = !DILocalVariable(name: "tmp", scope: !3149, file: !423, line: 904, type: !3158, align: 8)
!3149 = !DILexicalBlockFile(scope: !3150, file: !423, discriminator: 0)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !682, line: 1105, column: 5)
!3151 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17h91cc5288a1a37176E", scope: !260, file: !682, line: 1097, type: !3152, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !3155)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!9, !3154}
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3155 = !{!3156, !3148}
!3156 = !DILocalVariable(name: "src", scope: !3157, file: !423, line: 904, type: !3154, align: 8)
!3157 = !DILexicalBlockFile(scope: !3151, file: !423, discriminator: 0)
!3158 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !799, file: !2, size: 64, align: 64, elements: !3159, templateParams: !242, identifier: "e3c985e8aa907720d86228d76d95c5b5")
!3159 = !{!3160, !3161}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3158, file: !2, baseType: !7, align: 8)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3158, file: !2, baseType: !3162, size: 64, align: 64)
!3162 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !804, file: !2, size: 64, align: 64, elements: !3163, templateParams: !242, identifier: "d40547aac754dd2b19a30af532ea7e3b")
!3163 = !{!3164}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3162, file: !2, baseType: !9, size: 64, align: 64)
!3165 = !DILocation(line: 904, column: 22, scope: !3149, inlinedAt: !3166)
!3166 = !DILocation(line: 904, column: 22, scope: !3127)
!3167 = !DILocation(line: 904, column: 32, scope: !3127)
!3168 = !DILocation(line: 904, column: 22, scope: !3157, inlinedAt: !3166)
!3169 = !DILocation(line: 904, column: 22, scope: !3170, inlinedAt: !3174)
!3170 = !DILexicalBlockFile(scope: !3171, file: !423, discriminator: 0)
!3171 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17head76c7b7f575be1E", scope: !3158, file: !1452, line: 320, type: !3172, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !23)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!3158}
!3174 = !DILocation(line: 1105, column: 19, scope: !3151, inlinedAt: !3166)
!3175 = !DILocalVariable(name: "self", scope: !3176, file: !423, line: 904, type: !3180, align: 8)
!3176 = !DILexicalBlockFile(scope: !3177, file: !423, discriminator: 0)
!3177 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hbad916e049b4a2b7E", scope: !3158, file: !1452, line: 574, type: !3178, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !3181)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!3143, !3180}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !3158, size: 64, align: 64, dwarfAddressSpace: 0)
!3181 = !{!3175}
!3182 = !DILocation(line: 904, column: 22, scope: !3176, inlinedAt: !3183)
!3183 = !DILocation(line: 1113, column: 34, scope: !3150, inlinedAt: !3166)
!3184 = !DILocalVariable(name: "self", scope: !3185, file: !423, line: 904, type: !3158, align: 8)
!3185 = !DILexicalBlockFile(scope: !3186, file: !423, discriminator: 0)
!3186 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h302efcbea1e76633E", scope: !3158, file: !1452, line: 629, type: !3187, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !3189)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!9, !3158, !917}
!3189 = !{!3184}
!3190 = !DILocation(line: 904, column: 22, scope: !3185, inlinedAt: !3191)
!3191 = !DILocation(line: 1114, column: 9, scope: !3150, inlinedAt: !3166)
!3192 = !DILocalVariable(name: "slot", scope: !3193, file: !423, line: 904, type: !3162, align: 8)
!3193 = !DILexicalBlockFile(scope: !3194, file: !423, discriminator: 0)
!3194 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h52f05d569f207d6cE", scope: !3162, file: !1418, line: 88, type: !3195, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!9, !3162}
!3197 = !{!3192}
!3198 = !DILocation(line: 904, column: 22, scope: !3193, inlinedAt: !3199)
!3199 = !DILocation(line: 634, column: 13, scope: !3186, inlinedAt: !3191)
!3200 = !DILocation(line: 904, column: 13, scope: !3135)
!3201 = !DILocation(line: 905, column: 20, scope: !3135)
!3202 = !DILocation(line: 905, column: 26, scope: !3135)
!3203 = !DILocation(line: 908, column: 2, scope: !3127)
!3204 = !DILocation(line: 908, column: 1, scope: !3127)
!3205 = !DILocation(line: 899, column: 1, scope: !3127)
!3206 = distinct !DISubprogram(name: "replace<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem7replace17h22a454e450d8beccE", scope: !79, file: !423, line: 899, type: !3207, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !3210)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!1150, !3209, !1150}
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1150, size: 64, align: 64, dwarfAddressSpace: 0)
!3210 = !{!3211, !3212, !3213}
!3211 = !DILocalVariable(name: "dest", arg: 1, scope: !3206, file: !423, line: 899, type: !3209)
!3212 = !DILocalVariable(name: "src", arg: 2, scope: !3206, file: !423, line: 899, type: !1150)
!3213 = !DILocalVariable(name: "result", scope: !3214, file: !423, line: 904, type: !1150, align: 8)
!3214 = distinct !DILexicalBlock(scope: !3206, file: !423, line: 904, column: 9)
!3215 = !{!3216}
!3216 = !DITemplateTypeParameter(name: "T", type: !1150)
!3217 = !DILocation(line: 904, column: 13, scope: !3214)
!3218 = !DILocation(line: 899, column: 25, scope: !3206)
!3219 = !DILocation(line: 899, column: 39, scope: !3206)
!3220 = !DILocalVariable(name: "src", scope: !3221, file: !423, line: 905, type: !1150, align: 8)
!3221 = !DILexicalBlockFile(scope: !3222, file: !423, discriminator: 0)
!3222 = distinct !DISubprogram(name: "write<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr5write17hfcb0a6f825702cbfE", scope: !260, file: !682, line: 1292, type: !3223, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !3226)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{null, !3225, !1150}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1150, size: 64, align: 64, dwarfAddressSpace: 0)
!3226 = !{!3227, !3220}
!3227 = !DILocalVariable(name: "dst", scope: !3221, file: !423, line: 905, type: !3225, align: 8)
!3228 = !DILocation(line: 905, column: 9, scope: !3221, inlinedAt: !3229)
!3229 = !DILocation(line: 905, column: 9, scope: !3214)
!3230 = !DILocalVariable(name: "tmp", scope: !3231, file: !423, line: 904, type: !3240, align: 8)
!3231 = !DILexicalBlockFile(scope: !3232, file: !423, discriminator: 0)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !682, line: 1105, column: 5)
!3233 = distinct !DISubprogram(name: "read<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr4read17h995b0b36a1925235E", scope: !260, file: !682, line: 1097, type: !3234, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !3237)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!1150, !3236}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1150, size: 64, align: 64, dwarfAddressSpace: 0)
!3237 = !{!3238, !3230}
!3238 = !DILocalVariable(name: "src", scope: !3239, file: !423, line: 904, type: !3236, align: 8)
!3239 = !DILexicalBlockFile(scope: !3233, file: !423, discriminator: 0)
!3240 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !799, file: !2, size: 256, align: 64, elements: !3241, templateParams: !3215, identifier: "cc4d0c3f6406f681c4e51d8ea05ef06")
!3241 = !{!3242, !3243}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3240, file: !2, baseType: !7, align: 8)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3240, file: !2, baseType: !3244, size: 256, align: 64)
!3244 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !804, file: !2, size: 256, align: 64, elements: !3245, templateParams: !3215, identifier: "f44fc7b9b2315efca335c6cc31df4f97")
!3245 = !{!3246}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3244, file: !2, baseType: !1150, size: 256, align: 64)
!3247 = !DILocation(line: 904, column: 22, scope: !3231, inlinedAt: !3248)
!3248 = !DILocation(line: 904, column: 22, scope: !3206)
!3249 = !DILocalVariable(name: "self", scope: !3250, file: !423, line: 904, type: !3240, align: 8)
!3250 = !DILexicalBlockFile(scope: !3251, file: !423, discriminator: 0)
!3251 = distinct !DISubprogram(name: "assume_init<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h34016fd1beab8f8cE", scope: !3240, file: !1452, line: 629, type: !3252, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !3254)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!1150, !3240, !917}
!3254 = !{!3249}
!3255 = !DILocation(line: 904, column: 22, scope: !3250, inlinedAt: !3256)
!3256 = !DILocation(line: 1114, column: 9, scope: !3232, inlinedAt: !3248)
!3257 = !DILocalVariable(name: "slot", scope: !3258, file: !423, line: 904, type: !3244, align: 8)
!3258 = !DILexicalBlockFile(scope: !3259, file: !423, discriminator: 0)
!3259 = distinct !DISubprogram(name: "into_inner<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91f47eea245d386fE", scope: !3244, file: !1418, line: 88, type: !3260, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !3262)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!1150, !3244}
!3262 = !{!3257}
!3263 = !DILocation(line: 904, column: 22, scope: !3258, inlinedAt: !3264)
!3264 = !DILocation(line: 634, column: 13, scope: !3251, inlinedAt: !3256)
!3265 = !DILocation(line: 904, column: 32, scope: !3206)
!3266 = !DILocation(line: 904, column: 22, scope: !3239, inlinedAt: !3248)
!3267 = !DILocation(line: 904, column: 22, scope: !3268, inlinedAt: !3272)
!3268 = !DILexicalBlockFile(scope: !3269, file: !423, discriminator: 0)
!3269 = distinct !DISubprogram(name: "uninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h1321d90159150264E", scope: !3240, file: !1452, line: 320, type: !3270, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !23)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!3240}
!3272 = !DILocation(line: 1105, column: 19, scope: !3233, inlinedAt: !3248)
!3273 = !DILocalVariable(name: "self", scope: !3274, file: !423, line: 904, type: !3278, align: 8)
!3274 = !DILexicalBlockFile(scope: !3275, file: !423, discriminator: 0)
!3275 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h303ceaf5f19ab79cE", scope: !3240, file: !1452, line: 574, type: !3276, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3215, retainedNodes: !3279)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!3225, !3278}
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !3240, size: 64, align: 64, dwarfAddressSpace: 0)
!3279 = !{!3273}
!3280 = !DILocation(line: 904, column: 22, scope: !3274, inlinedAt: !3281)
!3281 = !DILocation(line: 1113, column: 34, scope: !3232, inlinedAt: !3248)
!3282 = !DILocation(line: 905, column: 20, scope: !3214)
!3283 = !DILocation(line: 905, column: 26, scope: !3214)
!3284 = !DILocation(line: 908, column: 2, scope: !3206)
!3285 = !DILocation(line: 908, column: 1, scope: !3206)
!3286 = !DILocation(line: 899, column: 1, scope: !3206)
!3287 = distinct !DISubprogram(name: "replace<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem7replace17h6dbfd2d9b173c1ffE", scope: !79, file: !423, line: 899, type: !3288, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!1363, !1510, !1363}
!3290 = !{!3291, !3292, !3293}
!3291 = !DILocalVariable(name: "dest", arg: 1, scope: !3287, file: !423, line: 899, type: !1510)
!3292 = !DILocalVariable(name: "src", arg: 2, scope: !3287, file: !423, line: 899, type: !1363)
!3293 = !DILocalVariable(name: "result", scope: !3294, file: !423, line: 904, type: !1363, align: 8)
!3294 = distinct !DILexicalBlock(scope: !3287, file: !423, line: 904, column: 9)
!3295 = !{!3296}
!3296 = !DITemplateTypeParameter(name: "T", type: !1363)
!3297 = !DILocation(line: 899, column: 25, scope: !3287)
!3298 = !DILocation(line: 899, column: 39, scope: !3287)
!3299 = !DILocalVariable(name: "src", scope: !3300, file: !423, line: 905, type: !1363, align: 8)
!3300 = !DILexicalBlockFile(scope: !3301, file: !423, discriminator: 0)
!3301 = distinct !DISubprogram(name: "write<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3ptr5write17h5a3cce58cdba6851E", scope: !260, file: !682, line: 1292, type: !3302, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !3305)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{null, !3304, !1363}
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!3305 = !{!3306, !3299}
!3306 = !DILocalVariable(name: "dst", scope: !3300, file: !423, line: 905, type: !3304, align: 8)
!3307 = !DILocation(line: 905, column: 9, scope: !3300, inlinedAt: !3308)
!3308 = !DILocation(line: 905, column: 9, scope: !3294)
!3309 = !DILocalVariable(name: "tmp", scope: !3310, file: !423, line: 904, type: !3319, align: 8)
!3310 = !DILexicalBlockFile(scope: !3311, file: !423, discriminator: 0)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !682, line: 1105, column: 5)
!3312 = distinct !DISubprogram(name: "read<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3ptr4read17h33a351f63f2778a2E", scope: !260, file: !682, line: 1097, type: !3313, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !3316)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!1363, !3315}
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!3316 = !{!3317, !3309}
!3317 = !DILocalVariable(name: "src", scope: !3318, file: !423, line: 904, type: !3315, align: 8)
!3318 = !DILexicalBlockFile(scope: !3312, file: !423, discriminator: 0)
!3319 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", scope: !799, file: !2, size: 128, align: 64, elements: !3320, templateParams: !3295, identifier: "1e3ac93c1ba70222ec55ce7d558f843d")
!3320 = !{!3321, !3322}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3319, file: !2, baseType: !7, align: 8)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3319, file: !2, baseType: !3323, size: 128, align: 64)
!3323 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", scope: !804, file: !2, size: 128, align: 64, elements: !3324, templateParams: !3295, identifier: "18f19e785cacee4bed6d6b9015836b94")
!3324 = !{!3325}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3323, file: !2, baseType: !1363, size: 128, align: 64)
!3326 = !DILocation(line: 904, column: 22, scope: !3310, inlinedAt: !3327)
!3327 = !DILocation(line: 904, column: 22, scope: !3287)
!3328 = !DILocation(line: 904, column: 32, scope: !3287)
!3329 = !DILocation(line: 904, column: 22, scope: !3318, inlinedAt: !3327)
!3330 = !DILocation(line: 904, column: 22, scope: !3331, inlinedAt: !3335)
!3331 = !DILexicalBlockFile(scope: !3332, file: !423, discriminator: 0)
!3332 = distinct !DISubprogram(name: "uninit<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h253de9fa6b4a8d62E", scope: !3319, file: !1452, line: 320, type: !3333, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !23)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{!3319}
!3335 = !DILocation(line: 1105, column: 19, scope: !3312, inlinedAt: !3327)
!3336 = !DILocalVariable(name: "self", scope: !3337, file: !423, line: 904, type: !3341, align: 8)
!3337 = !DILexicalBlockFile(scope: !3338, file: !423, discriminator: 0)
!3338 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h24c83e9764b84e61E", scope: !3319, file: !1452, line: 574, type: !3339, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !3342)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!3304, !3341}
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", baseType: !3319, size: 64, align: 64, dwarfAddressSpace: 0)
!3342 = !{!3336}
!3343 = !DILocation(line: 904, column: 22, scope: !3337, inlinedAt: !3344)
!3344 = !DILocation(line: 1113, column: 34, scope: !3311, inlinedAt: !3327)
!3345 = !DILocalVariable(name: "self", scope: !3346, file: !423, line: 904, type: !3319, align: 8)
!3346 = !DILexicalBlockFile(scope: !3347, file: !423, discriminator: 0)
!3347 = distinct !DISubprogram(name: "assume_init<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb4dd5776f4b4ee2bE", scope: !3319, file: !1452, line: 629, type: !3348, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !3350)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!1363, !3319, !917}
!3350 = !{!3345}
!3351 = !DILocation(line: 904, column: 22, scope: !3346, inlinedAt: !3352)
!3352 = !DILocation(line: 1114, column: 9, scope: !3311, inlinedAt: !3327)
!3353 = !DILocalVariable(name: "slot", scope: !3354, file: !423, line: 904, type: !3323, align: 8)
!3354 = !DILexicalBlockFile(scope: !3355, file: !423, discriminator: 0)
!3355 = distinct !DISubprogram(name: "into_inner<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h70760ac3460a1b54E", scope: !3323, file: !1418, line: 88, type: !3356, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3295, retainedNodes: !3358)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!1363, !3323}
!3358 = !{!3353}
!3359 = !DILocation(line: 904, column: 22, scope: !3354, inlinedAt: !3360)
!3360 = !DILocation(line: 634, column: 13, scope: !3347, inlinedAt: !3352)
!3361 = !DILocation(line: 904, column: 13, scope: !3294)
!3362 = !DILocation(line: 905, column: 20, scope: !3294)
!3363 = !DILocation(line: 905, column: 26, scope: !3294)
!3364 = !DILocation(line: 908, column: 2, scope: !3287)
!3365 = !DILocation(line: 908, column: 1, scope: !3287)
!3366 = !DILocation(line: 899, column: 1, scope: !3287)
!3367 = distinct !DISubprogram(name: "replace<core::option::Option<&str>>", linkageName: "_ZN4core3mem7replace17he0ac2fd194b72967E", scope: !79, file: !423, line: 899, type: !3368, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !3371)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!38, !3370, !38}
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<&str>", baseType: !38, size: 64, align: 64, dwarfAddressSpace: 0)
!3371 = !{!3372, !3373, !3374}
!3372 = !DILocalVariable(name: "dest", arg: 1, scope: !3367, file: !423, line: 899, type: !3370)
!3373 = !DILocalVariable(name: "src", arg: 2, scope: !3367, file: !423, line: 899, type: !38)
!3374 = !DILocalVariable(name: "result", scope: !3375, file: !423, line: 904, type: !38, align: 8)
!3375 = distinct !DILexicalBlock(scope: !3367, file: !423, line: 904, column: 9)
!3376 = !{!3377}
!3377 = !DITemplateTypeParameter(name: "T", type: !38)
!3378 = !DILocation(line: 899, column: 25, scope: !3367)
!3379 = !DILocation(line: 899, column: 39, scope: !3367)
!3380 = !DILocalVariable(name: "src", scope: !3381, file: !423, line: 905, type: !38, align: 8)
!3381 = !DILexicalBlockFile(scope: !3382, file: !423, discriminator: 0)
!3382 = distinct !DISubprogram(name: "write<core::option::Option<&str>>", linkageName: "_ZN4core3ptr5write17h043d7a8da18a0e69E", scope: !260, file: !682, line: 1292, type: !3383, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !3386)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !3385, !38}
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<&str>", baseType: !38, size: 64, align: 64, dwarfAddressSpace: 0)
!3386 = !{!3387, !3380}
!3387 = !DILocalVariable(name: "dst", scope: !3381, file: !423, line: 905, type: !3385, align: 8)
!3388 = !DILocation(line: 905, column: 9, scope: !3381, inlinedAt: !3389)
!3389 = !DILocation(line: 905, column: 9, scope: !3375)
!3390 = !DILocalVariable(name: "tmp", scope: !3391, file: !423, line: 904, type: !3400, align: 8)
!3391 = !DILexicalBlockFile(scope: !3392, file: !423, discriminator: 0)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !682, line: 1105, column: 5)
!3393 = distinct !DISubprogram(name: "read<core::option::Option<&str>>", linkageName: "_ZN4core3ptr4read17h57317e1d551b5a84E", scope: !260, file: !682, line: 1097, type: !3394, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !3397)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!38, !3396}
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<&str>", baseType: !38, size: 64, align: 64, dwarfAddressSpace: 0)
!3397 = !{!3398, !3390}
!3398 = !DILocalVariable(name: "src", scope: !3399, file: !423, line: 904, type: !3396, align: 8)
!3399 = !DILexicalBlockFile(scope: !3393, file: !423, discriminator: 0)
!3400 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<&str>>", scope: !799, file: !2, size: 128, align: 64, elements: !3401, templateParams: !3376, identifier: "f47f6b1125e810124e3688907ae401a5")
!3401 = !{!3402, !3403}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3400, file: !2, baseType: !7, align: 8)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3400, file: !2, baseType: !3404, size: 128, align: 64)
!3404 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<&str>>", scope: !804, file: !2, size: 128, align: 64, elements: !3405, templateParams: !3376, identifier: "5b5e2a5a001581d96bb0cd074c22570")
!3405 = !{!3406}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3404, file: !2, baseType: !38, size: 128, align: 64)
!3407 = !DILocation(line: 904, column: 22, scope: !3391, inlinedAt: !3408)
!3408 = !DILocation(line: 904, column: 22, scope: !3367)
!3409 = !DILocation(line: 904, column: 32, scope: !3367)
!3410 = !DILocation(line: 904, column: 22, scope: !3399, inlinedAt: !3408)
!3411 = !DILocation(line: 904, column: 22, scope: !3412, inlinedAt: !3416)
!3412 = !DILexicalBlockFile(scope: !3413, file: !423, discriminator: 0)
!3413 = distinct !DISubprogram(name: "uninit<core::option::Option<&str>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4b759c893cef9ba1E", scope: !3400, file: !1452, line: 320, type: !3414, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !23)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!3400}
!3416 = !DILocation(line: 1105, column: 19, scope: !3393, inlinedAt: !3408)
!3417 = !DILocalVariable(name: "self", scope: !3418, file: !423, line: 904, type: !3422, align: 8)
!3418 = !DILexicalBlockFile(scope: !3419, file: !423, discriminator: 0)
!3419 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<&str>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h6178eb34c5e1c02eE", scope: !3400, file: !1452, line: 574, type: !3420, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !3423)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!3385, !3422}
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<&str>>", baseType: !3400, size: 64, align: 64, dwarfAddressSpace: 0)
!3423 = !{!3417}
!3424 = !DILocation(line: 904, column: 22, scope: !3418, inlinedAt: !3425)
!3425 = !DILocation(line: 1113, column: 34, scope: !3392, inlinedAt: !3408)
!3426 = !DILocalVariable(name: "self", scope: !3427, file: !423, line: 904, type: !3400, align: 8)
!3427 = !DILexicalBlockFile(scope: !3428, file: !423, discriminator: 0)
!3428 = distinct !DISubprogram(name: "assume_init<core::option::Option<&str>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he740518ff1fe92e6E", scope: !3400, file: !1452, line: 629, type: !3429, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !3431)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!38, !3400, !917}
!3431 = !{!3426}
!3432 = !DILocation(line: 904, column: 22, scope: !3427, inlinedAt: !3433)
!3433 = !DILocation(line: 1114, column: 9, scope: !3392, inlinedAt: !3408)
!3434 = !DILocalVariable(name: "slot", scope: !3435, file: !423, line: 904, type: !3404, align: 8)
!3435 = !DILexicalBlockFile(scope: !3436, file: !423, discriminator: 0)
!3436 = distinct !DISubprogram(name: "into_inner<core::option::Option<&str>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2722861c7f331728E", scope: !3404, file: !1418, line: 88, type: !3437, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3376, retainedNodes: !3439)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!38, !3404}
!3439 = !{!3434}
!3440 = !DILocation(line: 904, column: 22, scope: !3435, inlinedAt: !3441)
!3441 = !DILocation(line: 634, column: 13, scope: !3428, inlinedAt: !3433)
!3442 = !DILocation(line: 904, column: 13, scope: !3375)
!3443 = !DILocation(line: 905, column: 20, scope: !3375)
!3444 = !DILocation(line: 905, column: 26, scope: !3375)
!3445 = !DILocation(line: 908, column: 2, scope: !3367)
!3446 = !DILocation(line: 908, column: 1, scope: !3367)
!3447 = !DILocation(line: 899, column: 1, scope: !3367)
!3448 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h5b858ae8d87d18f0E", scope: !2890, file: !2889, line: 437, type: !280, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !3449)
!3449 = !{!3450, !3451, !3452, !3454}
!3450 = !DILocalVariable(name: "self", arg: 1, scope: !3448, file: !2889, line: 437, type: !9)
!3451 = !DILocalVariable(name: "rhs", arg: 2, scope: !3448, file: !2889, line: 437, type: !9)
!3452 = !DILocalVariable(name: "a", scope: !3453, file: !2889, line: 438, type: !9, align: 8)
!3453 = distinct !DILexicalBlock(scope: !3448, file: !2889, line: 438, column: 13)
!3454 = !DILocalVariable(name: "b", scope: !3453, file: !2889, line: 438, type: !989, align: 1)
!3455 = !DILocation(line: 437, column: 34, scope: !3448)
!3456 = !DILocation(line: 437, column: 40, scope: !3448)
!3457 = !DILocation(line: 438, column: 26, scope: !3448)
!3458 = !DILocalVariable(name: "self", scope: !3459, file: !2889, line: 438, type: !9, align: 8)
!3459 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h61ca49d94fc184c3E", scope: !2890, file: !2889, line: 1500, type: !3460, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !3466)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!3462, !9, !9}
!3462 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !3463, templateParams: !23, identifier: "23309350ccb628a7900e37caa17b1249")
!3463 = !{!3464, !3465}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3462, file: !2, baseType: !9, size: 64, align: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3462, file: !2, baseType: !989, size: 8, align: 8, offset: 64)
!3466 = !{!3458, !3467, !3468, !3470}
!3467 = !DILocalVariable(name: "rhs", scope: !3459, file: !2889, line: 438, type: !9, align: 8)
!3468 = !DILocalVariable(name: "a", scope: !3469, file: !2889, line: 438, type: !59, align: 8)
!3469 = distinct !DILexicalBlock(scope: !3459, file: !2889, line: 1501, column: 13)
!3470 = !DILocalVariable(name: "b", scope: !3469, file: !2889, line: 438, type: !989, align: 1)
!3471 = !DILocation(line: 438, column: 26, scope: !3459, inlinedAt: !3457)
!3472 = !DILocation(line: 438, column: 47, scope: !3448)
!3473 = !DILocation(line: 438, column: 26, scope: !3469, inlinedAt: !3457)
!3474 = !DILocation(line: 438, column: 18, scope: !3448)
!3475 = !DILocation(line: 438, column: 18, scope: !3453)
!3476 = !DILocation(line: 438, column: 21, scope: !3448)
!3477 = !DILocation(line: 438, column: 21, scope: !3453)
!3478 = !DILocation(line: 439, column: 16, scope: !3453)
!3479 = !DILocation(line: 439, column: 42, scope: !3453)
!3480 = !DILocation(line: 439, column: 13, scope: !3453)
!3481 = !DILocation(line: 439, column: 30, scope: !3453)
!3482 = !DILocation(line: 440, column: 10, scope: !3448)
!3483 = !{i64 0, i64 2}
!3484 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48fc8f61382f445dE", scope: !2890, file: !2889, line: 552, type: !280, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !3485)
!3485 = !{!3486, !3487, !3488, !3490}
!3486 = !DILocalVariable(name: "self", arg: 1, scope: !3484, file: !2889, line: 552, type: !9)
!3487 = !DILocalVariable(name: "rhs", arg: 2, scope: !3484, file: !2889, line: 552, type: !9)
!3488 = !DILocalVariable(name: "a", scope: !3489, file: !2889, line: 553, type: !9, align: 8)
!3489 = distinct !DILexicalBlock(scope: !3484, file: !2889, line: 553, column: 13)
!3490 = !DILocalVariable(name: "b", scope: !3489, file: !2889, line: 553, type: !989, align: 1)
!3491 = !DILocation(line: 552, column: 34, scope: !3484)
!3492 = !DILocation(line: 552, column: 40, scope: !3484)
!3493 = !DILocation(line: 553, column: 26, scope: !3484)
!3494 = !DILocalVariable(name: "self", scope: !3495, file: !2889, line: 553, type: !9, align: 8)
!3495 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h70d9a19f5fa48856E", scope: !2890, file: !2889, line: 1682, type: !3460, scopeLine: 1682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !3496)
!3496 = !{!3494, !3497, !3498, !3500}
!3497 = !DILocalVariable(name: "rhs", scope: !3495, file: !2889, line: 553, type: !9, align: 8)
!3498 = !DILocalVariable(name: "a", scope: !3499, file: !2889, line: 553, type: !59, align: 8)
!3499 = distinct !DILexicalBlock(scope: !3495, file: !2889, line: 1683, column: 13)
!3500 = !DILocalVariable(name: "b", scope: !3499, file: !2889, line: 553, type: !989, align: 1)
!3501 = !DILocation(line: 553, column: 26, scope: !3495, inlinedAt: !3493)
!3502 = !DILocation(line: 553, column: 47, scope: !3484)
!3503 = !DILocation(line: 553, column: 26, scope: !3499, inlinedAt: !3493)
!3504 = !DILocation(line: 553, column: 18, scope: !3484)
!3505 = !DILocation(line: 553, column: 18, scope: !3489)
!3506 = !DILocation(line: 553, column: 21, scope: !3484)
!3507 = !DILocation(line: 553, column: 21, scope: !3489)
!3508 = !DILocation(line: 554, column: 16, scope: !3489)
!3509 = !DILocation(line: 554, column: 42, scope: !3489)
!3510 = !DILocation(line: 554, column: 13, scope: !3489)
!3511 = !DILocation(line: 554, column: 30, scope: !3489)
!3512 = !DILocation(line: 555, column: 10, scope: !3484)
!3513 = distinct !DISubprogram(name: "call_mut<fn(usize, usize) -> core::option::Option<usize>, (usize, usize)>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17h31eae36f81b317efE", scope: !3515, file: !3514, line: 164, type: !3517, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3524, retainedNodes: !3520)
!3514 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!3515 = !DINamespace(name: "FnMut", scope: !3516)
!3516 = !DINamespace(name: "function", scope: !628)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!236, !3519, !9, !9}
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut fn(usize, usize) -> core::option::Option<usize>", baseType: !279, size: 64, align: 64, dwarfAddressSpace: 0)
!3520 = !{!3521, !3523}
!3521 = !DILocalVariable(arg: 1, scope: !3513, file: !3514, line: 164, type: !3522)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const fn(usize, usize) -> core::option::Option<usize>", baseType: !279, size: 64, align: 64, dwarfAddressSpace: 0)
!3523 = !DILocalVariable(arg: 2, scope: !3513, file: !3514, line: 164, type: !1115)
!3524 = !{!3525, !3526}
!3525 = !DITemplateTypeParameter(name: "Self", type: !279)
!3526 = !DITemplateTypeParameter(name: "Args", type: !1115)
!3527 = !DILocation(line: 164, column: 5, scope: !3513)
!3528 = distinct !DISubprogram(name: "call_once<(&&str), alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h01d5bc50ff17e0c8E", scope: !3529, file: !3514, line: 300, type: !3531, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3545, retainedNodes: !3539)
!3529 = !DINamespace(name: "{impl#4}", scope: !3530)
!3530 = !DINamespace(name: "impls", scope: !3516)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!3533, !3537, !270}
!3533 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3534, templateParams: !23, identifier: "a24a6746fe3e0ecb6ab711689d1233be")
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3533, file: !2, baseType: !797, size: 64, align: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3533, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>", baseType: !3538, size: 64, align: 64, dwarfAddressSpace: 0)
!3538 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<str, u8, &str>", scope: !274, file: !2, align: 8, elements: !23, identifier: "3077786338297832403dd15b14ddb735")
!3539 = !{!3540, !3541}
!3540 = !DILocalVariable(name: "self", arg: 1, scope: !3528, file: !3514, line: 300, type: !3537)
!3541 = !DILocalVariable(name: "args", arg: 2, scope: !3528, file: !3514, line: 300, type: !3542)
!3542 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&&str)", file: !2, size: 64, align: 64, elements: !3543, templateParams: !23, identifier: "a2210fc97dfddf277a8d72e3d963a73a")
!3543 = !{!3544}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3542, file: !2, baseType: !270, size: 64, align: 64)
!3545 = !{!3546, !3547}
!3546 = !DITemplateTypeParameter(name: "A", type: !3542)
!3547 = !DITemplateTypeParameter(name: "F", type: !3538)
!3548 = !DILocation(line: 300, column: 41, scope: !3528)
!3549 = !DILocation(line: 300, column: 47, scope: !3528)
!3550 = !DILocation(line: 301, column: 30, scope: !3528)
!3551 = !DILocation(line: 301, column: 13, scope: !3528)
!3552 = !DILocation(line: 302, column: 10, scope: !3528)
!3553 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h867fca4a7d73dd10E", scope: !3554, file: !3514, line: 248, type: !3555, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3561, retainedNodes: !3558)
!3554 = !DINamespace(name: "FnOnce", scope: !3516)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!1776, !3557}
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!3558 = !{!3559, !3560}
!3559 = !DILocalVariable(arg: 1, scope: !3553, file: !3514, line: 248, type: !3557)
!3560 = !DILocalVariable(arg: 2, scope: !3553, file: !3514, line: 248, type: !7)
!3561 = !{!3562, !3563}
!3562 = !DITemplateTypeParameter(name: "Self", type: !14)
!3563 = !DITemplateTypeParameter(name: "Args", type: !7)
!3564 = !DILocation(line: 248, column: 5, scope: !3553)
!3565 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h7a60faacd5196fa4E", scope: !3554, file: !3514, line: 248, type: !3566, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3561, retainedNodes: !3568)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!1776, !14}
!3568 = !{!3569, !3570}
!3569 = !DILocalVariable(arg: 1, scope: !3565, file: !3514, line: 248, type: !14)
!3570 = !DILocalVariable(arg: 2, scope: !3565, file: !3514, line: 248, type: !7)
!3571 = !DILocation(line: 248, column: 5, scope: !3565)
!3572 = distinct !DISubprogram(name: "call_once<fn(), ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hdffb97304173dc98E", scope: !3554, file: !3514, line: 248, type: !1743, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3576, retainedNodes: !3573)
!3573 = !{!3574, !3575}
!3574 = !DILocalVariable(arg: 1, scope: !3572, file: !3514, line: 248, type: !20)
!3575 = !DILocalVariable(arg: 2, scope: !3572, file: !3514, line: 248, type: !7)
!3576 = !{!3577, !3563}
!3577 = !DITemplateTypeParameter(name: "Self", type: !20)
!3578 = !DILocation(line: 248, column: 5, scope: !3572)
!3579 = distinct !DISubprogram(name: "call_once<fn(&usize, &usize) -> core::cmp::Ordering, (&usize, &usize)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hfff8e9d808a0e435E", scope: !3554, file: !3514, line: 248, type: !3580, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3589, retainedNodes: !3582)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!199, !2965, !387, !387}
!3582 = !{!3583, !3584}
!3583 = !DILocalVariable(arg: 1, scope: !3579, file: !3514, line: 248, type: !2965)
!3584 = !DILocalVariable(arg: 2, scope: !3579, file: !3514, line: 248, type: !3585)
!3585 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 128, align: 64, elements: !3586, templateParams: !23, identifier: "c3b7da3d3000a83a80d9fedd3ca834ad")
!3586 = !{!3587, !3588}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3585, file: !2, baseType: !387, size: 64, align: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3585, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!3589 = !{!3590, !3591}
!3590 = !DITemplateTypeParameter(name: "Self", type: !2965)
!3591 = !DITemplateTypeParameter(name: "Args", type: !3585)
!3592 = !DILocation(line: 248, column: 5, scope: !3579)
!3593 = distinct !DISubprogram(name: "drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h1b4f9fdc984d784bE", scope: !260, file: !682, line: 487, type: !3594, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3599, retainedNodes: !3597)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !3596}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", baseType: !1768, size: 64, align: 64, dwarfAddressSpace: 0)
!3597 = !{!3598}
!3598 = !DILocalVariable(arg: 1, scope: !3593, file: !682, line: 487, type: !3596)
!3599 = !{!3600}
!3600 = !DITemplateTypeParameter(name: "T", type: !1768)
!3601 = !DILocation(line: 487, column: 1, scope: !3593)
!3602 = !{i8 0, i8 4}
!3603 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h5f657d4ccad9db74E", scope: !260, file: !682, line: 487, type: !3604, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3609, retainedNodes: !3607)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{null, !3606}
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !1784, size: 64, align: 64, dwarfAddressSpace: 0)
!3607 = !{!3608}
!3608 = !DILocalVariable(arg: 1, scope: !3603, file: !682, line: 487, type: !3606)
!3609 = !{!3610}
!3610 = !DITemplateTypeParameter(name: "T", type: !1784)
!3611 = !DILocation(line: 487, column: 1, scope: !3603)
!3612 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17hcd38880cef285fd1E", scope: !260, file: !682, line: 487, type: !3613, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !3616)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{null, !3615}
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1360, size: 64, align: 64, dwarfAddressSpace: 0)
!3616 = !{!3617}
!3617 = !DILocalVariable(arg: 1, scope: !3612, file: !682, line: 487, type: !3615)
!3618 = !DILocation(line: 487, column: 1, scope: !3612)
!3619 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17hf4221db241dd2233E", scope: !260, file: !682, line: 487, type: !3620, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3625, retainedNodes: !3623)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{null, !3622}
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1143, size: 64, align: 64, dwarfAddressSpace: 0)
!3623 = !{!3624}
!3624 = !DILocalVariable(arg: 1, scope: !3619, file: !682, line: 487, type: !3622)
!3625 = !{!3626}
!3626 = !DITemplateTypeParameter(name: "T", type: !1143)
!3627 = !DILocation(line: 487, column: 1, scope: !3619)
!3628 = distinct !DISubprogram(name: "drop_in_place<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr203drop_in_place$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h7cfc708d84775cebE", scope: !260, file: !682, line: 487, type: !3629, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !3635)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{null, !3631}
!3631 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !3632, templateParams: !23, identifier: "effb825ef98a97e7806f8d5c4ccb0645")
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3631, file: !2, baseType: !2638, size: 64, align: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3631, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!3635 = !{!3636}
!3636 = !DILocalVariable(arg: 1, scope: !3628, file: !682, line: 487, type: !3631)
!3637 = !{!3638}
!3638 = !DITemplateTypeParameter(name: "T", type: !2639)
!3639 = !DILocation(line: 487, column: 1, scope: !3628)
!3640 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h28bb248865c9a70fE", scope: !260, file: !682, line: 487, type: !3641, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !3644)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{null, !3643}
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !2635, size: 64, align: 64, dwarfAddressSpace: 0)
!3644 = !{!3645}
!3645 = !DILocalVariable(arg: 1, scope: !3640, file: !682, line: 487, type: !3643)
!3646 = !DILocation(line: 487, column: 1, scope: !3640)
!3647 = distinct !DISubprogram(name: "drop_in_place<[alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>]>", linkageName: "_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17hb1c91d1a2d50f1c1E", scope: !260, file: !682, line: 487, type: !3648, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !3655)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{null, !3650}
!3650 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>]", file: !2, size: 128, align: 64, elements: !3651, templateParams: !23, identifier: "9298cbd89b5ca81734e7848eba496f61")
!3651 = !{!3652, !3654}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3650, file: !2, baseType: !3653, size: 64, align: 64)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64, align: 64, dwarfAddressSpace: 0)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3650, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3655 = !{!3656}
!3656 = !DILocalVariable(arg: 1, scope: !3647, file: !682, line: 487, type: !3650)
!3657 = !DILocation(line: 487, column: 1, scope: !3647)
!3658 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::map::{impl#30}::drop::DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h65fee26ffc5da048E", scope: !260, file: !682, line: 487, type: !3659, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3664, retainedNodes: !3662)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{null, !3661}
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::map::{impl#30}::drop::DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1664, size: 64, align: 64, dwarfAddressSpace: 0)
!3662 = !{!3663}
!3663 = !DILocalVariable(arg: 1, scope: !3658, file: !682, line: 487, type: !3661)
!3664 = !{!3665}
!3665 = !DITemplateTypeParameter(name: "T", type: !1664)
!3666 = !DILocation(line: 487, column: 1, scope: !3658)
!3667 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h812d90f6c4711379E", scope: !260, file: !682, line: 487, type: !3668, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3673, retainedNodes: !3671)
!3668 = !DISubroutineType(types: !3669)
!3669 = !{null, !3670}
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2622, size: 64, align: 64, dwarfAddressSpace: 0)
!3671 = !{!3672}
!3672 = !DILocalVariable(arg: 1, scope: !3667, file: !682, line: 487, type: !3670)
!3673 = !{!3674}
!3674 = !DITemplateTypeParameter(name: "T", type: !2622)
!3675 = !DILocation(line: 487, column: 1, scope: !3667)
!3676 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h58c4e59aa303dc02E", scope: !260, file: !682, line: 487, type: !3677, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3682, retainedNodes: !3680)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{null, !3679}
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2625, size: 64, align: 64, dwarfAddressSpace: 0)
!3680 = !{!3681}
!3681 = !DILocalVariable(arg: 1, scope: !3676, file: !682, line: 487, type: !3679)
!3682 = !{!3683}
!3683 = !DITemplateTypeParameter(name: "T", type: !2625)
!3684 = !DILocation(line: 487, column: 1, scope: !3676)
!3685 = distinct !DISubprogram(name: "drop_in_place<&str>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h66fcefb7641afb30E", scope: !260, file: !682, line: 487, type: !3686, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !3689)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{null, !3688}
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &str", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!3689 = !{!3690}
!3690 = !DILocalVariable(arg: 1, scope: !3685, file: !682, line: 487, type: !3688)
!3691 = !DILocation(line: 487, column: 1, scope: !3685)
!3692 = distinct !DISubprogram(name: "drop_in_place<std::env::VarError>", linkageName: "_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17h3020d23ce274add7E", scope: !260, file: !682, line: 487, type: !3693, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3698, retainedNodes: !3696)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{null, !3695}
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::env::VarError", baseType: !2365, size: 64, align: 64, dwarfAddressSpace: 0)
!3696 = !{!3697}
!3697 = !DILocalVariable(arg: 1, scope: !3692, file: !682, line: 487, type: !3695)
!3698 = !{!3699}
!3699 = !DITemplateTypeParameter(name: "T", type: !2365)
!3700 = !DILocation(line: 487, column: 1, scope: !3692)
!3701 = distinct !DISubprogram(name: "drop_in_place<std::process::Output>", linkageName: "_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h1a4e4d0f5779de40E", scope: !260, file: !682, line: 487, type: !3702, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3719, retainedNodes: !3717)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{null, !3704}
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::process::Output", baseType: !3705, size: 64, align: 64, dwarfAddressSpace: 0)
!3705 = !DICompositeType(tag: DW_TAG_structure_type, name: "Output", scope: !2320, file: !2, size: 448, align: 64, elements: !3706, templateParams: !23, identifier: "ccf3875152886609301f41b24402b878")
!3706 = !{!3707, !3715, !3716}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3705, file: !2, baseType: !3708, size: 32, align: 32, offset: 384)
!3708 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitStatus", scope: !2320, file: !2, size: 32, align: 32, elements: !3709, templateParams: !23, identifier: "e3e7a9a443a76bb37aece97b083fc645")
!3709 = !{!3710}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3708, file: !2, baseType: !3711, size: 32, align: 32)
!3711 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitStatus", scope: !3712, file: !2, size: 32, align: 32, elements: !3713, templateParams: !23, identifier: "376dd83376bd3486b20b6f778425aa01")
!3712 = !DINamespace(name: "process_inner", scope: !2325)
!3713 = !{!3714}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3711, file: !2, baseType: !1776, size: 32, align: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "stdout", scope: !3705, file: !2, baseType: !1219, size: 192, align: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "stderr", scope: !3705, file: !2, baseType: !1219, size: 192, align: 64, offset: 192)
!3717 = !{!3718}
!3718 = !DILocalVariable(arg: 1, scope: !3701, file: !682, line: 487, type: !3704)
!3719 = !{!3720}
!3720 = !DITemplateTypeParameter(name: "T", type: !3705)
!3721 = !DILocation(line: 487, column: 1, scope: !3701)
!3722 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17haaff7ab24d6b99cbE", scope: !260, file: !682, line: 487, type: !3723, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2988, retainedNodes: !3726)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{null, !3725}
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !2358, size: 64, align: 64, dwarfAddressSpace: 0)
!3726 = !{!3727}
!3727 = !DILocalVariable(arg: 1, scope: !3722, file: !682, line: 487, type: !3725)
!3728 = !DILocation(line: 487, column: 1, scope: !3722)
!3729 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Error>", linkageName: "_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17ha44b6edb4cd1f32eE", scope: !260, file: !682, line: 487, type: !3730, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3743, retainedNodes: !3741)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !3732}
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Error", baseType: !3733, size: 64, align: 64, dwarfAddressSpace: 0)
!3733 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !146, file: !2, size: 64, align: 64, elements: !3734, templateParams: !23, identifier: "bac032de8fbf995ba135ee37d6e8e9a9")
!3734 = !{!3735}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !3733, file: !2, baseType: !3736, size: 64, align: 64)
!3736 = !DICompositeType(tag: DW_TAG_structure_type, name: "Repr", scope: !1765, file: !2, size: 64, align: 64, elements: !3737, templateParams: !23, identifier: "7fbaf6988931ec2fc2cb79b1922a4bfe")
!3737 = !{!3738, !3739}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3736, file: !2, baseType: !1812, size: 64, align: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3736, file: !2, baseType: !3740, align: 8)
!3740 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !3599, identifier: "3bfa5431dfa55fc3b0773ecc912b903f")
!3741 = !{!3742}
!3742 = !DILocalVariable(arg: 1, scope: !3729, file: !682, line: 487, type: !3732)
!3743 = !{!3744}
!3744 = !DITemplateTypeParameter(name: "T", type: !3733)
!3745 = !DILocation(line: 487, column: 1, scope: !3729)
!3746 = distinct !DISubprogram(name: "drop_in_place<std::process::Command>", linkageName: "_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h0065ee1c55ce4076E", scope: !260, file: !682, line: 487, type: !3747, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3752, retainedNodes: !3750)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{null, !3749}
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::process::Command", baseType: !2523, size: 64, align: 64, dwarfAddressSpace: 0)
!3750 = !{!3751}
!3751 = !DILocalVariable(arg: 1, scope: !3746, file: !682, line: 487, type: !3749)
!3752 = !{!3753}
!3753 = !DITemplateTypeParameter(name: "T", type: !2523)
!3754 = !DILocation(line: 487, column: 1, scope: !3746)
!3755 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Custom>", linkageName: "_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hb4e1479a9f487edfE", scope: !260, file: !682, line: 487, type: !3756, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{null, !1831}
!3758 = !{!3759}
!3759 = !DILocalVariable(arg: 1, scope: !3755, file: !682, line: 487, type: !1831)
!3760 = !{!3761}
!3761 = !DITemplateTypeParameter(name: "T", type: !1780)
!3762 = !DILocation(line: 487, column: 1, scope: !3755)
!3763 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf013469f8f72b491E", scope: !260, file: !682, line: 487, type: !3764, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3769, retainedNodes: !3767)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{null, !3766}
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !1219, size: 64, align: 64, dwarfAddressSpace: 0)
!3767 = !{!3768}
!3768 = !DILocalVariable(arg: 1, scope: !3763, file: !682, line: 487, type: !3766)
!3769 = !{!3770}
!3770 = !DITemplateTypeParameter(name: "T", type: !1219)
!3771 = !DILocation(line: 487, column: 1, scope: !3763)
!3772 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h49fe36a74d67aa52E", scope: !260, file: !682, line: 487, type: !3773, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !3776)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{null, !3775}
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::CString", baseType: !2529, size: 64, align: 64, dwarfAddressSpace: 0)
!3776 = !{!3777}
!3777 = !DILocalVariable(arg: 1, scope: !3772, file: !682, line: 487, type: !3775)
!3778 = !DILocation(line: 487, column: 1, scope: !3772)
!3779 = distinct !DISubprogram(name: "drop_in_place<std::ffi::os_str::OsString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8ce473a44d6d9c19E", scope: !260, file: !682, line: 487, type: !3780, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1246, retainedNodes: !3782)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{null, !3122}
!3782 = !{!3783}
!3783 = !DILocalVariable(arg: 1, scope: !3779, file: !682, line: 487, type: !3122)
!3784 = !DILocation(line: 487, column: 1, scope: !3779)
!3785 = distinct !DISubprogram(name: "drop_in_place<std::os::fd::owned::OwnedFd>", linkageName: "_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h10c5da678b89a1e0E", scope: !260, file: !682, line: 487, type: !3786, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3791, retainedNodes: !3789)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{null, !3788}
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::os::fd::owned::OwnedFd", baseType: !2695, size: 64, align: 64, dwarfAddressSpace: 0)
!3789 = !{!3790}
!3790 = !DILocalVariable(arg: 1, scope: !3785, file: !682, line: 487, type: !3788)
!3791 = !{!3792}
!3792 = !DITemplateTypeParameter(name: "T", type: !2695)
!3793 = !DILocation(line: 487, column: 1, scope: !3785)
!3794 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::os_str::Buf>", linkageName: "_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hcad56b55a06c0f1dE", scope: !260, file: !682, line: 487, type: !3795, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3800, retainedNodes: !3798)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{null, !3797}
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::os_str::Buf", baseType: !1213, size: 64, align: 64, dwarfAddressSpace: 0)
!3798 = !{!3799}
!3799 = !DILocalVariable(arg: 1, scope: !3794, file: !682, line: 487, type: !3797)
!3800 = !{!3801}
!3801 = !DITemplateTypeParameter(name: "T", type: !1213)
!3802 = !DILocation(line: 487, column: 1, scope: !3794)
!3803 = distinct !DISubprogram(name: "drop_in_place<alloc::string::FromUtf8Error>", linkageName: "_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h2c4c567bf49a01f0E", scope: !260, file: !682, line: 487, type: !3804, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3829, retainedNodes: !3827)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{null, !3806}
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::FromUtf8Error", baseType: !3807, size: 64, align: 64, dwarfAddressSpace: 0)
!3807 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf8Error", scope: !2359, file: !2, size: 320, align: 64, elements: !3808, templateParams: !23, identifier: "1efb35d7ee931a8bc0844e7eb1ddd3db")
!3808 = !{!3809, !3810}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3807, file: !2, baseType: !1219, size: 192, align: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3807, file: !2, baseType: !3811, size: 128, align: 64, offset: 192)
!3811 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !3812, file: !2, size: 128, align: 64, elements: !3813, templateParams: !23, identifier: "763a992d5a3ba122983d2390db00e7b")
!3812 = !DINamespace(name: "error", scope: !306)
!3813 = !{!3814, !3815}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !3811, file: !2, baseType: !9, size: 64, align: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !3811, file: !2, baseType: !3816, size: 16, align: 8, offset: 64)
!3816 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !39, file: !2, size: 16, align: 8, elements: !3817, templateParams: !23, identifier: "86bb34a68b489914bf459111ea0c6e55")
!3817 = !{!3818}
!3818 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3816, file: !2, size: 16, align: 8, elements: !3819, templateParams: !23, identifier: "1e8c376784602aa3c2c1d4c8a85b933c", discriminator: !3826)
!3819 = !{!3820, !3822}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3818, file: !2, baseType: !3821, size: 16, align: 8, extraData: i64 0)
!3821 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3816, file: !2, size: 16, align: 8, elements: !23, templateParams: !343, identifier: "7b10903501b9dae6845dd5e351bf05f4")
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3818, file: !2, baseType: !3823, size: 16, align: 8, extraData: i64 1)
!3823 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3816, file: !2, size: 16, align: 8, elements: !3824, templateParams: !343, identifier: "6e17648719d9bc48e092e1b57490c094")
!3824 = !{!3825}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3823, file: !2, baseType: !52, size: 8, align: 8, offset: 8)
!3826 = !DIDerivedType(tag: DW_TAG_member, scope: !3816, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!3827 = !{!3828}
!3828 = !DILocalVariable(arg: 1, scope: !3803, file: !682, line: 487, type: !3806)
!3829 = !{!3830}
!3830 = !DITemplateTypeParameter(name: "T", type: !3807)
!3831 = !DILocation(line: 487, column: 1, scope: !3803)
!3832 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::fd::FileDesc>", linkageName: "_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hf042facad8a19d7dE", scope: !260, file: !682, line: 487, type: !3833, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3838, retainedNodes: !3836)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{null, !3835}
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::fd::FileDesc", baseType: !2691, size: 64, align: 64, dwarfAddressSpace: 0)
!3836 = !{!3837}
!3837 = !DILocalVariable(arg: 1, scope: !3832, file: !682, line: 487, type: !3835)
!3838 = !{!3839}
!3839 = !DITemplateTypeParameter(name: "T", type: !2691)
!3840 = !DILocation(line: 487, column: 1, scope: !3832)
!3841 = distinct !DISubprogram(name: "drop_in_place<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h68c780c1427036f9E", scope: !260, file: !682, line: 487, type: !3842, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3061, retainedNodes: !3845)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !3844}
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::borrow::Cow<str>", baseType: !3044, size: 64, align: 64, dwarfAddressSpace: 0)
!3845 = !{!3846}
!3846 = !DILocalVariable(arg: 1, scope: !3841, file: !682, line: 487, type: !3844)
!3847 = !DILocation(line: 487, column: 1, scope: !3841)
!3848 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h71b12e831b20184dE", scope: !260, file: !682, line: 487, type: !3849, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3854, retainedNodes: !3852)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !3851}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !1223, size: 64, align: 64, dwarfAddressSpace: 0)
!3852 = !{!3853}
!3853 = !DILocalVariable(arg: 1, scope: !3848, file: !682, line: 487, type: !3851)
!3854 = !{!3855}
!3855 = !DITemplateTypeParameter(name: "T", type: !1223)
!3856 = !DILocation(line: 487, column: 1, scope: !3848)
!3857 = distinct !DISubprogram(name: "drop_in_place<[alloc::ffi::c_str::CString]>", linkageName: "_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17h96ab7cdab30ccdf7E", scope: !260, file: !682, line: 487, type: !3858, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !3865)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !3860}
!3860 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [alloc::ffi::c_str::CString]", file: !2, size: 128, align: 64, elements: !3861, templateParams: !23, identifier: "6a29577cf12e0eb9c0949eb83f035329")
!3861 = !{!3862, !3864}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3860, file: !2, baseType: !3863, size: 64, align: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64, align: 64, dwarfAddressSpace: 0)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3860, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3865 = !{!3866}
!3866 = !DILocalVariable(arg: 1, scope: !3857, file: !682, line: 487, type: !3860)
!3867 = !DILocation(line: 487, column: 1, scope: !3857)
!3868 = distinct !DISubprogram(name: "drop_in_place<std::io::error::repr_bitpacked::Repr>", linkageName: "_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17h2c3b477050ae9c6dE", scope: !260, file: !682, line: 487, type: !3869, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3874, retainedNodes: !3872)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{null, !3871}
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::repr_bitpacked::Repr", baseType: !3736, size: 64, align: 64, dwarfAddressSpace: 0)
!3872 = !{!3873}
!3873 = !DILocalVariable(arg: 1, scope: !3868, file: !682, line: 487, type: !3871)
!3874 = !{!3875}
!3875 = !DITemplateTypeParameter(name: "T", type: !3736)
!3876 = !DILocation(line: 487, column: 1, scope: !3868)
!3877 = distinct !DISubprogram(name: "drop_in_place<std::sys_common::process::CommandEnv>", linkageName: "_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h89040b315ad859d0E", scope: !260, file: !682, line: 487, type: !3878, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3883, retainedNodes: !3881)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{null, !3880}
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys_common::process::CommandEnv", baseType: !2587, size: 64, align: 64, dwarfAddressSpace: 0)
!3881 = !{!3882}
!3882 = !DILocalVariable(arg: 1, scope: !3877, file: !682, line: 487, type: !3880)
!3883 = !{!3884}
!3884 = !DITemplateTypeParameter(name: "T", type: !2587)
!3885 = !DILocation(line: 487, column: 1, scope: !3877)
!3886 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hd64d8fe3d4e8e5b4E", scope: !260, file: !682, line: 487, type: !3887, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3892, retainedNodes: !3890)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{null, !3889}
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !2534, size: 64, align: 64, dwarfAddressSpace: 0)
!3890 = !{!3891}
!3891 = !DILocalVariable(arg: 1, scope: !3886, file: !682, line: 487, type: !3889)
!3892 = !{!3893}
!3893 = !DITemplateTypeParameter(name: "T", type: !2534)
!3894 = !DILocation(line: 487, column: 1, scope: !3886)
!3895 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u32], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17h7fdfdedb83bd6f15E", scope: !260, file: !682, line: 487, type: !3896, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2656, retainedNodes: !3899)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !3898}
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u32], alloc::alloc::Global>", baseType: !2658, size: 64, align: 64, dwarfAddressSpace: 0)
!3899 = !{!3900}
!3900 = !DILocalVariable(arg: 1, scope: !3895, file: !682, line: 487, type: !3898)
!3901 = !DILocation(line: 487, column: 1, scope: !3895)
!3902 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<*const i8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17h766c44ff5e55de31E", scope: !260, file: !682, line: 487, type: !3903, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3908, retainedNodes: !3906)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{null, !3905}
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<*const i8, alloc::alloc::Global>", baseType: !2564, size: 64, align: 64, dwarfAddressSpace: 0)
!3906 = !{!3907}
!3907 = !DILocalVariable(arg: 1, scope: !3902, file: !682, line: 487, type: !3905)
!3908 = !{!3909}
!3909 = !DITemplateTypeParameter(name: "T", type: !2564)
!3910 = !DILocation(line: 487, column: 1, scope: !3902)
!3911 = distinct !DISubprogram(name: "drop_in_place<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h001285130cc097faE", scope: !260, file: !682, line: 487, type: !3912, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !3920)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{null, !3914}
!3914 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !3915, templateParams: !23, identifier: "938b38e7b455ccabe1e5792e2b1ebe57")
!3915 = !{!3916, !3919}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3914, file: !2, baseType: !3917, size: 64, align: 64)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64, align: 64, dwarfAddressSpace: 0)
!3918 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::any::Any + core::marker::Send)", file: !2, align: 8, elements: !23, identifier: "ec5859b906290cfdbe114281686341d0")
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3914, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!3920 = !{!3921}
!3921 = !DILocalVariable(arg: 1, scope: !3911, file: !682, line: 487, type: !3914)
!3922 = !{!3923}
!3923 = !DITemplateTypeParameter(name: "T", type: !3918)
!3924 = !DILocation(line: 487, column: 1, scope: !3911)
!3925 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::process::process_common::Argv>", linkageName: "_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h5d4caa1e9701bea3E", scope: !260, file: !682, line: 487, type: !3926, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3931, retainedNodes: !3929)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{null, !3928}
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::process::process_common::Argv", baseType: !2561, size: 64, align: 64, dwarfAddressSpace: 0)
!3929 = !{!3930}
!3930 = !DILocalVariable(arg: 1, scope: !3925, file: !682, line: 487, type: !3928)
!3931 = !{!3932}
!3932 = !DITemplateTypeParameter(name: "T", type: !2561)
!3933 = !DILocation(line: 487, column: 1, scope: !3925)
!3934 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17hfeee4ea158d79751E", scope: !260, file: !682, line: 487, type: !3935, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3940, retainedNodes: !3938)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{null, !3937}
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>", baseType: !2567, size: 64, align: 64, dwarfAddressSpace: 0)
!3938 = !{!3939}
!3939 = !DILocalVariable(arg: 1, scope: !3934, file: !682, line: 487, type: !3937)
!3940 = !{!3941}
!3941 = !DITemplateTypeParameter(name: "T", type: !2567)
!3942 = !DILocation(line: 487, column: 1, scope: !3934)
!3943 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::process::process_common::Stdio>", linkageName: "_ZN4core3ptr67drop_in_place$LT$std..sys..unix..process..process_common..Stdio$GT$17h3cee6cf44aadc5c5E", scope: !260, file: !682, line: 487, type: !3944, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2675, retainedNodes: !3947)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !3946}
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::process::process_common::Stdio", baseType: !2677, size: 64, align: 64, dwarfAddressSpace: 0)
!3947 = !{!3948}
!3948 = !DILocalVariable(arg: 1, scope: !3943, file: !682, line: 487, type: !3946)
!3949 = !DILocation(line: 487, column: 1, scope: !3943)
!3950 = !{i32 0, i32 4}
!3951 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h316c7be9ae07eb84E", scope: !260, file: !682, line: 487, type: !3952, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3957, retainedNodes: !3955)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{null, !3954}
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !1779, size: 64, align: 64, dwarfAddressSpace: 0)
!3955 = !{!3956}
!3956 = !DILocalVariable(arg: 1, scope: !3951, file: !682, line: 487, type: !3954)
!3957 = !{!3958}
!3958 = !DITemplateTypeParameter(name: "T", type: !1779)
!3959 = !DILocation(line: 487, column: 1, scope: !3951)
!3960 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<std::process::Output>>", linkageName: "_ZN4core3ptr69drop_in_place$LT$core..option..Option$LT$std..process..Output$GT$$GT$17h4c1b25b67b843f5dE", scope: !260, file: !682, line: 487, type: !3961, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3977, retainedNodes: !3975)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{null, !3963}
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<std::process::Output>", baseType: !3964, size: 64, align: 64, dwarfAddressSpace: 0)
!3964 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::process::Output>", scope: !39, file: !2, size: 448, align: 64, elements: !3965, templateParams: !23, identifier: "3fe81507bb5515a5328b88bf6fba3d66")
!3965 = !{!3966}
!3966 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3964, file: !2, size: 448, align: 64, elements: !3967, templateParams: !23, identifier: "f31ea7af35bf6ee458857cfc9f11e15", discriminator: !3974)
!3967 = !{!3968, !3970}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3966, file: !2, baseType: !3969, size: 448, align: 64, extraData: i64 0)
!3969 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3964, file: !2, size: 448, align: 64, elements: !23, templateParams: !3719, identifier: "1a1fe6bfe8dcf9bb95887cda9cca63fd")
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3966, file: !2, baseType: !3971, size: 448, align: 64)
!3971 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3964, file: !2, size: 448, align: 64, elements: !3972, templateParams: !3719, identifier: "78def769da90d92dac48ebe10b2a75d7")
!3972 = !{!3973}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3971, file: !2, baseType: !3705, size: 448, align: 64)
!3974 = !DIDerivedType(tag: DW_TAG_member, scope: !3964, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!3975 = !{!3976}
!3976 = !DILocalVariable(arg: 1, scope: !3960, file: !682, line: 487, type: !3963)
!3977 = !{!3978}
!3978 = !DITemplateTypeParameter(name: "T", type: !3964)
!3979 = !DILocation(line: 487, column: 1, scope: !3960)
!3980 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::process::process_common::Command>", linkageName: "_ZN4core3ptr69drop_in_place$LT$std..sys..unix..process..process_common..Command$GT$17h889d6d0db2f3c56eE", scope: !260, file: !682, line: 487, type: !3981, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3986, retainedNodes: !3984)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !3983}
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::process::process_common::Command", baseType: !2526, size: 64, align: 64, dwarfAddressSpace: 0)
!3984 = !{!3985}
!3985 = !DILocalVariable(arg: 1, scope: !3980, file: !682, line: 487, type: !3983)
!3986 = !{!3987}
!3987 = !DITemplateTypeParameter(name: "T", type: !2526)
!3988 = !DILocation(line: 487, column: 1, scope: !3980)
!3989 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hbef0ddc8d7bea86bE", scope: !260, file: !682, line: 487, type: !3990, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3995, retainedNodes: !3993)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{null, !3992}
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2539, size: 64, align: 64, dwarfAddressSpace: 0)
!3993 = !{!3994}
!3994 = !DILocalVariable(arg: 1, scope: !3989, file: !682, line: 487, type: !3992)
!3995 = !{!3996}
!3996 = !DITemplateTypeParameter(name: "T", type: !2539)
!3997 = !DILocation(line: 487, column: 1, scope: !3989)
!3998 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h50bb70fb0756222bE", scope: !260, file: !682, line: 487, type: !3999, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4015, retainedNodes: !4013)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{null, !4001}
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::string::String>", baseType: !4002, size: 64, align: 64, dwarfAddressSpace: 0)
!4002 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::string::String>", scope: !39, file: !2, size: 192, align: 64, elements: !4003, templateParams: !23, identifier: "6c1c0540bf197b758f0a8b8ba989ce75")
!4003 = !{!4004}
!4004 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4002, file: !2, size: 192, align: 64, elements: !4005, templateParams: !23, identifier: "a00c707c6fb5691ff7241a0d7b504b94", discriminator: !4012)
!4005 = !{!4006, !4008}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4004, file: !2, baseType: !4007, size: 192, align: 64, extraData: i64 0)
!4007 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4002, file: !2, size: 192, align: 64, elements: !23, templateParams: !2988, identifier: "c85e782ce24deafac397e9c75863e231")
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4004, file: !2, baseType: !4009, size: 192, align: 64)
!4009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4002, file: !2, size: 192, align: 64, elements: !4010, templateParams: !2988, identifier: "36a94a9be051442481f0c31021476b7")
!4010 = !{!4011}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4009, file: !2, baseType: !2358, size: 192, align: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, scope: !4002, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!4013 = !{!4014}
!4014 = !DILocalVariable(arg: 1, scope: !3998, file: !682, line: 487, type: !4001)
!4015 = !{!4016}
!4016 = !DITemplateTypeParameter(name: "T", type: !4002)
!4017 = !DILocation(line: 487, column: 1, scope: !3998)
!4018 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>", linkageName: "_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17h9ed4a0baa34effa7E", scope: !260, file: !682, line: 487, type: !4019, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4027, retainedNodes: !4025)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !4021}
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::mem::replace::PanicGuard", baseType: !4022, size: 64, align: 64, dwarfAddressSpace: 0)
!4022 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicGuard", scope: !4023, file: !2, align: 8, elements: !23, identifier: "1c38a0184f25b3652f5e97687c2f5e67")
!4023 = !DINamespace(name: "replace", scope: !4024)
!4024 = !DINamespace(name: "mem", scope: !1139)
!4025 = !{!4026}
!4026 = !DILocalVariable(arg: 1, scope: !4018, file: !682, line: 487, type: !4021)
!4027 = !{!4028}
!4028 = !DITemplateTypeParameter(name: "T", type: !4022)
!4029 = !DILocation(line: 487, column: 1, scope: !4018)
!4030 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h1cdce11ad28df833E", scope: !260, file: !682, line: 487, type: !4031, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4036, retainedNodes: !4034)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{null, !4033}
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::ffi::c_str::CString>", baseType: !2594, size: 64, align: 64, dwarfAddressSpace: 0)
!4034 = !{!4035}
!4035 = !DILocalVariable(arg: 1, scope: !4030, file: !682, line: 487, type: !4033)
!4036 = !{!4037}
!4037 = !DITemplateTypeParameter(name: "T", type: !2594)
!4038 = !DILocation(line: 487, column: 1, scope: !4030)
!4039 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17h1428e3b391157e66E", scope: !260, file: !682, line: 487, type: !4040, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1292, retainedNodes: !4042)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !3105}
!4042 = !{!4043}
!4043 = !DILocalVariable(arg: 1, scope: !4039, file: !682, line: 487, type: !3105)
!4044 = !DILocation(line: 487, column: 1, scope: !4039)
!4045 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h8a1dd2662f1935d0E", scope: !260, file: !682, line: 487, type: !4046, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4051, retainedNodes: !4049)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{null, !4048}
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2542, size: 64, align: 64, dwarfAddressSpace: 0)
!4049 = !{!4050}
!4050 = !DILocalVariable(arg: 1, scope: !4045, file: !682, line: 487, type: !4048)
!4051 = !{!4052}
!4052 = !DITemplateTypeParameter(name: "T", type: !2542)
!4053 = !DILocation(line: 487, column: 1, scope: !4045)
!4054 = distinct !DISubprogram(name: "drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>", linkageName: "_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h3943d9e448772912E", scope: !260, file: !682, line: 487, type: !4055, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4060, retainedNodes: !4058)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{null, !4057}
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::panicking::begin_panic::PanicPayload<&str>", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!4058 = !{!4059}
!4059 = !DILocalVariable(arg: 1, scope: !4054, file: !682, line: 487, type: !4057)
!4060 = !{!4061}
!4061 = !DITemplateTypeParameter(name: "T", type: !33)
!4062 = !DILocation(line: 487, column: 1, scope: !4054)
!4063 = distinct !DISubprogram(name: "drop_in_place<std::rt::lang_start::{closure_env#0}<()>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17ha196934336d1b5e1E", scope: !260, file: !682, line: 487, type: !4064, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4068, retainedNodes: !4066)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{null, !3557}
!4066 = !{!4067}
!4067 = !DILocalVariable(arg: 1, scope: !4063, file: !682, line: 487, type: !3557)
!4068 = !{!4069}
!4069 = !DITemplateTypeParameter(name: "T", type: !14)
!4070 = !DILocation(line: 487, column: 1, scope: !4063)
!4071 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::boxed::Box<[u32], alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h91744cd42444054eE", scope: !260, file: !682, line: 487, type: !4072, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4077, retainedNodes: !4075)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{null, !4074}
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::boxed::Box<[u32], alloc::alloc::Global>>", baseType: !2650, size: 64, align: 64, dwarfAddressSpace: 0)
!4075 = !{!4076}
!4076 = !DILocalVariable(arg: 1, scope: !4071, file: !682, line: 487, type: !4074)
!4077 = !{!4078}
!4078 = !DITemplateTypeParameter(name: "T", type: !2650)
!4079 = !DILocation(line: 487, column: 1, scope: !4071)
!4080 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h61d30803e960b676E", scope: !339, file: !445, line: 218, type: !4081, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4096)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!4083, !448}
!4083 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !39, file: !2, size: 64, align: 64, elements: !4084, templateParams: !23, identifier: "1ee5ed4dbacb64e94c274540a7690bea")
!4084 = !{!4085}
!4085 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4083, file: !2, size: 64, align: 64, elements: !4086, templateParams: !23, identifier: "239846ab90f9f2feb4b60ed34464a5bf", discriminator: !4095)
!4086 = !{!4087, !4091}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4085, file: !2, baseType: !4088, size: 64, align: 64, extraData: i64 0)
!4088 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4083, file: !2, size: 64, align: 64, elements: !23, templateParams: !4089, identifier: "bf0d711281049dfcf893f88290a95452")
!4089 = !{!4090}
!4090 = !DITemplateTypeParameter(name: "T", type: !339)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4085, file: !2, baseType: !4092, size: 64, align: 64)
!4092 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4083, file: !2, size: 64, align: 64, elements: !4093, templateParams: !4089, identifier: "9a9d77a1265441205da598b286a31991")
!4093 = !{!4094}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4092, file: !2, baseType: !339, size: 64, align: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, scope: !4083, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!4096 = !{!4097}
!4097 = !DILocalVariable(name: "ptr", arg: 1, scope: !4080, file: !445, line: 218, type: !448)
!4098 = !DILocation(line: 218, column: 22, scope: !4080)
!4099 = !DILocalVariable(name: "metadata", scope: !4100, file: !445, line: 219, type: !7, align: 1)
!4100 = !DILexicalBlockFile(scope: !4101, file: !445, discriminator: 0)
!4101 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4102)
!4102 = !{!4103, !4099}
!4103 = !DILocalVariable(name: "data_address", scope: !4100, file: !445, line: 219, type: !777, align: 8)
!4104 = !DILocation(line: 219, column: 13, scope: !4100, inlinedAt: !4105)
!4105 = !DILocation(line: 668, column: 5, scope: !4106, inlinedAt: !4107)
!4106 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!4107 = !DILocation(line: 38, column: 41, scope: !4108, inlinedAt: !4112)
!4108 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc23cf25345e04005E", scope: !456, file: !455, line: 35, type: !987, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4109)
!4109 = !{!4110}
!4110 = !DILocalVariable(name: "self", scope: !4111, file: !445, line: 219, type: !448, align: 8)
!4111 = !DILexicalBlockFile(scope: !4108, file: !445, discriminator: 0)
!4112 = !DILocation(line: 219, column: 13, scope: !4080)
!4113 = !DILocation(line: 219, column: 13, scope: !4111, inlinedAt: !4112)
!4114 = !DILocalVariable(name: "self", scope: !4115, file: !445, line: 219, type: !448, align: 8)
!4115 = !DILexicalBlockFile(scope: !4116, file: !445, discriminator: 0)
!4116 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4117)
!4117 = !{!4114, !4118}
!4118 = !DILocalVariable(name: "other", scope: !4115, file: !445, line: 219, type: !448, align: 8)
!4119 = !DILocation(line: 219, column: 13, scope: !4115, inlinedAt: !4120)
!4120 = !DILocation(line: 38, column: 9, scope: !4108, inlinedAt: !4112)
!4121 = !DILocation(line: 219, column: 13, scope: !4122, inlinedAt: !4126)
!4122 = !DILexicalBlockFile(scope: !4123, file: !445, discriminator: 0)
!4123 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !4124)
!4124 = !{!4125}
!4125 = !DILocalVariable(name: "addr", scope: !4122, file: !445, line: 219, type: !9, align: 8)
!4126 = !DILocation(line: 668, column: 24, scope: !4106, inlinedAt: !4107)
!4127 = !DILocation(line: 219, column: 12, scope: !4080)
!4128 = !DILocation(line: 223, column: 13, scope: !4080)
!4129 = !DILocation(line: 219, column: 9, scope: !4080)
!4130 = !DILocation(line: 221, column: 47, scope: !4080)
!4131 = !DILocalVariable(name: "ptr", scope: !4132, file: !445, line: 221, type: !448, align: 8)
!4132 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4133)
!4133 = !{!4131}
!4134 = !DILocation(line: 221, column: 27, scope: !4132, inlinedAt: !4135)
!4135 = !DILocation(line: 221, column: 27, scope: !4080)
!4136 = !DILocation(line: 221, column: 13, scope: !4080)
!4137 = !DILocation(line: 225, column: 6, scope: !4080)
!4138 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h3907a4c46ddbe6e5E", scope: !260, file: !682, line: 487, type: !4139, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4148, retainedNodes: !4146)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{null, !4141}
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", baseType: !4142, size: 64, align: 64, dwarfAddressSpace: 0)
!4142 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !4143, templateParams: !23, identifier: "213bbf3a62911afbcad3bc537cab9a")
!4143 = !{!4144, !4145}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4142, file: !2, baseType: !3917, size: 64, align: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4142, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!4146 = !{!4147}
!4147 = !DILocalVariable(arg: 1, scope: !4138, file: !682, line: 487, type: !4141)
!4148 = !{!4149}
!4149 = !DITemplateTypeParameter(name: "T", type: !4142)
!4150 = !DILocation(line: 487, column: 1, scope: !4138)
!4151 = distinct !DISubprogram(name: "drop_in_place<core::result::Result<alloc::string::String, std::env::VarError>>", linkageName: "_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h04daf90b20d65467E", scope: !260, file: !682, line: 487, type: !4152, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4157, retainedNodes: !4155)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{null, !4154}
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::result::Result<alloc::string::String, std::env::VarError>", baseType: !2350, size: 64, align: 64, dwarfAddressSpace: 0)
!4155 = !{!4156}
!4156 = !DILocalVariable(arg: 1, scope: !4151, file: !682, line: 487, type: !4154)
!4157 = !{!4158}
!4158 = !DITemplateTypeParameter(name: "T", type: !2350)
!4159 = !DILocation(line: 487, column: 1, scope: !4151)
!4160 = distinct !DISubprogram(name: "drop_in_place<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17hbbf2fc7512c41c58E", scope: !260, file: !682, line: 487, type: !4161, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !4167)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{null, !4163}
!4163 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !4164, templateParams: !23, identifier: "133087c4588de27a80919fc6274a1419")
!4164 = !{!4165, !4166}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4163, file: !2, baseType: !1787, size: 64, align: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4163, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!4167 = !{!4168}
!4168 = !DILocalVariable(arg: 1, scope: !4160, file: !682, line: 487, type: !4163)
!4169 = !{!4170}
!4170 = !DITemplateTypeParameter(name: "T", type: !1788)
!4171 = !DILocation(line: 487, column: 1, scope: !4160)
!4172 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>", linkageName: "_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17h90b188d3ffcddfdaE", scope: !260, file: !682, line: 487, type: !4173, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4178, retainedNodes: !4176)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{null, !4175}
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<std::sys::unix::process::process_common::Stdio>", baseType: !2669, size: 64, align: 64, dwarfAddressSpace: 0)
!4176 = !{!4177}
!4177 = !DILocalVariable(arg: 1, scope: !4172, file: !682, line: 487, type: !4175)
!4178 = !{!4179}
!4179 = !DITemplateTypeParameter(name: "T", type: !2669)
!4180 = !DILocation(line: 487, column: 1, scope: !4172)
!4181 = !{i32 0, i32 5}
!4182 = distinct !DISubprogram(name: "next_code_point<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations15next_code_point17haf5cc2a85bb4f12dE", scope: !4184, file: !4183, line: 36, type: !4185, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4223, retainedNodes: !4187)
!4183 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "013ffea566228bd192f2b387ca5fa2c0")
!4184 = !DINamespace(name: "validations", scope: !306)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!2606, !969}
!4187 = !{!4188, !4189, !4191, !4209, !4211, !4213, !4215, !4217, !4219, !4221}
!4188 = !DILocalVariable(name: "bytes", arg: 1, scope: !4182, file: !4183, line: 36, type: !969)
!4189 = !DILocalVariable(name: "x", scope: !4190, file: !4183, line: 38, type: !52, align: 1)
!4190 = distinct !DILexicalBlock(scope: !4182, file: !4183, line: 38, column: 5)
!4191 = !DILocalVariable(name: "residual", scope: !4192, file: !4183, line: 38, type: !4193, align: 1)
!4192 = distinct !DILexicalBlock(scope: !4182, file: !4183, line: 38, column: 26)
!4193 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !39, file: !2, align: 8, elements: !4194, templateParams: !23, identifier: "5f315ca528bd9d6147a05343ff9a4780")
!4194 = !{!4195}
!4195 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4193, file: !2, align: 8, elements: !4196, templateParams: !23, identifier: "98c3ba61a3798bcf6ce3957f04ea9e1a")
!4196 = !{!4197, !4205}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4195, file: !2, baseType: !4198, align: 8)
!4198 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4193, file: !2, align: 8, elements: !23, templateParams: !4199, identifier: "1ac343b9768c4f1cecce8e11f8752889")
!4199 = !{!4200}
!4200 = !DITemplateTypeParameter(name: "T", type: !4201)
!4201 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !4202, file: !2, align: 8, elements: !4203, templateParams: !23, identifier: "9a43a35c802cd6d66a55225bed19e352")
!4202 = !DINamespace(name: "convert", scope: !40)
!4203 = !{!4204}
!4204 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4201, file: !2, align: 8, elements: !23, identifier: "c92417f40510ebd79df5f86930cf3ac7")
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4195, file: !2, baseType: !4206, align: 8)
!4206 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4193, file: !2, align: 8, elements: !4207, templateParams: !4199, identifier: "6e83de7dff78257033600d313815138c")
!4207 = !{!4208}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4206, file: !2, baseType: !4201, align: 8)
!4209 = !DILocalVariable(name: "val", scope: !4210, file: !4183, line: 38, type: !350, align: 8)
!4210 = distinct !DILexicalBlock(scope: !4182, file: !4183, line: 38, column: 14)
!4211 = !DILocalVariable(name: "init", scope: !4212, file: !4183, line: 46, type: !327, align: 4)
!4212 = distinct !DILexicalBlock(scope: !4190, file: !4183, line: 46, column: 5)
!4213 = !DILocalVariable(name: "y", scope: !4214, file: !4183, line: 49, type: !52, align: 1)
!4214 = distinct !DILexicalBlock(scope: !4212, file: !4183, line: 49, column: 5)
!4215 = !DILocalVariable(name: "ch", scope: !4216, file: !4183, line: 50, type: !327, align: 4)
!4216 = distinct !DILexicalBlock(scope: !4214, file: !4183, line: 50, column: 5)
!4217 = !DILocalVariable(name: "z", scope: !4218, file: !4183, line: 56, type: !52, align: 1)
!4218 = distinct !DILexicalBlock(scope: !4216, file: !4183, line: 56, column: 9)
!4219 = !DILocalVariable(name: "y_z", scope: !4220, file: !4183, line: 57, type: !327, align: 4)
!4220 = distinct !DILexicalBlock(scope: !4218, file: !4183, line: 57, column: 9)
!4221 = !DILocalVariable(name: "w", scope: !4222, file: !4183, line: 64, type: !52, align: 1)
!4222 = distinct !DILexicalBlock(scope: !4220, file: !4183, line: 64, column: 13)
!4223 = !{!4224}
!4224 = !DITemplateTypeParameter(name: "I", type: !336)
!4225 = !DILocation(line: 36, column: 63, scope: !4182)
!4226 = !DILocalVariable(name: "self", scope: !4227, file: !4183, line: 38, type: !958, align: 8)
!4227 = !DILexicalBlockFile(scope: !4228, file: !4183, discriminator: 0)
!4228 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10f582db88ad3872E", scope: !4229, file: !1507, line: 2290, type: !4230, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4249)
!4229 = !DINamespace(name: "{impl#35}", scope: !39)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!4232, !958}
!4232 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &u8>", scope: !4233, file: !2, size: 64, align: 64, elements: !4234, templateParams: !23, identifier: "eb719116bf3a88c2d301aa439443cf35")
!4233 = !DINamespace(name: "control_flow", scope: !628)
!4234 = !{!4235}
!4235 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4232, file: !2, size: 64, align: 64, elements: !4236, templateParams: !23, identifier: "8165fcc1fda5618de2ef38d5359e435f", discriminator: !4248)
!4236 = !{!4237, !4244}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4235, file: !2, baseType: !4238, size: 64, align: 64)
!4238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4232, file: !2, size: 64, align: 64, elements: !4239, templateParams: !4241, identifier: "808f786e7127e40614b90184f2edf47")
!4239 = !{!4240}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4238, file: !2, baseType: !350, size: 64, align: 64)
!4241 = !{!4242, !4243}
!4242 = !DITemplateTypeParameter(name: "B", type: !4193)
!4243 = !DITemplateTypeParameter(name: "C", type: !350)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4235, file: !2, baseType: !4245, size: 64, align: 64, extraData: i64 0)
!4245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4232, file: !2, size: 64, align: 64, elements: !4246, templateParams: !4241, identifier: "2f2b8ff68d2ec854a9110e9c1a301840")
!4246 = !{!4247}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4245, file: !2, baseType: !4193, align: 8)
!4248 = !DIDerivedType(tag: DW_TAG_member, scope: !4232, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!4249 = !{!4226, !4250}
!4250 = !DILocalVariable(name: "v", scope: !4251, file: !4183, line: 38, type: !350, align: 8)
!4251 = !DILexicalBlockFile(scope: !4252, file: !4183, discriminator: 0)
!4252 = distinct !DILexicalBlock(scope: !4228, file: !1507, line: 2292, column: 13)
!4253 = !DILocation(line: 38, column: 14, scope: !4227, inlinedAt: !4254)
!4254 = !DILocation(line: 38, column: 14, scope: !4182)
!4255 = !DILocation(line: 38, column: 26, scope: !4192)
!4256 = !DILocalVariable(name: "residual", scope: !4257, file: !4183, line: 38, type: !4193, align: 1)
!4257 = !DILexicalBlockFile(scope: !4258, file: !4183, discriminator: 0)
!4258 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h0b3ae23b335e0c01E", scope: !4259, file: !1507, line: 2302, type: !4260, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !4262)
!4259 = !DINamespace(name: "{impl#36}", scope: !39)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!2606, !4193}
!4262 = !{!4256}
!4263 = !DILocation(line: 38, column: 14, scope: !4257, inlinedAt: !4264)
!4264 = !DILocation(line: 38, column: 14, scope: !4192)
!4265 = !DILocalVariable(name: "self", scope: !4266, file: !4183, line: 49, type: !958, align: 8)
!4266 = !DILexicalBlockFile(scope: !4267, file: !4183, discriminator: 0)
!4267 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hbec772b636ac3eacE", scope: !958, file: !1507, line: 892, type: !4268, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4270)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!350, !958, !917}
!4270 = !{!4265, !4271}
!4271 = !DILocalVariable(name: "val", scope: !4272, file: !4183, line: 49, type: !350, align: 8)
!4272 = !DILexicalBlockFile(scope: !4273, file: !4183, discriminator: 0)
!4273 = distinct !DILexicalBlock(scope: !4267, file: !1507, line: 895, column: 13)
!4274 = !DILocation(line: 49, column: 23, scope: !4266, inlinedAt: !4275)
!4275 = !DILocation(line: 49, column: 23, scope: !4212)
!4276 = !DILocation(line: 50, column: 9, scope: !4216)
!4277 = !DILocalVariable(name: "self", scope: !4278, file: !4183, line: 56, type: !958, align: 8)
!4278 = !DILexicalBlockFile(scope: !4279, file: !4183, discriminator: 0)
!4279 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hbec772b636ac3eacE", scope: !958, file: !1507, line: 892, type: !4268, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4280)
!4280 = !{!4277, !4281}
!4281 = !DILocalVariable(name: "val", scope: !4282, file: !4183, line: 56, type: !350, align: 8)
!4282 = !DILexicalBlockFile(scope: !4283, file: !4183, discriminator: 0)
!4283 = distinct !DILexicalBlock(scope: !4279, file: !1507, line: 895, column: 13)
!4284 = !DILocation(line: 56, column: 27, scope: !4278, inlinedAt: !4285)
!4285 = !DILocation(line: 56, column: 27, scope: !4216)
!4286 = !DILocalVariable(name: "self", scope: !4287, file: !4183, line: 64, type: !958, align: 8)
!4287 = !DILexicalBlockFile(scope: !4288, file: !4183, discriminator: 0)
!4288 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hbec772b636ac3eacE", scope: !958, file: !1507, line: 892, type: !4268, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4289)
!4289 = !{!4286, !4290}
!4290 = !DILocalVariable(name: "val", scope: !4291, file: !4183, line: 64, type: !350, align: 8)
!4291 = !DILexicalBlockFile(scope: !4292, file: !4183, discriminator: 0)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !1507, line: 895, column: 13)
!4293 = !DILocation(line: 64, column: 31, scope: !4287, inlinedAt: !4294)
!4294 = !DILocation(line: 64, column: 31, scope: !4220)
!4295 = !DILocation(line: 38, column: 14, scope: !4251, inlinedAt: !4254)
!4296 = !DILocation(line: 38, column: 14, scope: !4210)
!4297 = !DILocation(line: 38, column: 13, scope: !4182)
!4298 = !DILocation(line: 38, column: 9, scope: !4190)
!4299 = !DILocation(line: 39, column: 8, scope: !4190)
!4300 = !DILocation(line: 1, column: 1, scope: !4301)
!4301 = !DILexicalBlockFile(scope: !4182, file: !4302, discriminator: 0)
!4302 = !DIFile(filename: "build.rs", directory: "/home/dy3199/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.152", checksumkind: CSK_MD5, checksum: "6a49aedcd1f047a823d2d75f93ddb0d0")
!4303 = !DILocation(line: 70, column: 2, scope: !4182)
!4304 = !DILocation(line: 46, column: 32, scope: !4190)
!4305 = !DILocalVariable(name: "byte", scope: !4306, file: !4183, line: 46, type: !52, align: 1)
!4306 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h4c2e41dd8bf6b4afE", scope: !4184, file: !4183, line: 11, type: !4307, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!327, !52, !327}
!4309 = !{!4305, !4310}
!4310 = !DILocalVariable(name: "width", scope: !4306, file: !4183, line: 46, type: !327, align: 4)
!4311 = !DILocation(line: 46, column: 16, scope: !4306, inlinedAt: !4312)
!4312 = !DILocation(line: 46, column: 16, scope: !4190)
!4313 = !DILocation(line: 46, column: 9, scope: !4212)
!4314 = !DILocation(line: 40, column: 21, scope: !4190)
!4315 = !DILocation(line: 40, column: 16, scope: !4190)
!4316 = !DILocation(line: 1, column: 1, scope: !4317)
!4317 = !DILexicalBlockFile(scope: !4190, file: !4302, discriminator: 0)
!4318 = !{i32 0, i32 2}
!4319 = !DILocation(line: 49, column: 23, scope: !4320, inlinedAt: !4322)
!4320 = !DILexicalBlockFile(scope: !4321, file: !4183, discriminator: 0)
!4321 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!4322 = !DILocation(line: 897, column: 30, scope: !4267, inlinedAt: !4275)
!4323 = !DILocation(line: 49, column: 23, scope: !4272, inlinedAt: !4275)
!4324 = !DILocation(line: 49, column: 22, scope: !4212)
!4325 = !DILocation(line: 49, column: 9, scope: !4214)
!4326 = !DILocation(line: 50, column: 37, scope: !4214)
!4327 = !DILocalVariable(name: "ch", scope: !4328, file: !4183, line: 50, type: !327, align: 4)
!4328 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h7c99f14cc1a4c5d6E", scope: !4184, file: !4183, line: 17, type: !4329, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4331)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!327, !327, !52}
!4331 = !{!4327, !4332}
!4332 = !DILocalVariable(name: "byte", scope: !4328, file: !4183, line: 50, type: !52, align: 1)
!4333 = !DILocation(line: 50, column: 18, scope: !4328, inlinedAt: !4334)
!4334 = !DILocation(line: 50, column: 18, scope: !4214)
!4335 = !DILocation(line: 50, column: 43, scope: !4214)
!4336 = !DILocation(line: 51, column: 8, scope: !4216)
!4337 = !DILocation(line: 69, column: 10, scope: !4216)
!4338 = !DILocation(line: 69, column: 5, scope: !4216)
!4339 = !DILocation(line: 56, column: 27, scope: !4340, inlinedAt: !4342)
!4340 = !DILexicalBlockFile(scope: !4341, file: !4183, discriminator: 0)
!4341 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!4342 = !DILocation(line: 897, column: 30, scope: !4279, inlinedAt: !4285)
!4343 = !DILocation(line: 56, column: 27, scope: !4282, inlinedAt: !4285)
!4344 = !DILocation(line: 56, column: 26, scope: !4216)
!4345 = !DILocation(line: 56, column: 13, scope: !4218)
!4346 = !DILocation(line: 57, column: 38, scope: !4218)
!4347 = !DILocalVariable(name: "ch", scope: !4348, file: !4183, line: 57, type: !327, align: 4)
!4348 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h7c99f14cc1a4c5d6E", scope: !4184, file: !4183, line: 17, type: !4329, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4349)
!4349 = !{!4347, !4350}
!4350 = !DILocalVariable(name: "byte", scope: !4348, file: !4183, line: 57, type: !52, align: 1)
!4351 = !DILocation(line: 57, column: 19, scope: !4348, inlinedAt: !4352)
!4352 = !DILocation(line: 57, column: 19, scope: !4218)
!4353 = !DILocation(line: 57, column: 62, scope: !4218)
!4354 = !DILocation(line: 57, column: 13, scope: !4220)
!4355 = !DILocation(line: 58, column: 14, scope: !4220)
!4356 = !DILocation(line: 58, column: 9, scope: !4220)
!4357 = !DILocation(line: 59, column: 12, scope: !4220)
!4358 = !DILocation(line: 51, column: 5, scope: !4216)
!4359 = !DILocation(line: 64, column: 31, scope: !4360, inlinedAt: !4362)
!4360 = !DILexicalBlockFile(scope: !4361, file: !4183, discriminator: 0)
!4361 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!4362 = !DILocation(line: 897, column: 30, scope: !4288, inlinedAt: !4294)
!4363 = !DILocation(line: 64, column: 31, scope: !4291, inlinedAt: !4294)
!4364 = !DILocation(line: 64, column: 30, scope: !4220)
!4365 = !DILocation(line: 64, column: 17, scope: !4222)
!4366 = !DILocation(line: 65, column: 18, scope: !4222)
!4367 = !DILocation(line: 65, column: 56, scope: !4222)
!4368 = !DILocalVariable(name: "ch", scope: !4369, file: !4183, line: 65, type: !327, align: 4)
!4369 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h7c99f14cc1a4c5d6E", scope: !4184, file: !4183, line: 17, type: !4329, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4370)
!4370 = !{!4368, !4371}
!4371 = !DILocalVariable(name: "byte", scope: !4369, file: !4183, line: 65, type: !52, align: 1)
!4372 = !DILocation(line: 65, column: 37, scope: !4369, inlinedAt: !4373)
!4373 = !DILocation(line: 65, column: 37, scope: !4222)
!4374 = !DILocation(line: 65, column: 61, scope: !4222)
!4375 = !DILocation(line: 65, column: 13, scope: !4222)
!4376 = !DILocation(line: 59, column: 9, scope: !4220)
!4377 = distinct !DISubprogram(name: "next_code_point_reverse<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations23next_code_point_reverse17h50f495398b647d05E", scope: !4184, file: !4183, line: 79, type: !4185, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4223, retainedNodes: !4378)
!4378 = !{!4379, !4380, !4382, !4384, !4386, !4388, !4389, !4391, !4393, !4395, !4397}
!4379 = !DILocalVariable(name: "bytes", arg: 1, scope: !4377, file: !4183, line: 79, type: !969)
!4380 = !DILocalVariable(name: "w", scope: !4381, file: !4183, line: 84, type: !52, align: 1)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !4183, line: 84, column: 5)
!4382 = !DILocalVariable(name: "residual", scope: !4383, file: !4183, line: 84, type: !4193, align: 1)
!4383 = distinct !DILexicalBlock(scope: !4377, file: !4183, line: 84, column: 37)
!4384 = !DILocalVariable(name: "val", scope: !4385, file: !4183, line: 84, type: !350, align: 8)
!4385 = distinct !DILexicalBlock(scope: !4377, file: !4183, line: 84, column: 20)
!4386 = !DILocalVariable(name: "next_byte", scope: !4387, file: !4183, line: 85, type: !52, align: 1)
!4387 = distinct !DILexicalBlock(scope: !4377, file: !4183, line: 85, column: 9)
!4388 = !DILocalVariable(name: "next_byte", scope: !4387, file: !4183, line: 85, type: !350, align: 8)
!4389 = !DILocalVariable(name: "back_byte", scope: !4390, file: !4183, line: 86, type: !52, align: 1)
!4390 = distinct !DILexicalBlock(scope: !4377, file: !4183, line: 86, column: 9)
!4391 = !DILocalVariable(name: "ch", scope: !4392, file: !4183, line: 91, type: !327, align: 4)
!4392 = distinct !DILexicalBlock(scope: !4381, file: !4183, line: 91, column: 5)
!4393 = !DILocalVariable(name: "z", scope: !4394, file: !4183, line: 94, type: !52, align: 1)
!4394 = distinct !DILexicalBlock(scope: !4392, file: !4183, line: 94, column: 5)
!4395 = !DILocalVariable(name: "y", scope: !4396, file: !4183, line: 99, type: !52, align: 1)
!4396 = distinct !DILexicalBlock(scope: !4394, file: !4183, line: 99, column: 9)
!4397 = !DILocalVariable(name: "x", scope: !4398, file: !4183, line: 104, type: !52, align: 1)
!4398 = distinct !DILexicalBlock(scope: !4396, file: !4183, line: 104, column: 13)
!4399 = !DILocation(line: 79, column: 53, scope: !4377)
!4400 = !DILocalVariable(name: "self", scope: !4401, file: !4183, line: 84, type: !958, align: 8)
!4401 = !DILexicalBlockFile(scope: !4402, file: !4183, discriminator: 0)
!4402 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10f582db88ad3872E", scope: !4229, file: !1507, line: 2290, type: !4230, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4403)
!4403 = !{!4400, !4404}
!4404 = !DILocalVariable(name: "v", scope: !4405, file: !4183, line: 84, type: !350, align: 8)
!4405 = !DILexicalBlockFile(scope: !4406, file: !4183, discriminator: 0)
!4406 = distinct !DILexicalBlock(scope: !4402, file: !1507, line: 2292, column: 13)
!4407 = !DILocation(line: 84, column: 20, scope: !4401, inlinedAt: !4408)
!4408 = !DILocation(line: 84, column: 20, scope: !4377)
!4409 = !DILocation(line: 84, column: 37, scope: !4383)
!4410 = !DILocalVariable(name: "residual", scope: !4411, file: !4183, line: 84, type: !4193, align: 1)
!4411 = !DILexicalBlockFile(scope: !4412, file: !4183, discriminator: 0)
!4412 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h0b3ae23b335e0c01E", scope: !4259, file: !1507, line: 2302, type: !4260, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !4413)
!4413 = !{!4410}
!4414 = !DILocation(line: 84, column: 20, scope: !4411, inlinedAt: !4415)
!4415 = !DILocation(line: 84, column: 20, scope: !4383)
!4416 = !DILocation(line: 91, column: 9, scope: !4392)
!4417 = !DILocalVariable(name: "self", scope: !4418, file: !4183, line: 94, type: !958, align: 8)
!4418 = !DILexicalBlockFile(scope: !4419, file: !4183, discriminator: 0)
!4419 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hbec772b636ac3eacE", scope: !958, file: !1507, line: 892, type: !4268, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4420)
!4420 = !{!4417, !4421}
!4421 = !DILocalVariable(name: "val", scope: !4422, file: !4183, line: 94, type: !350, align: 8)
!4422 = !DILexicalBlockFile(scope: !4423, file: !4183, discriminator: 0)
!4423 = distinct !DILexicalBlock(scope: !4419, file: !1507, line: 895, column: 13)
!4424 = !DILocation(line: 94, column: 23, scope: !4418, inlinedAt: !4425)
!4425 = !DILocation(line: 94, column: 23, scope: !4392)
!4426 = !DILocalVariable(name: "self", scope: !4427, file: !4183, line: 99, type: !958, align: 8)
!4427 = !DILexicalBlockFile(scope: !4428, file: !4183, discriminator: 0)
!4428 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hbec772b636ac3eacE", scope: !958, file: !1507, line: 892, type: !4268, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4429)
!4429 = !{!4426, !4430}
!4430 = !DILocalVariable(name: "val", scope: !4431, file: !4183, line: 99, type: !350, align: 8)
!4431 = !DILexicalBlockFile(scope: !4432, file: !4183, discriminator: 0)
!4432 = distinct !DILexicalBlock(scope: !4428, file: !1507, line: 895, column: 13)
!4433 = !DILocation(line: 99, column: 27, scope: !4427, inlinedAt: !4434)
!4434 = !DILocation(line: 99, column: 27, scope: !4394)
!4435 = !DILocalVariable(name: "self", scope: !4436, file: !4183, line: 104, type: !958, align: 8)
!4436 = !DILexicalBlockFile(scope: !4437, file: !4183, discriminator: 0)
!4437 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hbec772b636ac3eacE", scope: !958, file: !1507, line: 892, type: !4268, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !348, retainedNodes: !4438)
!4438 = !{!4435, !4439}
!4439 = !DILocalVariable(name: "val", scope: !4440, file: !4183, line: 104, type: !350, align: 8)
!4440 = !DILexicalBlockFile(scope: !4441, file: !4183, discriminator: 0)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !1507, line: 895, column: 13)
!4442 = !DILocation(line: 104, column: 31, scope: !4436, inlinedAt: !4443)
!4443 = !DILocation(line: 104, column: 31, scope: !4396)
!4444 = !DILocation(line: 84, column: 20, scope: !4405, inlinedAt: !4408)
!4445 = !DILocation(line: 84, column: 20, scope: !4385)
!4446 = !DILocation(line: 85, column: 9, scope: !4377)
!4447 = !DILocation(line: 85, column: 9, scope: !4387)
!4448 = !DILocation(line: 85, column: 22, scope: !4377)
!4449 = !DILocation(line: 1, column: 1, scope: !4450)
!4450 = !DILexicalBlockFile(scope: !4377, file: !4302, discriminator: 0)
!4451 = !DILocation(line: 113, column: 2, scope: !4377)
!4452 = !DILocation(line: 86, column: 9, scope: !4377)
!4453 = !DILocation(line: 86, column: 9, scope: !4390)
!4454 = !DILocation(line: 86, column: 22, scope: !4390)
!4455 = !DILocation(line: 84, column: 9, scope: !4381)
!4456 = !DILocation(line: 85, column: 53, scope: !4387)
!4457 = !DILocation(line: 85, column: 48, scope: !4387)
!4458 = !DILocation(line: 94, column: 23, scope: !4459, inlinedAt: !4461)
!4459 = !DILexicalBlockFile(scope: !4460, file: !4183, discriminator: 0)
!4460 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!4461 = !DILocation(line: 897, column: 30, scope: !4419, inlinedAt: !4425)
!4462 = !DILocation(line: 94, column: 23, scope: !4422, inlinedAt: !4425)
!4463 = !DILocation(line: 94, column: 22, scope: !4392)
!4464 = !DILocation(line: 94, column: 9, scope: !4394)
!4465 = !DILocation(line: 95, column: 26, scope: !4394)
!4466 = !DILocalVariable(name: "byte", scope: !4467, file: !4183, line: 95, type: !52, align: 1)
!4467 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h4c2e41dd8bf6b4afE", scope: !4184, file: !4183, line: 11, type: !4307, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4468)
!4468 = !{!4466, !4469}
!4469 = !DILocalVariable(name: "width", scope: !4467, file: !4183, line: 95, type: !327, align: 4)
!4470 = !DILocation(line: 95, column: 10, scope: !4467, inlinedAt: !4471)
!4471 = !DILocation(line: 95, column: 10, scope: !4394)
!4472 = !DILocation(line: 95, column: 5, scope: !4394)
!4473 = !DILocation(line: 96, column: 26, scope: !4394)
!4474 = !DILocalVariable(name: "byte", scope: !4475, file: !4183, line: 96, type: !52, align: 1)
!4475 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h720fc37e83397064E", scope: !4184, file: !4183, line: 24, type: !4476, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!989, !52}
!4478 = !{!4474}
!4479 = !DILocation(line: 96, column: 8, scope: !4475, inlinedAt: !4480)
!4480 = !DILocation(line: 96, column: 8, scope: !4394)
!4481 = !DILocation(line: 110, column: 29, scope: !4394)
!4482 = !DILocalVariable(name: "ch", scope: !4483, file: !4183, line: 110, type: !327, align: 4)
!4483 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h7c99f14cc1a4c5d6E", scope: !4184, file: !4183, line: 17, type: !4329, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4484)
!4484 = !{!4482, !4485}
!4485 = !DILocalVariable(name: "byte", scope: !4483, file: !4183, line: 110, type: !52, align: 1)
!4486 = !DILocation(line: 110, column: 10, scope: !4483, inlinedAt: !4487)
!4487 = !DILocation(line: 110, column: 10, scope: !4394)
!4488 = !DILocation(line: 110, column: 33, scope: !4394)
!4489 = !DILocation(line: 110, column: 5, scope: !4394)
!4490 = !DILocation(line: 112, column: 10, scope: !4394)
!4491 = !DILocation(line: 112, column: 5, scope: !4394)
!4492 = !DILocation(line: 99, column: 27, scope: !4493, inlinedAt: !4495)
!4493 = !DILexicalBlockFile(scope: !4494, file: !4183, discriminator: 0)
!4494 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!4495 = !DILocation(line: 897, column: 30, scope: !4428, inlinedAt: !4434)
!4496 = !DILocation(line: 99, column: 27, scope: !4431, inlinedAt: !4434)
!4497 = !DILocation(line: 99, column: 26, scope: !4394)
!4498 = !DILocation(line: 99, column: 13, scope: !4396)
!4499 = !DILocation(line: 100, column: 30, scope: !4396)
!4500 = !DILocalVariable(name: "byte", scope: !4501, file: !4183, line: 100, type: !52, align: 1)
!4501 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h4c2e41dd8bf6b4afE", scope: !4184, file: !4183, line: 11, type: !4307, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4502)
!4502 = !{!4500, !4503}
!4503 = !DILocalVariable(name: "width", scope: !4501, file: !4183, line: 100, type: !327, align: 4)
!4504 = !DILocation(line: 100, column: 14, scope: !4501, inlinedAt: !4505)
!4505 = !DILocation(line: 100, column: 14, scope: !4396)
!4506 = !DILocation(line: 100, column: 9, scope: !4396)
!4507 = !DILocation(line: 101, column: 30, scope: !4396)
!4508 = !DILocalVariable(name: "byte", scope: !4509, file: !4183, line: 101, type: !52, align: 1)
!4509 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h720fc37e83397064E", scope: !4184, file: !4183, line: 24, type: !4476, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4510)
!4510 = !{!4508}
!4511 = !DILocation(line: 101, column: 12, scope: !4509, inlinedAt: !4512)
!4512 = !DILocation(line: 101, column: 12, scope: !4396)
!4513 = !DILocation(line: 108, column: 33, scope: !4396)
!4514 = !DILocalVariable(name: "ch", scope: !4515, file: !4183, line: 108, type: !327, align: 4)
!4515 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h7c99f14cc1a4c5d6E", scope: !4184, file: !4183, line: 17, type: !4329, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4516)
!4516 = !{!4514, !4517}
!4517 = !DILocalVariable(name: "byte", scope: !4515, file: !4183, line: 108, type: !52, align: 1)
!4518 = !DILocation(line: 108, column: 14, scope: !4515, inlinedAt: !4519)
!4519 = !DILocation(line: 108, column: 14, scope: !4396)
!4520 = !DILocation(line: 108, column: 37, scope: !4396)
!4521 = !DILocation(line: 108, column: 9, scope: !4396)
!4522 = !DILocation(line: 96, column: 5, scope: !4394)
!4523 = !DILocation(line: 104, column: 31, scope: !4524, inlinedAt: !4526)
!4524 = !DILexicalBlockFile(scope: !4525, file: !4183, discriminator: 0)
!4525 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!4526 = !DILocation(line: 897, column: 30, scope: !4437, inlinedAt: !4443)
!4527 = !DILocation(line: 104, column: 31, scope: !4440, inlinedAt: !4443)
!4528 = !DILocation(line: 104, column: 30, scope: !4396)
!4529 = !DILocation(line: 104, column: 17, scope: !4398)
!4530 = !DILocation(line: 105, column: 34, scope: !4398)
!4531 = !DILocalVariable(name: "byte", scope: !4532, file: !4183, line: 105, type: !52, align: 1)
!4532 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h4c2e41dd8bf6b4afE", scope: !4184, file: !4183, line: 11, type: !4307, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4533)
!4533 = !{!4531, !4534}
!4534 = !DILocalVariable(name: "width", scope: !4532, file: !4183, line: 105, type: !327, align: 4)
!4535 = !DILocation(line: 105, column: 18, scope: !4532, inlinedAt: !4536)
!4536 = !DILocation(line: 105, column: 18, scope: !4398)
!4537 = !DILocation(line: 105, column: 13, scope: !4398)
!4538 = !DILocation(line: 106, column: 37, scope: !4398)
!4539 = !DILocalVariable(name: "ch", scope: !4540, file: !4183, line: 106, type: !327, align: 4)
!4540 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h7c99f14cc1a4c5d6E", scope: !4184, file: !4183, line: 17, type: !4329, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4541)
!4541 = !{!4539, !4542}
!4542 = !DILocalVariable(name: "byte", scope: !4540, file: !4183, line: 106, type: !52, align: 1)
!4543 = !DILocation(line: 106, column: 18, scope: !4540, inlinedAt: !4544)
!4544 = !DILocation(line: 106, column: 18, scope: !4398)
!4545 = !DILocation(line: 106, column: 41, scope: !4398)
!4546 = !DILocation(line: 106, column: 13, scope: !4398)
!4547 = !DILocation(line: 101, column: 9, scope: !4396)
!4548 = distinct !DISubprogram(name: "starts_with<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h1b047a2d93371da6E", scope: !496, file: !2439, line: 1080, type: !4549, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4554, retainedNodes: !4551)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!989, !48, !48}
!4551 = !{!4552, !4553}
!4552 = !DILocalVariable(name: "self", arg: 1, scope: !4548, file: !2439, line: 1080, type: !48)
!4553 = !DILocalVariable(name: "pat", arg: 2, scope: !4548, file: !2439, line: 1080, type: !48)
!4554 = !{!4555}
!4555 = !DITemplateTypeParameter(name: "P", type: !48)
!4556 = !DILocation(line: 1080, column: 44, scope: !4548)
!4557 = !DILocation(line: 1080, column: 54, scope: !4548)
!4558 = !DILocation(line: 1081, column: 9, scope: !4548)
!4559 = !DILocation(line: 1082, column: 6, scope: !4548)
!4560 = distinct !DISubprogram(name: "trim_matches<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17h277750caef367a35E", scope: !496, file: !2439, line: 2042, type: !4561, scopeLine: 2042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4577, retainedNodes: !4563)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!48, !48, !494}
!4563 = !{!4564, !4565, !4566, !4568, !4570, !4572, !4574, !4575}
!4564 = !DILocalVariable(name: "self", arg: 1, scope: !4560, file: !2439, line: 2042, type: !48)
!4565 = !DILocalVariable(name: "pat", arg: 2, scope: !4560, file: !2439, line: 2042, type: !494)
!4566 = !DILocalVariable(name: "i", scope: !4567, file: !2439, line: 2046, type: !9, align: 8)
!4567 = distinct !DILexicalBlock(scope: !4560, file: !2439, line: 2046, column: 9)
!4568 = !DILocalVariable(name: "j", scope: !4569, file: !2439, line: 2047, type: !9, align: 8)
!4569 = distinct !DILexicalBlock(scope: !4567, file: !2439, line: 2047, column: 9)
!4570 = !DILocalVariable(name: "matcher", scope: !4571, file: !2439, line: 2048, type: !1125, align: 8)
!4571 = distinct !DILexicalBlock(scope: !4569, file: !2439, line: 2048, column: 9)
!4572 = !DILocalVariable(name: "a", scope: !4573, file: !2439, line: 2049, type: !9, align: 8)
!4573 = distinct !DILexicalBlock(scope: !4571, file: !2439, line: 2049, column: 53)
!4574 = !DILocalVariable(name: "b", scope: !4573, file: !2439, line: 2049, type: !9, align: 8)
!4575 = !DILocalVariable(name: "b", scope: !4576, file: !2439, line: 2054, type: !9, align: 8)
!4576 = distinct !DILexicalBlock(scope: !4571, file: !2439, line: 2054, column: 58)
!4577 = !{!4578}
!4578 = !DITemplateTypeParameter(name: "P", type: !494)
!4579 = !DILocation(line: 2042, column: 32, scope: !4560)
!4580 = !DILocation(line: 2042, column: 42, scope: !4560)
!4581 = !DILocation(line: 2046, column: 13, scope: !4567)
!4582 = !DILocation(line: 2047, column: 13, scope: !4569)
!4583 = !DILocation(line: 2048, column: 13, scope: !4571)
!4584 = !DILocalVariable(name: "i", scope: !4585, file: !2439, line: 2058, type: !626, align: 8)
!4585 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0ae1d325b1da8783E", scope: !496, file: !2439, line: 505, type: !4586, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4590, retainedNodes: !4588)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!48, !48, !626}
!4588 = !{!4589, !4584}
!4589 = !DILocalVariable(name: "self", scope: !4585, file: !2439, line: 2058, type: !48, align: 8)
!4590 = !{!4591}
!4591 = !DITemplateTypeParameter(name: "I", type: !626)
!4592 = !DILocation(line: 2058, column: 18, scope: !4585, inlinedAt: !4593)
!4593 = !DILocation(line: 2058, column: 18, scope: !4571)
!4594 = !DILocation(line: 2046, column: 21, scope: !4560)
!4595 = !DILocation(line: 2047, column: 21, scope: !4567)
!4596 = !DILocation(line: 2048, column: 27, scope: !4569)
!4597 = !DILocation(line: 2049, column: 31, scope: !4573)
!4598 = !DILocation(line: 2059, column: 5, scope: !4569)
!4599 = !DILocation(line: 2049, column: 16, scope: !4573)
!4600 = !DILocation(line: 2049, column: 22, scope: !4573)
!4601 = !DILocation(line: 2049, column: 25, scope: !4573)
!4602 = !DILocation(line: 2050, column: 13, scope: !4573)
!4603 = !DILocation(line: 2051, column: 13, scope: !4573)
!4604 = !DILocation(line: 2049, column: 9, scope: !4571)
!4605 = !DILocation(line: 2054, column: 31, scope: !4576)
!4606 = !DILocation(line: 2054, column: 16, scope: !4576)
!4607 = !DILocation(line: 2054, column: 25, scope: !4576)
!4608 = !DILocation(line: 2055, column: 13, scope: !4576)
!4609 = !DILocation(line: 2054, column: 9, scope: !4571)
!4610 = !DILocation(line: 2058, column: 37, scope: !4571)
!4611 = !DILocation(line: 2058, column: 40, scope: !4571)
!4612 = !DILocation(line: 2042, column: 5, scope: !4560)
!4613 = !DILocation(line: 2059, column: 6, scope: !4560)
!4614 = distinct !DISubprogram(name: "trim", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4trim17h73a39436613dedb4E", scope: !496, file: !2439, line: 1851, type: !4615, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4617)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{!48, !48}
!4617 = !{!4618}
!4618 = !DILocalVariable(name: "self", arg: 1, scope: !4614, file: !2439, line: 1851, type: !48)
!4619 = !DILocation(line: 1851, column: 17, scope: !4614)
!4620 = !DILocation(line: 1852, column: 9, scope: !4614)
!4621 = !DILocation(line: 1853, column: 6, scope: !4614)
!4622 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17h32988296079ff709E", scope: !495, file: !2439, line: 1852, type: !4623, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4626)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!989, !4625, !321}
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::{impl#0}::trim::{closure_env#0}", baseType: !494, size: 64, align: 64, dwarfAddressSpace: 0)
!4626 = !{!4627, !4628}
!4627 = !DILocalVariable(name: "c", arg: 2, scope: !4622, file: !2439, line: 1852, type: !321)
!4628 = !DILocalVariable(arg: 1, scope: !4622, file: !2439, line: 1852, type: !4625)
!4629 = !DILocation(line: 1852, column: 27, scope: !4622)
!4630 = !DILocation(line: 1852, column: 28, scope: !4622)
!4631 = !DILocation(line: 1852, column: 37, scope: !4622)
!4632 = !DILocation(line: 1852, column: 54, scope: !4622)
!4633 = distinct !DISubprogram(name: "parse<u64>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h79e5239eb98f20dbE", scope: !496, file: !2439, line: 2336, type: !4634, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4657, retainedNodes: !4655)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!4636, !48}
!4636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u64, core::num::error::ParseIntError>", scope: !2066, file: !2, size: 128, align: 64, elements: !4637, templateParams: !23, identifier: "84649d45c6f429d6c1b0b9da69eb97e")
!4637 = !{!4638}
!4638 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4636, file: !2, size: 128, align: 64, elements: !4639, templateParams: !23, identifier: "6700c915d83fdab429b2cc5a84704eb9", discriminator: !4654)
!4639 = !{!4640, !4650}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4638, file: !2, baseType: !4641, size: 128, align: 64, extraData: i64 0)
!4641 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4636, file: !2, size: 128, align: 64, elements: !4642, templateParams: !4644, identifier: "6ba0b3abb75a4ddfda35079bbb068ba")
!4642 = !{!4643}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4641, file: !2, baseType: !59, size: 64, align: 64, offset: 64)
!4644 = !{!4645, !4646}
!4645 = !DITemplateTypeParameter(name: "T", type: !59)
!4646 = !DITemplateTypeParameter(name: "E", type: !4647)
!4647 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseIntError", scope: !207, file: !2, size: 8, align: 8, elements: !4648, templateParams: !23, identifier: "99369cc0ce2ef5f9905f9b79e5c0159b")
!4648 = !{!4649}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !4647, file: !2, baseType: !206, size: 8, align: 8)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4638, file: !2, baseType: !4651, size: 128, align: 64, extraData: i64 1)
!4651 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4636, file: !2, size: 128, align: 64, elements: !4652, templateParams: !4644, identifier: "2cf5726519641ddddfd005b82eabc9")
!4652 = !{!4653}
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4651, file: !2, baseType: !4647, size: 8, align: 8, offset: 8)
!4654 = !DIDerivedType(tag: DW_TAG_member, scope: !4636, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!4655 = !{!4656}
!4656 = !DILocalVariable(name: "self", arg: 1, scope: !4633, file: !2439, line: 2336, type: !48)
!4657 = !{!4658}
!4658 = !DITemplateTypeParameter(name: "F", type: !59)
!4659 = !DILocation(line: 2336, column: 30, scope: !4633)
!4660 = !DILocation(line: 2337, column: 9, scope: !4633)
!4661 = !DILocation(line: 2338, column: 6, scope: !4633)
!4662 = distinct !DISubprogram(name: "parse<u32>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hbf348ed177e1e855E", scope: !496, file: !2439, line: 2336, type: !4663, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4681, retainedNodes: !4679)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!4665, !48}
!4665 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u32, core::num::error::ParseIntError>", scope: !2066, file: !2, size: 64, align: 32, elements: !4666, templateParams: !23, identifier: "d32496f838c7d6e572f7f860df5e4887")
!4666 = !{!4667}
!4667 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4665, file: !2, size: 64, align: 32, elements: !4668, templateParams: !23, identifier: "615e57563057199f1eaceaa10ebcb2e", discriminator: !4678)
!4668 = !{!4669, !4674}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4667, file: !2, baseType: !4670, size: 64, align: 32, extraData: i64 0)
!4670 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4665, file: !2, size: 64, align: 32, elements: !4671, templateParams: !4673, identifier: "785b9febfd9df9da522dc501baa269ba")
!4671 = !{!4672}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4670, file: !2, baseType: !327, size: 32, align: 32, offset: 32)
!4673 = !{!2613, !4646}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4667, file: !2, baseType: !4675, size: 64, align: 32, extraData: i64 1)
!4675 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4665, file: !2, size: 64, align: 32, elements: !4676, templateParams: !4673, identifier: "76cf61610bc7bfbc26c3bb8e04b3bfba")
!4676 = !{!4677}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4675, file: !2, baseType: !4647, size: 8, align: 8, offset: 8)
!4678 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!4679 = !{!4680}
!4680 = !DILocalVariable(name: "self", arg: 1, scope: !4662, file: !2439, line: 2336, type: !48)
!4681 = !{!4682}
!4682 = !DITemplateTypeParameter(name: "F", type: !327)
!4683 = !DILocation(line: 2336, column: 30, scope: !4662)
!4684 = !DILocation(line: 2337, column: 9, scope: !4662)
!4685 = !DILocation(line: 2338, column: 6, scope: !4662)
!4686 = distinct !DISubprogram(name: "split<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5split17h40983305cb1e6931E", scope: !496, file: !2439, line: 1325, type: !4687, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4710, retainedNodes: !4712)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!4689, !48, !321}
!4689 = !DICompositeType(tag: DW_TAG_structure_type, name: "Split<char>", scope: !305, file: !2, size: 576, align: 64, elements: !4690, templateParams: !4710, identifier: "d048e9a7679c2a5c37b8f2ee4b5c91a5")
!4690 = !{!4691}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4689, file: !2, baseType: !4692, size: 576, align: 64)
!4692 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitInternal<char>", scope: !305, file: !2, size: 576, align: 64, elements: !4693, templateParams: !4710, identifier: "ba07a737da0a4756fbb6173f709c6937")
!4693 = !{!4694, !4695, !4696, !4708, !4709}
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4692, file: !2, baseType: !9, size: 64, align: 64)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4692, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "matcher", scope: !4692, file: !2, baseType: !4697, size: 384, align: 64, offset: 128)
!4697 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharSearcher", scope: !470, file: !2, size: 384, align: 64, elements: !4698, templateParams: !23, identifier: "71b76fb0396c74414b899c2899e576ac")
!4698 = !{!4699, !4700, !4701, !4702, !4703, !4704}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !4697, file: !2, baseType: !48, size: 128, align: 64)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "finger", scope: !4697, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "finger_back", scope: !4697, file: !2, baseType: !9, size: 64, align: 64, offset: 192)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !4697, file: !2, baseType: !321, size: 32, align: 32, offset: 320)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_size", scope: !4697, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_encoded", scope: !4697, file: !2, baseType: !4705, size: 32, align: 8, offset: 352)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 32, align: 8, elements: !4706)
!4706 = !{!4707}
!4707 = !DISubrange(count: 4, lowerBound: 0)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "allow_trailing_empty", scope: !4692, file: !2, baseType: !989, size: 8, align: 8, offset: 512)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !4692, file: !2, baseType: !989, size: 8, align: 8, offset: 520)
!4710 = !{!4711}
!4711 = !DITemplateTypeParameter(name: "P", type: !321)
!4712 = !{!4713, !4714}
!4713 = !DILocalVariable(name: "self", arg: 1, scope: !4686, file: !2439, line: 1325, type: !48)
!4714 = !DILocalVariable(name: "pat", arg: 2, scope: !4686, file: !2439, line: 1325, type: !321)
!4715 = !DILocation(line: 1325, column: 38, scope: !4686)
!4716 = !DILocation(line: 1325, column: 48, scope: !4686)
!4717 = !DILocation(line: 1326, column: 15, scope: !4686)
!4718 = !DILocation(line: 1328, column: 18, scope: !4686)
!4719 = !DILocalVariable(name: "self", scope: !4720, file: !2439, line: 1328, type: !48, align: 8)
!4720 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb7d6cd61d327eef9E", scope: !496, file: !2439, line: 157, type: !4721, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4723)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!9, !48}
!4723 = !{!4719}
!4724 = !DILocation(line: 1328, column: 18, scope: !4720, inlinedAt: !4718)
!4725 = !DILocalVariable(name: "self", scope: !4726, file: !2439, line: 1328, type: !48, align: 8)
!4726 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4727)
!4727 = !{!4725}
!4728 = !DILocation(line: 1328, column: 18, scope: !4726, inlinedAt: !4729)
!4729 = !DILocation(line: 158, column: 9, scope: !4720, inlinedAt: !4718)
!4730 = !DILocation(line: 1329, column: 22, scope: !4686)
!4731 = !DILocation(line: 1333, column: 5, scope: !4686)
!4732 = !DILocation(line: 1326, column: 9, scope: !4686)
!4733 = !DILocation(line: 1333, column: 6, scope: !4686)
!4734 = !DILocation(line: 1325, column: 5, scope: !4686)
!4735 = distinct !DISubprogram(name: "split<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5split17h7dca17bdb016bfe4E", scope: !496, file: !2439, line: 1325, type: !4736, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4748, retainedNodes: !4750)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!4738, !48, !2857}
!4738 = !DICompositeType(tag: DW_TAG_structure_type, name: "Split<build_script_build::emcc_version_code::{closure_env#0}>", scope: !305, file: !2, size: 512, align: 64, elements: !4739, templateParams: !4748, identifier: "4f54129287ac080c154d73c63ddcc53")
!4739 = !{!4740}
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4738, file: !2, baseType: !4741, size: 512, align: 64)
!4741 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitInternal<build_script_build::emcc_version_code::{closure_env#0}>", scope: !305, file: !2, size: 512, align: 64, elements: !4742, templateParams: !4748, identifier: "adcb94f9cbe8fa50d04d1420c51d6d8a")
!4742 = !{!4743, !4744, !4745, !4746, !4747}
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4741, file: !2, baseType: !9, size: 64, align: 64)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4741, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "matcher", scope: !4741, file: !2, baseType: !2851, size: 320, align: 64, offset: 128)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "allow_trailing_empty", scope: !4741, file: !2, baseType: !989, size: 8, align: 8, offset: 448)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !4741, file: !2, baseType: !989, size: 8, align: 8, offset: 456)
!4748 = !{!4749}
!4749 = !DITemplateTypeParameter(name: "P", type: !2857)
!4750 = !{!4751, !4752}
!4751 = !DILocalVariable(name: "self", arg: 1, scope: !4735, file: !2439, line: 1325, type: !48)
!4752 = !DILocalVariable(name: "pat", arg: 2, scope: !4735, file: !2439, line: 1325, type: !2857)
!4753 = !DILocation(line: 1325, column: 38, scope: !4735)
!4754 = !DILocation(line: 1325, column: 48, scope: !4735)
!4755 = !DILocation(line: 1326, column: 15, scope: !4735)
!4756 = !DILocation(line: 1328, column: 18, scope: !4735)
!4757 = !DILocalVariable(name: "self", scope: !4758, file: !2439, line: 1328, type: !48, align: 8)
!4758 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb7d6cd61d327eef9E", scope: !496, file: !2439, line: 157, type: !4721, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4759)
!4759 = !{!4757}
!4760 = !DILocation(line: 1328, column: 18, scope: !4758, inlinedAt: !4756)
!4761 = !DILocalVariable(name: "self", scope: !4762, file: !2439, line: 1328, type: !48, align: 8)
!4762 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4763)
!4763 = !{!4761}
!4764 = !DILocation(line: 1328, column: 18, scope: !4762, inlinedAt: !4765)
!4765 = !DILocation(line: 158, column: 9, scope: !4758, inlinedAt: !4756)
!4766 = !DILocation(line: 1329, column: 22, scope: !4735)
!4767 = !DILocation(line: 1333, column: 5, scope: !4735)
!4768 = !DILocation(line: 1326, column: 9, scope: !4735)
!4769 = !DILocation(line: 1333, column: 6, scope: !4735)
!4770 = !DILocation(line: 1325, column: 5, scope: !4735)
!4771 = distinct !DISubprogram(name: "next<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h5ac10359c124edb4E", scope: !4741, file: !303, line: 601, type: !4772, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4748, retainedNodes: !4775)
!4772 = !DISubroutineType(types: !4773)
!4773 = !{!38, !4774}
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitInternal<build_script_build::emcc_version_code::{closure_env#0}>", baseType: !4741, size: 64, align: 64, dwarfAddressSpace: 0)
!4775 = !{!4776, !4777, !4779, !4781, !4782}
!4776 = !DILocalVariable(name: "self", arg: 1, scope: !4771, file: !303, line: 601, type: !4774)
!4777 = !DILocalVariable(name: "haystack", scope: !4778, file: !303, line: 606, type: !48, align: 8)
!4778 = distinct !DILexicalBlock(scope: !4771, file: !303, line: 606, column: 9)
!4779 = !DILocalVariable(name: "a", scope: !4780, file: !303, line: 609, type: !9, align: 8)
!4780 = distinct !DILexicalBlock(scope: !4778, file: !303, line: 609, column: 13)
!4781 = !DILocalVariable(name: "b", scope: !4780, file: !303, line: 609, type: !9, align: 8)
!4782 = !DILocalVariable(name: "elt", scope: !4783, file: !303, line: 610, type: !48, align: 8)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !303, line: 610, column: 17)
!4784 = !DILocation(line: 601, column: 13, scope: !4771)
!4785 = !DILocalVariable(name: "i", scope: !4786, file: !303, line: 610, type: !626, align: 8)
!4786 = !DILexicalBlockFile(scope: !4787, file: !303, discriminator: 0)
!4787 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0ae1d325b1da8783E", scope: !496, file: !2439, line: 505, type: !4586, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4590, retainedNodes: !4788)
!4788 = !{!4789, !4785}
!4789 = !DILocalVariable(name: "self", scope: !4786, file: !303, line: 610, type: !48, align: 8)
!4790 = !DILocation(line: 610, column: 27, scope: !4786, inlinedAt: !4791)
!4791 = !DILocation(line: 610, column: 27, scope: !4780)
!4792 = !DILocation(line: 602, column: 12, scope: !4771)
!4793 = !DILocation(line: 606, column: 24, scope: !4771)
!4794 = !DILocation(line: 606, column: 13, scope: !4778)
!4795 = !DILocation(line: 603, column: 20, scope: !4771)
!4796 = !DILocation(line: 616, column: 6, scope: !4771)
!4797 = !DILocation(line: 607, column: 15, scope: !4778)
!4798 = !DILocation(line: 607, column: 9, scope: !4778)
!4799 = !DILocation(line: 614, column: 21, scope: !4778)
!4800 = !DILocation(line: 609, column: 19, scope: !4778)
!4801 = !DILocation(line: 609, column: 19, scope: !4780)
!4802 = !DILocation(line: 609, column: 22, scope: !4778)
!4803 = !DILocation(line: 609, column: 22, scope: !4780)
!4804 = !DILocation(line: 610, column: 50, scope: !4780)
!4805 = !DILocation(line: 610, column: 21, scope: !4783)
!4806 = !DILocation(line: 611, column: 17, scope: !4783)
!4807 = !DILocation(line: 612, column: 17, scope: !4783)
!4808 = !DILocation(line: 613, column: 13, scope: !4778)
!4809 = !DILocation(line: 614, column: 34, scope: !4778)
!4810 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha8f598893f77e507E", scope: !4692, file: !303, line: 601, type: !4811, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4710, retainedNodes: !4814)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!38, !4813}
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitInternal<char>", baseType: !4692, size: 64, align: 64, dwarfAddressSpace: 0)
!4814 = !{!4815, !4816, !4818, !4820, !4821}
!4815 = !DILocalVariable(name: "self", arg: 1, scope: !4810, file: !303, line: 601, type: !4813)
!4816 = !DILocalVariable(name: "haystack", scope: !4817, file: !303, line: 606, type: !48, align: 8)
!4817 = distinct !DILexicalBlock(scope: !4810, file: !303, line: 606, column: 9)
!4818 = !DILocalVariable(name: "a", scope: !4819, file: !303, line: 609, type: !9, align: 8)
!4819 = distinct !DILexicalBlock(scope: !4817, file: !303, line: 609, column: 13)
!4820 = !DILocalVariable(name: "b", scope: !4819, file: !303, line: 609, type: !9, align: 8)
!4821 = !DILocalVariable(name: "elt", scope: !4822, file: !303, line: 610, type: !48, align: 8)
!4822 = distinct !DILexicalBlock(scope: !4819, file: !303, line: 610, column: 17)
!4823 = !DILocation(line: 601, column: 13, scope: !4810)
!4824 = !DILocalVariable(name: "i", scope: !4825, file: !303, line: 610, type: !626, align: 8)
!4825 = !DILexicalBlockFile(scope: !4826, file: !303, discriminator: 0)
!4826 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0ae1d325b1da8783E", scope: !496, file: !2439, line: 505, type: !4586, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4590, retainedNodes: !4827)
!4827 = !{!4828, !4824}
!4828 = !DILocalVariable(name: "self", scope: !4825, file: !303, line: 610, type: !48, align: 8)
!4829 = !DILocation(line: 610, column: 27, scope: !4825, inlinedAt: !4830)
!4830 = !DILocation(line: 610, column: 27, scope: !4819)
!4831 = !DILocation(line: 602, column: 12, scope: !4810)
!4832 = !DILocation(line: 606, column: 24, scope: !4810)
!4833 = !DILocation(line: 606, column: 13, scope: !4817)
!4834 = !DILocation(line: 603, column: 20, scope: !4810)
!4835 = !DILocation(line: 616, column: 6, scope: !4810)
!4836 = !DILocation(line: 607, column: 15, scope: !4817)
!4837 = !DILocation(line: 607, column: 9, scope: !4817)
!4838 = !DILocation(line: 614, column: 21, scope: !4817)
!4839 = !DILocation(line: 609, column: 19, scope: !4817)
!4840 = !DILocation(line: 609, column: 19, scope: !4819)
!4841 = !DILocation(line: 609, column: 22, scope: !4817)
!4842 = !DILocation(line: 609, column: 22, scope: !4819)
!4843 = !DILocation(line: 610, column: 50, scope: !4819)
!4844 = !DILocation(line: 610, column: 21, scope: !4822)
!4845 = !DILocation(line: 611, column: 17, scope: !4822)
!4846 = !DILocation(line: 612, column: 17, scope: !4822)
!4847 = !DILocation(line: 613, column: 13, scope: !4817)
!4848 = !DILocation(line: 614, column: 34, scope: !4817)
!4849 = distinct !DISubprogram(name: "get_end<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h0a9973e2318a33a2E", scope: !4741, file: !303, line: 587, type: !4772, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4748, retainedNodes: !4850)
!4850 = !{!4851, !4852}
!4851 = !DILocalVariable(name: "self", arg: 1, scope: !4849, file: !303, line: 587, type: !4774)
!4852 = !DILocalVariable(name: "string", scope: !4853, file: !303, line: 592, type: !48, align: 8)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !303, line: 592, column: 17)
!4854 = !DILocation(line: 587, column: 16, scope: !4849)
!4855 = !DILocalVariable(name: "i", scope: !4856, file: !303, line: 592, type: !626, align: 8)
!4856 = !DILexicalBlockFile(scope: !4857, file: !303, discriminator: 0)
!4857 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0ae1d325b1da8783E", scope: !496, file: !2439, line: 505, type: !4586, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4590, retainedNodes: !4858)
!4858 = !{!4859, !4855}
!4859 = !DILocalVariable(name: "self", scope: !4856, file: !303, line: 592, type: !48, align: 8)
!4860 = !DILocation(line: 592, column: 30, scope: !4856, inlinedAt: !4861)
!4861 = !DILocation(line: 592, column: 30, scope: !4849)
!4862 = !DILocation(line: 588, column: 13, scope: !4849)
!4863 = !DILocation(line: 588, column: 12, scope: !4849)
!4864 = !DILocation(line: 588, column: 31, scope: !4849)
!4865 = !DILocation(line: 588, column: 30, scope: !4849)
!4866 = !DILocation(line: 588, column: 60, scope: !4849)
!4867 = !DILocation(line: 588, column: 71, scope: !4849)
!4868 = !DILocation(line: 596, column: 13, scope: !4849)
!4869 = !DILocation(line: 588, column: 9, scope: !4849)
!4870 = !DILocation(line: 589, column: 13, scope: !4849)
!4871 = !DILocation(line: 592, column: 68, scope: !4849)
!4872 = !DILocation(line: 592, column: 80, scope: !4849)
!4873 = !DILocation(line: 592, column: 21, scope: !4853)
!4874 = !DILocation(line: 593, column: 17, scope: !4853)
!4875 = !DILocation(line: 598, column: 6, scope: !4849)
!4876 = distinct !DISubprogram(name: "get_end<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h76dbd58b6c5472cfE", scope: !4692, file: !303, line: 587, type: !4811, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4710, retainedNodes: !4877)
!4877 = !{!4878, !4879}
!4878 = !DILocalVariable(name: "self", arg: 1, scope: !4876, file: !303, line: 587, type: !4813)
!4879 = !DILocalVariable(name: "string", scope: !4880, file: !303, line: 592, type: !48, align: 8)
!4880 = distinct !DILexicalBlock(scope: !4876, file: !303, line: 592, column: 17)
!4881 = !DILocation(line: 587, column: 16, scope: !4876)
!4882 = !DILocalVariable(name: "i", scope: !4883, file: !303, line: 592, type: !626, align: 8)
!4883 = !DILexicalBlockFile(scope: !4884, file: !303, discriminator: 0)
!4884 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0ae1d325b1da8783E", scope: !496, file: !2439, line: 505, type: !4586, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4590, retainedNodes: !4885)
!4885 = !{!4886, !4882}
!4886 = !DILocalVariable(name: "self", scope: !4883, file: !303, line: 592, type: !48, align: 8)
!4887 = !DILocation(line: 592, column: 30, scope: !4883, inlinedAt: !4888)
!4888 = !DILocation(line: 592, column: 30, scope: !4876)
!4889 = !DILocation(line: 588, column: 13, scope: !4876)
!4890 = !DILocation(line: 588, column: 12, scope: !4876)
!4891 = !DILocation(line: 588, column: 31, scope: !4876)
!4892 = !DILocation(line: 588, column: 30, scope: !4876)
!4893 = !DILocation(line: 588, column: 60, scope: !4876)
!4894 = !DILocation(line: 588, column: 71, scope: !4876)
!4895 = !DILocation(line: 596, column: 13, scope: !4876)
!4896 = !DILocation(line: 588, column: 9, scope: !4876)
!4897 = !DILocation(line: 589, column: 13, scope: !4876)
!4898 = !DILocation(line: 592, column: 68, scope: !4876)
!4899 = !DILocation(line: 592, column: 80, scope: !4876)
!4900 = !DILocation(line: 592, column: 21, scope: !4880)
!4901 = !DILocation(line: 593, column: 17, scope: !4880)
!4902 = !DILocation(line: 598, column: 6, scope: !4876)
!4903 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h077c92b1a38524f0E", scope: !4905, file: !4904, line: 197, type: !4907, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4913)
!4904 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd40ad7331975f797646f9b061065a27")
!4905 = !DINamespace(name: "{impl#7}", scope: !4906)
!4906 = !DINamespace(name: "traits", scope: !306)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!4909, !626, !4909}
!4909 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !4910, templateParams: !23, identifier: "c0e5994a8e99afccd68a87827900070")
!4910 = !{!4911, !4912}
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4909, file: !2, baseType: !51, size: 64, align: 64)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4909, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4913 = !{!4914, !4915, !4916, !4918, !4920}
!4914 = !DILocalVariable(name: "self", arg: 1, scope: !4903, file: !4904, line: 197, type: !626)
!4915 = !DILocalVariable(name: "slice", arg: 2, scope: !4903, file: !4904, line: 197, type: !4909)
!4916 = !DILocalVariable(name: "slice", scope: !4917, file: !4904, line: 198, type: !622, align: 8)
!4917 = distinct !DILexicalBlock(scope: !4903, file: !4904, line: 198, column: 9)
!4918 = !DILocalVariable(name: "ptr", scope: !4919, file: !4904, line: 201, type: !342, align: 8)
!4919 = distinct !DILexicalBlock(scope: !4917, file: !4904, line: 201, column: 9)
!4920 = !DILocalVariable(name: "len", scope: !4921, file: !4904, line: 202, type: !9, align: 8)
!4921 = distinct !DILexicalBlock(scope: !4919, file: !4904, line: 202, column: 9)
!4922 = !DILocation(line: 197, column: 29, scope: !4903)
!4923 = !DILocation(line: 197, column: 35, scope: !4903)
!4924 = !DILocation(line: 198, column: 21, scope: !4903)
!4925 = !DILocation(line: 198, column: 13, scope: !4917)
!4926 = !DILocation(line: 201, column: 28, scope: !4917)
!4927 = !DILocalVariable(name: "self", scope: !4928, file: !4904, line: 201, type: !622, align: 8)
!4928 = !DILexicalBlockFile(scope: !4929, file: !4904, discriminator: 0)
!4929 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h7a5d128f2f75dde1E", scope: !655, file: !436, line: 1374, type: !656, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4930)
!4930 = !{!4927}
!4931 = !DILocation(line: 201, column: 28, scope: !4928, inlinedAt: !4926)
!4932 = !DILocalVariable(name: "self", scope: !4933, file: !4904, line: 201, type: !342, align: 8)
!4933 = !DILexicalBlockFile(scope: !4934, file: !4904, discriminator: 0)
!4934 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd567d4fde3b4fe62E", scope: !437, file: !436, line: 865, type: !663, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4935)
!4935 = !{!4932, !4936}
!4936 = !DILocalVariable(name: "count", scope: !4933, file: !4904, line: 201, type: !9, align: 8)
!4937 = !DILocation(line: 201, column: 28, scope: !4933, inlinedAt: !4926)
!4938 = !DILocation(line: 201, column: 47, scope: !4917)
!4939 = !DILocalVariable(name: "self", scope: !4940, file: !4904, line: 201, type: !342, align: 8)
!4940 = !DILexicalBlockFile(scope: !4941, file: !4904, discriminator: 0)
!4941 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd8f7153041f61580E", scope: !437, file: !436, line: 452, type: !672, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4942)
!4942 = !{!4939, !4943}
!4943 = !DILocalVariable(name: "count", scope: !4940, file: !4904, line: 201, type: !674, align: 8)
!4944 = !DILocation(line: 201, column: 28, scope: !4940, inlinedAt: !4945)
!4945 = !DILocation(line: 870, column: 18, scope: !4934, inlinedAt: !4926)
!4946 = !DILocation(line: 201, column: 13, scope: !4919)
!4947 = !DILocation(line: 202, column: 19, scope: !4919)
!4948 = !DILocation(line: 202, column: 13, scope: !4921)
!4949 = !DILocation(line: 203, column: 35, scope: !4921)
!4950 = !DILocalVariable(name: "data", scope: !4951, file: !4904, line: 203, type: !342, align: 8)
!4951 = !DILexicalBlockFile(scope: !4952, file: !4904, discriminator: 0)
!4952 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4953)
!4953 = !{!4950, !4954}
!4954 = !DILocalVariable(name: "len", scope: !4951, file: !4904, line: 203, type: !9, align: 8)
!4955 = !DILocation(line: 203, column: 9, scope: !4951, inlinedAt: !4956)
!4956 = !DILocation(line: 203, column: 9, scope: !4921)
!4957 = !DILocation(line: 203, column: 40, scope: !4921)
!4958 = !DILocalVariable(name: "self", scope: !4959, file: !4904, line: 203, type: !342, align: 8)
!4959 = !DILexicalBlockFile(scope: !4960, file: !4904, discriminator: 0)
!4960 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !4961)
!4961 = !{!4958}
!4962 = !DILocation(line: 203, column: 9, scope: !4959, inlinedAt: !4963)
!4963 = !DILocation(line: 695, column: 20, scope: !4952, inlinedAt: !4956)
!4964 = !DILocalVariable(name: "data_address", scope: !4965, file: !4904, line: 203, type: !6, align: 8)
!4965 = !DILexicalBlockFile(scope: !4966, file: !4904, discriminator: 0)
!4966 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !4967)
!4967 = !{!4964, !4968}
!4968 = !DILocalVariable(name: "metadata", scope: !4965, file: !4904, line: 203, type: !9, align: 8)
!4969 = !DILocation(line: 203, column: 9, scope: !4965, inlinedAt: !4970)
!4970 = !DILocation(line: 695, column: 5, scope: !4952, inlinedAt: !4956)
!4971 = !DILocation(line: 204, column: 6, scope: !4903)
!4972 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hfd782e66cafbb4cbE", scope: !4973, file: !4904, line: 28, type: !4549, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4974)
!4973 = !DINamespace(name: "{impl#1}", scope: !4906)
!4974 = !{!4975, !4976}
!4975 = !DILocalVariable(name: "self", arg: 1, scope: !4972, file: !4904, line: 28, type: !48)
!4976 = !DILocalVariable(name: "other", arg: 2, scope: !4972, file: !4904, line: 28, type: !48)
!4977 = !DILocation(line: 28, column: 11, scope: !4972)
!4978 = !DILocation(line: 28, column: 18, scope: !4972)
!4979 = !DILocation(line: 29, column: 9, scope: !4972)
!4980 = !DILocalVariable(name: "self", scope: !4981, file: !4904, line: 29, type: !48, align: 8)
!4981 = !DILexicalBlockFile(scope: !4982, file: !4904, discriminator: 0)
!4982 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4983)
!4983 = !{!4980}
!4984 = !DILocation(line: 29, column: 9, scope: !4981, inlinedAt: !4979)
!4985 = !DILocalVariable(name: "self", scope: !4986, file: !4904, line: 29, type: !4990, align: 8)
!4986 = !DILexicalBlockFile(scope: !4987, file: !4904, discriminator: 0)
!4987 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h3297ad4713e1484dE", scope: !2937, file: !2903, line: 1475, type: !4988, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !4991)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!989, !4990, !4990}
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !892, size: 64, align: 64, dwarfAddressSpace: 0)
!4991 = !{!4985, !4992}
!4992 = !DILocalVariable(name: "other", scope: !4986, file: !4904, line: 29, type: !4990, align: 8)
!4993 = !DILocation(line: 29, column: 9, scope: !4986, inlinedAt: !4979)
!4994 = !DILocation(line: 29, column: 28, scope: !4972)
!4995 = !DILocalVariable(name: "self", scope: !4996, file: !4904, line: 29, type: !48, align: 8)
!4996 = !DILexicalBlockFile(scope: !4997, file: !4904, discriminator: 0)
!4997 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !4998)
!4998 = !{!4995}
!4999 = !DILocation(line: 29, column: 28, scope: !4996, inlinedAt: !4994)
!5000 = !DILocation(line: 30, column: 6, scope: !4972)
!5001 = distinct !DISubprogram(name: "ne", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17hc6c85a716ff4627eE", scope: !4973, file: !4904, line: 32, type: !4549, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5002)
!5002 = !{!5003, !5004}
!5003 = !DILocalVariable(name: "self", arg: 1, scope: !5001, file: !4904, line: 32, type: !48)
!5004 = !DILocalVariable(name: "other", arg: 2, scope: !5001, file: !4904, line: 32, type: !48)
!5005 = !DILocation(line: 32, column: 11, scope: !5001)
!5006 = !DILocation(line: 32, column: 18, scope: !5001)
!5007 = !DILocation(line: 33, column: 10, scope: !5001)
!5008 = !DILocation(line: 33, column: 9, scope: !5001)
!5009 = !DILocation(line: 34, column: 6, scope: !5001)
!5010 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17h3da7e002de0456c6E", scope: !5011, file: !2439, line: 2563, type: !2440, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5012)
!5011 = !DINamespace(name: "{impl#1}", scope: !306)
!5012 = !{!5013}
!5013 = !DILocalVariable(name: "self", arg: 1, scope: !5010, file: !2439, line: 2563, type: !48)
!5014 = !DILocation(line: 2563, column: 15, scope: !5010)
!5015 = !DILocation(line: 2564, column: 9, scope: !5010)
!5016 = !DILocalVariable(name: "self", scope: !5017, file: !2439, line: 2564, type: !48, align: 8)
!5017 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5018)
!5018 = !{!5016}
!5019 = !DILocation(line: 2564, column: 9, scope: !5017, inlinedAt: !5015)
!5020 = !DILocation(line: 2565, column: 6, scope: !5010)
!5021 = distinct !DISubprogram(name: "next_reject_back<core::str::pattern::MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>>", linkageName: "_ZN4core3str7pattern15ReverseSearcher16next_reject_back17h76b240203b87ff55E", scope: !5022, file: !468, line: 312, type: !5023, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5030, retainedNodes: !5025)
!5022 = !DINamespace(name: "ReverseSearcher", scope: !470)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{!1107, !490}
!5025 = !{!5026, !5027, !5029}
!5026 = !DILocalVariable(name: "self", arg: 1, scope: !5021, file: !468, line: 312, type: !490)
!5027 = !DILocalVariable(name: "a", scope: !5028, file: !468, line: 315, type: !9, align: 8)
!5028 = distinct !DILexicalBlock(scope: !5021, file: !468, line: 315, column: 17)
!5029 = !DILocalVariable(name: "b", scope: !5028, file: !468, line: 315, type: !9, align: 8)
!5030 = !{!5031}
!5031 = !DITemplateTypeParameter(name: "Self", type: !491)
!5032 = !DILocation(line: 312, column: 25, scope: !5021)
!5033 = !DILocation(line: 313, column: 9, scope: !5021)
!5034 = !DILocation(line: 314, column: 19, scope: !5021)
!5035 = !{i64 0, i64 3}
!5036 = !DILocation(line: 314, column: 13, scope: !5021)
!5037 = !DILocation(line: 1, column: 1, scope: !5038)
!5038 = !DILexicalBlockFile(scope: !5021, file: !4302, discriminator: 0)
!5039 = !DILocation(line: 315, column: 36, scope: !5021)
!5040 = !DILocation(line: 315, column: 36, scope: !5028)
!5041 = !DILocation(line: 315, column: 39, scope: !5021)
!5042 = !DILocation(line: 315, column: 39, scope: !5028)
!5043 = !DILocation(line: 315, column: 57, scope: !5028)
!5044 = !DILocation(line: 315, column: 52, scope: !5028)
!5045 = !DILocation(line: 316, column: 44, scope: !5021)
!5046 = !DILocation(line: 316, column: 37, scope: !5021)
!5047 = !DILocation(line: 320, column: 6, scope: !5021)
!5048 = distinct !DISubprogram(name: "next_match<core::str::pattern::MultiCharEqSearcher<build_script_build::emcc_version_code::{closure_env#0}>>", linkageName: "_ZN4core3str7pattern8Searcher10next_match17h62a409247a51568fE", scope: !5049, file: !468, line: 231, type: !5050, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5058, retainedNodes: !5053)
!5049 = !DINamespace(name: "Searcher", scope: !470)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!1107, !5052}
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::MultiCharEqSearcher<build_script_build::emcc_version_code::{closure_env#0}>", baseType: !2854, size: 64, align: 64, dwarfAddressSpace: 0)
!5053 = !{!5054, !5055, !5057}
!5054 = !DILocalVariable(name: "self", arg: 1, scope: !5048, file: !468, line: 231, type: !5052)
!5055 = !DILocalVariable(name: "a", scope: !5056, file: !468, line: 234, type: !9, align: 8)
!5056 = distinct !DILexicalBlock(scope: !5048, file: !468, line: 234, column: 17)
!5057 = !DILocalVariable(name: "b", scope: !5056, file: !468, line: 234, type: !9, align: 8)
!5058 = !{!5059}
!5059 = !DITemplateTypeParameter(name: "Self", type: !2854)
!5060 = !DILocation(line: 231, column: 19, scope: !5048)
!5061 = !DILocation(line: 232, column: 9, scope: !5048)
!5062 = !DILocation(line: 233, column: 19, scope: !5048)
!5063 = !DILocation(line: 233, column: 13, scope: !5048)
!5064 = !DILocation(line: 1, column: 1, scope: !5065)
!5065 = !DILexicalBlockFile(scope: !5048, file: !4302, discriminator: 0)
!5066 = !DILocation(line: 234, column: 35, scope: !5048)
!5067 = !DILocation(line: 234, column: 35, scope: !5056)
!5068 = !DILocation(line: 234, column: 38, scope: !5048)
!5069 = !DILocation(line: 234, column: 38, scope: !5056)
!5070 = !DILocation(line: 234, column: 56, scope: !5056)
!5071 = !DILocation(line: 234, column: 51, scope: !5056)
!5072 = !DILocation(line: 235, column: 44, scope: !5048)
!5073 = !DILocation(line: 235, column: 37, scope: !5048)
!5074 = !DILocation(line: 239, column: 6, scope: !5048)
!5075 = distinct !DISubprogram(name: "next_reject<core::str::pattern::MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>>", linkageName: "_ZN4core3str7pattern8Searcher11next_reject17h31bf01ea2ddf4d96E", scope: !5049, file: !468, line: 247, type: !5023, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5030, retainedNodes: !5076)
!5076 = !{!5077, !5078, !5080}
!5077 = !DILocalVariable(name: "self", arg: 1, scope: !5075, file: !468, line: 247, type: !490)
!5078 = !DILocalVariable(name: "a", scope: !5079, file: !468, line: 250, type: !9, align: 8)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !468, line: 250, column: 17)
!5080 = !DILocalVariable(name: "b", scope: !5079, file: !468, line: 250, type: !9, align: 8)
!5081 = !DILocation(line: 247, column: 20, scope: !5075)
!5082 = !DILocation(line: 248, column: 9, scope: !5075)
!5083 = !DILocation(line: 249, column: 19, scope: !5075)
!5084 = !DILocation(line: 249, column: 13, scope: !5075)
!5085 = !DILocation(line: 1, column: 1, scope: !5086)
!5086 = !DILexicalBlockFile(scope: !5075, file: !4302, discriminator: 0)
!5087 = !DILocation(line: 250, column: 36, scope: !5075)
!5088 = !DILocation(line: 250, column: 36, scope: !5079)
!5089 = !DILocation(line: 250, column: 39, scope: !5075)
!5090 = !DILocation(line: 250, column: 39, scope: !5079)
!5091 = !DILocation(line: 250, column: 57, scope: !5079)
!5092 = !DILocation(line: 250, column: 52, scope: !5079)
!5093 = !DILocation(line: 251, column: 44, scope: !5075)
!5094 = !DILocation(line: 251, column: 37, scope: !5075)
!5095 = !DILocation(line: 255, column: 6, scope: !5075)
!5096 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17hb50ab06b9b1ec8c9E", scope: !5098, file: !5097, line: 1665, type: !5100, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5102)
!5097 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "b16839dcf63c1454d9829491a5d9626e")
!5098 = !DINamespace(name: "methods", scope: !5099)
!5099 = !DINamespace(name: "char", scope: !40)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!939, !327, !939}
!5102 = !{!5103, !5104, !5105, !5107, !5110, !5112, !5113, !5115, !5116, !5117, !5119, !5120, !5121}
!5103 = !DILocalVariable(name: "code", arg: 1, scope: !5096, file: !5097, line: 1665, type: !327)
!5104 = !DILocalVariable(name: "dst", arg: 2, scope: !5096, file: !5097, line: 1665, type: !939)
!5105 = !DILocalVariable(name: "len", scope: !5106, file: !5097, line: 1666, type: !9, align: 8)
!5106 = distinct !DILexicalBlock(scope: !5096, file: !5097, line: 1666, column: 5)
!5107 = !DILocalVariable(name: "a", scope: !5108, file: !5097, line: 1668, type: !5109, align: 8)
!5108 = distinct !DILexicalBlock(scope: !5106, file: !5097, line: 1668, column: 9)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!5110 = !DILocalVariable(name: "a", scope: !5111, file: !5097, line: 1671, type: !5109, align: 8)
!5111 = distinct !DILexicalBlock(scope: !5106, file: !5097, line: 1671, column: 9)
!5112 = !DILocalVariable(name: "b", scope: !5111, file: !5097, line: 1671, type: !5109, align: 8)
!5113 = !DILocalVariable(name: "a", scope: !5114, file: !5097, line: 1675, type: !5109, align: 8)
!5114 = distinct !DILexicalBlock(scope: !5106, file: !5097, line: 1675, column: 9)
!5115 = !DILocalVariable(name: "b", scope: !5114, file: !5097, line: 1675, type: !5109, align: 8)
!5116 = !DILocalVariable(name: "c", scope: !5114, file: !5097, line: 1675, type: !5109, align: 8)
!5117 = !DILocalVariable(name: "a", scope: !5118, file: !5097, line: 1680, type: !5109, align: 8)
!5118 = distinct !DILexicalBlock(scope: !5106, file: !5097, line: 1680, column: 9)
!5119 = !DILocalVariable(name: "b", scope: !5118, file: !5097, line: 1680, type: !5109, align: 8)
!5120 = !DILocalVariable(name: "c", scope: !5118, file: !5097, line: 1680, type: !5109, align: 8)
!5121 = !DILocalVariable(name: "d", scope: !5118, file: !5097, line: 1680, type: !5109, align: 8)
!5122 = !DILocation(line: 1665, column: 24, scope: !5096)
!5123 = !DILocation(line: 1665, column: 35, scope: !5096)
!5124 = !DILocation(line: 1666, column: 9, scope: !5106)
!5125 = !DILocalVariable(name: "index", scope: !5126, file: !5097, line: 1667, type: !5131, align: 1)
!5126 = !DILexicalBlockFile(scope: !5127, file: !5097, discriminator: 0)
!5127 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8f1c58a465cc4449E", scope: !5128, file: !617, line: 29, type: !5129, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5134, retainedNodes: !5132)
!5128 = !DINamespace(name: "{impl#1}", scope: !619)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!939, !939, !5131, !917}
!5131 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !627, file: !2, align: 8, elements: !23, identifier: "4abedb4d29c5508e38ca774c70bfa076")
!5132 = !{!5133, !5125}
!5133 = !DILocalVariable(name: "self", scope: !5126, file: !5097, line: 1667, type: !939, align: 8)
!5134 = !{!344, !5135}
!5135 = !DITemplateTypeParameter(name: "I", type: !5131)
!5136 = !DILocation(line: 1667, column: 22, scope: !5126, inlinedAt: !5137)
!5137 = !DILocation(line: 1667, column: 22, scope: !5106)
!5138 = !DILocalVariable(name: "index", scope: !5139, file: !5097, line: 1693, type: !5143, align: 8)
!5139 = !DILexicalBlockFile(scope: !5140, file: !5097, discriminator: 0)
!5140 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99fbabecb8fa7088E", scope: !5128, file: !617, line: 29, type: !5141, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5148, retainedNodes: !5146)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!939, !939, !5143, !917}
!5143 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !627, file: !2, size: 64, align: 64, elements: !5144, templateParams: !632, identifier: "dca3815d123d8cc8e90506c2869c5ce8")
!5144 = !{!5145}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5143, file: !2, baseType: !9, size: 64, align: 64)
!5146 = !{!5147, !5138}
!5147 = !DILocalVariable(name: "self", scope: !5139, file: !5097, line: 1693, type: !939, align: 8)
!5148 = !{!344, !5149}
!5149 = !DITemplateTypeParameter(name: "I", type: !5143)
!5150 = !DILocation(line: 1693, column: 10, scope: !5139, inlinedAt: !5151)
!5151 = !DILocation(line: 1693, column: 10, scope: !5106)
!5152 = !DILocalVariable(name: "self", scope: !5153, file: !5097, line: 1667, type: !5131, align: 1)
!5153 = !DILexicalBlockFile(scope: !5154, file: !5097, discriminator: 0)
!5154 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1253ee057c58486fE", scope: !5155, file: !617, line: 437, type: !5156, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !5158)
!5155 = !DINamespace(name: "{impl#6}", scope: !619)
!5156 = !DISubroutineType(types: !5157)
!5157 = !{!939, !5131, !939, !917}
!5158 = !{!5152, !5159}
!5159 = !DILocalVariable(name: "slice", scope: !5153, file: !5097, line: 1667, type: !939, align: 8)
!5160 = !DILocation(line: 1667, column: 22, scope: !5153, inlinedAt: !5161)
!5161 = !DILocation(line: 30, column: 9, scope: !5127, inlinedAt: !5137)
!5162 = !DILocation(line: 1666, column: 24, scope: !5096)
!5163 = !DILocation(line: 1666, column: 15, scope: !5096)
!5164 = !DILocation(line: 1667, column: 12, scope: !5106)
!5165 = !DILocation(line: 1667, column: 11, scope: !5106)
!5166 = !DILocation(line: 1667, column: 5, scope: !5106)
!5167 = !DILocation(line: 1686, column: 14, scope: !5106)
!5168 = !DILocalVariable(name: "x", scope: !5169, file: !5097, line: 1686, type: !387, align: 8)
!5169 = !DILexicalBlockFile(scope: !5170, file: !5097, discriminator: 0)
!5170 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17he1d4b63ff5b8cb0fE", scope: !2055, file: !1996, line: 318, type: !5171, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !5173)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{!2055, !387}
!5173 = !{!5168}
!5174 = !DILocation(line: 1686, column: 14, scope: !5169, inlinedAt: !5175)
!5175 = !DILocation(line: 1688, column: 13, scope: !5106)
!5176 = !DILocalVariable(name: "x", scope: !5177, file: !5097, line: 1686, type: !387, align: 8)
!5177 = !DILexicalBlockFile(scope: !5178, file: !5097, discriminator: 0)
!5178 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17hbd0790052440fcfaE", scope: !2055, file: !1996, line: 329, type: !5179, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !5184)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{!2055, !387, !5181}
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5182, size: 64, align: 64, dwarfAddressSpace: 0)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{!2065, !387, !2082}
!5184 = !{!5176, !5185}
!5185 = !DILocalVariable(name: "f", scope: !5177, file: !5097, line: 1686, type: !5181, align: 8)
!5186 = !DILocation(line: 1686, column: 14, scope: !5177, inlinedAt: !5187)
!5187 = !DILocation(line: 319, column: 13, scope: !5170, inlinedAt: !5175)
!5188 = !DILocation(line: 1668, column: 13, scope: !5106)
!5189 = !DILocation(line: 1671, column: 13, scope: !5106)
!5190 = !DILocation(line: 1675, column: 13, scope: !5106)
!5191 = !DILocation(line: 1680, column: 13, scope: !5106)
!5192 = !DILocation(line: 1680, column: 14, scope: !5106)
!5193 = !DILocation(line: 1680, column: 14, scope: !5118)
!5194 = !DILocation(line: 1680, column: 17, scope: !5106)
!5195 = !DILocation(line: 1680, column: 17, scope: !5118)
!5196 = !DILocation(line: 1680, column: 20, scope: !5106)
!5197 = !DILocation(line: 1680, column: 20, scope: !5118)
!5198 = !DILocation(line: 1680, column: 23, scope: !5106)
!5199 = !DILocation(line: 1680, column: 23, scope: !5118)
!5200 = !DILocation(line: 1681, column: 19, scope: !5118)
!5201 = !DILocation(line: 1681, column: 18, scope: !5118)
!5202 = !DILocation(line: 1681, column: 13, scope: !5118)
!5203 = !DILocation(line: 1682, column: 19, scope: !5118)
!5204 = !DILocation(line: 1682, column: 18, scope: !5118)
!5205 = !DILocation(line: 1682, column: 13, scope: !5118)
!5206 = !DILocation(line: 1683, column: 19, scope: !5118)
!5207 = !DILocation(line: 1683, column: 18, scope: !5118)
!5208 = !DILocation(line: 1683, column: 13, scope: !5118)
!5209 = !DILocation(line: 1684, column: 19, scope: !5118)
!5210 = !DILocation(line: 1684, column: 18, scope: !5118)
!5211 = !DILocation(line: 1684, column: 13, scope: !5118)
!5212 = !DILocation(line: 1685, column: 9, scope: !5106)
!5213 = !DILocation(line: 1693, column: 16, scope: !5106)
!5214 = !DILocation(line: 1693, column: 14, scope: !5106)
!5215 = !DILocalVariable(name: "self", scope: !5216, file: !5097, line: 1693, type: !5143, align: 8)
!5216 = !DILexicalBlockFile(scope: !5217, file: !5097, discriminator: 0)
!5217 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h53cc4077103a8868E", scope: !5218, file: !617, line: 355, type: !5219, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !5221)
!5218 = !DINamespace(name: "{impl#4}", scope: !619)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!939, !5143, !939, !917}
!5221 = !{!5215, !5222}
!5222 = !DILocalVariable(name: "slice", scope: !5216, file: !5097, line: 1693, type: !939, align: 8)
!5223 = !DILocation(line: 1693, column: 10, scope: !5216, inlinedAt: !5224)
!5224 = !DILocation(line: 30, column: 9, scope: !5140, inlinedAt: !5151)
!5225 = !DILocation(line: 1675, column: 14, scope: !5106)
!5226 = !DILocation(line: 1675, column: 14, scope: !5114)
!5227 = !DILocation(line: 1675, column: 17, scope: !5106)
!5228 = !DILocation(line: 1675, column: 17, scope: !5114)
!5229 = !DILocation(line: 1675, column: 20, scope: !5106)
!5230 = !DILocation(line: 1675, column: 20, scope: !5114)
!5231 = !DILocation(line: 1676, column: 19, scope: !5114)
!5232 = !DILocation(line: 1676, column: 18, scope: !5114)
!5233 = !DILocation(line: 1676, column: 13, scope: !5114)
!5234 = !DILocation(line: 1677, column: 19, scope: !5114)
!5235 = !DILocation(line: 1677, column: 18, scope: !5114)
!5236 = !DILocation(line: 1677, column: 13, scope: !5114)
!5237 = !DILocation(line: 1678, column: 19, scope: !5114)
!5238 = !DILocation(line: 1678, column: 18, scope: !5114)
!5239 = !DILocation(line: 1678, column: 13, scope: !5114)
!5240 = !DILocation(line: 1679, column: 9, scope: !5106)
!5241 = !DILocation(line: 1671, column: 14, scope: !5106)
!5242 = !DILocation(line: 1671, column: 14, scope: !5111)
!5243 = !DILocation(line: 1671, column: 17, scope: !5106)
!5244 = !DILocation(line: 1671, column: 17, scope: !5111)
!5245 = !DILocation(line: 1672, column: 19, scope: !5111)
!5246 = !DILocation(line: 1672, column: 18, scope: !5111)
!5247 = !DILocation(line: 1672, column: 13, scope: !5111)
!5248 = !DILocation(line: 1673, column: 19, scope: !5111)
!5249 = !DILocation(line: 1673, column: 18, scope: !5111)
!5250 = !DILocation(line: 1673, column: 13, scope: !5111)
!5251 = !DILocation(line: 1674, column: 9, scope: !5106)
!5252 = !DILocation(line: 1668, column: 14, scope: !5106)
!5253 = !DILocation(line: 1668, column: 14, scope: !5108)
!5254 = !DILocation(line: 1669, column: 18, scope: !5108)
!5255 = !DILocation(line: 1669, column: 13, scope: !5108)
!5256 = !DILocation(line: 1670, column: 9, scope: !5106)
!5257 = !DILocation(line: 1694, column: 2, scope: !5096)
!5258 = !DILocalVariable(name: "x", scope: !5259, file: !5097, line: 1686, type: !2123, align: 8)
!5259 = !DILexicalBlockFile(scope: !5260, file: !5097, discriminator: 0)
!5260 = distinct !DISubprogram(name: "new_upper_hex<u32>", linkageName: "_ZN4core3fmt10ArgumentV113new_upper_hex17hf4d44857aed8f35fE", scope: !2055, file: !1996, line: 318, type: !5261, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !5263)
!5261 = !DISubroutineType(types: !5262)
!5262 = !{!2055, !2123}
!5263 = !{!5258}
!5264 = !DILocation(line: 1686, column: 14, scope: !5259, inlinedAt: !5265)
!5265 = !DILocation(line: 1689, column: 13, scope: !5106)
!5266 = !DILocalVariable(name: "x", scope: !5267, file: !5097, line: 1686, type: !2123, align: 8)
!5267 = !DILexicalBlockFile(scope: !5268, file: !5097, discriminator: 0)
!5268 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt10ArgumentV13new17h25a2543a87709939E", scope: !2055, file: !1996, line: 329, type: !5269, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !5274)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!2055, !2123, !5271}
!5271 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5272, size: 64, align: 64, dwarfAddressSpace: 0)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{!2065, !2123, !2082}
!5274 = !{!5266, !5275}
!5275 = !DILocalVariable(name: "f", scope: !5267, file: !5097, line: 1686, type: !5271, align: 8)
!5276 = !DILocation(line: 1686, column: 14, scope: !5267, inlinedAt: !5277)
!5277 = !DILocation(line: 319, column: 13, scope: !5260, inlinedAt: !5265)
!5278 = !DILocation(line: 1690, column: 13, scope: !5106)
!5279 = !DILocalVariable(name: "x", scope: !5280, file: !5097, line: 1686, type: !387, align: 8)
!5280 = !DILexicalBlockFile(scope: !5281, file: !5097, discriminator: 0)
!5281 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17he1d4b63ff5b8cb0fE", scope: !2055, file: !1996, line: 318, type: !5171, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !5282)
!5282 = !{!5279}
!5283 = !DILocation(line: 1686, column: 14, scope: !5280, inlinedAt: !5278)
!5284 = !DILocalVariable(name: "x", scope: !5285, file: !5097, line: 1686, type: !387, align: 8)
!5285 = !DILexicalBlockFile(scope: !5286, file: !5097, discriminator: 0)
!5286 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17hbd0790052440fcfaE", scope: !2055, file: !1996, line: 329, type: !5179, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !5287)
!5287 = !{!5284, !5288}
!5288 = !DILocalVariable(name: "f", scope: !5285, file: !5097, line: 1686, type: !5181, align: 8)
!5289 = !DILocation(line: 1686, column: 14, scope: !5285, inlinedAt: !5290)
!5290 = !DILocation(line: 319, column: 13, scope: !5281, inlinedAt: !5278)
!5291 = distinct !DISubprogram(name: "is_whitespace", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h7df9e2a627a36ce5E", scope: !5292, file: !5097, line: 817, type: !5293, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5295)
!5292 = !DINamespace(name: "{impl#0}", scope: !5098)
!5293 = !DISubroutineType(types: !5294)
!5294 = !{!989, !321}
!5295 = !{!5296, !5297}
!5296 = !DILocalVariable(name: "self", arg: 1, scope: !5291, file: !5097, line: 817, type: !321)
!5297 = !DILocalVariable(name: "c", scope: !5298, file: !5097, line: 820, type: !321, align: 4)
!5298 = distinct !DILexicalBlock(scope: !5291, file: !5097, line: 820, column: 13)
!5299 = !DILocation(line: 817, column: 26, scope: !5291)
!5300 = !DILocation(line: 818, column: 9, scope: !5291)
!5301 = !DILocation(line: 819, column: 38, scope: !5291)
!5302 = !DILocation(line: 819, column: 19, scope: !5291)
!5303 = !DILocation(line: 820, column: 13, scope: !5291)
!5304 = !DILocation(line: 820, column: 13, scope: !5298)
!5305 = !DILocation(line: 820, column: 18, scope: !5298)
!5306 = !DILocation(line: 820, column: 32, scope: !5298)
!5307 = !DILocation(line: 820, column: 54, scope: !5291)
!5308 = !DILocation(line: 822, column: 6, scope: !5291)
!5309 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h2970cce3301ba9a4E", scope: !5098, file: !5097, line: 1637, type: !5310, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5312)
!5310 = !DISubroutineType(types: !5311)
!5311 = !{!9, !327}
!5312 = !{!5313}
!5313 = !DILocalVariable(name: "code", arg: 1, scope: !5309, file: !5097, line: 1637, type: !327)
!5314 = !DILocation(line: 1637, column: 19, scope: !5309)
!5315 = !DILocation(line: 1638, column: 8, scope: !5309)
!5316 = !DILocation(line: 1640, column: 15, scope: !5309)
!5317 = !DILocation(line: 1639, column: 9, scope: !5309)
!5318 = !DILocation(line: 1638, column: 5, scope: !5309)
!5319 = !DILocation(line: 1647, column: 2, scope: !5309)
!5320 = !DILocation(line: 1642, column: 15, scope: !5309)
!5321 = !DILocation(line: 1641, column: 9, scope: !5309)
!5322 = !DILocation(line: 1640, column: 12, scope: !5309)
!5323 = !DILocation(line: 1645, column: 9, scope: !5309)
!5324 = !DILocation(line: 1642, column: 12, scope: !5309)
!5325 = !DILocation(line: 1643, column: 9, scope: !5309)
!5326 = distinct !DISubprogram(name: "advance_by<core::str::iter::Split<char>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10advance_by17hf019702708226cfdE", scope: !5328, file: !5327, line: 328, type: !5331, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5373, retainedNodes: !5349)
!5327 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a0295b930225b37fba81d1ded0ab2716")
!5328 = !DINamespace(name: "Iterator", scope: !5329)
!5329 = !DINamespace(name: "iterator", scope: !5330)
!5330 = !DINamespace(name: "traits", scope: !233)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{!5333, !5348, !9}
!5333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), usize>", scope: !2066, file: !2, size: 128, align: 64, elements: !5334, templateParams: !23, identifier: "2665d9726329e1e43f7882d6d8a09d43")
!5334 = !{!5335}
!5335 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5333, file: !2, size: 128, align: 64, elements: !5336, templateParams: !23, identifier: "e6807fa709a48e8f2fa6bf84068d0d75", discriminator: !5347)
!5336 = !{!5337, !5343}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5335, file: !2, baseType: !5338, size: 128, align: 64, extraData: i64 0)
!5338 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5333, file: !2, size: 128, align: 64, elements: !5339, templateParams: !5341, identifier: "2dac430f5b253c2eb0795ca1aa3c42d")
!5339 = !{!5340}
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5338, file: !2, baseType: !7, align: 8, offset: 64)
!5341 = !{!1037, !5342}
!5342 = !DITemplateTypeParameter(name: "E", type: !9)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5335, file: !2, baseType: !5344, size: 128, align: 64, extraData: i64 1)
!5344 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5333, file: !2, size: 128, align: 64, elements: !5345, templateParams: !5341, identifier: "1ee96dac505e949bebe279887a060334")
!5345 = !{!5346}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5344, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5347 = !DIDerivedType(tag: DW_TAG_member, scope: !5333, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!5348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Split<char>", baseType: !4689, size: 64, align: 64, dwarfAddressSpace: 0)
!5349 = !{!5350, !5351, !5352, !5354, !5356, !5371}
!5350 = !DILocalVariable(name: "self", arg: 1, scope: !5326, file: !5327, line: 328, type: !5348)
!5351 = !DILocalVariable(name: "n", arg: 2, scope: !5326, file: !5327, line: 328, type: !9)
!5352 = !DILocalVariable(name: "iter", scope: !5353, file: !5327, line: 329, type: !626, align: 8)
!5353 = distinct !DILexicalBlock(scope: !5326, file: !5327, line: 329, column: 9)
!5354 = !DILocalVariable(name: "i", scope: !5355, file: !5327, line: 329, type: !9, align: 8)
!5355 = distinct !DILexicalBlock(scope: !5353, file: !5327, line: 329, column: 23)
!5356 = !DILocalVariable(name: "residual", scope: !5357, file: !5327, line: 330, type: !5358, align: 8)
!5357 = distinct !DILexicalBlock(scope: !5355, file: !5327, line: 330, column: 33)
!5358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, usize>", scope: !2066, file: !2, size: 64, align: 64, elements: !5359, templateParams: !23, identifier: "ca61b51ad52dee70c326dd21b57088c9")
!5359 = !{!5360}
!5360 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5358, file: !2, size: 64, align: 64, elements: !5361, templateParams: !23, identifier: "9c577c6548483508542edbdb1d40285a")
!5361 = !{!5362, !5367}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5360, file: !2, baseType: !5363, size: 64, align: 64)
!5363 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5358, file: !2, size: 64, align: 64, elements: !5364, templateParams: !5366, identifier: "f666b16232da49767ecccf3916a281db")
!5364 = !{!5365}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5363, file: !2, baseType: !4201, align: 8)
!5366 = !{!4200, !5342}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5360, file: !2, baseType: !5368, size: 64, align: 64)
!5368 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5358, file: !2, size: 64, align: 64, elements: !5369, templateParams: !5366, identifier: "eb7ea88372f793fc2d311969b3a6e9a4")
!5369 = !{!5370}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5368, file: !2, baseType: !9, size: 64, align: 64)
!5371 = !DILocalVariable(name: "val", scope: !5372, file: !5327, line: 330, type: !48, align: 8)
!5372 = distinct !DILexicalBlock(scope: !5355, file: !5327, line: 330, column: 13)
!5373 = !{!5374}
!5374 = !DITemplateTypeParameter(name: "Self", type: !4689)
!5375 = !DILocation(line: 328, column: 19, scope: !5326)
!5376 = !DILocation(line: 328, column: 30, scope: !5326)
!5377 = !DILocalVariable(name: "self", scope: !5378, file: !5327, line: 329, type: !626, align: 8)
!5378 = !DILexicalBlockFile(scope: !5379, file: !5327, discriminator: 0)
!5379 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0eb115358a3388b5E", scope: !5381, file: !5380, line: 271, type: !5383, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4590, retainedNodes: !5385)
!5380 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!5381 = !DINamespace(name: "{impl#0}", scope: !5382)
!5382 = !DINamespace(name: "collect", scope: !5330)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!626, !626}
!5385 = !{!5377}
!5386 = !DILocation(line: 329, column: 18, scope: !5378, inlinedAt: !5387)
!5387 = !DILocation(line: 329, column: 18, scope: !5326)
!5388 = !DILocation(line: 329, column: 18, scope: !5353)
!5389 = !DILocalVariable(name: "residual", scope: !5390, file: !5327, line: 330, type: !5358, align: 8)
!5390 = !DILexicalBlockFile(scope: !5391, file: !5327, discriminator: 0)
!5391 = distinct !DISubprogram(name: "from_residual<(), usize, usize>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hca513612f1453e0dE", scope: !5393, file: !5392, line: 2123, type: !5394, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5400, retainedNodes: !5396)
!5392 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "10550b113fb76ef9d8987f82c00c25ff")
!5393 = !DINamespace(name: "{impl#28}", scope: !2066)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{!5333, !5358, !917}
!5396 = !{!5389, !5397}
!5397 = !DILocalVariable(name: "e", scope: !5398, file: !5327, line: 330, type: !9, align: 8)
!5398 = !DILexicalBlockFile(scope: !5399, file: !5327, discriminator: 0)
!5399 = distinct !DILexicalBlock(scope: !5391, file: !5392, line: 2125, column: 13)
!5400 = !{!1037, !5342, !5401}
!5401 = !DITemplateTypeParameter(name: "F", type: !9)
!5402 = !DILocation(line: 330, column: 13, scope: !5390, inlinedAt: !5403)
!5403 = !DILocation(line: 330, column: 13, scope: !5357)
!5404 = !DILocation(line: 329, column: 9, scope: !5353)
!5405 = !DILocalVariable(name: "self", scope: !5406, file: !5327, line: 329, type: !5411, align: 8)
!5406 = !DILexicalBlockFile(scope: !5407, file: !5327, discriminator: 0)
!5407 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf62fe8f602d437e6E", scope: !5408, file: !2875, line: 710, type: !5409, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5413, retainedNodes: !5412)
!5408 = !DINamespace(name: "{impl#3}", scope: !2877)
!5409 = !DISubroutineType(types: !5410)
!5410 = !{!236, !5411}
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !626, size: 64, align: 64, dwarfAddressSpace: 0)
!5412 = !{!5405}
!5413 = !{!5414}
!5414 = !DITemplateTypeParameter(name: "A", type: !9)
!5415 = !DILocation(line: 329, column: 18, scope: !5406, inlinedAt: !5388)
!5416 = !DILocation(line: 332, column: 9, scope: !5326)
!5417 = !DILocation(line: 333, column: 6, scope: !5326)
!5418 = !DILocation(line: 329, column: 13, scope: !5353)
!5419 = !DILocation(line: 329, column: 13, scope: !5355)
!5420 = !DILocation(line: 330, column: 13, scope: !5355)
!5421 = !DILocation(line: 330, column: 13, scope: !5372)
!5422 = !DILocation(line: 330, column: 34, scope: !5355)
!5423 = !DILocation(line: 330, column: 33, scope: !5355)
!5424 = !DILocation(line: 330, column: 33, scope: !5357)
!5425 = !DILocation(line: 330, column: 13, scope: !5398, inlinedAt: !5403)
!5426 = distinct !DISubprogram(name: "nth<core::str::iter::Split<char>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3nth17hbf2f54fc1c2a83daE", scope: !5328, file: !5327, line: 376, type: !5427, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5373, retainedNodes: !5429)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!38, !5348, !9}
!5429 = !{!5430, !5431, !5432, !5434}
!5430 = !DILocalVariable(name: "self", arg: 1, scope: !5426, file: !5327, line: 376, type: !5348)
!5431 = !DILocalVariable(name: "n", arg: 2, scope: !5426, file: !5327, line: 376, type: !9)
!5432 = !DILocalVariable(name: "residual", scope: !5433, file: !5327, line: 377, type: !4193, align: 1)
!5433 = distinct !DILexicalBlock(scope: !5426, file: !5327, line: 377, column: 32)
!5434 = !DILocalVariable(name: "val", scope: !5435, file: !5327, line: 377, type: !7, align: 1)
!5435 = distinct !DILexicalBlock(scope: !5426, file: !5327, line: 377, column: 9)
!5436 = !DILocation(line: 376, column: 12, scope: !5426)
!5437 = !DILocation(line: 376, column: 23, scope: !5426)
!5438 = !DILocalVariable(name: "self", scope: !5439, file: !5327, line: 377, type: !5458, align: 1)
!5439 = !DILexicalBlockFile(scope: !5440, file: !5327, discriminator: 0)
!5440 = distinct !DISubprogram(name: "branch<()>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hca357c64ce6f244eE", scope: !4229, file: !1507, line: 2290, type: !5441, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !5469)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{!5443, !5458}
!5443 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, ()>", scope: !4233, file: !2, size: 8, align: 8, elements: !5444, templateParams: !23, identifier: "734185c0962cd8bdb20019749f27b7f6")
!5444 = !{!5445}
!5445 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5443, file: !2, size: 8, align: 8, elements: !5446, templateParams: !23, identifier: "42fd60cde256468a490fc3e29c7819f", discriminator: !5457)
!5446 = !{!5447, !5453}
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !5445, file: !2, baseType: !5448, size: 8, align: 8, extraData: i64 0)
!5448 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !5443, file: !2, size: 8, align: 8, elements: !5449, templateParams: !5451, identifier: "a0e20d3574328dd89a742dc5aa961fa6")
!5449 = !{!5450}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5448, file: !2, baseType: !7, align: 8, offset: 8)
!5451 = !{!4242, !5452}
!5452 = !DITemplateTypeParameter(name: "C", type: !7)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !5445, file: !2, baseType: !5454, size: 8, align: 8, extraData: i64 1)
!5454 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !5443, file: !2, size: 8, align: 8, elements: !5455, templateParams: !5451, identifier: "31df92d9ea1e3c6b4eb121fba89f1e5e")
!5455 = !{!5456}
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5454, file: !2, baseType: !4193, align: 8, offset: 8)
!5457 = !DIDerivedType(tag: DW_TAG_member, scope: !5443, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!5458 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<()>", scope: !39, file: !2, size: 8, align: 8, elements: !5459, templateParams: !23, identifier: "d603bb9edfde829c2b65908210bbb21d")
!5459 = !{!5460}
!5460 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5458, file: !2, size: 8, align: 8, elements: !5461, templateParams: !23, identifier: "3ffdbbe8277933c7d1f61e4bc6fa11a8", discriminator: !5468)
!5461 = !{!5462, !5464}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5460, file: !2, baseType: !5463, size: 8, align: 8, extraData: i64 0)
!5463 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5458, file: !2, size: 8, align: 8, elements: !23, templateParams: !1036, identifier: "27cefe752c492150e470c992dbd8bd7b")
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5460, file: !2, baseType: !5465, size: 8, align: 8, extraData: i64 1)
!5465 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5458, file: !2, size: 8, align: 8, elements: !5466, templateParams: !1036, identifier: "34ee58e452389cb0313a53fd2f6146be")
!5466 = !{!5467}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5465, file: !2, baseType: !7, align: 8, offset: 8)
!5468 = !DIDerivedType(tag: DW_TAG_member, scope: !5458, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!5469 = !{!5438, !5470}
!5470 = !DILocalVariable(name: "v", scope: !5471, file: !5327, line: 377, type: !7, align: 1)
!5471 = !DILexicalBlockFile(scope: !5472, file: !5327, discriminator: 0)
!5472 = distinct !DILexicalBlock(scope: !5440, file: !1507, line: 2292, column: 13)
!5473 = !DILocation(line: 377, column: 9, scope: !5439, inlinedAt: !5474)
!5474 = !DILocation(line: 377, column: 9, scope: !5426)
!5475 = !DILocalVariable(name: "self", scope: !5476, file: !5327, line: 377, type: !5333, align: 8)
!5476 = !DILexicalBlockFile(scope: !5477, file: !5327, discriminator: 0)
!5477 = distinct !DISubprogram(name: "ok<(), usize>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h4c8a6b2113e5b5b1E", scope: !5333, file: !5392, line: 637, type: !5478, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5341, retainedNodes: !5480)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{!5458, !5333}
!5480 = !{!5475, !5481, !5484}
!5481 = !DILocalVariable(name: "x", scope: !5482, file: !5327, line: 377, type: !7, align: 1)
!5482 = !DILexicalBlockFile(scope: !5483, file: !5327, discriminator: 0)
!5483 = distinct !DILexicalBlock(scope: !5477, file: !5392, line: 642, column: 13)
!5484 = !DILocalVariable(name: "x", scope: !5485, file: !5327, line: 377, type: !9, align: 8)
!5485 = !DILexicalBlockFile(scope: !5486, file: !5327, discriminator: 0)
!5486 = distinct !DILexicalBlock(scope: !5477, file: !5392, line: 645, column: 13)
!5487 = !DILocation(line: 377, column: 9, scope: !5476, inlinedAt: !5474)
!5488 = !DILocation(line: 377, column: 32, scope: !5433)
!5489 = !DILocalVariable(name: "residual", scope: !5490, file: !5327, line: 377, type: !4193, align: 1)
!5490 = !DILexicalBlockFile(scope: !5491, file: !5327, discriminator: 0)
!5491 = distinct !DISubprogram(name: "from_residual<&str>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h92961ab1b98793b1E", scope: !4259, file: !1507, line: 2302, type: !5492, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !5494)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!38, !4193}
!5494 = !{!5489}
!5495 = !DILocation(line: 377, column: 9, scope: !5490, inlinedAt: !5496)
!5496 = !DILocation(line: 377, column: 9, scope: !5433)
!5497 = !DILocation(line: 377, column: 9, scope: !5435)
!5498 = !DILocation(line: 377, column: 9, scope: !5482, inlinedAt: !5474)
!5499 = !DILocation(line: 377, column: 9, scope: !5471, inlinedAt: !5474)
!5500 = !DILocation(line: 377, column: 9, scope: !5485, inlinedAt: !5474)
!5501 = !DILocation(line: 378, column: 9, scope: !5426)
!5502 = !DILocation(line: 379, column: 6, scope: !5426)
!5503 = distinct !DISubprogram(name: "try_fold<core::slice::iter::Iter<&str>, usize, core::iter::adapters::map::map_try_fold::{closure_env#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>, core::option::Option<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h804e1fa3a82938baE", scope: !5328, file: !5327, line: 2230, type: !5504, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5525, retainedNodes: !5513)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!236, !5506, !9, !5507}
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<&str>", baseType: !253, size: 64, align: 64, dwarfAddressSpace: 0)
!5507 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", scope: !5508, file: !2, size: 64, align: 64, elements: !5509, templateParams: !23, identifier: "7391b45a2dcd2a34c54d474e761636")
!5508 = !DINamespace(name: "map_try_fold", scope: !231)
!5509 = !{!5510, !5511}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5507, file: !2, baseType: !279, align: 8)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5507, file: !2, baseType: !5512, size: 64, align: 64)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>", baseType: !272, size: 64, align: 64, dwarfAddressSpace: 0)
!5513 = !{!5514, !5515, !5516, !5517, !5519, !5521, !5523}
!5514 = !DILocalVariable(name: "self", arg: 1, scope: !5503, file: !5327, line: 2230, type: !5506)
!5515 = !DILocalVariable(name: "init", arg: 2, scope: !5503, file: !5327, line: 2230, type: !9)
!5516 = !DILocalVariable(name: "f", arg: 3, scope: !5503, file: !5327, line: 2230, type: !5507)
!5517 = !DILocalVariable(name: "accum", scope: !5518, file: !5327, line: 2236, type: !9, align: 8)
!5518 = distinct !DILexicalBlock(scope: !5503, file: !5327, line: 2236, column: 9)
!5519 = !DILocalVariable(name: "x", scope: !5520, file: !5327, line: 2237, type: !270, align: 8)
!5520 = distinct !DILexicalBlock(scope: !5518, file: !5327, line: 2237, column: 41)
!5521 = !DILocalVariable(name: "residual", scope: !5522, file: !5327, line: 2238, type: !4193, align: 1)
!5522 = distinct !DILexicalBlock(scope: !5520, file: !5327, line: 2238, column: 32)
!5523 = !DILocalVariable(name: "val", scope: !5524, file: !5327, line: 2238, type: !9, align: 8)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !5327, line: 2238, column: 21)
!5525 = !{!5526, !287, !5527, !290}
!5526 = !DITemplateTypeParameter(name: "Self", type: !253)
!5527 = !DITemplateTypeParameter(name: "F", type: !5507)
!5528 = !DILocation(line: 2230, column: 26, scope: !5503)
!5529 = !DILocation(line: 2230, column: 37, scope: !5503)
!5530 = !DILocation(line: 2230, column: 46, scope: !5503)
!5531 = !DILocation(line: 2236, column: 13, scope: !5518)
!5532 = !DILocation(line: 2238, column: 32, scope: !5522)
!5533 = !DILocation(line: 2236, column: 25, scope: !5503)
!5534 = !DILocation(line: 2237, column: 9, scope: !5518)
!5535 = !DILocation(line: 2237, column: 29, scope: !5520)
!5536 = !DILocation(line: 2241, column: 5, scope: !5503)
!5537 = !DILocation(line: 2237, column: 19, scope: !5520)
!5538 = !DILocation(line: 2237, column: 24, scope: !5520)
!5539 = !DILocation(line: 2238, column: 23, scope: !5520)
!5540 = !DILocation(line: 2238, column: 21, scope: !5520)
!5541 = !DILocation(line: 2240, column: 15, scope: !5518)
!5542 = !DILocation(line: 2241, column: 6, scope: !5503)
!5543 = !DILocation(line: 2238, column: 21, scope: !5524)
!5544 = !DILocation(line: 2238, column: 13, scope: !5520)
!5545 = !DILocation(line: 2238, column: 21, scope: !5522)
!5546 = !DILocation(line: 2230, column: 5, scope: !5503)
!5547 = distinct !DISubprogram(name: "map_try_fold<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", linkageName: "_ZN4core4iter8adapters3map12map_try_fold17h5d9949c75bca8e00E", scope: !231, file: !229, line: 87, type: !5548, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5553, retainedNodes: !5550)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{!5507, !5512, !279}
!5550 = !{!5551, !5552}
!5551 = !DILocalVariable(name: "f", arg: 1, scope: !5547, file: !229, line: 88, type: !5512)
!5552 = !DILocalVariable(name: "g", arg: 2, scope: !5547, file: !229, line: 89, type: !279)
!5553 = !{!269, !287, !288, !290, !5554, !5555}
!5554 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !272)
!5555 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> R + 'a", type: !279)
!5556 = !DILocation(line: 88, column: 5, scope: !5547)
!5557 = !DILocation(line: 89, column: 5, scope: !5547)
!5558 = !DILocation(line: 91, column: 5, scope: !5547)
!5559 = !DILocation(line: 92, column: 2, scope: !5547)
!5560 = distinct !DISubprogram(name: "{closure#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", linkageName: "_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hcee578b304e65e18E", scope: !5508, file: !229, line: 91, type: !5561, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5553, retainedNodes: !5564)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!236, !5563, !9, !270}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_try_fold::{closure_env#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", baseType: !5507, size: 64, align: 64, dwarfAddressSpace: 0)
!5564 = !{!5565, !5566, !5567, !5568}
!5565 = !DILocalVariable(name: "acc", arg: 2, scope: !5560, file: !229, line: 91, type: !9)
!5566 = !DILocalVariable(name: "elt", arg: 3, scope: !5560, file: !229, line: 91, type: !270)
!5567 = !DILocalVariable(name: "g", scope: !5560, file: !229, line: 89, type: !279, align: 1)
!5568 = !DILocalVariable(name: "f", scope: !5560, file: !229, line: 88, type: !5512, align: 8)
!5569 = !DILocation(line: 89, column: 5, scope: !5560)
!5570 = !DILocation(line: 88, column: 5, scope: !5560)
!5571 = !DILocation(line: 91, column: 11, scope: !5560)
!5572 = !DILocation(line: 91, column: 16, scope: !5560)
!5573 = !DILocation(line: 91, column: 21, scope: !5560)
!5574 = !DILocation(line: 91, column: 23, scope: !5560)
!5575 = !DILocation(line: 91, column: 28, scope: !5560)
!5576 = !DILocation(line: 91, column: 34, scope: !5560)
!5577 = !DILocation(line: 91, column: 35, scope: !5560)
!5578 = !DILocation(line: 91, column: 5, scope: !5560)
!5579 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3e8f9981f6b2038fE", scope: !250, file: !229, line: 68, type: !5580, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !276, retainedNodes: !5582)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!250, !253, !272}
!5582 = !{!5583, !5584}
!5583 = !DILocalVariable(name: "iter", arg: 1, scope: !5579, file: !229, line: 68, type: !253)
!5584 = !DILocalVariable(name: "f", arg: 2, scope: !5579, file: !229, line: 68, type: !272)
!5585 = !DILocation(line: 68, column: 32, scope: !5579)
!5586 = !DILocation(line: 68, column: 41, scope: !5579)
!5587 = !DILocation(line: 69, column: 9, scope: !5579)
!5588 = !DILocation(line: 70, column: 6, scope: !5579)
!5589 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hee31dbf736bcd211E", scope: !5590, file: !229, line: 68, type: !5595, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5594, retainedNodes: !5597)
!5590 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", scope: !231, file: !2, size: 128, align: 64, elements: !5591, templateParams: !5594, identifier: "4821374d513796dac4b8b538e0db4c64")
!5591 = !{!5592, !5593}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !5590, file: !2, baseType: !253, size: 128, align: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5590, file: !2, baseType: !3538, align: 8)
!5594 = !{!277, !3547}
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!5590, !253, !3538}
!5597 = !{!5598, !5599}
!5598 = !DILocalVariable(name: "iter", arg: 1, scope: !5589, file: !229, line: 68, type: !253)
!5599 = !DILocalVariable(name: "f", arg: 2, scope: !5589, file: !229, line: 68, type: !3538)
!5600 = !DILocation(line: 68, column: 32, scope: !5589)
!5601 = !DILocation(line: 68, column: 41, scope: !5589)
!5602 = !DILocation(line: 69, column: 9, scope: !5589)
!5603 = !DILocation(line: 70, column: 6, scope: !5589)
!5604 = distinct !DISubprogram(name: "size_align<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout10size_align17h6c87caed0a231971E", scope: !1623, file: !5605, line: 12, type: !5606, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1253, retainedNodes: !23)
!5605 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "97980f24ce9b2a42bb9c99f3fab71121")
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!1115}
!5608 = !DILocation(line: 13, column: 5, scope: !5604)
!5609 = !DILocation(line: 14, column: 2, scope: !5604)
!5610 = distinct !DISubprogram(name: "size_align<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout10size_align17hcc3107a128799684E", scope: !1623, file: !5605, line: 12, type: !5606, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1294, retainedNodes: !23)
!5611 = !DILocation(line: 13, column: 5, scope: !5610)
!5612 = !DILocation(line: 14, column: 2, scope: !5610)
!5613 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17h5ae70b08ad2208bcE", scope: !1622, file: !5605, line: 406, type: !5614, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !5633)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!5616, !9}
!5616 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !2066, file: !2, size: 128, align: 64, elements: !5617, templateParams: !23, identifier: "12fb4e69411f9ab5a23362bb990761d3")
!5617 = !{!5618}
!5618 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5616, file: !2, size: 128, align: 64, elements: !5619, templateParams: !23, identifier: "5e96051265caafe7ab93b015e96cdfb", discriminator: !5632)
!5619 = !{!5620, !5628}
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5618, file: !2, baseType: !5621, size: 128, align: 64)
!5621 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5616, file: !2, size: 128, align: 64, elements: !5622, templateParams: !5624, identifier: "894093a3484371d598960074135b7afd")
!5622 = !{!5623}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5621, file: !2, baseType: !1622, size: 128, align: 64)
!5624 = !{!5625, !5626}
!5625 = !DITemplateTypeParameter(name: "T", type: !1622)
!5626 = !DITemplateTypeParameter(name: "E", type: !5627)
!5627 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !1623, file: !2, align: 8, elements: !23, identifier: "43aba19d759edc4678aaeb14177f16ec")
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5618, file: !2, baseType: !5629, size: 128, align: 64, extraData: i64 0)
!5629 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5616, file: !2, size: 128, align: 64, elements: !5630, templateParams: !5624, identifier: "41b96673dd8ad0a366734f76755cc8d9")
!5630 = !{!5631}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5629, file: !2, baseType: !5627, align: 8)
!5632 = !DIDerivedType(tag: DW_TAG_member, scope: !5616, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5633 = !{!5634, !5635, !5637, !5652}
!5634 = !DILocalVariable(name: "n", arg: 1, scope: !5613, file: !5605, line: 406, type: !9)
!5635 = !DILocalVariable(name: "array_size", scope: !5636, file: !5605, line: 407, type: !9, align: 8)
!5636 = distinct !DILexicalBlock(scope: !5613, file: !5605, line: 407, column: 9)
!5637 = !DILocalVariable(name: "residual", scope: !5638, file: !5605, line: 407, type: !5639, align: 1)
!5638 = distinct !DILexicalBlock(scope: !5613, file: !5605, line: 407, column: 79)
!5639 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !2066, file: !2, align: 8, elements: !5640, templateParams: !23, identifier: "970a844c2c6b3ecb3d361470b73c3ebd")
!5640 = !{!5641}
!5641 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5639, file: !2, align: 8, elements: !5642, templateParams: !23, identifier: "4e55f7cf3a78e84c1f810fee55096c74")
!5642 = !{!5643, !5648}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5641, file: !2, baseType: !5644, align: 8)
!5644 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5639, file: !2, align: 8, elements: !5645, templateParams: !5647, identifier: "d6381bca308411c1e979b719dc5c48e2")
!5645 = !{!5646}
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5644, file: !2, baseType: !4201, align: 8)
!5647 = !{!4200, !5626}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5641, file: !2, baseType: !5649, align: 8)
!5649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5639, file: !2, align: 8, elements: !5650, templateParams: !5647, identifier: "cca8e09f6c9a5205e5d99a836dd8d5b7")
!5650 = !{!5651}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5649, file: !2, baseType: !5627, align: 8)
!5652 = !DILocalVariable(name: "val", scope: !5653, file: !5605, line: 407, type: !9, align: 8)
!5653 = distinct !DILexicalBlock(scope: !5613, file: !5605, line: 407, column: 26)
!5654 = !DILocation(line: 406, column: 21, scope: !5613)
!5655 = !DILocalVariable(name: "self", scope: !5656, file: !5605, line: 407, type: !5677, align: 8)
!5656 = !DILexicalBlockFile(scope: !5657, file: !5605, discriminator: 0)
!5657 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd1aa49e80f6f958aE", scope: !5658, file: !5392, line: 2108, type: !5659, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5691)
!5658 = !DINamespace(name: "{impl#27}", scope: !2066)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{!5661, !5677}
!5661 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !4233, file: !2, size: 128, align: 64, elements: !5662, templateParams: !23, identifier: "b2a52659b2e2f0f9b7c4e9b0f6b7f09")
!5662 = !{!5663}
!5663 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5661, file: !2, size: 128, align: 64, elements: !5664, templateParams: !23, identifier: "b31f853baf83786e74a0294fdf066ef9", discriminator: !5676)
!5664 = !{!5665, !5672}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !5663, file: !2, baseType: !5666, size: 128, align: 64, extraData: i64 0)
!5666 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !5661, file: !2, size: 128, align: 64, elements: !5667, templateParams: !5669, identifier: "37ca24cbd85a2b6aaaddba0f196c14e6")
!5667 = !{!5668}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5666, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5669 = !{!5670, !5671}
!5670 = !DITemplateTypeParameter(name: "B", type: !5639)
!5671 = !DITemplateTypeParameter(name: "C", type: !9)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !5663, file: !2, baseType: !5673, size: 128, align: 64, extraData: i64 1)
!5673 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !5661, file: !2, size: 128, align: 64, elements: !5674, templateParams: !5669, identifier: "32e88a19ceee0ef5dc677132f8c02fc6")
!5674 = !{!5675}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5673, file: !2, baseType: !5639, align: 8, offset: 64)
!5676 = !DIDerivedType(tag: DW_TAG_member, scope: !5661, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!5677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !2066, file: !2, size: 128, align: 64, elements: !5678, templateParams: !23, identifier: "4144f08e8a1f390942bc9341cf9622bc")
!5678 = !{!5679}
!5679 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5677, file: !2, size: 128, align: 64, elements: !5680, templateParams: !23, identifier: "34e4aa8036d1c6141480255f23668488", discriminator: !5690)
!5680 = !{!5681, !5686}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5679, file: !2, baseType: !5682, size: 128, align: 64, extraData: i64 0)
!5682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5677, file: !2, size: 128, align: 64, elements: !5683, templateParams: !5685, identifier: "37c4fef1da72b9bb9020bb606d0b8c0d")
!5683 = !{!5684}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5682, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5685 = !{!243, !5626}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5679, file: !2, baseType: !5687, size: 128, align: 64, extraData: i64 1)
!5687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5677, file: !2, size: 128, align: 64, elements: !5688, templateParams: !5685, identifier: "6105fd136438988fd9685287a8ffb859")
!5688 = !{!5689}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5687, file: !2, baseType: !5627, align: 8, offset: 64)
!5690 = !DIDerivedType(tag: DW_TAG_member, scope: !5677, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!5691 = !{!5655, !5692, !5695}
!5692 = !DILocalVariable(name: "v", scope: !5693, file: !5605, line: 407, type: !9, align: 8)
!5693 = !DILexicalBlockFile(scope: !5694, file: !5605, discriminator: 0)
!5694 = distinct !DILexicalBlock(scope: !5657, file: !5392, line: 2110, column: 13)
!5695 = !DILocalVariable(name: "e", scope: !5696, file: !5605, line: 407, type: !5627, align: 1)
!5696 = !DILexicalBlockFile(scope: !5697, file: !5605, discriminator: 0)
!5697 = distinct !DILexicalBlock(scope: !5657, file: !5392, line: 2111, column: 13)
!5698 = !DILocation(line: 407, column: 26, scope: !5656, inlinedAt: !5699)
!5699 = !DILocation(line: 407, column: 26, scope: !5613)
!5700 = !DILocalVariable(name: "self", scope: !5701, file: !5605, line: 407, type: !236, align: 8)
!5701 = !DILexicalBlockFile(scope: !5702, file: !5605, discriminator: 0)
!5702 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3556e22c960947bdE", scope: !236, file: !1507, line: 1051, type: !5703, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5705)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!5677, !236, !5627}
!5705 = !{!5700, !5706, !5707}
!5706 = !DILocalVariable(name: "err", scope: !5701, file: !5605, line: 407, type: !5627, align: 1)
!5707 = !DILocalVariable(name: "v", scope: !5708, file: !5605, line: 407, type: !9, align: 8)
!5708 = !DILexicalBlockFile(scope: !5709, file: !5605, discriminator: 0)
!5709 = distinct !DILexicalBlock(scope: !5702, file: !1507, line: 1056, column: 13)
!5710 = !DILocation(line: 407, column: 26, scope: !5701, inlinedAt: !5699)
!5711 = !DILocation(line: 407, column: 79, scope: !5638)
!5712 = !DILocalVariable(name: "residual", scope: !5713, file: !5605, line: 407, type: !5639, align: 1)
!5713 = !DILexicalBlockFile(scope: !5714, file: !5605, discriminator: 0)
!5714 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb46aa1fdc84a5225E", scope: !5393, file: !5392, line: 2123, type: !5715, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5721, retainedNodes: !5717)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!5616, !5639, !917}
!5717 = !{!5712, !5718}
!5718 = !DILocalVariable(name: "e", scope: !5719, file: !5605, line: 407, type: !5627, align: 1)
!5719 = !DILexicalBlockFile(scope: !5720, file: !5605, discriminator: 0)
!5720 = distinct !DILexicalBlock(scope: !5714, file: !5392, line: 2125, column: 13)
!5721 = !{!5625, !5626, !5722}
!5722 = !DITemplateTypeParameter(name: "F", type: !5627)
!5723 = !DILocation(line: 407, column: 26, scope: !5713, inlinedAt: !5724)
!5724 = !DILocation(line: 407, column: 26, scope: !5638)
!5725 = !DILocation(line: 407, column: 26, scope: !5696, inlinedAt: !5699)
!5726 = !DILocation(line: 407, column: 26, scope: !5719, inlinedAt: !5724)
!5727 = !DILocation(line: 407, column: 26, scope: !5708, inlinedAt: !5699)
!5728 = !DILocation(line: 407, column: 26, scope: !5693, inlinedAt: !5699)
!5729 = !DILocation(line: 407, column: 26, scope: !5653)
!5730 = !DILocation(line: 407, column: 13, scope: !5636)
!5731 = !DILocation(line: 417, column: 55, scope: !5636)
!5732 = !DILocalVariable(name: "size", scope: !5733, file: !5605, line: 417, type: !9, align: 8)
!5733 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5736)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!1622, !9, !9}
!5736 = !{!5732, !5737}
!5737 = !DILocalVariable(name: "align", scope: !5733, file: !5605, line: 417, type: !9, align: 8)
!5738 = !DILocation(line: 417, column: 21, scope: !5733, inlinedAt: !5739)
!5739 = !DILocation(line: 417, column: 21, scope: !5636)
!5740 = !DILocation(line: 417, column: 67, scope: !5741, inlinedAt: !5743)
!5741 = !DILexicalBlockFile(scope: !5742, file: !5605, discriminator: 0)
!5742 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h86963cf315d3d296E", scope: !79, file: !423, line: 460, type: !424, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!5743 = !DILocation(line: 417, column: 67, scope: !5636)
!5744 = !DILocalVariable(name: "align", scope: !5745, file: !5605, line: 417, type: !9, align: 8)
!5745 = !DILexicalBlockFile(scope: !5746, file: !5605, discriminator: 0)
!5746 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5750)
!5747 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "1605613425ee83ccd6e444b563d4eecd")
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!1628, !9}
!5750 = !{!5744}
!5751 = !DILocation(line: 417, column: 21, scope: !5745, inlinedAt: !5752)
!5752 = !DILocation(line: 100, column: 40, scope: !5733, inlinedAt: !5739)
!5753 = !{i64 1, i64 -9223372036854775807}
!5754 = !DILocation(line: 418, column: 6, scope: !5613)
!5755 = !DILocation(line: 417, column: 9, scope: !5636)
!5756 = distinct !DISubprogram(name: "array<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core5alloc6layout6Layout5array17h5dd466e01263a857E", scope: !1622, file: !5605, line: 406, type: !5614, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !5757)
!5757 = !{!5758, !5759, !5761, !5763}
!5758 = !DILocalVariable(name: "n", arg: 1, scope: !5756, file: !5605, line: 406, type: !9)
!5759 = !DILocalVariable(name: "array_size", scope: !5760, file: !5605, line: 407, type: !9, align: 8)
!5760 = distinct !DILexicalBlock(scope: !5756, file: !5605, line: 407, column: 9)
!5761 = !DILocalVariable(name: "residual", scope: !5762, file: !5605, line: 407, type: !5639, align: 1)
!5762 = distinct !DILexicalBlock(scope: !5756, file: !5605, line: 407, column: 79)
!5763 = !DILocalVariable(name: "val", scope: !5764, file: !5605, line: 407, type: !9, align: 8)
!5764 = distinct !DILexicalBlock(scope: !5756, file: !5605, line: 407, column: 26)
!5765 = !DILocation(line: 406, column: 21, scope: !5756)
!5766 = !DILocalVariable(name: "self", scope: !5767, file: !5605, line: 407, type: !5677, align: 8)
!5767 = !DILexicalBlockFile(scope: !5768, file: !5605, discriminator: 0)
!5768 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd1aa49e80f6f958aE", scope: !5658, file: !5392, line: 2108, type: !5659, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5769)
!5769 = !{!5766, !5770, !5773}
!5770 = !DILocalVariable(name: "v", scope: !5771, file: !5605, line: 407, type: !9, align: 8)
!5771 = !DILexicalBlockFile(scope: !5772, file: !5605, discriminator: 0)
!5772 = distinct !DILexicalBlock(scope: !5768, file: !5392, line: 2110, column: 13)
!5773 = !DILocalVariable(name: "e", scope: !5774, file: !5605, line: 407, type: !5627, align: 1)
!5774 = !DILexicalBlockFile(scope: !5775, file: !5605, discriminator: 0)
!5775 = distinct !DILexicalBlock(scope: !5768, file: !5392, line: 2111, column: 13)
!5776 = !DILocation(line: 407, column: 26, scope: !5767, inlinedAt: !5777)
!5777 = !DILocation(line: 407, column: 26, scope: !5756)
!5778 = !DILocalVariable(name: "self", scope: !5779, file: !5605, line: 407, type: !236, align: 8)
!5779 = !DILexicalBlockFile(scope: !5780, file: !5605, discriminator: 0)
!5780 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3556e22c960947bdE", scope: !236, file: !1507, line: 1051, type: !5703, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5781)
!5781 = !{!5778, !5782, !5783}
!5782 = !DILocalVariable(name: "err", scope: !5779, file: !5605, line: 407, type: !5627, align: 1)
!5783 = !DILocalVariable(name: "v", scope: !5784, file: !5605, line: 407, type: !9, align: 8)
!5784 = !DILexicalBlockFile(scope: !5785, file: !5605, discriminator: 0)
!5785 = distinct !DILexicalBlock(scope: !5780, file: !1507, line: 1056, column: 13)
!5786 = !DILocation(line: 407, column: 26, scope: !5779, inlinedAt: !5777)
!5787 = !DILocation(line: 407, column: 79, scope: !5762)
!5788 = !DILocalVariable(name: "residual", scope: !5789, file: !5605, line: 407, type: !5639, align: 1)
!5789 = !DILexicalBlockFile(scope: !5790, file: !5605, discriminator: 0)
!5790 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb46aa1fdc84a5225E", scope: !5393, file: !5392, line: 2123, type: !5715, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5721, retainedNodes: !5791)
!5791 = !{!5788, !5792}
!5792 = !DILocalVariable(name: "e", scope: !5793, file: !5605, line: 407, type: !5627, align: 1)
!5793 = !DILexicalBlockFile(scope: !5794, file: !5605, discriminator: 0)
!5794 = distinct !DILexicalBlock(scope: !5790, file: !5392, line: 2125, column: 13)
!5795 = !DILocation(line: 407, column: 26, scope: !5789, inlinedAt: !5796)
!5796 = !DILocation(line: 407, column: 26, scope: !5762)
!5797 = !DILocation(line: 407, column: 26, scope: !5774, inlinedAt: !5777)
!5798 = !DILocation(line: 407, column: 26, scope: !5793, inlinedAt: !5796)
!5799 = !DILocation(line: 407, column: 26, scope: !5784, inlinedAt: !5777)
!5800 = !DILocation(line: 407, column: 26, scope: !5771, inlinedAt: !5777)
!5801 = !DILocation(line: 407, column: 26, scope: !5764)
!5802 = !DILocation(line: 407, column: 13, scope: !5760)
!5803 = !DILocation(line: 417, column: 55, scope: !5760)
!5804 = !DILocalVariable(name: "size", scope: !5805, file: !5605, line: 417, type: !9, align: 8)
!5805 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5806)
!5806 = !{!5804, !5807}
!5807 = !DILocalVariable(name: "align", scope: !5805, file: !5605, line: 417, type: !9, align: 8)
!5808 = !DILocation(line: 417, column: 21, scope: !5805, inlinedAt: !5809)
!5809 = !DILocation(line: 417, column: 21, scope: !5760)
!5810 = !DILocation(line: 417, column: 67, scope: !5811, inlinedAt: !5813)
!5811 = !DILexicalBlockFile(scope: !5812, file: !5605, discriminator: 0)
!5812 = distinct !DISubprogram(name: "align_of<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3mem8align_of17hb7f4b5c11033f506E", scope: !79, file: !423, line: 460, type: !424, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !23)
!5813 = !DILocation(line: 417, column: 67, scope: !5760)
!5814 = !DILocalVariable(name: "align", scope: !5815, file: !5605, line: 417, type: !9, align: 8)
!5815 = !DILexicalBlockFile(scope: !5816, file: !5605, discriminator: 0)
!5816 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5817)
!5817 = !{!5814}
!5818 = !DILocation(line: 417, column: 21, scope: !5815, inlinedAt: !5819)
!5819 = !DILocation(line: 100, column: 40, scope: !5805, inlinedAt: !5809)
!5820 = !DILocation(line: 418, column: 6, scope: !5756)
!5821 = !DILocation(line: 417, column: 9, scope: !5760)
!5822 = distinct !DISubprogram(name: "array<*const i8>", linkageName: "_ZN4core5alloc6layout6Layout5array17ha363f8135b733889E", scope: !1622, file: !5605, line: 406, type: !5614, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !5823)
!5823 = !{!5824, !5825, !5827, !5829}
!5824 = !DILocalVariable(name: "n", arg: 1, scope: !5822, file: !5605, line: 406, type: !9)
!5825 = !DILocalVariable(name: "array_size", scope: !5826, file: !5605, line: 407, type: !9, align: 8)
!5826 = distinct !DILexicalBlock(scope: !5822, file: !5605, line: 407, column: 9)
!5827 = !DILocalVariable(name: "residual", scope: !5828, file: !5605, line: 407, type: !5639, align: 1)
!5828 = distinct !DILexicalBlock(scope: !5822, file: !5605, line: 407, column: 79)
!5829 = !DILocalVariable(name: "val", scope: !5830, file: !5605, line: 407, type: !9, align: 8)
!5830 = distinct !DILexicalBlock(scope: !5822, file: !5605, line: 407, column: 26)
!5831 = !DILocation(line: 406, column: 21, scope: !5822)
!5832 = !DILocalVariable(name: "self", scope: !5833, file: !5605, line: 407, type: !5677, align: 8)
!5833 = !DILexicalBlockFile(scope: !5834, file: !5605, discriminator: 0)
!5834 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd1aa49e80f6f958aE", scope: !5658, file: !5392, line: 2108, type: !5659, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5835)
!5835 = !{!5832, !5836, !5839}
!5836 = !DILocalVariable(name: "v", scope: !5837, file: !5605, line: 407, type: !9, align: 8)
!5837 = !DILexicalBlockFile(scope: !5838, file: !5605, discriminator: 0)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !5392, line: 2110, column: 13)
!5839 = !DILocalVariable(name: "e", scope: !5840, file: !5605, line: 407, type: !5627, align: 1)
!5840 = !DILexicalBlockFile(scope: !5841, file: !5605, discriminator: 0)
!5841 = distinct !DILexicalBlock(scope: !5834, file: !5392, line: 2111, column: 13)
!5842 = !DILocation(line: 407, column: 26, scope: !5833, inlinedAt: !5843)
!5843 = !DILocation(line: 407, column: 26, scope: !5822)
!5844 = !DILocalVariable(name: "self", scope: !5845, file: !5605, line: 407, type: !236, align: 8)
!5845 = !DILexicalBlockFile(scope: !5846, file: !5605, discriminator: 0)
!5846 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3556e22c960947bdE", scope: !236, file: !1507, line: 1051, type: !5703, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5847)
!5847 = !{!5844, !5848, !5849}
!5848 = !DILocalVariable(name: "err", scope: !5845, file: !5605, line: 407, type: !5627, align: 1)
!5849 = !DILocalVariable(name: "v", scope: !5850, file: !5605, line: 407, type: !9, align: 8)
!5850 = !DILexicalBlockFile(scope: !5851, file: !5605, discriminator: 0)
!5851 = distinct !DILexicalBlock(scope: !5846, file: !1507, line: 1056, column: 13)
!5852 = !DILocation(line: 407, column: 26, scope: !5845, inlinedAt: !5843)
!5853 = !DILocation(line: 407, column: 79, scope: !5828)
!5854 = !DILocalVariable(name: "residual", scope: !5855, file: !5605, line: 407, type: !5639, align: 1)
!5855 = !DILexicalBlockFile(scope: !5856, file: !5605, discriminator: 0)
!5856 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb46aa1fdc84a5225E", scope: !5393, file: !5392, line: 2123, type: !5715, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5721, retainedNodes: !5857)
!5857 = !{!5854, !5858}
!5858 = !DILocalVariable(name: "e", scope: !5859, file: !5605, line: 407, type: !5627, align: 1)
!5859 = !DILexicalBlockFile(scope: !5860, file: !5605, discriminator: 0)
!5860 = distinct !DILexicalBlock(scope: !5856, file: !5392, line: 2125, column: 13)
!5861 = !DILocation(line: 407, column: 26, scope: !5855, inlinedAt: !5862)
!5862 = !DILocation(line: 407, column: 26, scope: !5828)
!5863 = !DILocation(line: 407, column: 26, scope: !5840, inlinedAt: !5843)
!5864 = !DILocation(line: 407, column: 26, scope: !5859, inlinedAt: !5862)
!5865 = !DILocation(line: 407, column: 26, scope: !5850, inlinedAt: !5843)
!5866 = !DILocation(line: 407, column: 26, scope: !5837, inlinedAt: !5843)
!5867 = !DILocation(line: 407, column: 26, scope: !5830)
!5868 = !DILocation(line: 407, column: 13, scope: !5826)
!5869 = !DILocation(line: 417, column: 55, scope: !5826)
!5870 = !DILocalVariable(name: "size", scope: !5871, file: !5605, line: 417, type: !9, align: 8)
!5871 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5872)
!5872 = !{!5870, !5873}
!5873 = !DILocalVariable(name: "align", scope: !5871, file: !5605, line: 417, type: !9, align: 8)
!5874 = !DILocation(line: 417, column: 21, scope: !5871, inlinedAt: !5875)
!5875 = !DILocation(line: 417, column: 21, scope: !5826)
!5876 = !DILocation(line: 417, column: 67, scope: !5877, inlinedAt: !5879)
!5877 = !DILexicalBlockFile(scope: !5878, file: !5605, discriminator: 0)
!5878 = distinct !DISubprogram(name: "align_of<*const i8>", linkageName: "_ZN4core3mem8align_of17h22ec03b3dcab0649E", scope: !79, file: !423, line: 460, type: !424, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !23)
!5879 = !DILocation(line: 417, column: 67, scope: !5826)
!5880 = !DILocalVariable(name: "align", scope: !5881, file: !5605, line: 417, type: !9, align: 8)
!5881 = !DILexicalBlockFile(scope: !5882, file: !5605, discriminator: 0)
!5882 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5883)
!5883 = !{!5880}
!5884 = !DILocation(line: 417, column: 21, scope: !5881, inlinedAt: !5885)
!5885 = !DILocation(line: 100, column: 40, scope: !5871, inlinedAt: !5875)
!5886 = !DILocation(line: 418, column: 6, scope: !5822)
!5887 = !DILocation(line: 417, column: 9, scope: !5826)
!5888 = distinct !DISubprogram(name: "array<alloc::ffi::c_str::CString>", linkageName: "_ZN4core5alloc6layout6Layout5array17hb5571c4ff1ccabe7E", scope: !1622, file: !5605, line: 406, type: !5614, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !5889)
!5889 = !{!5890, !5891, !5893, !5895}
!5890 = !DILocalVariable(name: "n", arg: 1, scope: !5888, file: !5605, line: 406, type: !9)
!5891 = !DILocalVariable(name: "array_size", scope: !5892, file: !5605, line: 407, type: !9, align: 8)
!5892 = distinct !DILexicalBlock(scope: !5888, file: !5605, line: 407, column: 9)
!5893 = !DILocalVariable(name: "residual", scope: !5894, file: !5605, line: 407, type: !5639, align: 1)
!5894 = distinct !DILexicalBlock(scope: !5888, file: !5605, line: 407, column: 79)
!5895 = !DILocalVariable(name: "val", scope: !5896, file: !5605, line: 407, type: !9, align: 8)
!5896 = distinct !DILexicalBlock(scope: !5888, file: !5605, line: 407, column: 26)
!5897 = !DILocation(line: 406, column: 21, scope: !5888)
!5898 = !DILocalVariable(name: "self", scope: !5899, file: !5605, line: 407, type: !5677, align: 8)
!5899 = !DILexicalBlockFile(scope: !5900, file: !5605, discriminator: 0)
!5900 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd1aa49e80f6f958aE", scope: !5658, file: !5392, line: 2108, type: !5659, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5901)
!5901 = !{!5898, !5902, !5905}
!5902 = !DILocalVariable(name: "v", scope: !5903, file: !5605, line: 407, type: !9, align: 8)
!5903 = !DILexicalBlockFile(scope: !5904, file: !5605, discriminator: 0)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !5392, line: 2110, column: 13)
!5905 = !DILocalVariable(name: "e", scope: !5906, file: !5605, line: 407, type: !5627, align: 1)
!5906 = !DILexicalBlockFile(scope: !5907, file: !5605, discriminator: 0)
!5907 = distinct !DILexicalBlock(scope: !5900, file: !5392, line: 2111, column: 13)
!5908 = !DILocation(line: 407, column: 26, scope: !5899, inlinedAt: !5909)
!5909 = !DILocation(line: 407, column: 26, scope: !5888)
!5910 = !DILocalVariable(name: "self", scope: !5911, file: !5605, line: 407, type: !236, align: 8)
!5911 = !DILexicalBlockFile(scope: !5912, file: !5605, discriminator: 0)
!5912 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3556e22c960947bdE", scope: !236, file: !1507, line: 1051, type: !5703, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5685, retainedNodes: !5913)
!5913 = !{!5910, !5914, !5915}
!5914 = !DILocalVariable(name: "err", scope: !5911, file: !5605, line: 407, type: !5627, align: 1)
!5915 = !DILocalVariable(name: "v", scope: !5916, file: !5605, line: 407, type: !9, align: 8)
!5916 = !DILexicalBlockFile(scope: !5917, file: !5605, discriminator: 0)
!5917 = distinct !DILexicalBlock(scope: !5912, file: !1507, line: 1056, column: 13)
!5918 = !DILocation(line: 407, column: 26, scope: !5911, inlinedAt: !5909)
!5919 = !DILocation(line: 407, column: 79, scope: !5894)
!5920 = !DILocalVariable(name: "residual", scope: !5921, file: !5605, line: 407, type: !5639, align: 1)
!5921 = !DILexicalBlockFile(scope: !5922, file: !5605, discriminator: 0)
!5922 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb46aa1fdc84a5225E", scope: !5393, file: !5392, line: 2123, type: !5715, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5721, retainedNodes: !5923)
!5923 = !{!5920, !5924}
!5924 = !DILocalVariable(name: "e", scope: !5925, file: !5605, line: 407, type: !5627, align: 1)
!5925 = !DILexicalBlockFile(scope: !5926, file: !5605, discriminator: 0)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !5392, line: 2125, column: 13)
!5927 = !DILocation(line: 407, column: 26, scope: !5921, inlinedAt: !5928)
!5928 = !DILocation(line: 407, column: 26, scope: !5894)
!5929 = !DILocation(line: 407, column: 26, scope: !5906, inlinedAt: !5909)
!5930 = !DILocation(line: 407, column: 26, scope: !5925, inlinedAt: !5928)
!5931 = !DILocation(line: 407, column: 26, scope: !5916, inlinedAt: !5909)
!5932 = !DILocation(line: 407, column: 26, scope: !5903, inlinedAt: !5909)
!5933 = !DILocation(line: 407, column: 26, scope: !5896)
!5934 = !DILocation(line: 407, column: 13, scope: !5892)
!5935 = !DILocation(line: 417, column: 55, scope: !5892)
!5936 = !DILocalVariable(name: "size", scope: !5937, file: !5605, line: 417, type: !9, align: 8)
!5937 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5938)
!5938 = !{!5936, !5939}
!5939 = !DILocalVariable(name: "align", scope: !5937, file: !5605, line: 417, type: !9, align: 8)
!5940 = !DILocation(line: 417, column: 21, scope: !5937, inlinedAt: !5941)
!5941 = !DILocation(line: 417, column: 21, scope: !5892)
!5942 = !DILocation(line: 417, column: 67, scope: !5943, inlinedAt: !5945)
!5943 = !DILexicalBlockFile(scope: !5944, file: !5605, discriminator: 0)
!5944 = distinct !DISubprogram(name: "align_of<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem8align_of17hb22340e5bdbf3973E", scope: !79, file: !423, line: 460, type: !424, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !23)
!5945 = !DILocation(line: 417, column: 67, scope: !5892)
!5946 = !DILocalVariable(name: "align", scope: !5947, file: !5605, line: 417, type: !9, align: 8)
!5947 = !DILexicalBlockFile(scope: !5948, file: !5605, discriminator: 0)
!5948 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5949)
!5949 = !{!5946}
!5950 = !DILocation(line: 417, column: 21, scope: !5947, inlinedAt: !5951)
!5951 = !DILocation(line: 100, column: 40, scope: !5937, inlinedAt: !5941)
!5952 = !DILocation(line: 418, column: 6, scope: !5888)
!5953 = !DILocation(line: 417, column: 9, scope: !5892)
!5954 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7f2aa81a50b85865E", scope: !5956, file: !5955, line: 189, type: !5959, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !5961)
!5955 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!5956 = !DINamespace(name: "{impl#5}", scope: !5957)
!5957 = !DINamespace(name: "impls", scope: !5958)
!5958 = !DINamespace(name: "clone", scope: !40)
!5959 = !DISubroutineType(types: !5960)
!5960 = !{!9, !387}
!5961 = !{!5962}
!5962 = !DILocalVariable(name: "self", arg: 1, scope: !5954, file: !5955, line: 189, type: !387)
!5963 = !DILocation(line: 189, column: 30, scope: !5954)
!5964 = !DILocation(line: 190, column: 25, scope: !5954)
!5965 = !DILocation(line: 191, column: 22, scope: !5954)
!5966 = distinct !DISubprogram(name: "starts_with<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h5f141bcbd9e85e4cE", scope: !5968, file: !5967, line: 2201, type: !5969, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !5971)
!5967 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e57288edb8f562006886dad4b6fc1f0e")
!5968 = !DINamespace(name: "{impl#0}", scope: !255)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{!989, !892, !892}
!5971 = !{!5972, !5973, !5974}
!5972 = !DILocalVariable(name: "self", arg: 1, scope: !5966, file: !5967, line: 2201, type: !892)
!5973 = !DILocalVariable(name: "needle", arg: 2, scope: !5966, file: !5967, line: 2201, type: !892)
!5974 = !DILocalVariable(name: "n", scope: !5975, file: !5967, line: 2205, type: !9, align: 8)
!5975 = distinct !DILexicalBlock(scope: !5966, file: !5967, line: 2205, column: 9)
!5976 = !DILocation(line: 2201, column: 24, scope: !5966)
!5977 = !DILocation(line: 2201, column: 31, scope: !5966)
!5978 = !DILocalVariable(name: "index", scope: !5979, file: !5967, line: 2206, type: !5143, align: 8)
!5979 = !DILexicalBlockFile(scope: !5980, file: !5967, discriminator: 0)
!5980 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h90bc2736e7465882E", scope: !5981, file: !617, line: 17, type: !5982, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5148, retainedNodes: !5984)
!5981 = !DINamespace(name: "{impl#0}", scope: !619)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!892, !892, !5143, !917}
!5984 = !{!5985, !5978}
!5985 = !DILocalVariable(name: "self", scope: !5979, file: !5967, line: 2206, type: !892, align: 8)
!5986 = !DILocation(line: 2206, column: 39, scope: !5979, inlinedAt: !5987)
!5987 = !DILocation(line: 2206, column: 39, scope: !5975)
!5988 = !DILocation(line: 2205, column: 17, scope: !5966)
!5989 = !DILocation(line: 2205, column: 13, scope: !5975)
!5990 = !DILocation(line: 2206, column: 9, scope: !5975)
!5991 = !DILocation(line: 2206, column: 28, scope: !5975)
!5992 = !DILocalVariable(name: "self", scope: !5993, file: !5967, line: 2206, type: !4990, align: 8)
!5993 = !DILexicalBlockFile(scope: !5994, file: !5967, discriminator: 0)
!5994 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h3297ad4713e1484dE", scope: !2937, file: !2903, line: 1475, type: !4988, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !5995)
!5995 = !{!5992, !5996}
!5996 = !DILocalVariable(name: "other", scope: !5993, file: !5967, line: 2206, type: !4990, align: 8)
!5997 = !DILocation(line: 2206, column: 28, scope: !5993, inlinedAt: !5991)
!5998 = !DILocation(line: 2206, column: 44, scope: !5975)
!5999 = !DILocalVariable(name: "self", scope: !6000, file: !5967, line: 2206, type: !5143, align: 8)
!6000 = !DILexicalBlockFile(scope: !6001, file: !5967, discriminator: 0)
!6001 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17had49572237561c20E", scope: !5218, file: !617, line: 350, type: !6002, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6004)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{!892, !5143, !892, !917}
!6004 = !{!5999, !6005}
!6005 = !DILocalVariable(name: "slice", scope: !6000, file: !5967, line: 2206, type: !892, align: 8)
!6006 = !DILocation(line: 2206, column: 39, scope: !6000, inlinedAt: !6007)
!6007 = !DILocation(line: 18, column: 9, scope: !5980, inlinedAt: !5987)
!6008 = !DILocation(line: 2206, column: 38, scope: !5975)
!6009 = !DILocation(line: 2207, column: 6, scope: !5966)
!6010 = distinct !DISubprogram(name: "split_at_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hb733aed02130e991E", scope: !5968, file: !5967, line: 1576, type: !6011, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6021)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!6013, !6016, !9, !917}
!6013 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [core::mem::maybe_uninit::MaybeUninit<u8>], &mut [core::mem::maybe_uninit::MaybeUninit<u8>])", file: !2, size: 256, align: 64, elements: !6014, templateParams: !23, identifier: "39dc7057112d0ead244e4f190ccc9f78")
!6014 = !{!6015, !6020}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6013, file: !2, baseType: !6016, size: 128, align: 64)
!6016 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !6017, templateParams: !23, identifier: "a315061f0b6b7f79db873c2e119be")
!6017 = !{!6018, !6019}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6016, file: !2, baseType: !797, size: 64, align: 64)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6016, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6013, file: !2, baseType: !6016, size: 128, align: 64, offset: 128)
!6021 = !{!6022, !6023}
!6022 = !DILocalVariable(name: "self", arg: 1, scope: !6010, file: !5967, line: 1576, type: !6016)
!6023 = !DILocalVariable(name: "mid", arg: 2, scope: !6010, file: !5967, line: 1576, type: !9)
!6024 = !DILocation(line: 1576, column: 25, scope: !6010)
!6025 = !DILocation(line: 1576, column: 36, scope: !6010)
!6026 = !DILocation(line: 1577, column: 17, scope: !6010)
!6027 = !DILocation(line: 1577, column: 9, scope: !6010)
!6028 = !DILocation(line: 1580, column: 18, scope: !6010)
!6029 = !DILocation(line: 1581, column: 6, scope: !6010)
!6030 = distinct !DISubprogram(name: "copy_from_slice<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h98285867d5c0ea11E", scope: !5968, file: !5967, line: 3214, type: !6031, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6033)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{null, !6016, !3533, !917}
!6033 = !{!6034, !6035}
!6034 = !DILocalVariable(name: "self", arg: 1, scope: !6030, file: !5967, line: 3214, type: !6016)
!6035 = !DILocalVariable(name: "src", arg: 2, scope: !6030, file: !5967, line: 3214, type: !3533)
!6036 = !DILocation(line: 3214, column: 28, scope: !6030)
!6037 = !DILocation(line: 3214, column: 39, scope: !6030)
!6038 = !DILocalVariable(name: "runtime", scope: !6039, file: !5967, line: 3238, type: !6051, align: 8)
!6039 = !DILexicalBlockFile(scope: !6040, file: !5967, discriminator: 0)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !640, line: 2319, column: 13)
!6041 = distinct !DISubprogram(name: "copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hb81692eb82fc445bE", scope: !6042, file: !640, line: 2439, type: !6043, scopeLine: 2439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6046)
!6042 = !DINamespace(name: "intrinsics", scope: !40)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{null, !6045, !831, !9}
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !798, size: 64, align: 64, dwarfAddressSpace: 0)
!6046 = !{!6047, !6049, !6050, !6038}
!6047 = !DILocalVariable(name: "src", scope: !6048, file: !5967, line: 3238, type: !6045, align: 8)
!6048 = !DILexicalBlockFile(scope: !6041, file: !5967, discriminator: 0)
!6049 = !DILocalVariable(name: "dst", scope: !6048, file: !5967, line: 3238, type: !831, align: 8)
!6050 = !DILocalVariable(name: "count", scope: !6048, file: !5967, line: 3238, type: !9, align: 8)
!6051 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !6052, file: !2, size: 192, align: 64, elements: !6053, templateParams: !23, identifier: "a82ee33f49a739ef7a14addfd3e2a797")
!6052 = !DINamespace(name: "copy_nonoverlapping", scope: !6042)
!6053 = !{!6054, !6056, !6058}
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !6051, file: !2, baseType: !6055, size: 64, align: 64)
!6055 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !6045, size: 64, align: 64, dwarfAddressSpace: 0)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !6051, file: !2, baseType: !6057, size: 64, align: 64, offset: 64)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !831, size: 64, align: 64, dwarfAddressSpace: 0)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !6051, file: !2, baseType: !387, size: 64, align: 64, offset: 128)
!6059 = !DILocation(line: 3238, column: 13, scope: !6039, inlinedAt: !6060)
!6060 = !DILocation(line: 3238, column: 13, scope: !6030)
!6061 = !DILocation(line: 3230, column: 12, scope: !6030)
!6062 = !DILocation(line: 3238, column: 38, scope: !6030)
!6063 = !DILocalVariable(name: "self", scope: !6064, file: !5967, line: 3238, type: !3533, align: 8)
!6064 = distinct !DISubprogram(name: "as_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8bf86cef4c6cdbc8E", scope: !5968, file: !5967, line: 476, type: !6065, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6067)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!6045, !3533}
!6067 = !{!6063}
!6068 = !DILocation(line: 3238, column: 38, scope: !6064, inlinedAt: !6062)
!6069 = !DILocation(line: 3238, column: 13, scope: !6048, inlinedAt: !6060)
!6070 = !DILocation(line: 3238, column: 52, scope: !6030)
!6071 = !DILocalVariable(name: "self", scope: !6072, file: !5967, line: 3238, type: !6016, align: 8)
!6072 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha9ca13874f17b735E", scope: !5968, file: !5967, line: 506, type: !6073, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6075)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!831, !6016}
!6075 = !{!6071}
!6076 = !DILocation(line: 3238, column: 52, scope: !6072, inlinedAt: !6070)
!6077 = !DILocation(line: 3238, column: 71, scope: !6030)
!6078 = !DILocation(line: 3240, column: 6, scope: !6030)
!6079 = !DILocation(line: 3231, column: 13, scope: !6030)
!6080 = distinct !DISubprogram(name: "split_at_mut_unchecked<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h8b0f62979fd90619E", scope: !5968, file: !5967, line: 1669, type: !6081, scopeLine: 1669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6083)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!6013, !6016, !9}
!6083 = !{!6084, !6085, !6086, !6088, !6090}
!6084 = !DILocalVariable(name: "self", arg: 1, scope: !6080, file: !5967, line: 1669, type: !6016)
!6085 = !DILocalVariable(name: "mid", arg: 2, scope: !6080, file: !5967, line: 1669, type: !9)
!6086 = !DILocalVariable(name: "len", scope: !6087, file: !5967, line: 1670, type: !9, align: 8)
!6087 = distinct !DILexicalBlock(scope: !6080, file: !5967, line: 1670, column: 9)
!6088 = !DILocalVariable(name: "ptr", scope: !6089, file: !5967, line: 1671, type: !831, align: 8)
!6089 = distinct !DILexicalBlock(scope: !6087, file: !5967, line: 1671, column: 9)
!6090 = !DILocalVariable(name: "runtime", scope: !6091, file: !5967, line: 1678, type: !6093, align: 8)
!6091 = !DILexicalBlockFile(scope: !6092, file: !5967, discriminator: 0)
!6092 = distinct !DILexicalBlock(scope: !6089, file: !640, line: 2319, column: 13)
!6093 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !6094, file: !2, size: 128, align: 64, elements: !6095, templateParams: !23, identifier: "954fd324dedd9ec5a68b04c92df6c54")
!6094 = !DINamespace(name: "split_at_mut_unchecked", scope: !5968)
!6095 = !{!6096, !6097}
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__mid", scope: !6093, file: !2, baseType: !387, size: 64, align: 64)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !6093, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!6098 = !DILocation(line: 1669, column: 42, scope: !6080)
!6099 = !DILocation(line: 1669, column: 53, scope: !6080)
!6100 = !DILocation(line: 1670, column: 19, scope: !6080)
!6101 = !DILocation(line: 1670, column: 13, scope: !6087)
!6102 = !DILocation(line: 1671, column: 19, scope: !6087)
!6103 = !DILocalVariable(name: "self", scope: !6104, file: !5967, line: 1671, type: !6016, align: 8)
!6104 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha9ca13874f17b735E", scope: !5968, file: !5967, line: 506, type: !6073, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6105)
!6105 = !{!6103}
!6106 = !DILocation(line: 1671, column: 19, scope: !6104, inlinedAt: !6102)
!6107 = !DILocation(line: 1671, column: 13, scope: !6089)
!6108 = !DILocation(line: 1679, column: 33, scope: !6089)
!6109 = !DILocalVariable(name: "data", scope: !6110, file: !5967, line: 1679, type: !831, align: 8)
!6110 = !DILexicalBlockFile(scope: !6111, file: !5967, discriminator: 0)
!6111 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h9321c7b196310a06E", scope: !2484, file: !2483, line: 134, type: !6112, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6114)
!6112 = !DISubroutineType(types: !6113)
!6113 = !{!6016, !831, !9}
!6114 = !{!6109, !6115, !6116}
!6115 = !DILocalVariable(name: "len", scope: !6110, file: !5967, line: 1679, type: !9, align: 8)
!6116 = !DILocalVariable(name: "runtime", scope: !6117, file: !5967, line: 1679, type: !6119, align: 8)
!6117 = !DILexicalBlockFile(scope: !6118, file: !5967, discriminator: 0)
!6118 = distinct !DILexicalBlock(scope: !6111, file: !640, line: 2319, column: 13)
!6119 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !6120, file: !2, size: 128, align: 64, elements: !6121, templateParams: !23, identifier: "36c7a676586ee97a8bde0d1a1fc0e45d")
!6120 = !DINamespace(name: "from_raw_parts_mut", scope: !2484)
!6121 = !{!6122, !6123}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !6119, file: !2, baseType: !6057, size: 64, align: 64)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !6119, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!6124 = !DILocation(line: 1679, column: 14, scope: !6110, inlinedAt: !6125)
!6125 = !DILocation(line: 1679, column: 14, scope: !6089)
!6126 = !DILocation(line: 1679, column: 38, scope: !6089)
!6127 = !DILocalVariable(name: "data", scope: !6128, file: !5967, line: 1679, type: !831, align: 8)
!6128 = !DILexicalBlockFile(scope: !6129, file: !5967, discriminator: 0)
!6129 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h39edb8315f977252E", scope: !260, file: !682, line: 726, type: !855, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6130)
!6130 = !{!6127, !6131}
!6131 = !DILocalVariable(name: "len", scope: !6128, file: !5967, line: 1679, type: !9, align: 8)
!6132 = !DILocation(line: 1679, column: 14, scope: !6128, inlinedAt: !6133)
!6133 = !DILocation(line: 141, column: 15, scope: !6111, inlinedAt: !6125)
!6134 = !DILocalVariable(name: "self", scope: !6135, file: !5967, line: 1679, type: !831, align: 8)
!6135 = !DILexicalBlockFile(scope: !6136, file: !5967, discriminator: 0)
!6136 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf416c97be0df382eE", scope: !456, file: !455, line: 45, type: !865, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !868, retainedNodes: !6137)
!6137 = !{!6134}
!6138 = !DILocation(line: 1679, column: 14, scope: !6135, inlinedAt: !6139)
!6139 = !DILocation(line: 727, column: 24, scope: !6129, inlinedAt: !6133)
!6140 = !DILocalVariable(name: "data_address", scope: !6141, file: !5967, line: 1679, type: !777, align: 8)
!6141 = !DILexicalBlockFile(scope: !6142, file: !5967, discriminator: 0)
!6142 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hcc1411d4fda6f2a1E", scope: !704, file: !703, line: 127, type: !874, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6143)
!6143 = !{!6140, !6144}
!6144 = !DILocalVariable(name: "metadata", scope: !6141, file: !5967, line: 1679, type: !9, align: 8)
!6145 = !DILocation(line: 1679, column: 14, scope: !6141, inlinedAt: !6146)
!6146 = !DILocation(line: 727, column: 5, scope: !6129, inlinedAt: !6133)
!6147 = !DILocation(line: 1679, column: 63, scope: !6089)
!6148 = !DILocalVariable(name: "self", scope: !6149, file: !5967, line: 1679, type: !831, align: 8)
!6149 = !DILexicalBlockFile(scope: !6150, file: !5967, discriminator: 0)
!6150 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbad4519e0a124963E", scope: !456, file: !455, line: 977, type: !837, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6151)
!6151 = !{!6148, !6152}
!6152 = !DILocalVariable(name: "count", scope: !6149, file: !5967, line: 1679, type: !9, align: 8)
!6153 = !DILocation(line: 1679, column: 63, scope: !6149, inlinedAt: !6147)
!6154 = !DILocation(line: 1679, column: 71, scope: !6089)
!6155 = !DILocalVariable(name: "self", scope: !6156, file: !5967, line: 1679, type: !831, align: 8)
!6156 = !DILexicalBlockFile(scope: !6157, file: !5967, discriminator: 0)
!6157 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5225df2ed7acc589E", scope: !456, file: !455, line: 462, type: !846, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6158)
!6158 = !{!6155, !6159}
!6159 = !DILocalVariable(name: "count", scope: !6156, file: !5967, line: 1679, type: !674, align: 8)
!6160 = !DILocation(line: 1679, column: 63, scope: !6156, inlinedAt: !6161)
!6161 = !DILocation(line: 982, column: 18, scope: !6150, inlinedAt: !6147)
!6162 = !DILocalVariable(name: "data", scope: !6163, file: !5967, line: 1679, type: !831, align: 8)
!6163 = !DILexicalBlockFile(scope: !6164, file: !5967, discriminator: 0)
!6164 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h9321c7b196310a06E", scope: !2484, file: !2483, line: 134, type: !6112, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6165)
!6165 = !{!6162, !6166, !6167}
!6166 = !DILocalVariable(name: "len", scope: !6163, file: !5967, line: 1679, type: !9, align: 8)
!6167 = !DILocalVariable(name: "runtime", scope: !6168, file: !5967, line: 1679, type: !6119, align: 8)
!6168 = !DILexicalBlockFile(scope: !6169, file: !5967, discriminator: 0)
!6169 = distinct !DILexicalBlock(scope: !6164, file: !640, line: 2319, column: 13)
!6170 = !DILocation(line: 1679, column: 44, scope: !6163, inlinedAt: !6171)
!6171 = !DILocation(line: 1679, column: 44, scope: !6089)
!6172 = !DILocation(line: 1679, column: 77, scope: !6089)
!6173 = !DILocalVariable(name: "data", scope: !6174, file: !5967, line: 1679, type: !831, align: 8)
!6174 = !DILexicalBlockFile(scope: !6175, file: !5967, discriminator: 0)
!6175 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h39edb8315f977252E", scope: !260, file: !682, line: 726, type: !855, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6176)
!6176 = !{!6173, !6177}
!6177 = !DILocalVariable(name: "len", scope: !6174, file: !5967, line: 1679, type: !9, align: 8)
!6178 = !DILocation(line: 1679, column: 44, scope: !6174, inlinedAt: !6179)
!6179 = !DILocation(line: 141, column: 15, scope: !6164, inlinedAt: !6171)
!6180 = !DILocalVariable(name: "self", scope: !6181, file: !5967, line: 1679, type: !831, align: 8)
!6181 = !DILexicalBlockFile(scope: !6182, file: !5967, discriminator: 0)
!6182 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf416c97be0df382eE", scope: !456, file: !455, line: 45, type: !865, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !868, retainedNodes: !6183)
!6183 = !{!6180}
!6184 = !DILocation(line: 1679, column: 44, scope: !6181, inlinedAt: !6185)
!6185 = !DILocation(line: 727, column: 24, scope: !6175, inlinedAt: !6179)
!6186 = !DILocalVariable(name: "data_address", scope: !6187, file: !5967, line: 1679, type: !777, align: 8)
!6187 = !DILexicalBlockFile(scope: !6188, file: !5967, discriminator: 0)
!6188 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hcc1411d4fda6f2a1E", scope: !704, file: !703, line: 127, type: !874, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !6189)
!6189 = !{!6186, !6190}
!6190 = !DILocalVariable(name: "metadata", scope: !6187, file: !5967, line: 1679, type: !9, align: 8)
!6191 = !DILocation(line: 1679, column: 44, scope: !6187, inlinedAt: !6192)
!6192 = !DILocation(line: 727, column: 5, scope: !6175, inlinedAt: !6179)
!6193 = !DILocation(line: 1679, column: 13, scope: !6089)
!6194 = !DILocation(line: 1681, column: 6, scope: !6080)
!6195 = distinct !DISubprogram(name: "contains<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17h5e49016f22dbe103E", scope: !5968, file: !5967, line: 2172, type: !6196, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6198)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!989, !2000, !270}
!6198 = !{!6199, !6200}
!6199 = !DILocalVariable(name: "self", arg: 1, scope: !6195, file: !5967, line: 2172, type: !2000)
!6200 = !DILocalVariable(name: "x", arg: 2, scope: !6195, file: !5967, line: 2172, type: !270)
!6201 = !DILocation(line: 2172, column: 21, scope: !6195)
!6202 = !DILocation(line: 2172, column: 28, scope: !6195)
!6203 = !DILocation(line: 2176, column: 9, scope: !6195)
!6204 = !DILocation(line: 2177, column: 6, scope: !6195)
!6205 = distinct !DISubprogram(name: "eq<u8, u8>", linkageName: "_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe80d7d0bf324262E", scope: !6207, file: !6206, line: 25, type: !5969, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !6209)
!6206 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "d8ffa992b82fe6d1648610bb489e30e6")
!6207 = !DINamespace(name: "{impl#0}", scope: !6208)
!6208 = !DINamespace(name: "cmp", scope: !255)
!6209 = !{!6210, !6211}
!6210 = !DILocalVariable(name: "self", arg: 1, scope: !6205, file: !6206, line: 25, type: !892)
!6211 = !DILocalVariable(name: "other", arg: 2, scope: !6205, file: !6206, line: 25, type: !892)
!6212 = !DILocation(line: 25, column: 11, scope: !6205)
!6213 = !DILocation(line: 25, column: 18, scope: !6205)
!6214 = !DILocation(line: 26, column: 9, scope: !6205)
!6215 = !DILocation(line: 27, column: 6, scope: !6205)
!6216 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7f11c3d66892abdeE", scope: !253, file: !428, line: 88, type: !6217, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!253, !2000}
!6219 = !{!6220, !6221, !6223}
!6220 = !DILocalVariable(name: "slice", arg: 1, scope: !6216, file: !428, line: 88, type: !2000)
!6221 = !DILocalVariable(name: "ptr", scope: !6222, file: !428, line: 89, type: !263, align: 8)
!6222 = distinct !DILexicalBlock(scope: !6216, file: !428, line: 89, column: 9)
!6223 = !DILocalVariable(name: "end", scope: !6224, file: !428, line: 94, type: !263, align: 8)
!6224 = distinct !DILexicalBlock(scope: !6222, file: !428, line: 94, column: 13)
!6225 = !DILocation(line: 88, column: 23, scope: !6216)
!6226 = !DILocation(line: 94, column: 17, scope: !6224)
!6227 = !DILocalVariable(name: "metadata", scope: !6228, file: !428, line: 92, type: !7, align: 1)
!6228 = !DILexicalBlockFile(scope: !6229, file: !428, discriminator: 0)
!6229 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6230)
!6230 = !{!6231, !6227}
!6231 = !DILocalVariable(name: "data_address", scope: !6228, file: !428, line: 92, type: !6, align: 8)
!6232 = !DILocation(line: 92, column: 21, scope: !6228, inlinedAt: !6233)
!6233 = !DILocation(line: 513, column: 5, scope: !6234, inlinedAt: !6235)
!6234 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!6235 = !DILocation(line: 39, column: 43, scope: !6236, inlinedAt: !6242)
!6236 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he575eaf4c9c7b48aE", scope: !437, file: !436, line: 36, type: !6237, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6239)
!6237 = !DISubroutineType(types: !6238)
!6238 = !{!989, !263}
!6239 = !{!6240}
!6240 = !DILocalVariable(name: "self", scope: !6241, file: !428, line: 92, type: !263, align: 8)
!6241 = !DILexicalBlockFile(scope: !6236, file: !428, discriminator: 0)
!6242 = !DILocation(line: 92, column: 21, scope: !6222)
!6243 = !DILocation(line: 89, column: 19, scope: !6216)
!6244 = !DILocalVariable(name: "self", scope: !6245, file: !428, line: 89, type: !2000, align: 8)
!6245 = !DILexicalBlockFile(scope: !6246, file: !428, discriminator: 0)
!6246 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd7d5e9d998936246E", scope: !5968, file: !5967, line: 476, type: !6247, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6249)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{!263, !2000}
!6249 = !{!6244}
!6250 = !DILocation(line: 89, column: 19, scope: !6245, inlinedAt: !6243)
!6251 = !DILocation(line: 89, column: 13, scope: !6222)
!6252 = !DILocation(line: 92, column: 21, scope: !6241, inlinedAt: !6242)
!6253 = !DILocalVariable(name: "self", scope: !6254, file: !428, line: 92, type: !342, align: 8)
!6254 = !DILexicalBlockFile(scope: !6255, file: !428, discriminator: 0)
!6255 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6256)
!6256 = !{!6253, !6257}
!6257 = !DILocalVariable(name: "other", scope: !6254, file: !428, line: 92, type: !342, align: 8)
!6258 = !DILocation(line: 92, column: 21, scope: !6254, inlinedAt: !6259)
!6259 = !DILocation(line: 39, column: 9, scope: !6236, inlinedAt: !6242)
!6260 = !DILocation(line: 92, column: 21, scope: !6261, inlinedAt: !6265)
!6261 = !DILexicalBlockFile(scope: !6262, file: !428, discriminator: 0)
!6262 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !6263)
!6263 = !{!6264}
!6264 = !DILocalVariable(name: "addr", scope: !6261, file: !428, line: 92, type: !9, align: 8)
!6265 = !DILocation(line: 513, column: 20, scope: !6234, inlinedAt: !6235)
!6266 = !DILocation(line: 92, column: 20, scope: !6222)
!6267 = !DILocation(line: 92, column: 13, scope: !6222)
!6268 = !DILocation(line: 94, column: 26, scope: !6222)
!6269 = !DILocation(line: 95, column: 17, scope: !6222)
!6270 = !DILocalVariable(name: "self", scope: !6271, file: !428, line: 95, type: !342, align: 8)
!6271 = !DILexicalBlockFile(scope: !6272, file: !428, discriminator: 0)
!6272 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3ebfe6b27ea90f3aE", scope: !437, file: !436, line: 1033, type: !663, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6273)
!6273 = !{!6270, !6274}
!6274 = !DILocalVariable(name: "count", scope: !6271, file: !428, line: 95, type: !9, align: 8)
!6275 = !DILocation(line: 95, column: 17, scope: !6271, inlinedAt: !6269)
!6276 = !DILocation(line: 95, column: 49, scope: !6222)
!6277 = !DILocalVariable(name: "self", scope: !6278, file: !428, line: 95, type: !342, align: 8)
!6278 = !DILexicalBlockFile(scope: !6279, file: !428, discriminator: 0)
!6279 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6280)
!6280 = !{!6277, !6281}
!6281 = !DILocalVariable(name: "count", scope: !6278, file: !428, line: 95, type: !674, align: 8)
!6282 = !DILocation(line: 95, column: 17, scope: !6278, inlinedAt: !6283)
!6283 = !DILocation(line: 1037, column: 9, scope: !6272, inlinedAt: !6269)
!6284 = !DILocation(line: 97, column: 17, scope: !6222)
!6285 = !DILocalVariable(name: "self", scope: !6286, file: !428, line: 97, type: !263, align: 8)
!6286 = !DILexicalBlockFile(scope: !6287, file: !428, discriminator: 0)
!6287 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h04c43e771946a718E", scope: !437, file: !436, line: 865, type: !6288, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6290)
!6288 = !DISubroutineType(types: !6289)
!6289 = !{!263, !263, !9}
!6290 = !{!6285, !6291}
!6291 = !DILocalVariable(name: "count", scope: !6286, file: !428, line: 97, type: !9, align: 8)
!6292 = !DILocation(line: 97, column: 17, scope: !6286, inlinedAt: !6284)
!6293 = !DILocation(line: 97, column: 25, scope: !6222)
!6294 = !DILocalVariable(name: "self", scope: !6295, file: !428, line: 97, type: !263, align: 8)
!6295 = !DILexicalBlockFile(scope: !6296, file: !428, discriminator: 0)
!6296 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17he4a25f6831c25b05E", scope: !437, file: !436, line: 452, type: !6297, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6299)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!263, !263, !674}
!6299 = !{!6294, !6300}
!6300 = !DILocalVariable(name: "count", scope: !6295, file: !428, line: 97, type: !674, align: 8)
!6301 = !DILocation(line: 97, column: 17, scope: !6295, inlinedAt: !6302)
!6302 = !DILocation(line: 870, column: 18, scope: !6287, inlinedAt: !6284)
!6303 = !DILocation(line: 94, column: 23, scope: !6222)
!6304 = !DILocation(line: 100, column: 48, scope: !6224)
!6305 = !DILocalVariable(name: "ptr", scope: !6306, file: !428, line: 100, type: !3688, align: 8)
!6306 = !DILexicalBlockFile(scope: !6307, file: !428, discriminator: 0)
!6307 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h15f59ac811dc55b2E", scope: !258, file: !445, line: 196, type: !6308, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6310)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{!258, !3688}
!6310 = !{!6305}
!6311 = !DILocation(line: 100, column: 25, scope: !6306, inlinedAt: !6312)
!6312 = !DILocation(line: 100, column: 25, scope: !6224)
!6313 = !DILocation(line: 100, column: 64, scope: !6224)
!6314 = !DILocation(line: 100, column: 13, scope: !6224)
!6315 = !DILocation(line: 102, column: 6, scope: !6216)
!6316 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8af76636c7f25d78E", scope: !336, file: !428, line: 88, type: !6317, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6319)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!336, !892}
!6319 = !{!6320, !6321, !6323}
!6320 = !DILocalVariable(name: "slice", arg: 1, scope: !6316, file: !428, line: 88, type: !892)
!6321 = !DILocalVariable(name: "ptr", scope: !6322, file: !428, line: 89, type: !342, align: 8)
!6322 = distinct !DILexicalBlock(scope: !6316, file: !428, line: 89, column: 9)
!6323 = !DILocalVariable(name: "end", scope: !6324, file: !428, line: 94, type: !342, align: 8)
!6324 = distinct !DILexicalBlock(scope: !6322, file: !428, line: 94, column: 13)
!6325 = !DILocation(line: 88, column: 23, scope: !6316)
!6326 = !DILocation(line: 94, column: 17, scope: !6324)
!6327 = !DILocalVariable(name: "metadata", scope: !6328, file: !428, line: 92, type: !7, align: 1)
!6328 = !DILexicalBlockFile(scope: !6329, file: !428, discriminator: 0)
!6329 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6330)
!6330 = !{!6331, !6327}
!6331 = !DILocalVariable(name: "data_address", scope: !6328, file: !428, line: 92, type: !6, align: 8)
!6332 = !DILocation(line: 92, column: 21, scope: !6328, inlinedAt: !6333)
!6333 = !DILocation(line: 513, column: 5, scope: !6334, inlinedAt: !6335)
!6334 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!6335 = !DILocation(line: 39, column: 43, scope: !6336, inlinedAt: !6340)
!6336 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h58ff5562a6698e7eE", scope: !437, file: !436, line: 36, type: !1008, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6337)
!6337 = !{!6338}
!6338 = !DILocalVariable(name: "self", scope: !6339, file: !428, line: 92, type: !342, align: 8)
!6339 = !DILexicalBlockFile(scope: !6336, file: !428, discriminator: 0)
!6340 = !DILocation(line: 92, column: 21, scope: !6322)
!6341 = !DILocation(line: 89, column: 19, scope: !6316)
!6342 = !DILocalVariable(name: "self", scope: !6343, file: !428, line: 89, type: !892, align: 8)
!6343 = !DILexicalBlockFile(scope: !6344, file: !428, discriminator: 0)
!6344 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd5db123b22cca324E", scope: !5968, file: !5967, line: 476, type: !6345, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6347)
!6345 = !DISubroutineType(types: !6346)
!6346 = !{!342, !892}
!6347 = !{!6342}
!6348 = !DILocation(line: 89, column: 19, scope: !6343, inlinedAt: !6341)
!6349 = !DILocation(line: 89, column: 13, scope: !6322)
!6350 = !DILocation(line: 92, column: 21, scope: !6339, inlinedAt: !6340)
!6351 = !DILocalVariable(name: "self", scope: !6352, file: !428, line: 92, type: !342, align: 8)
!6352 = !DILexicalBlockFile(scope: !6353, file: !428, discriminator: 0)
!6353 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6354)
!6354 = !{!6351, !6355}
!6355 = !DILocalVariable(name: "other", scope: !6352, file: !428, line: 92, type: !342, align: 8)
!6356 = !DILocation(line: 92, column: 21, scope: !6352, inlinedAt: !6357)
!6357 = !DILocation(line: 39, column: 9, scope: !6336, inlinedAt: !6340)
!6358 = !DILocation(line: 92, column: 21, scope: !6359, inlinedAt: !6363)
!6359 = !DILexicalBlockFile(scope: !6360, file: !428, discriminator: 0)
!6360 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !6361)
!6361 = !{!6362}
!6362 = !DILocalVariable(name: "addr", scope: !6359, file: !428, line: 92, type: !9, align: 8)
!6363 = !DILocation(line: 513, column: 20, scope: !6334, inlinedAt: !6335)
!6364 = !DILocation(line: 92, column: 20, scope: !6322)
!6365 = !DILocation(line: 92, column: 13, scope: !6322)
!6366 = !DILocation(line: 94, column: 26, scope: !6322)
!6367 = !DILocation(line: 95, column: 17, scope: !6322)
!6368 = !DILocalVariable(name: "self", scope: !6369, file: !428, line: 95, type: !342, align: 8)
!6369 = !DILexicalBlockFile(scope: !6370, file: !428, discriminator: 0)
!6370 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3ebfe6b27ea90f3aE", scope: !437, file: !436, line: 1033, type: !663, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6371)
!6371 = !{!6368, !6372}
!6372 = !DILocalVariable(name: "count", scope: !6369, file: !428, line: 95, type: !9, align: 8)
!6373 = !DILocation(line: 95, column: 17, scope: !6369, inlinedAt: !6367)
!6374 = !DILocation(line: 95, column: 49, scope: !6322)
!6375 = !DILocalVariable(name: "self", scope: !6376, file: !428, line: 95, type: !342, align: 8)
!6376 = !DILexicalBlockFile(scope: !6377, file: !428, discriminator: 0)
!6377 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6378)
!6378 = !{!6375, !6379}
!6379 = !DILocalVariable(name: "count", scope: !6376, file: !428, line: 95, type: !674, align: 8)
!6380 = !DILocation(line: 95, column: 17, scope: !6376, inlinedAt: !6381)
!6381 = !DILocation(line: 1037, column: 9, scope: !6370, inlinedAt: !6367)
!6382 = !DILocation(line: 97, column: 17, scope: !6322)
!6383 = !DILocalVariable(name: "self", scope: !6384, file: !428, line: 97, type: !342, align: 8)
!6384 = !DILexicalBlockFile(scope: !6385, file: !428, discriminator: 0)
!6385 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd567d4fde3b4fe62E", scope: !437, file: !436, line: 865, type: !663, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6386)
!6386 = !{!6383, !6387}
!6387 = !DILocalVariable(name: "count", scope: !6384, file: !428, line: 97, type: !9, align: 8)
!6388 = !DILocation(line: 97, column: 17, scope: !6384, inlinedAt: !6382)
!6389 = !DILocation(line: 97, column: 25, scope: !6322)
!6390 = !DILocalVariable(name: "self", scope: !6391, file: !428, line: 97, type: !342, align: 8)
!6391 = !DILexicalBlockFile(scope: !6392, file: !428, discriminator: 0)
!6392 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd8f7153041f61580E", scope: !437, file: !436, line: 452, type: !672, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6393)
!6393 = !{!6390, !6394}
!6394 = !DILocalVariable(name: "count", scope: !6391, file: !428, line: 97, type: !674, align: 8)
!6395 = !DILocation(line: 97, column: 17, scope: !6391, inlinedAt: !6396)
!6396 = !DILocation(line: 870, column: 18, scope: !6385, inlinedAt: !6382)
!6397 = !DILocation(line: 94, column: 23, scope: !6322)
!6398 = !DILocation(line: 100, column: 48, scope: !6324)
!6399 = !DILocalVariable(name: "ptr", scope: !6400, file: !428, line: 100, type: !448, align: 8)
!6400 = !DILexicalBlockFile(scope: !6401, file: !428, discriminator: 0)
!6401 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6402)
!6402 = !{!6399}
!6403 = !DILocation(line: 100, column: 25, scope: !6400, inlinedAt: !6404)
!6404 = !DILocation(line: 100, column: 25, scope: !6324)
!6405 = !DILocation(line: 100, column: 64, scope: !6324)
!6406 = !DILocation(line: 100, column: 13, scope: !6324)
!6407 = !DILocation(line: 102, column: 6, scope: !6316)
!6408 = distinct !DISubprogram(name: "new<(&str, &[&str])>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hfd5547a024cb01cfE", scope: !6409, file: !428, line: 88, type: !6428, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6435)
!6409 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<(&str, &[&str])>", scope: !254, file: !2, size: 128, align: 64, elements: !6410, templateParams: !6420, identifier: "28239d67b808469732e20b296ff3ee7d")
!6410 = !{!6411, !6422, !6423}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6409, file: !2, baseType: !6412, size: 64, align: 64)
!6412 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(&str, &[&str])>", scope: !259, file: !2, size: 64, align: 64, elements: !6413, templateParams: !6420, identifier: "bf5cb20816d395e438803f3dc09eb4e8")
!6413 = !{!6414}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6412, file: !2, baseType: !6415, size: 64, align: 64)
!6415 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const (&str, &[&str])", baseType: !6416, size: 64, align: 64, dwarfAddressSpace: 0)
!6416 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&str, &[&str])", file: !2, size: 256, align: 64, elements: !6417, templateParams: !23, identifier: "1282664b030367d0d023bdd3bc339f7c")
!6417 = !{!6418, !6419}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6416, file: !2, baseType: !48, size: 128, align: 64)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6416, file: !2, baseType: !2000, size: 128, align: 64, offset: 128)
!6420 = !{!6421}
!6421 = !DITemplateTypeParameter(name: "T", type: !6416)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6409, file: !2, baseType: !6415, size: 64, align: 64, offset: 64)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6409, file: !2, baseType: !6424, align: 8)
!6424 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&(&str, &[&str])>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !6425, identifier: "c8984fc5d03686fb915448da8ed44be0")
!6425 = !{!6426}
!6426 = !DITemplateTypeParameter(name: "T", type: !6427)
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&(&str, &[&str])", baseType: !6416, size: 64, align: 64, dwarfAddressSpace: 0)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!6409, !6430}
!6430 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[(&str, &[&str])]", file: !2, size: 128, align: 64, elements: !6431, templateParams: !23, identifier: "f0d88a41448e3ae3fdcc78d7d07da25a")
!6431 = !{!6432, !6434}
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6430, file: !2, baseType: !6433, size: 64, align: 64)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6416, size: 64, align: 64, dwarfAddressSpace: 0)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6430, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6435 = !{!6436, !6437, !6439}
!6436 = !DILocalVariable(name: "slice", arg: 1, scope: !6408, file: !428, line: 88, type: !6430)
!6437 = !DILocalVariable(name: "ptr", scope: !6438, file: !428, line: 89, type: !6415, align: 8)
!6438 = distinct !DILexicalBlock(scope: !6408, file: !428, line: 89, column: 9)
!6439 = !DILocalVariable(name: "end", scope: !6440, file: !428, line: 94, type: !6415, align: 8)
!6440 = distinct !DILexicalBlock(scope: !6438, file: !428, line: 94, column: 13)
!6441 = !DILocation(line: 88, column: 23, scope: !6408)
!6442 = !DILocation(line: 94, column: 17, scope: !6440)
!6443 = !DILocalVariable(name: "metadata", scope: !6444, file: !428, line: 92, type: !7, align: 1)
!6444 = !DILexicalBlockFile(scope: !6445, file: !428, discriminator: 0)
!6445 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6446)
!6446 = !{!6447, !6443}
!6447 = !DILocalVariable(name: "data_address", scope: !6444, file: !428, line: 92, type: !6, align: 8)
!6448 = !DILocation(line: 92, column: 21, scope: !6444, inlinedAt: !6449)
!6449 = !DILocation(line: 513, column: 5, scope: !6450, inlinedAt: !6451)
!6450 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!6451 = !DILocation(line: 39, column: 43, scope: !6452, inlinedAt: !6458)
!6452 = distinct !DISubprogram(name: "is_null<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf34dda908509d207E", scope: !437, file: !436, line: 36, type: !6453, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6455)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{!989, !6415}
!6455 = !{!6456}
!6456 = !DILocalVariable(name: "self", scope: !6457, file: !428, line: 92, type: !6415, align: 8)
!6457 = !DILexicalBlockFile(scope: !6452, file: !428, discriminator: 0)
!6458 = !DILocation(line: 92, column: 21, scope: !6438)
!6459 = !DILocation(line: 89, column: 19, scope: !6408)
!6460 = !DILocalVariable(name: "self", scope: !6461, file: !428, line: 89, type: !6430, align: 8)
!6461 = !DILexicalBlockFile(scope: !6462, file: !428, discriminator: 0)
!6462 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h11fc68ad8574a190E", scope: !5968, file: !5967, line: 476, type: !6463, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6465)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{!6415, !6430}
!6465 = !{!6460}
!6466 = !DILocation(line: 89, column: 19, scope: !6461, inlinedAt: !6459)
!6467 = !DILocation(line: 89, column: 13, scope: !6438)
!6468 = !DILocation(line: 92, column: 21, scope: !6457, inlinedAt: !6458)
!6469 = !DILocalVariable(name: "self", scope: !6470, file: !428, line: 92, type: !342, align: 8)
!6470 = !DILexicalBlockFile(scope: !6471, file: !428, discriminator: 0)
!6471 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6472)
!6472 = !{!6469, !6473}
!6473 = !DILocalVariable(name: "other", scope: !6470, file: !428, line: 92, type: !342, align: 8)
!6474 = !DILocation(line: 92, column: 21, scope: !6470, inlinedAt: !6475)
!6475 = !DILocation(line: 39, column: 9, scope: !6452, inlinedAt: !6458)
!6476 = !DILocation(line: 92, column: 21, scope: !6477, inlinedAt: !6481)
!6477 = !DILexicalBlockFile(scope: !6478, file: !428, discriminator: 0)
!6478 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !6479)
!6479 = !{!6480}
!6480 = !DILocalVariable(name: "addr", scope: !6477, file: !428, line: 92, type: !9, align: 8)
!6481 = !DILocation(line: 513, column: 20, scope: !6450, inlinedAt: !6451)
!6482 = !DILocation(line: 92, column: 20, scope: !6438)
!6483 = !DILocation(line: 92, column: 13, scope: !6438)
!6484 = !DILocation(line: 94, column: 26, scope: !6438)
!6485 = !DILocation(line: 95, column: 17, scope: !6438)
!6486 = !DILocalVariable(name: "self", scope: !6487, file: !428, line: 95, type: !342, align: 8)
!6487 = !DILexicalBlockFile(scope: !6488, file: !428, discriminator: 0)
!6488 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3ebfe6b27ea90f3aE", scope: !437, file: !436, line: 1033, type: !663, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6489)
!6489 = !{!6486, !6490}
!6490 = !DILocalVariable(name: "count", scope: !6487, file: !428, line: 95, type: !9, align: 8)
!6491 = !DILocation(line: 95, column: 17, scope: !6487, inlinedAt: !6485)
!6492 = !DILocation(line: 95, column: 49, scope: !6438)
!6493 = !DILocalVariable(name: "self", scope: !6494, file: !428, line: 95, type: !342, align: 8)
!6494 = !DILexicalBlockFile(scope: !6495, file: !428, discriminator: 0)
!6495 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6496)
!6496 = !{!6493, !6497}
!6497 = !DILocalVariable(name: "count", scope: !6494, file: !428, line: 95, type: !674, align: 8)
!6498 = !DILocation(line: 95, column: 17, scope: !6494, inlinedAt: !6499)
!6499 = !DILocation(line: 1037, column: 9, scope: !6488, inlinedAt: !6485)
!6500 = !DILocation(line: 97, column: 17, scope: !6438)
!6501 = !DILocalVariable(name: "self", scope: !6502, file: !428, line: 97, type: !6415, align: 8)
!6502 = !DILexicalBlockFile(scope: !6503, file: !428, discriminator: 0)
!6503 = distinct !DISubprogram(name: "add<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf002b49c684f7397E", scope: !437, file: !436, line: 865, type: !6504, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6506)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!6415, !6415, !9}
!6506 = !{!6501, !6507}
!6507 = !DILocalVariable(name: "count", scope: !6502, file: !428, line: 97, type: !9, align: 8)
!6508 = !DILocation(line: 97, column: 17, scope: !6502, inlinedAt: !6500)
!6509 = !DILocation(line: 97, column: 25, scope: !6438)
!6510 = !DILocalVariable(name: "self", scope: !6511, file: !428, line: 97, type: !6415, align: 8)
!6511 = !DILexicalBlockFile(scope: !6512, file: !428, discriminator: 0)
!6512 = distinct !DISubprogram(name: "offset<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hc5345b97db466921E", scope: !437, file: !436, line: 452, type: !6513, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6515)
!6513 = !DISubroutineType(types: !6514)
!6514 = !{!6415, !6415, !674}
!6515 = !{!6510, !6516}
!6516 = !DILocalVariable(name: "count", scope: !6511, file: !428, line: 97, type: !674, align: 8)
!6517 = !DILocation(line: 97, column: 17, scope: !6511, inlinedAt: !6518)
!6518 = !DILocation(line: 870, column: 18, scope: !6503, inlinedAt: !6500)
!6519 = !DILocation(line: 94, column: 23, scope: !6438)
!6520 = !DILocation(line: 100, column: 48, scope: !6440)
!6521 = !DILocalVariable(name: "ptr", scope: !6522, file: !428, line: 100, type: !6526, align: 8)
!6522 = !DILexicalBlockFile(scope: !6523, file: !428, discriminator: 0)
!6523 = distinct !DISubprogram(name: "new_unchecked<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf10dca035f72b4cbE", scope: !6412, file: !445, line: 196, type: !6524, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6527)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{!6412, !6526}
!6526 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut (&str, &[&str])", baseType: !6416, size: 64, align: 64, dwarfAddressSpace: 0)
!6527 = !{!6521}
!6528 = !DILocation(line: 100, column: 25, scope: !6522, inlinedAt: !6529)
!6529 = !DILocation(line: 100, column: 25, scope: !6440)
!6530 = !DILocation(line: 100, column: 64, scope: !6440)
!6531 = !DILocation(line: 100, column: 13, scope: !6440)
!6532 = !DILocation(line: 102, column: 6, scope: !6408)
!6533 = distinct !DISubprogram(name: "as_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hb36d6d82e07b5afcE", scope: !336, file: !428, line: 130, type: !6534, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!892, !389}
!6536 = !{!6537}
!6537 = !DILocalVariable(name: "self", arg: 1, scope: !6533, file: !428, line: 130, type: !389)
!6538 = !DILocation(line: 130, column: 21, scope: !6533)
!6539 = !DILocalVariable(name: "len", scope: !6540, file: !428, line: 131, type: !9, align: 8)
!6540 = !DILexicalBlockFile(scope: !6541, file: !428, discriminator: 0)
!6541 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h7379c702bbd7bb59E", scope: !2484, file: !2483, line: 90, type: !2485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6542)
!6542 = !{!6543, !6539, !6544}
!6543 = !DILocalVariable(name: "data", scope: !6540, file: !428, line: 131, type: !342, align: 8)
!6544 = !DILocalVariable(name: "runtime", scope: !6545, file: !428, line: 131, type: !2492, align: 8)
!6545 = !DILexicalBlockFile(scope: !6546, file: !428, discriminator: 0)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !640, line: 2319, column: 13)
!6547 = !DILocation(line: 131, column: 9, scope: !6540, inlinedAt: !6548)
!6548 = !DILocation(line: 78, column: 26, scope: !6549, inlinedAt: !6562)
!6549 = distinct !DISubprogram(name: "make_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h629755913f666edcE", scope: !336, file: !403, line: 74, type: !6534, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6550)
!6550 = !{!6551, !6553, !6556, !6559}
!6551 = !DILocalVariable(name: "self", scope: !6552, file: !428, line: 131, type: !389, align: 8)
!6552 = !DILexicalBlockFile(scope: !6549, file: !428, discriminator: 0)
!6553 = !DILocalVariable(name: "start", scope: !6554, file: !428, line: 131, type: !339, align: 8)
!6554 = !DILexicalBlockFile(scope: !6555, file: !428, discriminator: 0)
!6555 = distinct !DILexicalBlock(scope: !6549, file: !403, line: 18, column: 9)
!6556 = !DILocalVariable(name: "size", scope: !6557, file: !428, line: 131, type: !9, align: 8)
!6557 = !DILexicalBlockFile(scope: !6558, file: !428, discriminator: 0)
!6558 = distinct !DILexicalBlock(scope: !6555, file: !403, line: 19, column: 9)
!6559 = !DILocalVariable(name: "diff", scope: !6560, file: !428, line: 131, type: !9, align: 8)
!6560 = !DILexicalBlockFile(scope: !6561, file: !428, discriminator: 0)
!6561 = distinct !DILexicalBlock(scope: !6558, file: !403, line: 29, column: 13)
!6562 = !DILocation(line: 131, column: 9, scope: !6533)
!6563 = !DILocation(line: 131, column: 9, scope: !6552, inlinedAt: !6562)
!6564 = !DILocalVariable(name: "self", scope: !6565, file: !428, line: 131, type: !339, align: 8)
!6565 = !DILexicalBlockFile(scope: !6566, file: !428, discriminator: 0)
!6566 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6567)
!6567 = !{!6564}
!6568 = !DILocation(line: 131, column: 9, scope: !6565, inlinedAt: !6569)
!6569 = !DILocation(line: 78, column: 41, scope: !6549, inlinedAt: !6562)
!6570 = !DILocation(line: 131, column: 9, scope: !6554, inlinedAt: !6562)
!6571 = !DILocation(line: 131, column: 9, scope: !6572, inlinedAt: !6574)
!6572 = !DILexicalBlockFile(scope: !6573, file: !428, discriminator: 0)
!6573 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!6574 = !DILocation(line: 41, column: 5, scope: !6575, inlinedAt: !6576)
!6575 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!6576 = !DILocation(line: 19, column: 20, scope: !6555, inlinedAt: !6562)
!6577 = !DILocation(line: 131, column: 9, scope: !6557, inlinedAt: !6562)
!6578 = !DILocalVariable(name: "self", scope: !6579, file: !428, line: 131, type: !342, align: 8)
!6579 = !DILexicalBlockFile(scope: !6580, file: !428, discriminator: 0)
!6580 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6581)
!6581 = !{!6578}
!6582 = !DILocation(line: 131, column: 9, scope: !6579, inlinedAt: !6583)
!6583 = !DILocation(line: 23, column: 13, scope: !6558, inlinedAt: !6562)
!6584 = !DILocalVariable(name: "self", scope: !6585, file: !428, line: 131, type: !9, align: 8)
!6585 = !DILexicalBlockFile(scope: !6586, file: !428, discriminator: 0)
!6586 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h0292a2731c9021a7E", scope: !2890, file: !2889, line: 1225, type: !2878, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !6587)
!6587 = !{!6584, !6588}
!6588 = !DILocalVariable(name: "rhs", scope: !6585, file: !428, line: 131, type: !9, align: 8)
!6589 = !DILocation(line: 131, column: 9, scope: !6585, inlinedAt: !6583)
!6590 = !DILocalVariable(name: "self", scope: !6591, file: !428, line: 131, type: !342, align: 8)
!6591 = !DILexicalBlockFile(scope: !6592, file: !428, discriminator: 0)
!6592 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6593)
!6593 = !{!6590}
!6594 = !DILocation(line: 131, column: 9, scope: !6591, inlinedAt: !6595)
!6595 = !DILocation(line: 29, column: 47, scope: !6558, inlinedAt: !6562)
!6596 = !DILocalVariable(name: "self", scope: !6597, file: !428, line: 131, type: !339, align: 8)
!6597 = !DILexicalBlockFile(scope: !6598, file: !428, discriminator: 0)
!6598 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6599)
!6599 = !{!6596}
!6600 = !DILocation(line: 131, column: 9, scope: !6597, inlinedAt: !6601)
!6601 = !DILocation(line: 29, column: 65, scope: !6558, inlinedAt: !6562)
!6602 = !DILocalVariable(name: "self", scope: !6603, file: !428, line: 131, type: !448, align: 8)
!6603 = !DILexicalBlockFile(scope: !6604, file: !428, discriminator: 0)
!6604 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6605)
!6605 = !{!6602}
!6606 = !DILocation(line: 131, column: 9, scope: !6603, inlinedAt: !6601)
!6607 = !DILocation(line: 131, column: 9, scope: !6560, inlinedAt: !6562)
!6608 = !DILocalVariable(name: "data", scope: !6609, file: !428, line: 131, type: !342, align: 8)
!6609 = !DILexicalBlockFile(scope: !6610, file: !428, discriminator: 0)
!6610 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6611)
!6611 = !{!6608, !6612}
!6612 = !DILocalVariable(name: "len", scope: !6609, file: !428, line: 131, type: !9, align: 8)
!6613 = !DILocation(line: 131, column: 9, scope: !6609, inlinedAt: !6614)
!6614 = !DILocation(line: 97, column: 11, scope: !6541, inlinedAt: !6548)
!6615 = !DILocalVariable(name: "self", scope: !6616, file: !428, line: 131, type: !342, align: 8)
!6616 = !DILexicalBlockFile(scope: !6617, file: !428, discriminator: 0)
!6617 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !6618)
!6618 = !{!6615}
!6619 = !DILocation(line: 131, column: 9, scope: !6616, inlinedAt: !6620)
!6620 = !DILocation(line: 695, column: 20, scope: !6610, inlinedAt: !6614)
!6621 = !DILocalVariable(name: "data_address", scope: !6622, file: !428, line: 131, type: !6, align: 8)
!6622 = !DILexicalBlockFile(scope: !6623, file: !428, discriminator: 0)
!6623 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6624)
!6624 = !{!6621, !6625}
!6625 = !DILocalVariable(name: "metadata", scope: !6622, file: !428, line: 131, type: !9, align: 8)
!6626 = !DILocation(line: 131, column: 9, scope: !6622, inlinedAt: !6627)
!6627 = !DILocation(line: 695, column: 5, scope: !6610, inlinedAt: !6614)
!6628 = !DILocation(line: 132, column: 6, scope: !6533)
!6629 = !DILocalVariable(name: "self", scope: !6630, file: !428, line: 131, type: !339, align: 8)
!6630 = !DILexicalBlockFile(scope: !6631, file: !428, discriminator: 0)
!6631 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6632)
!6632 = !{!6629}
!6633 = !DILocation(line: 131, column: 9, scope: !6630, inlinedAt: !6634)
!6634 = !DILocation(line: 23, column: 43, scope: !6558, inlinedAt: !6562)
!6635 = !DILocalVariable(name: "self", scope: !6636, file: !428, line: 131, type: !448, align: 8)
!6636 = !DILexicalBlockFile(scope: !6637, file: !428, discriminator: 0)
!6637 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6638)
!6638 = !{!6635}
!6639 = !DILocation(line: 131, column: 9, scope: !6636, inlinedAt: !6634)
!6640 = distinct !DISubprogram(name: "into_iter<(&str, &[&str])>", linkageName: "_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h995688bfa5e3dbb3E", scope: !6641, file: !428, line: 23, type: !6428, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6642)
!6641 = !DINamespace(name: "{impl#0}", scope: !254)
!6642 = !{!6643}
!6643 = !DILocalVariable(name: "self", arg: 1, scope: !6640, file: !428, line: 23, type: !6430)
!6644 = !DILocation(line: 23, column: 18, scope: !6640)
!6645 = !DILocation(line: 24, column: 9, scope: !6640)
!6646 = !DILocalVariable(name: "self", scope: !6647, file: !428, line: 24, type: !6430, align: 8)
!6647 = !DILexicalBlockFile(scope: !6648, file: !428, discriminator: 0)
!6648 = distinct !DISubprogram(name: "iter<(&str, &[&str])>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hd8d69893f360f013E", scope: !5968, file: !5967, line: 734, type: !6428, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !6649)
!6649 = !{!6646}
!6650 = !DILocation(line: 24, column: 9, scope: !6647, inlinedAt: !6645)
!6651 = !DILocation(line: 25, column: 6, scope: !6640)
!6652 = distinct !DISubprogram(name: "into_iter<&str>", linkageName: "_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hae11c91d5ec3ff5bE", scope: !6641, file: !428, line: 23, type: !6217, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6653)
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "self", arg: 1, scope: !6652, file: !428, line: 23, type: !2000)
!6655 = !DILocation(line: 23, column: 18, scope: !6652)
!6656 = !DILocation(line: 24, column: 9, scope: !6652)
!6657 = !DILocalVariable(name: "self", scope: !6658, file: !428, line: 24, type: !2000, align: 8)
!6658 = !DILexicalBlockFile(scope: !6659, file: !428, discriminator: 0)
!6659 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1e784e2ed6606635E", scope: !5968, file: !5967, line: 734, type: !6217, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !6660)
!6660 = !{!6657}
!6661 = !DILocation(line: 24, column: 9, scope: !6658, inlinedAt: !6656)
!6662 = !DILocation(line: 25, column: 6, scope: !6652)
!6663 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17h4e438ee7cd669ff4E", scope: !6665, file: !6664, line: 38, type: !6666, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !6668)
!6664 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "065f1e34afe7661a69ed38e528fd9ddb")
!6665 = !DINamespace(name: "memchr", scope: !255)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!236, !52, !892}
!6668 = !{!6669, !6670}
!6669 = !DILocalVariable(name: "x", arg: 1, scope: !6663, file: !6664, line: 38, type: !52)
!6670 = !DILocalVariable(name: "text", arg: 2, scope: !6663, file: !6664, line: 38, type: !892)
!6671 = !DILocation(line: 38, column: 15, scope: !6663)
!6672 = !DILocation(line: 38, column: 22, scope: !6663)
!6673 = !DILocation(line: 40, column: 8, scope: !6663)
!6674 = !DILocation(line: 44, column: 25, scope: !6663)
!6675 = !DILocation(line: 44, column: 5, scope: !6663)
!6676 = !DILocation(line: 41, column: 16, scope: !6663)
!6677 = !DILocalVariable(name: "self", scope: !6678, file: !6664, line: 41, type: !892, align: 8)
!6678 = !DILexicalBlockFile(scope: !6679, file: !6664, discriminator: 0)
!6679 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ae0aaa6f77c2546E", scope: !5968, file: !5967, line: 734, type: !6317, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !6680)
!6680 = !{!6677}
!6681 = !DILocation(line: 41, column: 16, scope: !6678, inlinedAt: !6676)
!6682 = !DILocation(line: 41, column: 37, scope: !6663)
!6683 = !DILocation(line: 45, column: 2, scope: !6663)
!6684 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hf5fd9a82cd2844d8E", scope: !6685, file: !6664, line: 41, type: !6686, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !6692)
!6685 = !DINamespace(name: "memchr", scope: !6665)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!989, !6688, !350}
!6688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::memchr::memchr::{closure_env#0}", baseType: !6689, size: 64, align: 64, dwarfAddressSpace: 0)
!6689 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6685, file: !2, size: 64, align: 64, elements: !6690, templateParams: !23, identifier: "647a488957f7f2328b43b8a17f96aa6b")
!6690 = !{!6691}
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__x", scope: !6689, file: !2, baseType: !350, size: 64, align: 64)
!6692 = !{!6693, !6694}
!6693 = !DILocalVariable(name: "elt", arg: 2, scope: !6684, file: !6664, line: 41, type: !350)
!6694 = !DILocalVariable(name: "x", scope: !6684, file: !6664, line: 38, type: !52, align: 1)
!6695 = !DILocation(line: 38, column: 15, scope: !6684)
!6696 = !DILocation(line: 41, column: 38, scope: !6684)
!6697 = !DILocation(line: 41, column: 43, scope: !6684)
!6698 = !DILocation(line: 41, column: 51, scope: !6684)
!6699 = !DILocation(line: 41, column: 52, scope: !6684)
!6700 = distinct !DISubprogram(name: "map<&str, bool, build_script_build::rustc_minor_nightly::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h3544d673cafebf97E", scope: !38, file: !1507, line: 923, type: !6701, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6723, retainedNodes: !6718)
!6701 = !DISubroutineType(types: !6702)
!6702 = !{!6703, !38, !6716}
!6703 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bool>", scope: !39, file: !2, size: 8, align: 8, elements: !6704, templateParams: !23, identifier: "6e3d8e342e7e15fce8a51371dda314de")
!6704 = !{!6705}
!6705 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6703, file: !2, size: 8, align: 8, elements: !6706, templateParams: !23, identifier: "4532b35476f1cbe2b74f3464d96a1e25", discriminator: !6715)
!6706 = !{!6707, !6711}
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6705, file: !2, baseType: !6708, size: 8, align: 8, extraData: i64 2)
!6708 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6703, file: !2, size: 8, align: 8, elements: !23, templateParams: !6709, identifier: "a6c18e0261f4cbd21e4563b5bca47fb0")
!6709 = !{!6710}
!6710 = !DITemplateTypeParameter(name: "T", type: !989)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6705, file: !2, baseType: !6712, size: 8, align: 8)
!6712 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6703, file: !2, size: 8, align: 8, elements: !6713, templateParams: !6709, identifier: "3483d7ca4e9c9e2788e7c287b89483ac")
!6713 = !{!6714}
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6712, file: !2, baseType: !989, size: 8, align: 8)
!6715 = !DIDerivedType(tag: DW_TAG_member, scope: !6703, file: !2, baseType: !52, size: 8, align: 8, flags: DIFlagArtificial)
!6716 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6717, file: !2, align: 8, elements: !23, identifier: "cbaa27741c29ef0a65f4232d3d93dcc7")
!6717 = !DINamespace(name: "rustc_minor_nightly", scope: !2859)
!6718 = !{!6719, !6720, !6721}
!6719 = !DILocalVariable(name: "self", arg: 1, scope: !6700, file: !1507, line: 923, type: !38)
!6720 = !DILocalVariable(name: "f", arg: 2, scope: !6700, file: !1507, line: 923, type: !6716)
!6721 = !DILocalVariable(name: "x", scope: !6722, file: !1507, line: 929, type: !48, align: 8)
!6722 = distinct !DILexicalBlock(scope: !6700, file: !1507, line: 929, column: 13)
!6723 = !{!47, !6724, !6725}
!6724 = !DITemplateTypeParameter(name: "U", type: !989)
!6725 = !DITemplateTypeParameter(name: "F", type: !6716)
!6726 = !DILocation(line: 923, column: 28, scope: !6700)
!6727 = !DILocation(line: 923, column: 34, scope: !6700)
!6728 = !DILocation(line: 928, column: 15, scope: !6700)
!6729 = !DILocation(line: 928, column: 9, scope: !6700)
!6730 = !DILocation(line: 930, column: 21, scope: !6700)
!6731 = !DILocation(line: 929, column: 18, scope: !6700)
!6732 = !DILocation(line: 929, column: 18, scope: !6722)
!6733 = !DILocation(line: 929, column: 29, scope: !6722)
!6734 = !DILocation(line: 929, column: 24, scope: !6722)
!6735 = !DILocation(line: 929, column: 33, scope: !6700)
!6736 = !DILocation(line: 932, column: 5, scope: !6700)
!6737 = !DILocation(line: 932, column: 6, scope: !6700)
!6738 = !{i8 0, i8 3}
!6739 = distinct !DISubprogram(name: "map<char, (usize, char), core::str::iter::{impl#6}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h3984b168e8c3f767E", scope: !360, file: !1507, line: 923, type: !6740, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6747, retainedNodes: !6742)
!6740 = !DISubroutineType(types: !6741)
!6741 = !{!309, !360, !384}
!6742 = !{!6743, !6744, !6745}
!6743 = !DILocalVariable(name: "self", arg: 1, scope: !6739, file: !1507, line: 923, type: !360)
!6744 = !DILocalVariable(name: "f", arg: 2, scope: !6739, file: !1507, line: 923, type: !384)
!6745 = !DILocalVariable(name: "x", scope: !6746, file: !1507, line: 929, type: !321, align: 4)
!6746 = distinct !DILexicalBlock(scope: !6739, file: !1507, line: 929, column: 13)
!6747 = !{!367, !6748, !6749}
!6748 = !DITemplateTypeParameter(name: "U", type: !317)
!6749 = !DITemplateTypeParameter(name: "F", type: !384)
!6750 = !DILocation(line: 923, column: 28, scope: !6739)
!6751 = !DILocation(line: 923, column: 34, scope: !6739)
!6752 = !DILocation(line: 928, column: 15, scope: !6739)
!6753 = !DILocation(line: 928, column: 9, scope: !6739)
!6754 = !DILocation(line: 930, column: 21, scope: !6739)
!6755 = !DILocation(line: 929, column: 18, scope: !6739)
!6756 = !DILocation(line: 929, column: 18, scope: !6746)
!6757 = !DILocation(line: 929, column: 29, scope: !6746)
!6758 = !DILocation(line: 929, column: 24, scope: !6746)
!6759 = !DILocation(line: 929, column: 33, scope: !6739)
!6760 = !DILocation(line: 932, column: 5, scope: !6739)
!6761 = !DILocation(line: 932, column: 6, scope: !6739)
!6762 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h3f436848a7f497cbE", scope: !2606, file: !1507, line: 923, type: !6763, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6772, retainedNodes: !6767)
!6763 = !DISubroutineType(types: !6764)
!6764 = !{!360, !2606, !6765}
!6765 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6766, file: !2, align: 8, elements: !23, identifier: "adfed1b709f778fc3a690e015bc06fbc")
!6766 = !DINamespace(name: "next_back", scope: !357)
!6767 = !{!6768, !6769, !6770}
!6768 = !DILocalVariable(name: "self", arg: 1, scope: !6762, file: !1507, line: 923, type: !2606)
!6769 = !DILocalVariable(name: "f", arg: 2, scope: !6762, file: !1507, line: 923, type: !6765)
!6770 = !DILocalVariable(name: "x", scope: !6771, file: !1507, line: 929, type: !327, align: 4)
!6771 = distinct !DILexicalBlock(scope: !6762, file: !1507, line: 929, column: 13)
!6772 = !{!2613, !6773, !6774}
!6773 = !DITemplateTypeParameter(name: "U", type: !321)
!6774 = !DITemplateTypeParameter(name: "F", type: !6765)
!6775 = !DILocation(line: 923, column: 28, scope: !6762)
!6776 = !DILocation(line: 923, column: 34, scope: !6762)
!6777 = !DILocation(line: 928, column: 15, scope: !6762)
!6778 = !DILocation(line: 928, column: 9, scope: !6762)
!6779 = !DILocation(line: 930, column: 21, scope: !6762)
!6780 = !DILocation(line: 929, column: 18, scope: !6762)
!6781 = !DILocation(line: 929, column: 18, scope: !6771)
!6782 = !DILocation(line: 929, column: 29, scope: !6771)
!6783 = !DILocation(line: 929, column: 24, scope: !6771)
!6784 = !DILocation(line: 929, column: 33, scope: !6762)
!6785 = !DILocation(line: 932, column: 5, scope: !6762)
!6786 = !DILocation(line: 932, column: 6, scope: !6762)
!6787 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#0}::next::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hc8a456bd96a89377E", scope: !2606, file: !1507, line: 923, type: !6788, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6798, retainedNodes: !6793)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{!360, !2606, !6790}
!6790 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6791, file: !2, align: 8, elements: !23, identifier: "32a8b182cf0c66b2f508e3fedf33a93d")
!6791 = !DINamespace(name: "next", scope: !6792)
!6792 = !DINamespace(name: "{impl#0}", scope: !305)
!6793 = !{!6794, !6795, !6796}
!6794 = !DILocalVariable(name: "self", arg: 1, scope: !6787, file: !1507, line: 923, type: !2606)
!6795 = !DILocalVariable(name: "f", arg: 2, scope: !6787, file: !1507, line: 923, type: !6790)
!6796 = !DILocalVariable(name: "x", scope: !6797, file: !1507, line: 929, type: !327, align: 4)
!6797 = distinct !DILexicalBlock(scope: !6787, file: !1507, line: 929, column: 13)
!6798 = !{!2613, !6773, !6799}
!6799 = !DITemplateTypeParameter(name: "F", type: !6790)
!6800 = !DILocation(line: 923, column: 28, scope: !6787)
!6801 = !DILocation(line: 923, column: 34, scope: !6787)
!6802 = !DILocation(line: 928, column: 15, scope: !6787)
!6803 = !DILocation(line: 928, column: 9, scope: !6787)
!6804 = !DILocation(line: 930, column: 21, scope: !6787)
!6805 = !DILocation(line: 929, column: 18, scope: !6787)
!6806 = !DILocation(line: 929, column: 18, scope: !6797)
!6807 = !DILocation(line: 929, column: 29, scope: !6797)
!6808 = !DILocation(line: 929, column: 24, scope: !6797)
!6809 = !DILocation(line: 929, column: 33, scope: !6787)
!6810 = !DILocation(line: 932, column: 5, scope: !6787)
!6811 = !DILocation(line: 932, column: 6, scope: !6787)
!6812 = distinct !DISubprogram(name: "map<&&str, &[core::mem::maybe_uninit::MaybeUninit<u8>], &mut alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hc95c7c1b3544fcbfE", scope: !6813, file: !1507, line: 923, type: !6824, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6844, retainedNodes: !6839)
!6813 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&&str>", scope: !39, file: !2, size: 64, align: 64, elements: !6814, templateParams: !23, identifier: "89a72db720cba168a7a0107f3e374b71")
!6814 = !{!6815}
!6815 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6813, file: !2, size: 64, align: 64, elements: !6816, templateParams: !23, identifier: "ac5ee49a3408bf98d0be888a84bf68bb", discriminator: !6823)
!6816 = !{!6817, !6819}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6815, file: !2, baseType: !6818, size: 64, align: 64, extraData: i64 0)
!6818 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6813, file: !2, size: 64, align: 64, elements: !23, templateParams: !268, identifier: "2cef2d7c6259debf9228e47db043db20")
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6815, file: !2, baseType: !6820, size: 64, align: 64)
!6820 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6813, file: !2, size: 64, align: 64, elements: !6821, templateParams: !268, identifier: "a3b0eb22450267fdca4ebda28fa3b415")
!6821 = !{!6822}
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6820, file: !2, baseType: !270, size: 64, align: 64)
!6823 = !DIDerivedType(tag: DW_TAG_member, scope: !6813, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!6824 = !DISubroutineType(types: !6825)
!6825 = !{!6826, !6813, !3537}
!6826 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !39, file: !2, size: 128, align: 64, elements: !6827, templateParams: !23, identifier: "99dc6bc8388943f21e7ece5fd7f88a37")
!6827 = !{!6828}
!6828 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6826, file: !2, size: 128, align: 64, elements: !6829, templateParams: !23, identifier: "64a58c92c48afc6927a8acfa21adaedf", discriminator: !6838)
!6829 = !{!6830, !6834}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6828, file: !2, baseType: !6831, size: 128, align: 64, extraData: i64 0)
!6831 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6826, file: !2, size: 128, align: 64, elements: !23, templateParams: !6832, identifier: "ac50a0d10888d10de8d9fbdbb3d4603")
!6832 = !{!6833}
!6833 = !DITemplateTypeParameter(name: "T", type: !3533)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6828, file: !2, baseType: !6835, size: 128, align: 64)
!6835 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6826, file: !2, size: 128, align: 64, elements: !6836, templateParams: !6832, identifier: "76bb39ecc9973b3931a3c5f9cfff9716")
!6836 = !{!6837}
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6835, file: !2, baseType: !3533, size: 128, align: 64)
!6838 = !DIDerivedType(tag: DW_TAG_member, scope: !6826, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!6839 = !{!6840, !6841, !6842}
!6840 = !DILocalVariable(name: "self", arg: 1, scope: !6812, file: !1507, line: 923, type: !6813)
!6841 = !DILocalVariable(name: "f", arg: 2, scope: !6812, file: !1507, line: 923, type: !3537)
!6842 = !DILocalVariable(name: "x", scope: !6843, file: !1507, line: 929, type: !270, align: 8)
!6843 = distinct !DILexicalBlock(scope: !6812, file: !1507, line: 929, column: 13)
!6844 = !{!269, !6845, !6846}
!6845 = !DITemplateTypeParameter(name: "U", type: !3533)
!6846 = !DITemplateTypeParameter(name: "F", type: !3537)
!6847 = !DILocation(line: 923, column: 28, scope: !6812)
!6848 = !DILocation(line: 923, column: 34, scope: !6812)
!6849 = !DILocation(line: 928, column: 15, scope: !6812)
!6850 = !DILocation(line: 928, column: 9, scope: !6812)
!6851 = !DILocation(line: 930, column: 21, scope: !6812)
!6852 = !DILocation(line: 929, column: 18, scope: !6812)
!6853 = !DILocation(line: 929, column: 18, scope: !6843)
!6854 = !DILocation(line: 929, column: 29, scope: !6843)
!6855 = !DILocation(line: 929, column: 24, scope: !6843)
!6856 = !DILocation(line: 929, column: 33, scope: !6812)
!6857 = !DILocation(line: 932, column: 5, scope: !6812)
!6858 = !DILocation(line: 932, column: 6, scope: !6812)
!6859 = distinct !DISubprogram(name: "map<&core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::{impl#16}::ascend::{closure_env#0}<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17he55e82bfcd2f51a5E", scope: !6860, file: !1507, line: 923, type: !6874, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6925, retainedNodes: !6920)
!6860 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !39, file: !2, size: 64, align: 64, elements: !6861, templateParams: !23, identifier: "1848b09379f9a40aa7157d1c9b459a7")
!6861 = !{!6862}
!6862 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6860, file: !2, size: 64, align: 64, elements: !6863, templateParams: !23, identifier: "ede1187cd933f2caff0dd3ff6e8f92ba", discriminator: !6873)
!6863 = !{!6864, !6869}
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6862, file: !2, baseType: !6865, size: 64, align: 64, extraData: i64 0)
!6865 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6860, file: !2, size: 64, align: 64, elements: !23, templateParams: !6866, identifier: "ffe7d4fc2c61ebc23bc242d7798c3e06")
!6866 = !{!6867}
!6867 = !DITemplateTypeParameter(name: "T", type: !6868)
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1186, size: 64, align: 64, dwarfAddressSpace: 0)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6862, file: !2, baseType: !6870, size: 64, align: 64)
!6870 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6860, file: !2, size: 64, align: 64, elements: !6871, templateParams: !6866, identifier: "fa9b408e161352b5e0ec03b41bc1bf89")
!6871 = !{!6872}
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6870, file: !2, baseType: !6868, size: 64, align: 64)
!6873 = !DIDerivedType(tag: DW_TAG_member, scope: !6860, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!6874 = !DISubroutineType(types: !6875)
!6875 = !{!6876, !6860, !6913}
!6876 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", scope: !39, file: !2, size: 192, align: 64, elements: !6877, templateParams: !23, identifier: "80114e833b187d5e2cb2229fdc2c0946")
!6877 = !{!6878}
!6878 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6876, file: !2, size: 192, align: 64, elements: !6879, templateParams: !23, identifier: "401546a9cbfeab1ca652a81d989e30c2", discriminator: !6912)
!6879 = !{!6880, !6908}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6878, file: !2, baseType: !6881, size: 192, align: 64, extraData: i64 0)
!6881 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6876, file: !2, size: 192, align: 64, elements: !23, templateParams: !6882, identifier: "adc025f89971dc74a0a29d26ed47446b")
!6882 = !{!6883}
!6883 = !DITemplateTypeParameter(name: "T", type: !6884)
!6884 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", scope: !1167, file: !2, size: 192, align: 64, elements: !6885, templateParams: !6906, identifier: "5f241033f283a7da4e39362f7fda1ef7")
!6885 = !{!6886, !6904, !6905}
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6884, file: !2, baseType: !6887, size: 128, align: 64)
!6887 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", scope: !1167, file: !2, size: 128, align: 64, elements: !6888, templateParams: !6902, identifier: "f594f19adb50d5fb509f463f8748b716")
!6888 = !{!6889, !6890, !6891}
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !6887, file: !2, baseType: !9, size: 64, align: 64)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6887, file: !2, baseType: !1171, size: 64, align: 64, offset: 64)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6887, file: !2, baseType: !6892, align: 8)
!6892 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !6893, identifier: "29f88f60768444e8902ff003eb400271")
!6893 = !{!6894}
!6894 = !DITemplateTypeParameter(name: "T", type: !6895)
!6895 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)", file: !2, align: 8, elements: !6896, templateParams: !23, identifier: "ae4fde2a42ef680b2d8369caff17efac")
!6896 = !{!6897, !6898}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6895, file: !2, baseType: !1303, align: 8)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6895, file: !2, baseType: !6899, align: 8)
!6899 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !1304, file: !2, align: 8, elements: !6900, templateParams: !23, identifier: "bc456587823faa055d08cf65a8ce9be7")
!6900 = !{!6901}
!6901 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6899, file: !2, align: 8, elements: !23, identifier: "441bb56d3c4acb56b2f55bf7b776bc73")
!6902 = !{!1312, !1207, !1239, !6903}
!6903 = !DITemplateTypeParameter(name: "Type", type: !6899)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !6884, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6884, file: !2, baseType: !1341, align: 8)
!6906 = !{!6907, !1349}
!6907 = !DITemplateTypeParameter(name: "Node", type: !6887)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6878, file: !2, baseType: !6909, size: 192, align: 64)
!6909 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6876, file: !2, size: 192, align: 64, elements: !6910, templateParams: !6882, identifier: "7112c36b942fb72e7bf87ec42b7105f0")
!6910 = !{!6911}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6909, file: !2, baseType: !6884, size: 192, align: 64)
!6912 = !DIDerivedType(tag: DW_TAG_member, scope: !6876, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!6913 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", scope: !6914, file: !2, size: 128, align: 64, elements: !6916, templateParams: !23, identifier: "94adb07c93a415dc6f82101673652e05")
!6914 = !DINamespace(name: "ascend", scope: !6915)
!6915 = !DINamespace(name: "{impl#16}", scope: !1167)
!6916 = !{!6917, !6918}
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__height", scope: !6913, file: !2, baseType: !387, size: 64, align: 64)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__leaf_ptr", scope: !6913, file: !2, baseType: !6919, size: 64, align: 64, offset: 64)
!6919 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1174, size: 64, align: 64, dwarfAddressSpace: 0)
!6920 = !{!6921, !6922, !6923}
!6921 = !DILocalVariable(name: "self", arg: 1, scope: !6859, file: !1507, line: 923, type: !6860)
!6922 = !DILocalVariable(name: "f", arg: 2, scope: !6859, file: !1507, line: 923, type: !6913)
!6923 = !DILocalVariable(name: "x", scope: !6924, file: !1507, line: 929, type: !6868, align: 8)
!6924 = distinct !DILexicalBlock(scope: !6859, file: !1507, line: 929, column: 13)
!6925 = !{!6867, !6926, !6927}
!6926 = !DITemplateTypeParameter(name: "U", type: !6884)
!6927 = !DITemplateTypeParameter(name: "F", type: !6913)
!6928 = !DILocation(line: 923, column: 28, scope: !6859)
!6929 = !DILocation(line: 923, column: 34, scope: !6859)
!6930 = !DILocation(line: 928, column: 15, scope: !6859)
!6931 = !DILocation(line: 928, column: 9, scope: !6859)
!6932 = !DILocation(line: 930, column: 21, scope: !6859)
!6933 = !DILocation(line: 929, column: 18, scope: !6859)
!6934 = !DILocation(line: 929, column: 18, scope: !6924)
!6935 = !DILocation(line: 929, column: 29, scope: !6924)
!6936 = !DILocation(line: 929, column: 24, scope: !6924)
!6937 = !DILocation(line: 929, column: 33, scope: !6859)
!6938 = !DILocation(line: 932, column: 5, scope: !6859)
!6939 = !DILocation(line: 932, column: 6, scope: !6859)
!6940 = distinct !DISubprogram(name: "ok_or<&str, usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hef3e01df1eef8a18E", scope: !38, file: !1507, line: 1051, type: !6941, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6951, retainedNodes: !6957)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!6943, !38, !9}
!6943 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, usize>", scope: !2066, file: !2, size: 192, align: 64, elements: !6944, templateParams: !23, identifier: "46697cc7bab40ae873e62a8e6209d19d")
!6944 = !{!6945}
!6945 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6943, file: !2, size: 192, align: 64, elements: !6946, templateParams: !23, identifier: "36c042b517055a25a71185ce4c82569c", discriminator: !6956)
!6946 = !{!6947, !6952}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6945, file: !2, baseType: !6948, size: 192, align: 64, extraData: i64 0)
!6948 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6943, file: !2, size: 192, align: 64, elements: !6949, templateParams: !6951, identifier: "eca47df6f4efb8576b336539624c76ef")
!6949 = !{!6950}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6948, file: !2, baseType: !48, size: 128, align: 64, offset: 64)
!6951 = !{!47, !5342}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6945, file: !2, baseType: !6953, size: 192, align: 64, extraData: i64 1)
!6953 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6943, file: !2, size: 192, align: 64, elements: !6954, templateParams: !6951, identifier: "627e93940f8e8ce6a89aef3877930135")
!6954 = !{!6955}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6953, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6956 = !DIDerivedType(tag: DW_TAG_member, scope: !6943, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!6957 = !{!6958, !6959, !6960}
!6958 = !DILocalVariable(name: "self", arg: 1, scope: !6940, file: !1507, line: 1051, type: !38)
!6959 = !DILocalVariable(name: "err", arg: 2, scope: !6940, file: !1507, line: 1051, type: !9)
!6960 = !DILocalVariable(name: "v", scope: !6961, file: !1507, line: 1056, type: !48, align: 8)
!6961 = distinct !DILexicalBlock(scope: !6940, file: !1507, line: 1056, column: 13)
!6962 = !DILocation(line: 1051, column: 27, scope: !6940)
!6963 = !DILocation(line: 1051, column: 33, scope: !6940)
!6964 = !DILocation(line: 1055, column: 15, scope: !6940)
!6965 = !DILocation(line: 1055, column: 9, scope: !6940)
!6966 = !DILocation(line: 1057, column: 25, scope: !6940)
!6967 = !DILocation(line: 1057, column: 21, scope: !6940)
!6968 = !DILocation(line: 1057, column: 28, scope: !6940)
!6969 = !DILocation(line: 1056, column: 18, scope: !6940)
!6970 = !DILocation(line: 1056, column: 18, scope: !6961)
!6971 = !DILocation(line: 1056, column: 24, scope: !6961)
!6972 = !DILocation(line: 1056, column: 28, scope: !6940)
!6973 = !DILocation(line: 1059, column: 5, scope: !6940)
!6974 = !DILocation(line: 1059, column: 6, scope: !6940)
!6975 = distinct !DISubprogram(name: "expect<std::process::Output>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17hff1c4514e1d2e0daE", scope: !3964, file: !1507, line: 735, type: !6976, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3719, retainedNodes: !6978)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{!3705, !3964, !48, !917}
!6978 = !{!6979, !6980, !6981}
!6979 = !DILocalVariable(name: "self", arg: 1, scope: !6975, file: !1507, line: 735, type: !3964)
!6980 = !DILocalVariable(name: "msg", arg: 2, scope: !6975, file: !1507, line: 735, type: !48)
!6981 = !DILocalVariable(name: "val", scope: !6982, file: !1507, line: 737, type: !3705, align: 8)
!6982 = distinct !DILexicalBlock(scope: !6975, file: !1507, line: 737, column: 13)
!6983 = !DILocation(line: 737, column: 18, scope: !6982)
!6984 = !DILocation(line: 735, column: 25, scope: !6975)
!6985 = !DILocation(line: 735, column: 31, scope: !6975)
!6986 = !DILocation(line: 736, column: 15, scope: !6975)
!6987 = !DILocation(line: 736, column: 9, scope: !6975)
!6988 = !DILocation(line: 738, column: 21, scope: !6975)
!6989 = !DILocation(line: 737, column: 18, scope: !6975)
!6990 = !DILocation(line: 740, column: 6, scope: !6975)
!6991 = distinct !DISubprogram(name: "unwrap<std::process::Output>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h1f1e1df6230d4258E", scope: !3964, file: !1507, line: 772, type: !6992, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3719, retainedNodes: !6994)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{!3705, !3964, !917}
!6994 = !{!6995, !6996}
!6995 = !DILocalVariable(name: "self", arg: 1, scope: !6991, file: !1507, line: 772, type: !3964)
!6996 = !DILocalVariable(name: "val", scope: !6997, file: !1507, line: 774, type: !3705, align: 8)
!6997 = distinct !DILexicalBlock(scope: !6991, file: !1507, line: 774, column: 13)
!6998 = !DILocation(line: 774, column: 18, scope: !6997)
!6999 = !DILocation(line: 772, column: 25, scope: !6991)
!7000 = !DILocation(line: 773, column: 15, scope: !6991)
!7001 = !DILocation(line: 773, column: 9, scope: !6991)
!7002 = !DILocation(line: 775, column: 21, scope: !6991)
!7003 = !DILocation(line: 774, column: 18, scope: !6991)
!7004 = !DILocation(line: 777, column: 6, scope: !6991)
!7005 = distinct !DISubprogram(name: "unwrap<alloc::string::String>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h3972cbb744e0ace4E", scope: !4002, file: !1507, line: 772, type: !7006, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2988, retainedNodes: !7008)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{!2358, !4002, !917}
!7008 = !{!7009, !7010}
!7009 = !DILocalVariable(name: "self", arg: 1, scope: !7005, file: !1507, line: 772, type: !4002)
!7010 = !DILocalVariable(name: "val", scope: !7011, file: !1507, line: 774, type: !2358, align: 8)
!7011 = distinct !DILexicalBlock(scope: !7005, file: !1507, line: 774, column: 13)
!7012 = !DILocation(line: 774, column: 18, scope: !7011)
!7013 = !DILocation(line: 772, column: 25, scope: !7005)
!7014 = !DILocation(line: 773, column: 15, scope: !7005)
!7015 = !DILocation(line: 773, column: 9, scope: !7005)
!7016 = !DILocation(line: 775, column: 21, scope: !7005)
!7017 = !DILocation(line: 774, column: 18, scope: !7005)
!7018 = !DILocation(line: 777, column: 6, scope: !7005)
!7019 = distinct !DISubprogram(name: "is_none<std::process::Output>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17h59695cd46541fff0E", scope: !3964, file: !1507, line: 596, type: !7020, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3719, retainedNodes: !7023)
!7020 = !DISubroutineType(types: !7021)
!7021 = !{!989, !7022}
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<std::process::Output>", baseType: !3964, size: 64, align: 64, dwarfAddressSpace: 0)
!7023 = !{!7024}
!7024 = !DILocalVariable(name: "self", arg: 1, scope: !7019, file: !1507, line: 596, type: !7022)
!7025 = !DILocation(line: 596, column: 26, scope: !7019)
!7026 = !DILocation(line: 597, column: 10, scope: !7019)
!7027 = !DILocalVariable(name: "self", scope: !7028, file: !1507, line: 597, type: !7022, align: 8)
!7028 = distinct !DISubprogram(name: "is_some<std::process::Output>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17ha5db54db10e07a1dE", scope: !3964, file: !1507, line: 553, type: !7020, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3719, retainedNodes: !7029)
!7029 = !{!7027}
!7030 = !DILocation(line: 597, column: 10, scope: !7028, inlinedAt: !7026)
!7031 = !DILocation(line: 597, column: 9, scope: !7019)
!7032 = !DILocation(line: 598, column: 6, scope: !7019)
!7033 = distinct !DISubprogram(name: "is_none<alloc::string::String>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17ha99b49c88e79874bE", scope: !4002, file: !1507, line: 596, type: !7034, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2988, retainedNodes: !7037)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!989, !7036}
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<alloc::string::String>", baseType: !4002, size: 64, align: 64, dwarfAddressSpace: 0)
!7037 = !{!7038}
!7038 = !DILocalVariable(name: "self", arg: 1, scope: !7033, file: !1507, line: 596, type: !7036)
!7039 = !DILocation(line: 596, column: 26, scope: !7033)
!7040 = !DILocation(line: 597, column: 10, scope: !7033)
!7041 = !DILocalVariable(name: "self", scope: !7042, file: !1507, line: 597, type: !7036, align: 8)
!7042 = distinct !DISubprogram(name: "is_some<alloc::string::String>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17hce80c773a1527d04E", scope: !4002, file: !1507, line: 553, type: !7034, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2988, retainedNodes: !7043)
!7043 = !{!7041}
!7044 = !DILocation(line: 597, column: 10, scope: !7042, inlinedAt: !7040)
!7045 = !DILocation(line: 597, column: 9, scope: !7033)
!7046 = !DILocation(line: 598, column: 6, scope: !7033)
!7047 = distinct !DISubprogram(name: "and_then<&str, u64, build_script_build::emcc_version_code::{closure_env#3}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h236ce353924c272eE", scope: !38, file: !1507, line: 1256, type: !7048, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7068, retainedNodes: !7063)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!7050, !38, !7062}
!7050 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !39, file: !2, size: 128, align: 64, elements: !7051, templateParams: !23, identifier: "2c52a9243cbdef8b1c1819661433e408")
!7051 = !{!7052}
!7052 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7050, file: !2, size: 128, align: 64, elements: !7053, templateParams: !23, identifier: "2d5cde9796b7de9fb980f4b48b72343b", discriminator: !7061)
!7053 = !{!7054, !7057}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7052, file: !2, baseType: !7055, size: 128, align: 64, extraData: i64 0)
!7055 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7050, file: !2, size: 128, align: 64, elements: !23, templateParams: !7056, identifier: "3e663689e112c3ad6325cbe68db0dbd")
!7056 = !{!4645}
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7052, file: !2, baseType: !7058, size: 128, align: 64, extraData: i64 1)
!7058 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7050, file: !2, size: 128, align: 64, elements: !7059, templateParams: !7056, identifier: "81ac9bb74d97cddbdc310c24ca83dd07")
!7059 = !{!7060}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7058, file: !2, baseType: !59, size: 64, align: 64, offset: 64)
!7061 = !DIDerivedType(tag: DW_TAG_member, scope: !7050, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7062 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#3}", scope: !2858, file: !2, align: 8, elements: !23, identifier: "44e832aa16e429991ad12f2a1a7cb59")
!7063 = !{!7064, !7065, !7066}
!7064 = !DILocalVariable(name: "self", arg: 1, scope: !7047, file: !1507, line: 1256, type: !38)
!7065 = !DILocalVariable(name: "f", arg: 2, scope: !7047, file: !1507, line: 1256, type: !7062)
!7066 = !DILocalVariable(name: "x", scope: !7067, file: !1507, line: 1262, type: !48, align: 8)
!7067 = distinct !DILexicalBlock(scope: !7047, file: !1507, line: 1262, column: 13)
!7068 = !{!47, !7069, !7070}
!7069 = !DITemplateTypeParameter(name: "U", type: !59)
!7070 = !DITemplateTypeParameter(name: "F", type: !7062)
!7071 = !DILocation(line: 1256, column: 33, scope: !7047)
!7072 = !DILocation(line: 1256, column: 39, scope: !7047)
!7073 = !DILocation(line: 1261, column: 15, scope: !7047)
!7074 = !DILocation(line: 1261, column: 9, scope: !7047)
!7075 = !DILocation(line: 1263, column: 21, scope: !7047)
!7076 = !DILocation(line: 1262, column: 18, scope: !7047)
!7077 = !DILocation(line: 1262, column: 18, scope: !7067)
!7078 = !DILocation(line: 1262, column: 24, scope: !7067)
!7079 = !DILocation(line: 1262, column: 27, scope: !7047)
!7080 = !DILocation(line: 1265, column: 5, scope: !7047)
!7081 = !DILocation(line: 1265, column: 6, scope: !7047)
!7082 = distinct !DISubprogram(name: "and_then<usize, usize, alloc::str::join_generic_copy::{closure_env#0}<str, u8, &str>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h3923e9e4c6ee51b6E", scope: !236, file: !1507, line: 1256, type: !7083, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7093, retainedNodes: !7088)
!7083 = !DISubroutineType(types: !7084)
!7084 = !{!236, !236, !7085}
!7085 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<str, u8, &str>", scope: !274, file: !2, size: 128, align: 64, elements: !7086, templateParams: !23, identifier: "791e3e860a1c92aa92c4b943b822daef")
!7086 = !{!7087}
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !7085, file: !2, baseType: !2000, size: 128, align: 64)
!7088 = !{!7089, !7090, !7091}
!7089 = !DILocalVariable(name: "self", arg: 1, scope: !7082, file: !1507, line: 1256, type: !236)
!7090 = !DILocalVariable(name: "f", arg: 2, scope: !7082, file: !1507, line: 1256, type: !7085)
!7091 = !DILocalVariable(name: "x", scope: !7092, file: !1507, line: 1262, type: !9, align: 8)
!7092 = distinct !DILexicalBlock(scope: !7082, file: !1507, line: 1262, column: 13)
!7093 = !{!243, !7094, !7095}
!7094 = !DITemplateTypeParameter(name: "U", type: !9)
!7095 = !DITemplateTypeParameter(name: "F", type: !7085)
!7096 = !DILocation(line: 1256, column: 33, scope: !7082)
!7097 = !DILocation(line: 1256, column: 39, scope: !7082)
!7098 = !DILocation(line: 1261, column: 15, scope: !7082)
!7099 = !DILocation(line: 1261, column: 9, scope: !7082)
!7100 = !DILocation(line: 1263, column: 21, scope: !7082)
!7101 = !DILocation(line: 1262, column: 18, scope: !7082)
!7102 = !DILocation(line: 1262, column: 18, scope: !7092)
!7103 = !DILocation(line: 1262, column: 24, scope: !7092)
!7104 = !DILocation(line: 1262, column: 27, scope: !7082)
!7105 = !DILocation(line: 1265, column: 5, scope: !7082)
!7106 = !DILocation(line: 1265, column: 6, scope: !7082)
!7107 = distinct !DISubprogram(name: "and_then<&str, u64, build_script_build::emcc_version_code::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hc6e3570f9e1f313cE", scope: !38, file: !1507, line: 1256, type: !7108, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7116, retainedNodes: !7111)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!7050, !38, !7110}
!7110 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !2858, file: !2, align: 8, elements: !23, identifier: "12375151ba136ec635a20e402e81874")
!7111 = !{!7112, !7113, !7114}
!7112 = !DILocalVariable(name: "self", arg: 1, scope: !7107, file: !1507, line: 1256, type: !38)
!7113 = !DILocalVariable(name: "f", arg: 2, scope: !7107, file: !1507, line: 1256, type: !7110)
!7114 = !DILocalVariable(name: "x", scope: !7115, file: !1507, line: 1262, type: !48, align: 8)
!7115 = distinct !DILexicalBlock(scope: !7107, file: !1507, line: 1262, column: 13)
!7116 = !{!47, !7069, !7117}
!7117 = !DITemplateTypeParameter(name: "F", type: !7110)
!7118 = !DILocation(line: 1256, column: 33, scope: !7107)
!7119 = !DILocation(line: 1256, column: 39, scope: !7107)
!7120 = !DILocation(line: 1261, column: 15, scope: !7107)
!7121 = !DILocation(line: 1261, column: 9, scope: !7107)
!7122 = !DILocation(line: 1263, column: 21, scope: !7107)
!7123 = !DILocation(line: 1262, column: 18, scope: !7107)
!7124 = !DILocation(line: 1262, column: 18, scope: !7115)
!7125 = !DILocation(line: 1262, column: 24, scope: !7115)
!7126 = !DILocation(line: 1262, column: 27, scope: !7107)
!7127 = !DILocation(line: 1265, column: 5, scope: !7107)
!7128 = !DILocation(line: 1265, column: 6, scope: !7107)
!7129 = distinct !DISubprogram(name: "and_then<&str, u64, build_script_build::emcc_version_code::{closure_env#2}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hcd35fc88269df9afE", scope: !38, file: !1507, line: 1256, type: !7130, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7138, retainedNodes: !7133)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!7050, !38, !7132}
!7132 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}", scope: !2858, file: !2, align: 8, elements: !23, identifier: "cfeff2d7946ac43966aff96482c2c9b6")
!7133 = !{!7134, !7135, !7136}
!7134 = !DILocalVariable(name: "self", arg: 1, scope: !7129, file: !1507, line: 1256, type: !38)
!7135 = !DILocalVariable(name: "f", arg: 2, scope: !7129, file: !1507, line: 1256, type: !7132)
!7136 = !DILocalVariable(name: "x", scope: !7137, file: !1507, line: 1262, type: !48, align: 8)
!7137 = distinct !DILexicalBlock(scope: !7129, file: !1507, line: 1262, column: 13)
!7138 = !{!47, !7069, !7139}
!7139 = !DITemplateTypeParameter(name: "F", type: !7132)
!7140 = !DILocation(line: 1256, column: 33, scope: !7129)
!7141 = !DILocation(line: 1256, column: 39, scope: !7129)
!7142 = !DILocation(line: 1261, column: 15, scope: !7129)
!7143 = !DILocation(line: 1261, column: 9, scope: !7129)
!7144 = !DILocation(line: 1263, column: 21, scope: !7129)
!7145 = !DILocation(line: 1262, column: 18, scope: !7129)
!7146 = !DILocation(line: 1262, column: 18, scope: !7137)
!7147 = !DILocation(line: 1262, column: 24, scope: !7137)
!7148 = !DILocation(line: 1262, column: 27, scope: !7129)
!7149 = !DILocation(line: 1265, column: 5, scope: !7129)
!7150 = !DILocation(line: 1265, column: 6, scope: !7129)
!7151 = distinct !DISubprogram(name: "unwrap_or<bool>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h8bd53bce537392cdE", scope: !6703, file: !1507, line: 796, type: !7152, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6709, retainedNodes: !7154)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!989, !6703, !989}
!7154 = !{!7155, !7156, !7157}
!7155 = !DILocalVariable(name: "self", arg: 1, scope: !7151, file: !1507, line: 796, type: !6703)
!7156 = !DILocalVariable(name: "default", arg: 2, scope: !7151, file: !1507, line: 796, type: !989)
!7157 = !DILocalVariable(name: "x", scope: !7158, file: !1507, line: 801, type: !989, align: 1)
!7158 = distinct !DILexicalBlock(scope: !7151, file: !1507, line: 801, column: 13)
!7159 = !DILocation(line: 796, column: 28, scope: !7151)
!7160 = !DILocation(line: 796, column: 34, scope: !7151)
!7161 = !DILocation(line: 800, column: 15, scope: !7151)
!7162 = !DILocation(line: 800, column: 9, scope: !7151)
!7163 = !DILocation(line: 802, column: 21, scope: !7151)
!7164 = !DILocation(line: 801, column: 18, scope: !7151)
!7165 = !DILocation(line: 801, column: 18, scope: !7158)
!7166 = !DILocation(line: 801, column: 24, scope: !7158)
!7167 = !DILocation(line: 801, column: 24, scope: !7151)
!7168 = !DILocation(line: 804, column: 5, scope: !7151)
!7169 = !DILocation(line: 804, column: 6, scope: !7151)
!7170 = distinct !DISubprogram(name: "unwrap_or<u64>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h92649cf3c581683dE", scope: !7050, file: !1507, line: 796, type: !7171, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7056, retainedNodes: !7173)
!7171 = !DISubroutineType(types: !7172)
!7172 = !{!59, !7050, !59}
!7173 = !{!7174, !7175, !7176}
!7174 = !DILocalVariable(name: "self", arg: 1, scope: !7170, file: !1507, line: 796, type: !7050)
!7175 = !DILocalVariable(name: "default", arg: 2, scope: !7170, file: !1507, line: 796, type: !59)
!7176 = !DILocalVariable(name: "x", scope: !7177, file: !1507, line: 801, type: !59, align: 8)
!7177 = distinct !DILexicalBlock(scope: !7170, file: !1507, line: 801, column: 13)
!7178 = !DILocation(line: 796, column: 28, scope: !7170)
!7179 = !DILocation(line: 796, column: 34, scope: !7170)
!7180 = !DILocation(line: 800, column: 15, scope: !7170)
!7181 = !DILocation(line: 800, column: 9, scope: !7170)
!7182 = !DILocation(line: 802, column: 21, scope: !7170)
!7183 = !DILocation(line: 801, column: 18, scope: !7170)
!7184 = !DILocation(line: 801, column: 18, scope: !7177)
!7185 = !DILocation(line: 801, column: 24, scope: !7177)
!7186 = !DILocation(line: 801, column: 24, scope: !7170)
!7187 = !DILocation(line: 804, column: 5, scope: !7170)
!7188 = !DILocation(line: 804, column: 6, scope: !7170)
!7189 = distinct !DISubprogram(name: "ok<u64, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h49d709f4ce5513a3E", scope: !4636, file: !5392, line: 637, type: !7190, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4644, retainedNodes: !7192)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!7050, !4636}
!7192 = !{!7193, !7194, !7196}
!7193 = !DILocalVariable(name: "self", arg: 1, scope: !7189, file: !5392, line: 637, type: !4636)
!7194 = !DILocalVariable(name: "x", scope: !7195, file: !5392, line: 642, type: !59, align: 8)
!7195 = distinct !DILexicalBlock(scope: !7189, file: !5392, line: 642, column: 13)
!7196 = !DILocalVariable(name: "x", scope: !7197, file: !5392, line: 645, type: !4647, align: 1)
!7197 = distinct !DILexicalBlock(scope: !7189, file: !5392, line: 645, column: 13)
!7198 = !DILocation(line: 637, column: 21, scope: !7189)
!7199 = !DILocation(line: 641, column: 15, scope: !7189)
!7200 = !DILocation(line: 641, column: 9, scope: !7189)
!7201 = !DILocation(line: 642, column: 16, scope: !7189)
!7202 = !DILocation(line: 642, column: 16, scope: !7195)
!7203 = !DILocation(line: 642, column: 22, scope: !7195)
!7204 = !DILocation(line: 642, column: 28, scope: !7189)
!7205 = !DILocation(line: 645, column: 17, scope: !7189)
!7206 = !{i8 0, i8 5}
!7207 = !DILocation(line: 645, column: 17, scope: !7197)
!7208 = !DILocation(line: 645, column: 23, scope: !7197)
!7209 = !DILocation(line: 645, column: 26, scope: !7189)
!7210 = !DILocation(line: 647, column: 6, scope: !7189)
!7211 = distinct !DISubprogram(name: "ok<u32, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h5e4edb54d8a33f3fE", scope: !4665, file: !5392, line: 637, type: !7212, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4673, retainedNodes: !7214)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!2606, !4665}
!7214 = !{!7215, !7216, !7218}
!7215 = !DILocalVariable(name: "self", arg: 1, scope: !7211, file: !5392, line: 637, type: !4665)
!7216 = !DILocalVariable(name: "x", scope: !7217, file: !5392, line: 642, type: !327, align: 4)
!7217 = distinct !DILexicalBlock(scope: !7211, file: !5392, line: 642, column: 13)
!7218 = !DILocalVariable(name: "x", scope: !7219, file: !5392, line: 645, type: !4647, align: 1)
!7219 = distinct !DILexicalBlock(scope: !7211, file: !5392, line: 645, column: 13)
!7220 = !DILocation(line: 637, column: 21, scope: !7211)
!7221 = !DILocation(line: 641, column: 15, scope: !7211)
!7222 = !DILocation(line: 641, column: 9, scope: !7211)
!7223 = !DILocation(line: 642, column: 16, scope: !7211)
!7224 = !DILocation(line: 642, column: 16, scope: !7217)
!7225 = !DILocation(line: 642, column: 22, scope: !7217)
!7226 = !DILocation(line: 642, column: 28, scope: !7211)
!7227 = !DILocation(line: 645, column: 17, scope: !7211)
!7228 = !DILocation(line: 645, column: 17, scope: !7219)
!7229 = !DILocation(line: 645, column: 23, scope: !7219)
!7230 = !DILocation(line: 645, column: 26, scope: !7211)
!7231 = !DILocation(line: 647, column: 6, scope: !7211)
!7232 = distinct !DISubprogram(name: "ok<std::process::Output, std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6c83611c0bcafc63E", scope: !7233, file: !5392, line: 637, type: !7248, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7241, retainedNodes: !7250)
!7233 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<std::process::Output, std::io::error::Error>", scope: !2066, file: !2, size: 512, align: 64, elements: !7234, templateParams: !23, identifier: "a9165726dd97b2b4e0dae1f8c1e66bdf")
!7234 = !{!7235}
!7235 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7233, file: !2, size: 512, align: 64, elements: !7236, templateParams: !23, identifier: "81def6590751613eb66b773549b09908", discriminator: !7247)
!7236 = !{!7237, !7243}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7235, file: !2, baseType: !7238, size: 512, align: 64, extraData: i64 0)
!7238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7233, file: !2, size: 512, align: 64, elements: !7239, templateParams: !7241, identifier: "f58bebc32963fc96b73104ee99ec54ca")
!7239 = !{!7240}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7238, file: !2, baseType: !3705, size: 448, align: 64, offset: 64)
!7241 = !{!3720, !7242}
!7242 = !DITemplateTypeParameter(name: "E", type: !3733)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7235, file: !2, baseType: !7244, size: 512, align: 64, extraData: i64 1)
!7244 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7233, file: !2, size: 512, align: 64, elements: !7245, templateParams: !7241, identifier: "8463d39e2db4562f3f6fd586677417e4")
!7245 = !{!7246}
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7244, file: !2, baseType: !3733, size: 64, align: 64, offset: 64)
!7247 = !DIDerivedType(tag: DW_TAG_member, scope: !7233, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!3964, !7233}
!7250 = !{!7251, !7252, !7254}
!7251 = !DILocalVariable(name: "self", arg: 1, scope: !7232, file: !5392, line: 637, type: !7233)
!7252 = !DILocalVariable(name: "x", scope: !7253, file: !5392, line: 642, type: !3705, align: 8)
!7253 = distinct !DILexicalBlock(scope: !7232, file: !5392, line: 642, column: 13)
!7254 = !DILocalVariable(name: "x", scope: !7255, file: !5392, line: 645, type: !3733, align: 8)
!7255 = distinct !DILexicalBlock(scope: !7232, file: !5392, line: 645, column: 13)
!7256 = !DILocation(line: 637, column: 21, scope: !7232)
!7257 = !DILocation(line: 642, column: 16, scope: !7253)
!7258 = !DILocation(line: 645, column: 17, scope: !7255)
!7259 = !DILocation(line: 641, column: 15, scope: !7232)
!7260 = !DILocation(line: 641, column: 9, scope: !7232)
!7261 = !DILocation(line: 642, column: 16, scope: !7232)
!7262 = !DILocation(line: 642, column: 27, scope: !7253)
!7263 = !DILocation(line: 642, column: 22, scope: !7253)
!7264 = !DILocation(line: 642, column: 28, scope: !7232)
!7265 = !DILocation(line: 645, column: 17, scope: !7232)
!7266 = !DILocation(line: 645, column: 23, scope: !7255)
!7267 = !DILocation(line: 645, column: 26, scope: !7232)
!7268 = !DILocation(line: 647, column: 6, scope: !7232)
!7269 = distinct !DISubprogram(name: "ok<alloc::string::String, alloc::string::FromUtf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h8ff4be63b50557b6E", scope: !7270, file: !5392, line: 637, type: !7285, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7278, retainedNodes: !7287)
!7270 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf8Error>", scope: !2066, file: !2, size: 384, align: 64, elements: !7271, templateParams: !23, identifier: "72eb5837567b9819763436e8efe2ca77")
!7271 = !{!7272}
!7272 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7270, file: !2, size: 384, align: 64, elements: !7273, templateParams: !23, identifier: "e55310dd256eb9f2ef566d653b588e70", discriminator: !7284)
!7273 = !{!7274, !7280}
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7272, file: !2, baseType: !7275, size: 384, align: 64, extraData: i64 0)
!7275 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7270, file: !2, size: 384, align: 64, elements: !7276, templateParams: !7278, identifier: "b01b4e51e1ac4f75aa8b3c10f77e003")
!7276 = !{!7277}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7275, file: !2, baseType: !2358, size: 192, align: 64, offset: 64)
!7278 = !{!2363, !7279}
!7279 = !DITemplateTypeParameter(name: "E", type: !3807)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7272, file: !2, baseType: !7281, size: 384, align: 64, extraData: i64 1)
!7281 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7270, file: !2, size: 384, align: 64, elements: !7282, templateParams: !7278, identifier: "e1c0b103917bd1bffb3a9bfd5ce51772")
!7282 = !{!7283}
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7281, file: !2, baseType: !3807, size: 320, align: 64, offset: 64)
!7284 = !DIDerivedType(tag: DW_TAG_member, scope: !7270, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{!4002, !7270}
!7287 = !{!7288, !7289, !7291}
!7288 = !DILocalVariable(name: "self", arg: 1, scope: !7269, file: !5392, line: 637, type: !7270)
!7289 = !DILocalVariable(name: "x", scope: !7290, file: !5392, line: 642, type: !2358, align: 8)
!7290 = distinct !DILexicalBlock(scope: !7269, file: !5392, line: 642, column: 13)
!7291 = !DILocalVariable(name: "x", scope: !7292, file: !5392, line: 645, type: !3807, align: 8)
!7292 = distinct !DILexicalBlock(scope: !7269, file: !5392, line: 645, column: 13)
!7293 = !DILocation(line: 637, column: 21, scope: !7269)
!7294 = !DILocation(line: 642, column: 16, scope: !7290)
!7295 = !DILocation(line: 645, column: 17, scope: !7292)
!7296 = !DILocation(line: 641, column: 15, scope: !7269)
!7297 = !DILocation(line: 641, column: 9, scope: !7269)
!7298 = !DILocation(line: 642, column: 16, scope: !7269)
!7299 = !DILocation(line: 642, column: 27, scope: !7290)
!7300 = !DILocation(line: 642, column: 22, scope: !7290)
!7301 = !DILocation(line: 642, column: 28, scope: !7269)
!7302 = !DILocation(line: 645, column: 17, scope: !7269)
!7303 = !DILocation(line: 645, column: 23, scope: !7292)
!7304 = !DILocation(line: 645, column: 26, scope: !7269)
!7305 = !DILocation(line: 647, column: 6, scope: !7269)
!7306 = distinct !DISubprogram(name: "ok<&str, core::str::error::Utf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17hc0a9c6e44b396b71E", scope: !7307, file: !5392, line: 637, type: !7322, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7315, retainedNodes: !7324)
!7307 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, core::str::error::Utf8Error>", scope: !2066, file: !2, size: 192, align: 64, elements: !7308, templateParams: !23, identifier: "e4d57345d21d30bec78428ea1a2f5c6b")
!7308 = !{!7309}
!7309 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7307, file: !2, size: 192, align: 64, elements: !7310, templateParams: !23, identifier: "ddd762a1dbf184a84fbe63d83e677255", discriminator: !7321)
!7310 = !{!7311, !7317}
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7309, file: !2, baseType: !7312, size: 192, align: 64, extraData: i64 0)
!7312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7307, file: !2, size: 192, align: 64, elements: !7313, templateParams: !7315, identifier: "217f00f713715d595df2ab36f0e3b86f")
!7313 = !{!7314}
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7312, file: !2, baseType: !48, size: 128, align: 64, offset: 64)
!7315 = !{!47, !7316}
!7316 = !DITemplateTypeParameter(name: "E", type: !3811)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7309, file: !2, baseType: !7318, size: 192, align: 64, extraData: i64 1)
!7318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7307, file: !2, size: 192, align: 64, elements: !7319, templateParams: !7315, identifier: "2514ea56cb3c23d4880af8496a3ad2ff")
!7319 = !{!7320}
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7318, file: !2, baseType: !3811, size: 128, align: 64, offset: 64)
!7321 = !DIDerivedType(tag: DW_TAG_member, scope: !7307, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{!38, !7307}
!7324 = !{!7325, !7326, !7328}
!7325 = !DILocalVariable(name: "self", arg: 1, scope: !7306, file: !5392, line: 637, type: !7307)
!7326 = !DILocalVariable(name: "x", scope: !7327, file: !5392, line: 642, type: !48, align: 8)
!7327 = distinct !DILexicalBlock(scope: !7306, file: !5392, line: 642, column: 13)
!7328 = !DILocalVariable(name: "x", scope: !7329, file: !5392, line: 645, type: !3811, align: 8)
!7329 = distinct !DILexicalBlock(scope: !7306, file: !5392, line: 645, column: 13)
!7330 = !DILocation(line: 637, column: 21, scope: !7306)
!7331 = !DILocation(line: 645, column: 17, scope: !7329)
!7332 = !DILocation(line: 641, column: 15, scope: !7306)
!7333 = !DILocation(line: 641, column: 9, scope: !7306)
!7334 = !DILocation(line: 642, column: 16, scope: !7306)
!7335 = !DILocation(line: 642, column: 16, scope: !7327)
!7336 = !DILocation(line: 642, column: 22, scope: !7327)
!7337 = !DILocation(line: 642, column: 28, scope: !7306)
!7338 = !DILocation(line: 645, column: 17, scope: !7306)
!7339 = !DILocation(line: 645, column: 23, scope: !7329)
!7340 = !DILocation(line: 645, column: 26, scope: !7306)
!7341 = !DILocation(line: 647, column: 6, scope: !7306)
!7342 = distinct !DISubprogram(name: "is_ok<alloc::string::String, std::env::VarError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd33f6c92c8d2b14dE", scope: !2350, file: !5392, line: 542, type: !7343, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2362, retainedNodes: !7346)
!7343 = !DISubroutineType(types: !7344)
!7344 = !{!989, !7345}
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<alloc::string::String, std::env::VarError>", baseType: !2350, size: 64, align: 64, dwarfAddressSpace: 0)
!7346 = !{!7347}
!7347 = !DILocalVariable(name: "self", arg: 1, scope: !7342, file: !5392, line: 542, type: !7345)
!7348 = !DILocation(line: 542, column: 24, scope: !7342)
!7349 = !DILocation(line: 543, column: 18, scope: !7342)
!7350 = !DILocation(line: 543, column: 9, scope: !7342)
!7351 = !DILocation(line: 544, column: 6, scope: !7342)
!7352 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h15361ed5ea8acb97E", scope: !5616, file: !5392, line: 852, type: !7353, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7379, retainedNodes: !7372)
!7353 = !DISubroutineType(types: !7354)
!7354 = !{!7355, !5616, !7370}
!7355 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !2066, file: !2, size: 192, align: 64, elements: !7356, templateParams: !23, identifier: "f9e9a42aa6febb45d109bda2991854e6")
!7356 = !{!7357}
!7357 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7355, file: !2, size: 192, align: 64, elements: !7358, templateParams: !23, identifier: "b5a94f3f22285a5864c8775477271c04", discriminator: !7369)
!7358 = !{!7359, !7365}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7357, file: !2, baseType: !7360, size: 192, align: 64, extraData: i64 0)
!7360 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7355, file: !2, size: 192, align: 64, elements: !7361, templateParams: !7363, identifier: "9c4cccb70d99a0b8320b7ac5110bc45")
!7361 = !{!7362}
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7360, file: !2, baseType: !1622, size: 128, align: 64, offset: 64)
!7363 = !{!5625, !7364}
!7364 = !DITemplateTypeParameter(name: "E", type: !1612)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7357, file: !2, baseType: !7366, size: 192, align: 64, extraData: i64 1)
!7366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7355, file: !2, size: 192, align: 64, elements: !7367, templateParams: !7363, identifier: "e40fbc9e575cde6fff0782f85f4d56ad")
!7367 = !{!7368}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7366, file: !2, baseType: !1612, size: 128, align: 64, offset: 64)
!7369 = !DIDerivedType(tag: DW_TAG_member, scope: !7355, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7370 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !7371, file: !2, align: 8, elements: !23, identifier: "3b096afc927e6fcff8de2583a1fa856c")
!7371 = !DINamespace(name: "finish_grow", scope: !222)
!7372 = !{!7373, !7374, !7375, !7377}
!7373 = !DILocalVariable(name: "self", arg: 1, scope: !7352, file: !5392, line: 852, type: !5616)
!7374 = !DILocalVariable(name: "op", arg: 2, scope: !7352, file: !5392, line: 852, type: !7370)
!7375 = !DILocalVariable(name: "t", scope: !7376, file: !5392, line: 854, type: !1622, align: 8)
!7376 = distinct !DILexicalBlock(scope: !7352, file: !5392, line: 854, column: 13)
!7377 = !DILocalVariable(name: "e", scope: !7378, file: !5392, line: 855, type: !5627, align: 1)
!7378 = distinct !DILexicalBlock(scope: !7352, file: !5392, line: 855, column: 13)
!7379 = !{!5625, !5626, !7380, !7381}
!7380 = !DITemplateTypeParameter(name: "F", type: !1612)
!7381 = !DITemplateTypeParameter(name: "O", type: !7370)
!7382 = !DILocation(line: 852, column: 42, scope: !7352)
!7383 = !DILocation(line: 852, column: 48, scope: !7352)
!7384 = !DILocation(line: 855, column: 17, scope: !7378)
!7385 = !DILocation(line: 853, column: 15, scope: !7352)
!7386 = !DILocation(line: 853, column: 9, scope: !7352)
!7387 = !DILocation(line: 854, column: 16, scope: !7352)
!7388 = !DILocation(line: 854, column: 16, scope: !7376)
!7389 = !DILocation(line: 854, column: 22, scope: !7376)
!7390 = !DILocation(line: 854, column: 26, scope: !7352)
!7391 = !DILocation(line: 855, column: 27, scope: !7378)
!7392 = !DILocation(line: 855, column: 23, scope: !7378)
!7393 = !DILocation(line: 855, column: 32, scope: !7352)
!7394 = !DILocation(line: 857, column: 5, scope: !7352)
!7395 = !DILocation(line: 857, column: 6, scope: !7352)
!7396 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc2d8e143c3032a97E", scope: !7397, file: !5392, line: 852, type: !7412, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7437, retainedNodes: !7430)
!7397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !2066, file: !2, size: 128, align: 64, elements: !7398, templateParams: !23, identifier: "ff8a485f8cd517ab498cd5813c6bb045")
!7398 = !{!7399}
!7399 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7397, file: !2, size: 128, align: 64, elements: !7400, templateParams: !23, identifier: "b48580f36bc74655e39ed6e7b365d016", discriminator: !7411)
!7400 = !{!7401, !7407}
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7399, file: !2, baseType: !7402, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7402 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7397, file: !2, size: 128, align: 64, elements: !7403, templateParams: !7405, identifier: "b269a9fe123132846f020122103cfdb6")
!7403 = !{!7404}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7402, file: !2, baseType: !7, align: 8)
!7405 = !{!1037, !7406}
!7406 = !DITemplateTypeParameter(name: "E", type: !1609)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7399, file: !2, baseType: !7408, size: 128, align: 64)
!7408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7397, file: !2, size: 128, align: 64, elements: !7409, templateParams: !7405, identifier: "928053fbb1d08c6db41a5b74862db612")
!7409 = !{!7410}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7408, file: !2, baseType: !1609, size: 128, align: 64)
!7411 = !DIDerivedType(tag: DW_TAG_member, scope: !7397, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!7414, !7397, !7428}
!7414 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !2066, file: !2, size: 128, align: 64, elements: !7415, templateParams: !23, identifier: "22f2e735f467c38c7be904442897a8b1")
!7415 = !{!7416}
!7416 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7414, file: !2, size: 128, align: 64, elements: !7417, templateParams: !23, identifier: "3909b23247f16fe02ac861001f102222", discriminator: !7427)
!7417 = !{!7418, !7423}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7416, file: !2, baseType: !7419, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7419 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7414, file: !2, size: 128, align: 64, elements: !7420, templateParams: !7422, identifier: "b3c9a9c556d81c32985a47a8788cd6b4")
!7420 = !{!7421}
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7419, file: !2, baseType: !7, align: 8)
!7422 = !{!1037, !7364}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7416, file: !2, baseType: !7424, size: 128, align: 64)
!7424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7414, file: !2, size: 128, align: 64, elements: !7425, templateParams: !7422, identifier: "8e5d5dc87b921b0510abc492fd044e79")
!7425 = !{!7426}
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7424, file: !2, baseType: !1612, size: 128, align: 64)
!7427 = !DIDerivedType(tag: DW_TAG_member, scope: !7414, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7428 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7429, file: !2, align: 8, elements: !23, identifier: "a5b68427f2554fcdb808267061e22e82")
!7429 = !DINamespace(name: "handle_reserve", scope: !222)
!7430 = !{!7431, !7432, !7433, !7435}
!7431 = !DILocalVariable(name: "self", arg: 1, scope: !7396, file: !5392, line: 852, type: !7397)
!7432 = !DILocalVariable(name: "op", arg: 2, scope: !7396, file: !5392, line: 852, type: !7428)
!7433 = !DILocalVariable(name: "t", scope: !7434, file: !5392, line: 854, type: !7, align: 1)
!7434 = distinct !DILexicalBlock(scope: !7396, file: !5392, line: 854, column: 13)
!7435 = !DILocalVariable(name: "e", scope: !7436, file: !5392, line: 855, type: !1609, align: 8)
!7436 = distinct !DILexicalBlock(scope: !7396, file: !5392, line: 855, column: 13)
!7437 = !{!1037, !7406, !7380, !7438}
!7438 = !DITemplateTypeParameter(name: "O", type: !7428)
!7439 = !DILocation(line: 852, column: 42, scope: !7396)
!7440 = !DILocation(line: 852, column: 48, scope: !7396)
!7441 = !DILocation(line: 854, column: 16, scope: !7434)
!7442 = !DILocation(line: 853, column: 15, scope: !7396)
!7443 = !{i64 0, i64 -9223372036854775806}
!7444 = !DILocation(line: 853, column: 9, scope: !7396)
!7445 = !DILocation(line: 854, column: 22, scope: !7434)
!7446 = !DILocation(line: 854, column: 26, scope: !7396)
!7447 = !DILocation(line: 855, column: 17, scope: !7396)
!7448 = !DILocation(line: 855, column: 17, scope: !7436)
!7449 = !DILocation(line: 855, column: 27, scope: !7436)
!7450 = !DILocation(line: 855, column: 23, scope: !7436)
!7451 = !DILocation(line: 855, column: 32, scope: !7396)
!7452 = !DILocation(line: 857, column: 5, scope: !7396)
!7453 = !DILocation(line: 857, column: 6, scope: !7396)
!7454 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf2790cdcd6fed450E", scope: !7455, file: !5392, line: 852, type: !7475, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7502, retainedNodes: !7495)
!7455 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !2066, file: !2, size: 128, align: 64, elements: !7456, templateParams: !23, identifier: "f2818f0866552106d406c9971ad31420")
!7456 = !{!7457}
!7457 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7455, file: !2, size: 128, align: 64, elements: !7458, templateParams: !23, identifier: "b306abcc6da8a54a54c42a4408dbd22a", discriminator: !7474)
!7458 = !{!7459, !7470}
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7457, file: !2, baseType: !7460, size: 128, align: 64)
!7460 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7455, file: !2, size: 128, align: 64, elements: !7461, templateParams: !7466, identifier: "ce28adf5d576b8c1b4c366f637810f3d")
!7461 = !{!7462}
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7460, file: !2, baseType: !7463, size: 128, align: 64)
!7463 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !259, file: !2, size: 128, align: 64, elements: !7464, templateParams: !343, identifier: "e7e50e72a40d62ad782bb62524f94ca4")
!7464 = !{!7465}
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7463, file: !2, baseType: !622, size: 128, align: 64)
!7466 = !{!7467, !7468}
!7467 = !DITemplateTypeParameter(name: "T", type: !7463)
!7468 = !DITemplateTypeParameter(name: "E", type: !7469)
!7469 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1624, file: !2, align: 8, elements: !23, identifier: "97625ae8a43354981e34554788f94b51")
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7457, file: !2, baseType: !7471, size: 128, align: 64, extraData: i64 0)
!7471 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7455, file: !2, size: 128, align: 64, elements: !7472, templateParams: !7466, identifier: "3713fe8defee179247cf65b4e4450103")
!7472 = !{!7473}
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7471, file: !2, baseType: !7469, align: 8)
!7474 = !DIDerivedType(tag: DW_TAG_member, scope: !7455, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{!7477, !7455, !7491}
!7477 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !2066, file: !2, size: 192, align: 64, elements: !7478, templateParams: !23, identifier: "93ef32773cde5df7da5f2492cf871fdb")
!7478 = !{!7479}
!7479 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7477, file: !2, size: 192, align: 64, elements: !7480, templateParams: !23, identifier: "f9d34f26329034d6980fbf38153fef27", discriminator: !7490)
!7480 = !{!7481, !7486}
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7479, file: !2, baseType: !7482, size: 192, align: 64, extraData: i64 0)
!7482 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7477, file: !2, size: 192, align: 64, elements: !7483, templateParams: !7485, identifier: "b50605ddb153427cb93ff011731fd4")
!7483 = !{!7484}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7482, file: !2, baseType: !7463, size: 128, align: 64, offset: 64)
!7485 = !{!7467, !7406}
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7479, file: !2, baseType: !7487, size: 192, align: 64, extraData: i64 1)
!7487 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7477, file: !2, size: 192, align: 64, elements: !7488, templateParams: !7485, identifier: "7c0a56e4c611f447bb2738918267f301")
!7488 = !{!7489}
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7487, file: !2, baseType: !1609, size: 128, align: 64, offset: 64)
!7490 = !DIDerivedType(tag: DW_TAG_member, scope: !7477, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7491 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !7371, file: !2, size: 64, align: 64, elements: !7492, templateParams: !23, identifier: "bac9969652a07a7539a7a2b4145add30")
!7492 = !{!7493}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !7491, file: !2, baseType: !7494, size: 64, align: 64)
!7494 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !1622, size: 64, align: 64, dwarfAddressSpace: 0)
!7495 = !{!7496, !7497, !7498, !7500}
!7496 = !DILocalVariable(name: "self", arg: 1, scope: !7454, file: !5392, line: 852, type: !7455)
!7497 = !DILocalVariable(name: "op", arg: 2, scope: !7454, file: !5392, line: 852, type: !7491)
!7498 = !DILocalVariable(name: "t", scope: !7499, file: !5392, line: 854, type: !7463, align: 8)
!7499 = distinct !DILexicalBlock(scope: !7454, file: !5392, line: 854, column: 13)
!7500 = !DILocalVariable(name: "e", scope: !7501, file: !5392, line: 855, type: !7469, align: 1)
!7501 = distinct !DILexicalBlock(scope: !7454, file: !5392, line: 855, column: 13)
!7502 = !{!7467, !7468, !7503, !7504}
!7503 = !DITemplateTypeParameter(name: "F", type: !1609)
!7504 = !DITemplateTypeParameter(name: "O", type: !7491)
!7505 = !DILocation(line: 852, column: 42, scope: !7454)
!7506 = !DILocation(line: 852, column: 48, scope: !7454)
!7507 = !DILocation(line: 855, column: 17, scope: !7501)
!7508 = !DILocation(line: 853, column: 15, scope: !7454)
!7509 = !DILocation(line: 853, column: 9, scope: !7454)
!7510 = !DILocation(line: 854, column: 16, scope: !7454)
!7511 = !DILocation(line: 854, column: 16, scope: !7499)
!7512 = !DILocation(line: 854, column: 22, scope: !7499)
!7513 = !DILocation(line: 854, column: 26, scope: !7454)
!7514 = !DILocation(line: 855, column: 27, scope: !7501)
!7515 = !DILocation(line: 855, column: 23, scope: !7501)
!7516 = !DILocation(line: 855, column: 32, scope: !7454)
!7517 = !DILocation(line: 857, column: 5, scope: !7454)
!7518 = !DILocation(line: 857, column: 6, scope: !7454)
!7519 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2c88d357f9756a4aE", scope: !7521, file: !7520, line: 559, type: !7522, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7526, retainedNodes: !7524)
!7520 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!7521 = !DINamespace(name: "{impl#4}", scope: !4202)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{!1609, !1609}
!7524 = !{!7525}
!7525 = !DILocalVariable(name: "t", arg: 1, scope: !7519, file: !7520, line: 559, type: !1609)
!7526 = !{!7527}
!7527 = !DITemplateTypeParameter(name: "T", type: !1609)
!7528 = !DILocation(line: 559, column: 13, scope: !7519)
!7529 = !DILocation(line: 561, column: 6, scope: !7519)
!7530 = distinct !DISubprogram(name: "from<usize>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2cc2b8b7a682aff2E", scope: !7521, file: !7520, line: 559, type: !7531, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !7533)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!9, !9}
!7533 = !{!7534}
!7534 = !DILocalVariable(name: "t", arg: 1, scope: !7530, file: !7520, line: 559, type: !9)
!7535 = !DILocation(line: 559, column: 13, scope: !7530)
!7536 = !DILocation(line: 561, column: 6, scope: !7530)
!7537 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7d1cdc01e8805927E", scope: !7521, file: !7520, line: 559, type: !7538, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7542, retainedNodes: !7540)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{null, !5627}
!7540 = !{!7541}
!7541 = !DILocalVariable(name: "t", arg: 1, scope: !7537, file: !7520, line: 559, type: !5627)
!7542 = !{!7543}
!7543 = !DITemplateTypeParameter(name: "T", type: !5627)
!7544 = !DILocation(line: 559, column: 13, scope: !7537)
!7545 = !DILocation(line: 561, column: 6, scope: !7537)
!7546 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha0555b3c59efcc3fE", scope: !7521, file: !7520, line: 559, type: !7547, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7551, retainedNodes: !7549)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{null, !7469}
!7549 = !{!7550}
!7550 = !DILocalVariable(name: "t", arg: 1, scope: !7546, file: !7520, line: 559, type: !7469)
!7551 = !{!7552}
!7552 = !DITemplateTypeParameter(name: "T", type: !7469)
!7553 = !DILocation(line: 559, column: 13, scope: !7546)
!7554 = !DILocation(line: 561, column: 6, scope: !7546)
!7555 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h178be142c24bc97eE", scope: !7556, file: !7520, line: 549, type: !1577, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7559, retainedNodes: !7557)
!7556 = !DINamespace(name: "{impl#3}", scope: !4202)
!7557 = !{!7558}
!7558 = !DILocalVariable(name: "self", arg: 1, scope: !7555, file: !7520, line: 549, type: !1226)
!7559 = !{!7560, !7561}
!7560 = !DITemplateTypeParameter(name: "T", type: !1226)
!7561 = !DITemplateTypeParameter(name: "U", type: !339)
!7562 = !DILocation(line: 549, column: 13, scope: !7555)
!7563 = !DILocation(line: 550, column: 9, scope: !7555)
!7564 = !DILocation(line: 551, column: 6, scope: !7555)
!7565 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc8cc66ceb68590efE", scope: !7556, file: !7520, line: 549, type: !1607, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7568, retainedNodes: !7566)
!7566 = !{!7567}
!7567 = !DILocalVariable(name: "self", arg: 1, scope: !7565, file: !7520, line: 549, type: !1612)
!7568 = !{!7569, !7570}
!7569 = !DITemplateTypeParameter(name: "T", type: !1612)
!7570 = !DITemplateTypeParameter(name: "U", type: !1609)
!7571 = !DILocation(line: 549, column: 13, scope: !7565)
!7572 = !DILocation(line: 550, column: 9, scope: !7565)
!7573 = !DILocation(line: 551, column: 6, scope: !7565)
!7574 = distinct !DISubprogram(name: "borrow<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h5e203e9524eb36e3E", scope: !7576, file: !7575, line: 211, type: !7578, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !7580)
!7575 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/borrow.rs", directory: "", checksumkind: CSK_MD5, checksum: "e89485dfda5e743beb740cfbcee3cfef")
!7576 = !DINamespace(name: "{impl#0}", scope: !7577)
!7577 = !DINamespace(name: "borrow", scope: !40)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!3533, !3533}
!7580 = !{!7581}
!7581 = !DILocalVariable(name: "self", arg: 1, scope: !7574, file: !7575, line: 211, type: !3533)
!7582 = !DILocation(line: 211, column: 15, scope: !7574)
!7583 = !DILocation(line: 213, column: 6, scope: !7574)
!7584 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h53a411f692041c03E", scope: !7585, file: !468, line: 542, type: !7586, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7588)
!7585 = !DINamespace(name: "{impl#3}", scope: !470)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!4697, !321, !48}
!7588 = !{!7589, !7590, !7591, !7593}
!7589 = !DILocalVariable(name: "self", arg: 1, scope: !7584, file: !468, line: 542, type: !321)
!7590 = !DILocalVariable(name: "haystack", arg: 2, scope: !7584, file: !468, line: 542, type: !48)
!7591 = !DILocalVariable(name: "utf8_encoded", scope: !7592, file: !468, line: 543, type: !4705, align: 1)
!7592 = distinct !DILexicalBlock(scope: !7584, file: !468, line: 543, column: 9)
!7593 = !DILocalVariable(name: "utf8_size", scope: !7594, file: !468, line: 544, type: !9, align: 8)
!7594 = distinct !DILexicalBlock(scope: !7592, file: !468, line: 544, column: 9)
!7595 = !DILocation(line: 542, column: 22, scope: !7584)
!7596 = !DILocation(line: 542, column: 28, scope: !7584)
!7597 = !DILocation(line: 543, column: 13, scope: !7592)
!7598 = !DILocation(line: 543, column: 32, scope: !7584)
!7599 = !DILocation(line: 544, column: 25, scope: !7592)
!7600 = !DILocalVariable(name: "self", scope: !7601, file: !468, line: 544, type: !321, align: 4)
!7601 = !DILexicalBlockFile(scope: !7602, file: !468, discriminator: 0)
!7602 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hc86bbc7e90e67092E", scope: !5292, file: !5097, line: 656, type: !7603, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7609)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{!7605, !321, !939}
!7605 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 128, align: 64, elements: !7606, templateParams: !23, identifier: "444dcbb816eb7ea8fc9a04d7bc4f81ac")
!7606 = !{!7607, !7608}
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7605, file: !2, baseType: !51, size: 64, align: 64)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7605, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!7609 = !{!7600, !7610}
!7610 = !DILocalVariable(name: "dst", scope: !7601, file: !468, line: 544, type: !939, align: 8)
!7611 = !DILocation(line: 544, column: 25, scope: !7601, inlinedAt: !7599)
!7612 = !DILocation(line: 544, column: 42, scope: !7592)
!7613 = !DILocalVariable(name: "v", scope: !7614, file: !468, line: 544, type: !939, align: 8)
!7614 = !DILexicalBlockFile(scope: !7615, file: !468, discriminator: 0)
!7615 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17hbc2df11124f85909E", scope: !7617, file: !7616, line: 197, type: !7618, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7620)
!7616 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!7617 = !DINamespace(name: "converts", scope: !306)
!7618 = !DISubroutineType(types: !7619)
!7619 = !{!7605, !939}
!7620 = !{!7613}
!7621 = !DILocation(line: 544, column: 25, scope: !7614, inlinedAt: !7622)
!7622 = !DILocation(line: 658, column: 18, scope: !7602, inlinedAt: !7599)
!7623 = !DILocalVariable(name: "self", scope: !7624, file: !468, line: 544, type: !48, align: 8)
!7624 = !DILexicalBlockFile(scope: !7625, file: !468, discriminator: 0)
!7625 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb7d6cd61d327eef9E", scope: !496, file: !2439, line: 157, type: !4721, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7626)
!7626 = !{!7623}
!7627 = !DILocation(line: 544, column: 25, scope: !7624, inlinedAt: !7599)
!7628 = !DILocalVariable(name: "self", scope: !7629, file: !468, line: 544, type: !48, align: 8)
!7629 = !DILexicalBlockFile(scope: !7630, file: !468, discriminator: 0)
!7630 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7631)
!7631 = !{!7628}
!7632 = !DILocation(line: 544, column: 25, scope: !7629, inlinedAt: !7633)
!7633 = !DILocation(line: 158, column: 9, scope: !7625, inlinedAt: !7599)
!7634 = !DILocation(line: 544, column: 13, scope: !7594)
!7635 = !DILocation(line: 548, column: 26, scope: !7594)
!7636 = !DILocalVariable(name: "self", scope: !7637, file: !468, line: 548, type: !48, align: 8)
!7637 = !DILexicalBlockFile(scope: !7638, file: !468, discriminator: 0)
!7638 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb7d6cd61d327eef9E", scope: !496, file: !2439, line: 157, type: !4721, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7639)
!7639 = !{!7636}
!7640 = !DILocation(line: 548, column: 26, scope: !7637, inlinedAt: !7635)
!7641 = !DILocalVariable(name: "self", scope: !7642, file: !468, line: 548, type: !48, align: 8)
!7642 = !DILexicalBlockFile(scope: !7643, file: !468, discriminator: 0)
!7643 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7644)
!7644 = !{!7641}
!7645 = !DILocation(line: 548, column: 26, scope: !7642, inlinedAt: !7646)
!7646 = !DILocation(line: 158, column: 9, scope: !7638, inlinedAt: !7635)
!7647 = !DILocation(line: 551, column: 13, scope: !7594)
!7648 = !DILocation(line: 545, column: 9, scope: !7594)
!7649 = !DILocation(line: 553, column: 6, scope: !7584)
!7650 = distinct !DISubprogram(name: "matches<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hb6967cc43833833dE", scope: !7651, file: !468, line: 606, type: !7652, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1128, retainedNodes: !7655)
!7651 = !DINamespace(name: "{impl#4}", scope: !470)
!7652 = !DISubroutineType(types: !7653)
!7653 = !{!989, !7654, !321}
!7654 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::{impl#0}::trim::{closure_env#0}", baseType: !494, size: 64, align: 64, dwarfAddressSpace: 0)
!7655 = !{!7656, !7657}
!7656 = !DILocalVariable(name: "self", arg: 1, scope: !7650, file: !468, line: 606, type: !7654)
!7657 = !DILocalVariable(name: "c", arg: 2, scope: !7650, file: !468, line: 606, type: !321)
!7658 = !DILocation(line: 606, column: 16, scope: !7650)
!7659 = !DILocation(line: 606, column: 27, scope: !7650)
!7660 = !DILocation(line: 607, column: 9, scope: !7650)
!7661 = !DILocation(line: 608, column: 6, scope: !7650)
!7662 = distinct !DISubprogram(name: "matches<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hc38e31bf05cc1c8dE", scope: !7651, file: !468, line: 606, type: !7663, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2864, retainedNodes: !7666)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{!989, !7665, !321}
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut build_script_build::emcc_version_code::{closure_env#0}", baseType: !2857, size: 64, align: 64, dwarfAddressSpace: 0)
!7666 = !{!7667, !7668}
!7667 = !DILocalVariable(name: "self", arg: 1, scope: !7662, file: !468, line: 606, type: !7665)
!7668 = !DILocalVariable(name: "c", arg: 2, scope: !7662, file: !468, line: 606, type: !321)
!7669 = !DILocation(line: 606, column: 16, scope: !7662)
!7670 = !DILocation(line: 606, column: 27, scope: !7662)
!7671 = !DILocation(line: 607, column: 9, scope: !7662)
!7672 = !DILocation(line: 608, column: 6, scope: !7662)
!7673 = distinct !DISubprogram(name: "slice_contains<&str>", linkageName: "_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h49c019e0642362a4E", scope: !7674, file: !6206, line: 237, type: !7675, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !7677)
!7674 = !DINamespace(name: "{impl#11}", scope: !6208)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!989, !270, !2000}
!7677 = !{!7678, !7679}
!7678 = !DILocalVariable(name: "self", arg: 1, scope: !7673, file: !6206, line: 237, type: !270)
!7679 = !DILocalVariable(name: "x", arg: 2, scope: !7673, file: !6206, line: 237, type: !2000)
!7680 = !DILocation(line: 237, column: 31, scope: !7673)
!7681 = !DILocation(line: 237, column: 38, scope: !7673)
!7682 = !DILocation(line: 238, column: 9, scope: !7673)
!7683 = !DILocalVariable(name: "self", scope: !7684, file: !6206, line: 238, type: !2000, align: 8)
!7684 = !DILexicalBlockFile(scope: !7685, file: !6206, discriminator: 0)
!7685 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1e784e2ed6606635E", scope: !5968, file: !5967, line: 734, type: !6217, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !7686)
!7686 = !{!7683}
!7687 = !DILocation(line: 238, column: 9, scope: !7684, inlinedAt: !7682)
!7688 = !DILocation(line: 238, column: 22, scope: !7673)
!7689 = !DILocation(line: 239, column: 6, scope: !7673)
!7690 = distinct !DISubprogram(name: "{closure#0}<&str>", linkageName: "_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17hd0a7c4d41da4d109E", scope: !7691, file: !6206, line: 238, type: !7692, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !7698)
!7691 = !DINamespace(name: "slice_contains", scope: !7674)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{!989, !7694, !270}
!7694 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::cmp::{impl#11}::slice_contains::{closure_env#0}<&str>", baseType: !7695, size: 64, align: 64, dwarfAddressSpace: 0)
!7695 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&str>", scope: !7691, file: !2, size: 64, align: 64, elements: !7696, templateParams: !23, identifier: "6d5b1d387160fd63af8a41db41608d72")
!7696 = !{!7697}
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !7695, file: !2, baseType: !270, size: 64, align: 64)
!7698 = !{!7699, !7700}
!7699 = !DILocalVariable(name: "y", arg: 2, scope: !7690, file: !6206, line: 238, type: !270)
!7700 = !DILocalVariable(name: "self", scope: !7690, file: !6206, line: 237, type: !48, align: 8)
!7701 = !DILocation(line: 237, column: 31, scope: !7690)
!7702 = !DILocation(line: 238, column: 23, scope: !7690)
!7703 = !DILocation(line: 238, column: 32, scope: !7690)
!7704 = !DILocation(line: 238, column: 26, scope: !7690)
!7705 = !DILocation(line: 238, column: 37, scope: !7690)
!7706 = distinct !DISubprogram(name: "report", linkageName: "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h3a8ca7628401a7c4E", scope: !7707, file: !2318, line: 2154, type: !7708, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7710)
!7707 = !DINamespace(name: "{impl#50}", scope: !2320)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!2319, !7}
!7710 = !{!7711}
!7711 = !DILocalVariable(name: "self", arg: 1, scope: !7706, file: !2318, line: 2154, type: !7)
!7712 = !DILocation(line: 2154, column: 15, scope: !7706)
!7713 = !DILocation(line: 2156, column: 6, scope: !7706)
!7714 = distinct !DISubprogram(name: "borrow<str>", linkageName: "_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h2c1a3208f1ea1b09E", scope: !7715, file: !7575, line: 227, type: !7716, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !7718)
!7715 = !DINamespace(name: "{impl#2}", scope: !7577)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!48, !270}
!7718 = !{!7719}
!7719 = !DILocalVariable(name: "self", arg: 1, scope: !7714, file: !7575, line: 227, type: !270)
!7720 = !DILocation(line: 227, column: 15, scope: !7714)
!7721 = !DILocation(line: 228, column: 9, scope: !7714)
!7722 = !DILocation(line: 229, column: 6, scope: !7714)
!7723 = distinct !DISubprogram(name: "as_ref<str, std::ffi::os_str::OsStr>", linkageName: "_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h603d2461e4ba1659E", scope: !7724, file: !7520, line: 491, type: !7725, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7729, retainedNodes: !7727)
!7724 = !DINamespace(name: "{impl#0}", scope: !4202)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!2407, !270}
!7727 = !{!7728}
!7728 = !DILocalVariable(name: "self", arg: 1, scope: !7723, file: !7520, line: 491, type: !270)
!7729 = !{!344, !7730}
!7730 = !DITemplateTypeParameter(name: "U", type: !2411)
!7731 = !DILocation(line: 491, column: 15, scope: !7723)
!7732 = !DILocation(line: 492, column: 33, scope: !7723)
!7733 = !DILocation(line: 492, column: 9, scope: !7723)
!7734 = !DILocation(line: 493, column: 6, scope: !7723)
!7735 = distinct !DISubprogram(name: "is_prefix_of", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hce23eb5c2272605cE", scope: !7736, file: !468, line: 945, type: !4549, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7737)
!7736 = !DINamespace(name: "{impl#28}", scope: !470)
!7737 = !{!7738, !7739}
!7738 = !DILocalVariable(name: "self", arg: 1, scope: !7735, file: !468, line: 945, type: !48)
!7739 = !DILocalVariable(name: "haystack", arg: 2, scope: !7735, file: !468, line: 945, type: !48)
!7740 = !DILocation(line: 945, column: 21, scope: !7735)
!7741 = !DILocation(line: 945, column: 27, scope: !7735)
!7742 = !DILocation(line: 946, column: 9, scope: !7735)
!7743 = !DILocalVariable(name: "self", scope: !7744, file: !468, line: 946, type: !48, align: 8)
!7744 = !DILexicalBlockFile(scope: !7745, file: !468, discriminator: 0)
!7745 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7746)
!7746 = !{!7743}
!7747 = !DILocation(line: 946, column: 9, scope: !7744, inlinedAt: !7742)
!7748 = !DILocation(line: 946, column: 41, scope: !7735)
!7749 = !DILocalVariable(name: "self", scope: !7750, file: !468, line: 946, type: !48, align: 8)
!7750 = !DILexicalBlockFile(scope: !7751, file: !468, discriminator: 0)
!7751 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7752)
!7752 = !{!7749}
!7753 = !DILocation(line: 946, column: 41, scope: !7750, inlinedAt: !7748)
!7754 = !DILocation(line: 947, column: 6, scope: !7735)
!7755 = distinct !DISubprogram(name: "clone", linkageName: "_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h939ef3bcebe397e4E", scope: !7757, file: !7756, line: 50, type: !7758, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7761)
!7756 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "043b988f1a3e93e9ddc51ad6916c4166")
!7757 = !DINamespace(name: "{impl#5}", scope: !1235)
!7758 = !DISubroutineType(types: !7759)
!7759 = !{null, !7760}
!7760 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !1234, size: 64, align: 64, dwarfAddressSpace: 0)
!7761 = !{!7762}
!7762 = !DILocalVariable(name: "self", arg: 1, scope: !7755, file: !7756, line: 50, type: !7760)
!7763 = !DILocation(line: 50, column: 16, scope: !7755)
!7764 = !DILocation(line: 50, column: 21, scope: !7755)
!7765 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17ha553475e71c2f92aE", scope: !1609, file: !1605, line: 74, type: !7766, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7769)
!7766 = !DISubroutineType(types: !7767)
!7767 = !{!1612, !7768}
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !1609, size: 64, align: 64, dwarfAddressSpace: 0)
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "self", arg: 1, scope: !7765, file: !1605, line: 74, type: !7768)
!7771 = !DILocation(line: 74, column: 17, scope: !7765)
!7772 = !DILocation(line: 75, column: 9, scope: !7765)
!7773 = !DILocalVariable(name: "self", scope: !7774, file: !1605, line: 75, type: !7778, align: 8)
!7774 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hc9c6d7cac75f630fE", scope: !7775, file: !1605, line: 80, type: !7776, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7779)
!7775 = !DINamespace(name: "{impl#10}", scope: !1140)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!1612, !7778}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !1612, size: 64, align: 64, dwarfAddressSpace: 0)
!7779 = !{!7773, !7780, !7782}
!7780 = !DILocalVariable(name: "__self_0", scope: !7781, file: !1605, line: 75, type: !7494, align: 8)
!7781 = distinct !DILexicalBlock(scope: !7774, file: !1605, line: 80, column: 10)
!7782 = !DILocalVariable(name: "__self_1", scope: !7781, file: !1605, line: 75, type: !7783, align: 8)
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7784 = !DILocation(line: 75, column: 9, scope: !7774, inlinedAt: !7772)
!7785 = !DILocation(line: 75, column: 9, scope: !7781, inlinedAt: !7772)
!7786 = !DILocalVariable(name: "self", scope: !7787, file: !1605, line: 75, type: !7494, align: 8)
!7787 = !DILexicalBlockFile(scope: !7788, file: !1605, discriminator: 0)
!7788 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17hdc82791415db07b8E", scope: !7789, file: !5605, line: 29, type: !7790, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !7792)
!7789 = !DINamespace(name: "{impl#3}", scope: !1623)
!7790 = !DISubroutineType(types: !7791)
!7791 = !{!1622, !7494}
!7792 = !{!7786}
!7793 = !DILocation(line: 75, column: 9, scope: !7787, inlinedAt: !7794)
!7794 = !DILocation(line: 94, column: 9, scope: !7781, inlinedAt: !7772)
!7795 = !DILocation(line: 76, column: 6, scope: !7765)
!7796 = distinct !DISubprogram(name: "dying_next<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h676a0c4979658543E", scope: !1143, file: !1136, line: 1644, type: !7797, scopeLine: 1644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !7812)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!7799, !1667}
!7799 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", scope: !39, file: !2, size: 192, align: 64, elements: !7800, templateParams: !23, identifier: "368d93645b6fd2c378d297335617569b")
!7800 = !{!7801}
!7801 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7799, file: !2, size: 192, align: 64, elements: !7802, templateParams: !23, identifier: "bd62510223b9156dcb4e734606a78ae3", discriminator: !7811)
!7802 = !{!7803, !7807}
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7801, file: !2, baseType: !7804, size: 192, align: 64, extraData: i64 0)
!7804 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7799, file: !2, size: 192, align: 64, elements: !23, templateParams: !7805, identifier: "e9814b44722456bfdc473fc9ca099b79")
!7805 = !{!7806}
!7806 = !DITemplateTypeParameter(name: "T", type: !1672)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7801, file: !2, baseType: !7808, size: 192, align: 64)
!7808 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7799, file: !2, size: 192, align: 64, elements: !7809, templateParams: !7805, identifier: "6447dd2948413838c8a75cb5181bb5c5")
!7809 = !{!7810}
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7808, file: !2, baseType: !1672, size: 192, align: 64)
!7811 = !DIDerivedType(tag: DW_TAG_member, scope: !7799, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7812 = !{!7813}
!7813 = !DILocalVariable(name: "self", arg: 1, scope: !7796, file: !1136, line: 1645, type: !1667)
!7814 = !DILocation(line: 1645, column: 9, scope: !7796)
!7815 = !DILocation(line: 1647, column: 12, scope: !7796)
!7816 = !DILocation(line: 1648, column: 13, scope: !7796)
!7817 = !DILocation(line: 1648, column: 41, scope: !7796)
!7818 = !DILocation(line: 1651, column: 13, scope: !7796)
!7819 = !DILocation(line: 1652, column: 27, scope: !7796)
!7820 = !DILocation(line: 1652, column: 66, scope: !7796)
!7821 = !DILocation(line: 1652, column: 13, scope: !7796)
!7822 = !DILocation(line: 1647, column: 9, scope: !7796)
!7823 = !DILocation(line: 1654, column: 6, scope: !7796)
!7824 = !DILocation(line: 1649, column: 13, scope: !7796)
!7825 = distinct !DISubprogram(name: "replace<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::navigate::{impl#22}::deallocating_next_unchecked::{closure_env#0}<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN5alloc11collections5btree3mem7replace17h6861aa1a30a4a6f3E", scope: !4024, file: !7826, line: 20, type: !7827, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7845, retainedNodes: !7835)
!7826 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/btree/mem.rs", directory: "", checksumkind: CSK_MD5, checksum: "b4d35906f376ea6e2770ce6493db4607")
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!1672, !7829, !7830}
!7829 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", baseType: !1319, size: 64, align: 64, dwarfAddressSpace: 0)
!7830 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !7831, file: !2, align: 8, elements: !7833, templateParams: !23, identifier: "3e1b677f0c0d24ef8207742a1f4eb48f")
!7831 = !DINamespace(name: "deallocating_next_unchecked", scope: !7832)
!7832 = !DINamespace(name: "{impl#22}", scope: !1147)
!7833 = !{!7834}
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7830, file: !2, baseType: !1234, align: 8)
!7835 = !{!7836, !7837, !7838, !7840, !7842, !7844}
!7836 = !DILocalVariable(name: "v", arg: 1, scope: !7825, file: !7826, line: 20, type: !7829)
!7837 = !DILocalVariable(name: "change", arg: 2, scope: !7825, file: !7826, line: 20, type: !7830)
!7838 = !DILocalVariable(name: "guard", scope: !7839, file: !7826, line: 27, type: !4022, align: 1)
!7839 = distinct !DILexicalBlock(scope: !7825, file: !7826, line: 27, column: 5)
!7840 = !DILocalVariable(name: "value", scope: !7841, file: !7826, line: 28, type: !1319, align: 8)
!7841 = distinct !DILexicalBlock(scope: !7839, file: !7826, line: 28, column: 5)
!7842 = !DILocalVariable(name: "new_value", scope: !7843, file: !7826, line: 29, type: !1319, align: 8)
!7843 = distinct !DILexicalBlock(scope: !7841, file: !7826, line: 29, column: 5)
!7844 = !DILocalVariable(name: "ret", scope: !7843, file: !7826, line: 29, type: !1672, align: 8)
!7845 = !{!7846, !7847, !7848}
!7846 = !DITemplateTypeParameter(name: "T", type: !1319)
!7847 = !DITemplateTypeParameter(name: "R", type: !1672)
!7848 = !DITemplateTypeParameter(name: "impl FnOnce(T) -> (T, R)", type: !7830)
!7849 = !DILocation(line: 29, column: 21, scope: !7843)
!7850 = !DILocation(line: 20, column: 22, scope: !7825)
!7851 = !DILocation(line: 20, column: 33, scope: !7825)
!7852 = !DILocation(line: 27, column: 9, scope: !7839)
!7853 = !DILocation(line: 28, column: 9, scope: !7841)
!7854 = !DILocation(line: 29, column: 10, scope: !7843)
!7855 = !DILocalVariable(name: "src", scope: !7856, file: !7826, line: 31, type: !1319, align: 8)
!7856 = !DILexicalBlockFile(scope: !7857, file: !7826, discriminator: 0)
!7857 = distinct !DISubprogram(name: "write<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3ptr5write17h6ebcd3a0c2642394E", scope: !260, file: !682, line: 1292, type: !7858, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !7861)
!7858 = !DISubroutineType(types: !7859)
!7859 = !{null, !7860, !1319}
!7860 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", baseType: !1319, size: 64, align: 64, dwarfAddressSpace: 0)
!7861 = !{!7862, !7855}
!7862 = !DILocalVariable(name: "dst", scope: !7856, file: !7826, line: 31, type: !7860, align: 8)
!7863 = !{!7846}
!7864 = !DILocation(line: 31, column: 9, scope: !7856, inlinedAt: !7865)
!7865 = !DILocation(line: 31, column: 9, scope: !7843)
!7866 = !DILocalVariable(name: "t", scope: !7867, file: !7826, line: 33, type: !4022, align: 1)
!7867 = !DILexicalBlockFile(scope: !7868, file: !7826, discriminator: 0)
!7868 = distinct !DISubprogram(name: "forget<alloc::collections::btree::mem::replace::PanicGuard>", linkageName: "_ZN4core3mem6forget17h69b57383244bbb56E", scope: !79, file: !423, line: 150, type: !7869, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4027, retainedNodes: !7871)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{null, !4022}
!7871 = !{!7866}
!7872 = !DILocation(line: 33, column: 5, scope: !7867, inlinedAt: !7873)
!7873 = !DILocation(line: 33, column: 5, scope: !7843)
!7874 = !DILocalVariable(name: "tmp", scope: !7875, file: !7826, line: 28, type: !7884, align: 8)
!7875 = !DILexicalBlockFile(scope: !7876, file: !7826, discriminator: 0)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !682, line: 1105, column: 5)
!7877 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3ptr4read17h6338186a56ef4842E", scope: !260, file: !682, line: 1097, type: !7878, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !7881)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!1319, !7880}
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", baseType: !1319, size: 64, align: 64, dwarfAddressSpace: 0)
!7881 = !{!7882, !7874}
!7882 = !DILocalVariable(name: "src", scope: !7883, file: !7826, line: 28, type: !7880, align: 8)
!7883 = !DILexicalBlockFile(scope: !7877, file: !7826, discriminator: 0)
!7884 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !799, file: !2, size: 192, align: 64, elements: !7885, templateParams: !7863, identifier: "d760ada1ef77a44bfb2f0430eaaea617")
!7885 = !{!7886, !7887}
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !7884, file: !2, baseType: !7, align: 8)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7884, file: !2, baseType: !7888, size: 192, align: 64)
!7888 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !804, file: !2, size: 192, align: 64, elements: !7889, templateParams: !7863, identifier: "74bced4a42b8958087a6cea39fb5f34a")
!7889 = !{!7890}
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7888, file: !2, baseType: !1319, size: 192, align: 64)
!7891 = !DILocation(line: 28, column: 26, scope: !7875, inlinedAt: !7892)
!7892 = !DILocation(line: 28, column: 26, scope: !7839)
!7893 = !DILocalVariable(name: "self", scope: !7894, file: !7826, line: 28, type: !7884, align: 8)
!7894 = !DILexicalBlockFile(scope: !7895, file: !7826, discriminator: 0)
!7895 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h79a25203fb7e4332E", scope: !7884, file: !1452, line: 629, type: !7896, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!1319, !7884, !917}
!7898 = !{!7893}
!7899 = !DILocation(line: 28, column: 26, scope: !7894, inlinedAt: !7900)
!7900 = !DILocation(line: 1114, column: 9, scope: !7876, inlinedAt: !7892)
!7901 = !DILocalVariable(name: "slot", scope: !7902, file: !7826, line: 28, type: !7888, align: 8)
!7902 = !DILexicalBlockFile(scope: !7903, file: !7826, discriminator: 0)
!7903 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hce863fea10b2c706E", scope: !7888, file: !1418, line: 88, type: !7904, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !7906)
!7904 = !DISubroutineType(types: !7905)
!7905 = !{!1319, !7888}
!7906 = !{!7901}
!7907 = !DILocation(line: 28, column: 26, scope: !7902, inlinedAt: !7908)
!7908 = !DILocation(line: 634, column: 13, scope: !7895, inlinedAt: !7900)
!7909 = !DILocalVariable(name: "value", scope: !7910, file: !7826, line: 33, type: !4022, align: 1)
!7910 = !DILexicalBlockFile(scope: !7911, file: !7826, discriminator: 0)
!7911 = distinct !DISubprogram(name: "new<alloc::collections::btree::mem::replace::PanicGuard>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha7714aa5dc556143E", scope: !7912, file: !1418, line: 70, type: !7869, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4027, retainedNodes: !7915)
!7912 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>", scope: !804, file: !2, align: 8, elements: !7913, templateParams: !4027, identifier: "f0b1fb013d4a981f7ce99ff6b03fb2d0")
!7913 = !{!7914}
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7912, file: !2, baseType: !4022, align: 8)
!7915 = !{!7909}
!7916 = !DILocation(line: 33, column: 5, scope: !7910, inlinedAt: !7917)
!7917 = !DILocation(line: 151, column: 13, scope: !7868, inlinedAt: !7873)
!7918 = !DILocation(line: 27, column: 9, scope: !7825)
!7919 = !DILocation(line: 28, column: 36, scope: !7839)
!7920 = !DILocation(line: 28, column: 26, scope: !7883, inlinedAt: !7892)
!7921 = !DILocation(line: 28, column: 26, scope: !7922, inlinedAt: !7926)
!7922 = !DILexicalBlockFile(scope: !7923, file: !7826, discriminator: 0)
!7923 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h1d2775a5cf28efa0E", scope: !7884, file: !1452, line: 320, type: !7924, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !23)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!7884}
!7926 = !DILocation(line: 1105, column: 19, scope: !7877, inlinedAt: !7892)
!7927 = !DILocalVariable(name: "self", scope: !7928, file: !7826, line: 28, type: !7932, align: 8)
!7928 = !DILexicalBlockFile(scope: !7929, file: !7826, discriminator: 0)
!7929 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h823dae872373471aE", scope: !7884, file: !1452, line: 574, type: !7930, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !7933)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!7860, !7932}
!7932 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", baseType: !7884, size: 64, align: 64, dwarfAddressSpace: 0)
!7933 = !{!7927}
!7934 = !DILocation(line: 28, column: 26, scope: !7928, inlinedAt: !7935)
!7935 = !DILocation(line: 1113, column: 34, scope: !7876, inlinedAt: !7892)
!7936 = !DILocation(line: 29, column: 28, scope: !7841)
!7937 = !DILocation(line: 29, column: 35, scope: !7841)
!7938 = !DILocation(line: 35, column: 1, scope: !7825)
!7939 = !DILocation(line: 29, column: 10, scope: !7841)
!7940 = !DILocation(line: 29, column: 21, scope: !7841)
!7941 = !DILocation(line: 31, column: 20, scope: !7843)
!7942 = !DILocation(line: 31, column: 23, scope: !7843)
!7943 = !DILocation(line: 35, column: 2, scope: !7825)
!7944 = !DILocation(line: 20, column: 1, scope: !7825)
!7945 = distinct !DISubprogram(name: "deallocate_and_ascend<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h55014cf05e20a53cE", scope: !1166, file: !7946, line: 393, type: !7947, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !7949)
!7946 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/btree/node.rs", directory: "", checksumkind: CSK_MD5, checksum: "6d6896b6772bbabc4e5e58dc7aa6ff10")
!7947 = !DISubroutineType(types: !7948)
!7948 = !{!6876, !1166, !1234}
!7949 = !{!7950, !7951, !7952, !7954, !7956}
!7950 = !DILocalVariable(name: "self", arg: 1, scope: !7945, file: !7946, line: 394, type: !1166)
!7951 = !DILocalVariable(name: "alloc", arg: 2, scope: !7945, file: !7946, line: 395, type: !1234)
!7952 = !DILocalVariable(name: "height", scope: !7953, file: !7946, line: 397, type: !9, align: 8)
!7953 = distinct !DILexicalBlock(scope: !7945, file: !7946, line: 397, column: 9)
!7954 = !DILocalVariable(name: "node", scope: !7955, file: !7946, line: 398, type: !1171, align: 8)
!7955 = distinct !DILexicalBlock(scope: !7953, file: !7946, line: 398, column: 9)
!7956 = !DILocalVariable(name: "ret", scope: !7957, file: !7946, line: 399, type: !6876, align: 8)
!7957 = distinct !DILexicalBlock(scope: !7955, file: !7946, line: 399, column: 9)
!7958 = !DILocation(line: 399, column: 13, scope: !7957)
!7959 = !DILocation(line: 394, column: 9, scope: !7945)
!7960 = !DILocation(line: 395, column: 9, scope: !7945)
!7961 = !DILocalVariable(name: "self", scope: !7962, file: !7946, line: 399, type: !7964, align: 8)
!7962 = !DILexicalBlockFile(scope: !7963, file: !7946, discriminator: 0)
!7963 = distinct !DISubprogram(name: "ok<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h87c595ef59272d5fE", scope: !7964, file: !5392, line: 637, type: !7979, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7972, retainedNodes: !7981)
!7964 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !2066, file: !2, size: 256, align: 64, elements: !7965, templateParams: !23, identifier: "b24aad67ccae900121992a5037b207a0")
!7965 = !{!7966}
!7966 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7964, file: !2, size: 256, align: 64, elements: !7967, templateParams: !23, identifier: "3458f826e627bc096597a2d5796efdb0", discriminator: !7978)
!7967 = !{!7968, !7974}
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7966, file: !2, baseType: !7969, size: 256, align: 64, extraData: i64 0)
!7969 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7964, file: !2, size: 256, align: 64, elements: !7970, templateParams: !7972, identifier: "874d524f3e63421e529c3befc7345625")
!7970 = !{!7971}
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7969, file: !2, baseType: !6884, size: 192, align: 64, offset: 64)
!7972 = !{!6883, !7973}
!7973 = !DITemplateTypeParameter(name: "E", type: !1166)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7966, file: !2, baseType: !7975, size: 256, align: 64, extraData: i64 1)
!7975 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7964, file: !2, size: 256, align: 64, elements: !7976, templateParams: !7972, identifier: "12a48236afac7ac0d89c04a5760cc7a4")
!7976 = !{!7977}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7975, file: !2, baseType: !1166, size: 128, align: 64, offset: 64)
!7978 = !DIDerivedType(tag: DW_TAG_member, scope: !7964, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{!6876, !7964}
!7981 = !{!7961, !7982, !7985}
!7982 = !DILocalVariable(name: "x", scope: !7983, file: !7946, line: 399, type: !6884, align: 8)
!7983 = !DILexicalBlockFile(scope: !7984, file: !7946, discriminator: 0)
!7984 = distinct !DILexicalBlock(scope: !7963, file: !5392, line: 642, column: 13)
!7985 = !DILocalVariable(name: "x", scope: !7986, file: !7946, line: 399, type: !1166, align: 8)
!7986 = !DILexicalBlockFile(scope: !7987, file: !7946, discriminator: 0)
!7987 = distinct !DILexicalBlock(scope: !7963, file: !5392, line: 645, column: 13)
!7988 = !DILocation(line: 399, column: 19, scope: !7962, inlinedAt: !7989)
!7989 = !DILocation(line: 399, column: 19, scope: !7955)
!7990 = !DILocation(line: 399, column: 19, scope: !7983, inlinedAt: !7989)
!7991 = !DILocation(line: 397, column: 22, scope: !7945)
!7992 = !DILocation(line: 397, column: 13, scope: !7953)
!7993 = !DILocation(line: 398, column: 20, scope: !7953)
!7994 = !DILocation(line: 398, column: 13, scope: !7955)
!7995 = !DILocation(line: 411, column: 5, scope: !7945)
!7996 = !DILocation(line: 399, column: 19, scope: !7986, inlinedAt: !7989)
!7997 = !DILocation(line: 402, column: 17, scope: !7957)
!7998 = !DILocalVariable(name: "self", scope: !7999, file: !7946, line: 402, type: !1171, align: 8)
!7999 = !DILexicalBlockFile(scope: !8000, file: !7946, discriminator: 0)
!8000 = distinct !DISubprogram(name: "cast<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1eb66a4ea947e970E", scope: !1171, file: !445, line: 453, type: !8001, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8004, retainedNodes: !8003)
!8001 = !DISubroutineType(types: !8002)
!8002 = !{!339, !1171}
!8003 = !{!7998}
!8004 = !{!1295, !1950}
!8005 = !DILocation(line: 402, column: 17, scope: !7999, inlinedAt: !7997)
!8006 = !DILocalVariable(name: "self", scope: !8007, file: !7946, line: 402, type: !1171, align: 8)
!8007 = !DILexicalBlockFile(scope: !8008, file: !7946, discriminator: 0)
!8008 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haffd0a2485f82ff4E", scope: !1171, file: !445, line: 330, type: !8009, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1294, retainedNodes: !8012)
!8009 = !DISubroutineType(types: !8010)
!8010 = !{!8011, !1171}
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1175, size: 64, align: 64, dwarfAddressSpace: 0)
!8012 = !{!8006}
!8013 = !DILocation(line: 402, column: 17, scope: !8007, inlinedAt: !8014)
!8014 = !DILocation(line: 455, column: 41, scope: !8000, inlinedAt: !7997)
!8015 = !DILocalVariable(name: "ptr", scope: !8016, file: !7946, line: 402, type: !448, align: 8)
!8016 = !DILexicalBlockFile(scope: !8017, file: !7946, discriminator: 0)
!8017 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !8018)
!8018 = !{!8015}
!8019 = !DILocation(line: 402, column: 17, scope: !8016, inlinedAt: !8020)
!8020 = !DILocation(line: 455, column: 18, scope: !8000, inlinedAt: !7997)
!8021 = !DILocation(line: 403, column: 20, scope: !7957)
!8022 = !DILocation(line: 406, column: 21, scope: !8023, inlinedAt: !8032)
!8023 = !DILexicalBlockFile(scope: !8024, file: !7946, discriminator: 0)
!8024 = distinct !DISubprogram(name: "new<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h5410db8f545fa9d1E", scope: !1622, file: !5605, line: 127, type: !8025, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1294, retainedNodes: !8027)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!1622}
!8027 = !{!8028, !8031}
!8028 = !DILocalVariable(name: "size", scope: !8029, file: !7946, line: 406, type: !9, align: 8)
!8029 = !DILexicalBlockFile(scope: !8030, file: !7946, discriminator: 0)
!8030 = distinct !DILexicalBlock(scope: !8024, file: !5605, line: 128, column: 9)
!8031 = !DILocalVariable(name: "align", scope: !8029, file: !7946, line: 406, type: !9, align: 8)
!8032 = !DILocation(line: 406, column: 21, scope: !7957)
!8033 = !DILocation(line: 404, column: 21, scope: !8034, inlinedAt: !8041)
!8034 = !DILexicalBlockFile(scope: !8035, file: !7946, discriminator: 0)
!8035 = distinct !DISubprogram(name: "new<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h4f1b3378c6c8adfcE", scope: !1622, file: !5605, line: 127, type: !8025, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1253, retainedNodes: !8036)
!8036 = !{!8037, !8040}
!8037 = !DILocalVariable(name: "size", scope: !8038, file: !7946, line: 404, type: !9, align: 8)
!8038 = !DILexicalBlockFile(scope: !8039, file: !7946, discriminator: 0)
!8039 = distinct !DILexicalBlock(scope: !8035, file: !5605, line: 128, column: 9)
!8040 = !DILocalVariable(name: "align", scope: !8038, file: !7946, line: 404, type: !9, align: 8)
!8041 = !DILocation(line: 404, column: 21, scope: !7957)
!8042 = !DILocation(line: 404, column: 21, scope: !8038, inlinedAt: !8041)
!8043 = !DILocalVariable(name: "size", scope: !8044, file: !7946, line: 404, type: !9, align: 8)
!8044 = !DILexicalBlockFile(scope: !8045, file: !7946, discriminator: 0)
!8045 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !8046)
!8046 = !{!8043, !8047}
!8047 = !DILocalVariable(name: "align", scope: !8044, file: !7946, line: 404, type: !9, align: 8)
!8048 = !DILocation(line: 404, column: 21, scope: !8044, inlinedAt: !8049)
!8049 = !DILocation(line: 133, column: 18, scope: !8039, inlinedAt: !8041)
!8050 = !DILocalVariable(name: "align", scope: !8051, file: !7946, line: 404, type: !9, align: 8)
!8051 = !DILexicalBlockFile(scope: !8052, file: !7946, discriminator: 0)
!8052 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !8053)
!8053 = !{!8050}
!8054 = !DILocation(line: 404, column: 21, scope: !8051, inlinedAt: !8055)
!8055 = !DILocation(line: 100, column: 40, scope: !8045, inlinedAt: !8049)
!8056 = !DILocation(line: 134, column: 6, scope: !8057)
!8057 = !DILexicalBlockFile(scope: !7945, file: !5605, discriminator: 0)
!8058 = !DILocation(line: 401, column: 13, scope: !7957)
!8059 = !DILocation(line: 406, column: 21, scope: !8029, inlinedAt: !8032)
!8060 = !DILocalVariable(name: "size", scope: !8061, file: !7946, line: 406, type: !9, align: 8)
!8061 = !DILexicalBlockFile(scope: !8062, file: !7946, discriminator: 0)
!8062 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !8063)
!8063 = !{!8060, !8064}
!8064 = !DILocalVariable(name: "align", scope: !8061, file: !7946, line: 406, type: !9, align: 8)
!8065 = !DILocation(line: 406, column: 21, scope: !8061, inlinedAt: !8066)
!8066 = !DILocation(line: 133, column: 18, scope: !8030, inlinedAt: !8032)
!8067 = !DILocalVariable(name: "align", scope: !8068, file: !7946, line: 406, type: !9, align: 8)
!8068 = !DILexicalBlockFile(scope: !8069, file: !7946, discriminator: 0)
!8069 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !8070)
!8070 = !{!8067}
!8071 = !DILocation(line: 406, column: 21, scope: !8068, inlinedAt: !8072)
!8072 = !DILocation(line: 100, column: 40, scope: !8062, inlinedAt: !8066)
!8073 = !DILocation(line: 393, column: 5, scope: !7945)
!8074 = !DILocation(line: 411, column: 6, scope: !7945)
!8075 = distinct !DISubprogram(name: "right_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", linkageName: "_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h3df91ba1d6c979d6E", scope: !8076, file: !7946, line: 762, type: !8082, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8086, retainedNodes: !8084)
!8076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", scope: !1167, file: !2, size: 192, align: 64, elements: !8077, templateParams: !8081, identifier: "44132000684940886c69134c77f613cd")
!8077 = !{!8078, !8079, !8080}
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8076, file: !2, baseType: !1322, size: 128, align: 64)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8076, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8076, file: !2, baseType: !1677, align: 8)
!8081 = !{!1348, !1685}
!8082 = !DISubroutineType(types: !8083)
!8083 = !{!1319, !8076}
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "self", arg: 1, scope: !8075, file: !7946, line: 762, type: !8076)
!8086 = !{!1312, !1207, !1239, !8087}
!8087 = !DITemplateTypeParameter(name: "NodeType", type: !1334)
!8088 = !DILocation(line: 762, column: 23, scope: !8075)
!8089 = !DILocation(line: 763, column: 35, scope: !8075)
!8090 = !DILocation(line: 763, column: 46, scope: !8075)
!8091 = !DILocation(line: 763, column: 18, scope: !8075)
!8092 = !DILocation(line: 764, column: 6, scope: !8075)
!8093 = distinct !DISubprogram(name: "right_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", linkageName: "_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17he8d8f2e1ee6776c6E", scope: !8094, file: !7946, line: 762, type: !8100, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8104, retainedNodes: !8102)
!8094 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", scope: !1167, file: !2, size: 192, align: 64, elements: !8095, templateParams: !8099, identifier: "9e0dc64c37b0d8353d6cec817806ba3")
!8095 = !{!8096, !8097, !8098}
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8094, file: !2, baseType: !6887, size: 128, align: 64)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8094, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8094, file: !2, baseType: !1677, align: 8)
!8099 = !{!6907, !1685}
!8100 = !DISubroutineType(types: !8101)
!8101 = !{!6884, !8094}
!8102 = !{!8103}
!8103 = !DILocalVariable(name: "self", arg: 1, scope: !8093, file: !7946, line: 762, type: !8094)
!8104 = !{!1312, !1207, !1239, !8105}
!8105 = !DITemplateTypeParameter(name: "NodeType", type: !6899)
!8106 = !DILocation(line: 762, column: 23, scope: !8093)
!8107 = !DILocation(line: 763, column: 35, scope: !8093)
!8108 = !DILocation(line: 763, column: 46, scope: !8093)
!8109 = !DILocation(line: 763, column: 18, scope: !8093)
!8110 = !DILocation(line: 764, column: 6, scope: !8093)
!8111 = distinct !DISubprogram(name: "new_kv<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb9fdf2bfeab16f90E", scope: !1672, file: !7946, line: 752, type: !8112, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8117, retainedNodes: !8114)
!8112 = !DISubroutineType(types: !8113)
!8113 = !{!1672, !1166, !9}
!8114 = !{!8115, !8116}
!8115 = !DILocalVariable(name: "node", arg: 1, scope: !8111, file: !7946, line: 752, type: !1166)
!8116 = !DILocalVariable(name: "idx", arg: 2, scope: !8111, file: !7946, line: 752, type: !9)
!8117 = !{!1312, !1207, !1239, !8118}
!8118 = !DITemplateTypeParameter(name: "NodeType", type: !1308)
!8119 = !DILocation(line: 752, column: 26, scope: !8111)
!8120 = !DILocation(line: 752, column: 69, scope: !8111)
!8121 = !DILocation(line: 755, column: 9, scope: !8111)
!8122 = !DILocation(line: 756, column: 6, scope: !8111)
!8123 = distinct !DISubprogram(name: "new_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h815a005dcfafedc2E", scope: !6884, file: !7946, line: 803, type: !8124, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8104, retainedNodes: !8126)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{!6884, !6887, !9}
!8126 = !{!8127, !8128}
!8127 = !DILocalVariable(name: "node", arg: 1, scope: !8123, file: !7946, line: 803, type: !6887)
!8128 = !DILocalVariable(name: "idx", arg: 2, scope: !8123, file: !7946, line: 803, type: !9)
!8129 = !DILocation(line: 803, column: 28, scope: !8123)
!8130 = !DILocation(line: 803, column: 71, scope: !8123)
!8131 = !DILocation(line: 806, column: 9, scope: !8123)
!8132 = !DILocation(line: 807, column: 6, scope: !8123)
!8133 = distinct !DISubprogram(name: "new_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf40e30eef10bb2a6E", scope: !8134, file: !7946, line: 803, type: !8140, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8117, retainedNodes: !8142)
!8134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", scope: !1167, file: !2, size: 192, align: 64, elements: !8135, templateParams: !8139, identifier: "9c6ea5a86a1590fdb7580510a0c7b2ab")
!8135 = !{!8136, !8137, !8138}
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8134, file: !2, baseType: !1166, size: 128, align: 64)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8134, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8134, file: !2, baseType: !1341, align: 8)
!8139 = !{!1684, !1349}
!8140 = !DISubroutineType(types: !8141)
!8141 = !{!8134, !1166, !9}
!8142 = !{!8143, !8144}
!8143 = !DILocalVariable(name: "node", arg: 1, scope: !8133, file: !7946, line: 803, type: !1166)
!8144 = !DILocalVariable(name: "idx", arg: 2, scope: !8133, file: !7946, line: 803, type: !9)
!8145 = !DILocation(line: 803, column: 28, scope: !8133)
!8146 = !DILocation(line: 803, column: 71, scope: !8133)
!8147 = !DILocation(line: 806, column: 9, scope: !8133)
!8148 = !DILocation(line: 807, column: 6, scope: !8133)
!8149 = distinct !DISubprogram(name: "new_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hf47f891c74077144E", scope: !1319, file: !7946, line: 803, type: !8150, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8086, retainedNodes: !8152)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{!1319, !1322, !9}
!8152 = !{!8153, !8154}
!8153 = !DILocalVariable(name: "node", arg: 1, scope: !8149, file: !7946, line: 803, type: !1322)
!8154 = !DILocalVariable(name: "idx", arg: 2, scope: !8149, file: !7946, line: 803, type: !9)
!8155 = !DILocation(line: 803, column: 28, scope: !8149)
!8156 = !DILocation(line: 803, column: 71, scope: !8149)
!8157 = !DILocation(line: 806, column: 9, scope: !8149)
!8158 = !DILocation(line: 807, column: 6, scope: !8149)
!8159 = distinct !DISubprogram(name: "right_kv<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17h8390c123fb3000a4E", scope: !8134, file: !7946, line: 817, type: !8160, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8117, retainedNodes: !8177)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!8162, !8134}
!8162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>", scope: !2066, file: !2, size: 256, align: 64, elements: !8163, templateParams: !23, identifier: "6f571abb8141cc17852bd9c62a9c1d13")
!8163 = !{!8164}
!8164 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8162, file: !2, size: 256, align: 64, elements: !8165, templateParams: !23, identifier: "bafe7c67e7638b7b4eb0acf5600f9a5", discriminator: !8176)
!8165 = !{!8166, !8172}
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8164, file: !2, baseType: !8167, size: 256, align: 64, extraData: i64 0)
!8167 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8162, file: !2, size: 256, align: 64, elements: !8168, templateParams: !8170, identifier: "a13cd8d2be25994d83ba60dfe6a5e69")
!8168 = !{!8169}
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8167, file: !2, baseType: !1672, size: 192, align: 64, offset: 64)
!8170 = !{!7806, !8171}
!8171 = !DITemplateTypeParameter(name: "E", type: !8134)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8164, file: !2, baseType: !8173, size: 256, align: 64, extraData: i64 1)
!8173 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8162, file: !2, size: 256, align: 64, elements: !8174, templateParams: !8170, identifier: "23f0af83152948a8510e9bc89203435a")
!8174 = !{!8175}
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8173, file: !2, baseType: !8134, size: 192, align: 64, offset: 64)
!8176 = !DIDerivedType(tag: DW_TAG_member, scope: !8162, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!8177 = !{!8178}
!8178 = !DILocalVariable(name: "self", arg: 1, scope: !8159, file: !7946, line: 817, type: !8134)
!8179 = !DILocation(line: 817, column: 21, scope: !8159)
!8180 = !DILocation(line: 818, column: 12, scope: !8159)
!8181 = !DILocation(line: 818, column: 23, scope: !8159)
!8182 = !DILocation(line: 821, column: 17, scope: !8159)
!8183 = !DILocation(line: 821, column: 13, scope: !8159)
!8184 = !DILocation(line: 818, column: 9, scope: !8159)
!8185 = !DILocation(line: 819, column: 40, scope: !8159)
!8186 = !DILocation(line: 819, column: 51, scope: !8159)
!8187 = !DILocation(line: 819, column: 25, scope: !8159)
!8188 = !DILocation(line: 819, column: 13, scope: !8159)
!8189 = !DILocation(line: 823, column: 6, scope: !8159)
!8190 = distinct !DISubprogram(name: "force<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::KV>", linkageName: "_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hcaf4a4e45042e3ebE", scope: !1672, file: !7946, line: 1555, type: !8191, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8215, retainedNodes: !8209)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!8193, !1672}
!8193 = !DICompositeType(tag: DW_TAG_structure_type, name: "ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>", scope: !1167, file: !2, size: 256, align: 64, elements: !8194, templateParams: !23, identifier: "a46f6df6e482d6d0f552d17e04a29474")
!8194 = !{!8195}
!8195 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8193, file: !2, size: 256, align: 64, elements: !8196, templateParams: !23, identifier: "6250671921927c1c2e22ccc1f42d6b80", discriminator: !8208)
!8196 = !{!8197, !8204}
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "Leaf", scope: !8195, file: !2, baseType: !8198, size: 256, align: 64, extraData: i64 0)
!8198 = !DICompositeType(tag: DW_TAG_structure_type, name: "Leaf", scope: !8193, file: !2, size: 256, align: 64, elements: !8199, templateParams: !8201, identifier: "d43e88bd5435fdf43f55bb6d82338b37")
!8199 = !{!8200}
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8198, file: !2, baseType: !8076, size: 192, align: 64, offset: 64)
!8201 = !{!8202, !8203}
!8202 = !DITemplateTypeParameter(name: "Leaf", type: !8076)
!8203 = !DITemplateTypeParameter(name: "Internal", type: !8094)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "Internal", scope: !8195, file: !2, baseType: !8205, size: 256, align: 64, extraData: i64 1)
!8205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !8193, file: !2, size: 256, align: 64, elements: !8206, templateParams: !8201, identifier: "20c51c7ce957eef8db95576c0fd605f8")
!8206 = !{!8207}
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8205, file: !2, baseType: !8094, size: 192, align: 64, offset: 64)
!8208 = !DIDerivedType(tag: DW_TAG_member, scope: !8193, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!8209 = !{!8210, !8211, !8213}
!8210 = !DILocalVariable(name: "self", arg: 1, scope: !8190, file: !7946, line: 1556, type: !1672)
!8211 = !DILocalVariable(name: "node", scope: !8212, file: !7946, line: 1562, type: !1322, align: 8)
!8212 = distinct !DILexicalBlock(scope: !8190, file: !7946, line: 1562, column: 13)
!8213 = !DILocalVariable(name: "node", scope: !8214, file: !7946, line: 1565, type: !6887, align: 8)
!8214 = distinct !DILexicalBlock(scope: !8190, file: !7946, line: 1565, column: 13)
!8215 = !{!1312, !1207, !1239, !1685}
!8216 = !DILocation(line: 1556, column: 9, scope: !8190)
!8217 = !DILocation(line: 1561, column: 15, scope: !8190)
!8218 = !DILocation(line: 1561, column: 9, scope: !8190)
!8219 = !DILocation(line: 1562, column: 31, scope: !8190)
!8220 = !DILocation(line: 1562, column: 31, scope: !8212)
!8221 = !DILocation(line: 1563, column: 55, scope: !8212)
!8222 = !DILocation(line: 1563, column: 35, scope: !8212)
!8223 = !DILocation(line: 1563, column: 17, scope: !8212)
!8224 = !DILocation(line: 1564, column: 13, scope: !8190)
!8225 = !DILocation(line: 1565, column: 35, scope: !8190)
!8226 = !DILocation(line: 1565, column: 35, scope: !8214)
!8227 = !DILocation(line: 1566, column: 59, scope: !8214)
!8228 = !DILocation(line: 1566, column: 39, scope: !8214)
!8229 = !DILocation(line: 1566, column: 17, scope: !8214)
!8230 = !DILocation(line: 1567, column: 13, scope: !8190)
!8231 = !DILocation(line: 1569, column: 6, scope: !8190)
!8232 = distinct !DISubprogram(name: "drop_key_val<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h3e78732f6afe1257E", scope: !1672, file: !7946, line: 1086, type: !8233, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8240, retainedNodes: !8235)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{null, !1672}
!8235 = !{!8236, !8237}
!8236 = !DILocalVariable(name: "self", arg: 1, scope: !8232, file: !7946, line: 1086, type: !1672)
!8237 = !DILocalVariable(name: "leaf", scope: !8238, file: !7946, line: 1088, type: !8239, align: 8)
!8238 = distinct !DILexicalBlock(scope: !8232, file: !7946, line: 1088, column: 9)
!8239 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1175, size: 64, align: 64, dwarfAddressSpace: 0)
!8240 = !{!1207, !1239, !8118}
!8241 = !DILocation(line: 1086, column: 32, scope: !8232)
!8242 = !DILocation(line: 1088, column: 20, scope: !8232)
!8243 = !DILocation(line: 1088, column: 13, scope: !8238)
!8244 = !DILocation(line: 1090, column: 13, scope: !8238)
!8245 = !DILocalVariable(name: "self", scope: !8246, file: !7946, line: 1090, type: !8250, align: 8)
!8246 = !DILexicalBlockFile(scope: !8247, file: !7946, discriminator: 0)
!8247 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h8570e7d3d7a62f51E", scope: !5968, file: !5967, line: 436, type: !8248, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8257, retainedNodes: !8255)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{!3113, !8250, !9}
!8250 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>]", file: !2, size: 128, align: 64, elements: !8251, templateParams: !23, identifier: "ffbf1039d7b55f3ed9539884043eb2b9")
!8251 = !{!8252, !8254}
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8250, file: !2, baseType: !8253, size: 64, align: 64)
!8253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64, align: 64, dwarfAddressSpace: 0)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8250, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8255 = !{!8245, !8256}
!8256 = !DILocalVariable(name: "index", scope: !8246, file: !7946, line: 1090, type: !9, align: 8)
!8257 = !{!8258, !8259}
!8258 = !DITemplateTypeParameter(name: "T", type: !1274)
!8259 = !DITemplateTypeParameter(name: "I", type: !9)
!8260 = !DILocation(line: 1090, column: 13, scope: !8246, inlinedAt: !8244)
!8261 = !DILocation(line: 1090, column: 41, scope: !8238)
!8262 = !DILocalVariable(name: "self", scope: !8263, file: !7946, line: 1090, type: !9, align: 8)
!8263 = !DILexicalBlockFile(scope: !8264, file: !7946, discriminator: 0)
!8264 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h5bbda9ce113ba7faE", scope: !8265, file: !617, line: 231, type: !8266, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8284, retainedNodes: !8273)
!8265 = !DINamespace(name: "{impl#2}", scope: !619)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!8268, !9, !8269}
!8268 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", baseType: !1274, size: 64, align: 64, dwarfAddressSpace: 0)
!8269 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>]", file: !2, size: 128, align: 64, elements: !8270, templateParams: !23, identifier: "5462fa4fac8f207b3673e60f62c4429b")
!8270 = !{!8271, !8272}
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8269, file: !2, baseType: !8253, size: 64, align: 64)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8269, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8273 = !{!8262, !8274, !8275}
!8274 = !DILocalVariable(name: "slice", scope: !8263, file: !7946, line: 1090, type: !8269, align: 8)
!8275 = !DILocalVariable(name: "runtime", scope: !8276, file: !7946, line: 1090, type: !8278, align: 8)
!8276 = !DILexicalBlockFile(scope: !8277, file: !7946, discriminator: 0)
!8277 = distinct !DILexicalBlock(scope: !8264, file: !640, line: 2319, column: 13)
!8278 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", scope: !8279, file: !2, size: 128, align: 64, elements: !8280, templateParams: !23, identifier: "942d34ed3f48525f3f4f7e7186c8a296")
!8279 = !DINamespace(name: "get_unchecked_mut", scope: !8265)
!8280 = !{!8281, !8282}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8278, file: !2, baseType: !387, size: 64, align: 64)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8278, file: !2, baseType: !8283, size: 64, align: 64, offset: 64)
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>]", baseType: !8269, size: 64, align: 64, dwarfAddressSpace: 0)
!8284 = !{!8258}
!8285 = !DILocation(line: 1090, column: 13, scope: !8263, inlinedAt: !8286)
!8286 = !DILocation(line: 443, column: 24, scope: !8247, inlinedAt: !8244)
!8287 = !DILocalVariable(name: "self", scope: !8288, file: !7946, line: 1090, type: !8269, align: 8)
!8288 = !DILexicalBlockFile(scope: !8289, file: !7946, discriminator: 0)
!8289 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h129bd5fad9961892E", scope: !739, file: !455, line: 1759, type: !8290, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8284, retainedNodes: !8292)
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!8268, !8269}
!8292 = !{!8287}
!8293 = !DILocation(line: 1090, column: 13, scope: !8288, inlinedAt: !8294)
!8294 = !DILocation(line: 235, column: 13, scope: !8264, inlinedAt: !8286)
!8295 = !DILocalVariable(name: "self", scope: !8296, file: !7946, line: 1090, type: !8268, align: 8)
!8296 = !DILexicalBlockFile(scope: !8297, file: !7946, discriminator: 0)
!8297 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hea2649c2a52c657cE", scope: !456, file: !455, line: 977, type: !8298, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8284, retainedNodes: !8300)
!8298 = !DISubroutineType(types: !8299)
!8299 = !{!8268, !8268, !9}
!8300 = !{!8295, !8301}
!8301 = !DILocalVariable(name: "count", scope: !8296, file: !7946, line: 1090, type: !9, align: 8)
!8302 = !DILocation(line: 1090, column: 13, scope: !8296, inlinedAt: !8294)
!8303 = !DILocalVariable(name: "self", scope: !8304, file: !7946, line: 1090, type: !8268, align: 8)
!8304 = !DILexicalBlockFile(scope: !8305, file: !7946, discriminator: 0)
!8305 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha7b55bcbeed607ecE", scope: !456, file: !455, line: 462, type: !8306, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8284, retainedNodes: !8308)
!8306 = !DISubroutineType(types: !8307)
!8307 = !{!8268, !8268, !674}
!8308 = !{!8303, !8309}
!8309 = !DILocalVariable(name: "count", scope: !8304, file: !7946, line: 1090, type: !674, align: 8)
!8310 = !DILocation(line: 1090, column: 13, scope: !8304, inlinedAt: !8311)
!8311 = !DILocation(line: 982, column: 18, scope: !8297, inlinedAt: !8294)
!8312 = !DILocation(line: 1091, column: 13, scope: !8238)
!8313 = !DILocalVariable(name: "self", scope: !8314, file: !7946, line: 1091, type: !8318, align: 8)
!8314 = !DILexicalBlockFile(scope: !8315, file: !7946, discriminator: 0)
!8315 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h7852378f473b7eb5E", scope: !5968, file: !5967, line: 436, type: !8316, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8325, retainedNodes: !8323)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!3096, !8318, !9}
!8318 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>]", file: !2, size: 128, align: 64, elements: !8319, templateParams: !23, identifier: "8c07c11a76799415d94b215595286106")
!8319 = !{!8320, !8322}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8318, file: !2, baseType: !8321, size: 64, align: 64)
!8321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64, dwarfAddressSpace: 0)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8318, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8323 = !{!8313, !8324}
!8324 = !DILocalVariable(name: "index", scope: !8314, file: !7946, line: 1091, type: !9, align: 8)
!8325 = !{!8326, !8259}
!8326 = !DITemplateTypeParameter(name: "T", type: !1285)
!8327 = !DILocation(line: 1091, column: 13, scope: !8314, inlinedAt: !8312)
!8328 = !DILocation(line: 1091, column: 41, scope: !8238)
!8329 = !DILocalVariable(name: "self", scope: !8330, file: !7946, line: 1091, type: !9, align: 8)
!8330 = !DILexicalBlockFile(scope: !8331, file: !7946, discriminator: 0)
!8331 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7a68f5eef5bb19b6E", scope: !8265, file: !617, line: 231, type: !8332, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8349, retainedNodes: !8339)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!8334, !9, !8335}
!8334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", baseType: !1285, size: 64, align: 64, dwarfAddressSpace: 0)
!8335 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>]", file: !2, size: 128, align: 64, elements: !8336, templateParams: !23, identifier: "37a17f6d5a7d93fe2f47884cd60e7333")
!8336 = !{!8337, !8338}
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8335, file: !2, baseType: !8321, size: 64, align: 64)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8335, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8339 = !{!8329, !8340, !8341}
!8340 = !DILocalVariable(name: "slice", scope: !8330, file: !7946, line: 1091, type: !8335, align: 8)
!8341 = !DILocalVariable(name: "runtime", scope: !8342, file: !7946, line: 1091, type: !8344, align: 8)
!8342 = !DILexicalBlockFile(scope: !8343, file: !7946, discriminator: 0)
!8343 = distinct !DILexicalBlock(scope: !8331, file: !640, line: 2319, column: 13)
!8344 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", scope: !8279, file: !2, size: 128, align: 64, elements: !8345, templateParams: !23, identifier: "c1c5631c977277e1ea207c860d216b12")
!8345 = !{!8346, !8347}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8344, file: !2, baseType: !387, size: 64, align: 64)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8344, file: !2, baseType: !8348, size: 64, align: 64, offset: 64)
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>]", baseType: !8335, size: 64, align: 64, dwarfAddressSpace: 0)
!8349 = !{!8326}
!8350 = !DILocation(line: 1091, column: 13, scope: !8330, inlinedAt: !8351)
!8351 = !DILocation(line: 443, column: 24, scope: !8315, inlinedAt: !8312)
!8352 = !DILocalVariable(name: "self", scope: !8353, file: !7946, line: 1091, type: !8335, align: 8)
!8353 = !DILexicalBlockFile(scope: !8354, file: !7946, discriminator: 0)
!8354 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h871788d335bdc4e3E", scope: !739, file: !455, line: 1759, type: !8355, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8349, retainedNodes: !8357)
!8355 = !DISubroutineType(types: !8356)
!8356 = !{!8334, !8335}
!8357 = !{!8352}
!8358 = !DILocation(line: 1091, column: 13, scope: !8353, inlinedAt: !8359)
!8359 = !DILocation(line: 235, column: 13, scope: !8331, inlinedAt: !8351)
!8360 = !DILocalVariable(name: "self", scope: !8361, file: !7946, line: 1091, type: !8334, align: 8)
!8361 = !DILexicalBlockFile(scope: !8362, file: !7946, discriminator: 0)
!8362 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0326ad5c985f332dE", scope: !456, file: !455, line: 977, type: !8363, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8349, retainedNodes: !8365)
!8363 = !DISubroutineType(types: !8364)
!8364 = !{!8334, !8334, !9}
!8365 = !{!8360, !8366}
!8366 = !DILocalVariable(name: "count", scope: !8361, file: !7946, line: 1091, type: !9, align: 8)
!8367 = !DILocation(line: 1091, column: 13, scope: !8361, inlinedAt: !8359)
!8368 = !DILocalVariable(name: "self", scope: !8369, file: !7946, line: 1091, type: !8334, align: 8)
!8369 = !DILexicalBlockFile(scope: !8370, file: !7946, discriminator: 0)
!8370 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5a6fcd8067f1ae84E", scope: !456, file: !455, line: 462, type: !8371, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8349, retainedNodes: !8373)
!8371 = !DISubroutineType(types: !8372)
!8372 = !{!8334, !8334, !674}
!8373 = !{!8368, !8374}
!8374 = !DILocalVariable(name: "count", scope: !8369, file: !7946, line: 1091, type: !674, align: 8)
!8375 = !DILocation(line: 1091, column: 13, scope: !8369, inlinedAt: !8376)
!8376 = !DILocation(line: 982, column: 18, scope: !8362, inlinedAt: !8359)
!8377 = !DILocation(line: 1093, column: 6, scope: !8232)
!8378 = distinct !DISubprogram(name: "forget_node_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h50a5750fb4f55baeE", scope: !1319, file: !7946, line: 1530, type: !8379, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8381)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{!8134, !1319}
!8381 = !{!8382}
!8382 = !DILocalVariable(name: "self", arg: 1, scope: !8378, file: !7946, line: 1531, type: !1319)
!8383 = !DILocation(line: 1531, column: 9, scope: !8378)
!8384 = !DILocation(line: 1533, column: 35, scope: !8378)
!8385 = !DILocation(line: 1533, column: 60, scope: !8378)
!8386 = !DILocation(line: 1533, column: 18, scope: !8378)
!8387 = !DILocation(line: 1534, column: 6, scope: !8378)
!8388 = distinct !DISubprogram(name: "forget_node_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hc795042e42c23f11E", scope: !6884, file: !7946, line: 1538, type: !8389, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8391)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!8134, !6884}
!8391 = !{!8392}
!8392 = !DILocalVariable(name: "self", arg: 1, scope: !8388, file: !7946, line: 1539, type: !6884)
!8393 = !DILocation(line: 1539, column: 9, scope: !8388)
!8394 = !DILocation(line: 1541, column: 35, scope: !8388)
!8395 = !DILocation(line: 1541, column: 60, scope: !8388)
!8396 = !DILocation(line: 1541, column: 18, scope: !8388)
!8397 = !DILocation(line: 1542, column: 6, scope: !8388)
!8398 = distinct !DISubprogram(name: "descend<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h278c88ab0b769b59E", scope: !6884, file: !7946, line: 1005, type: !8399, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8401)
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!1166, !6884}
!8401 = !{!8402, !8403, !8406}
!8402 = !DILocalVariable(name: "self", arg: 1, scope: !8398, file: !7946, line: 1005, type: !6884)
!8403 = !DILocalVariable(name: "parent_ptr", scope: !8404, file: !7946, line: 1014, type: !8405, align: 8)
!8404 = distinct !DILexicalBlock(scope: !8398, file: !7946, line: 1014, column: 9)
!8405 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1190, size: 64, align: 64, dwarfAddressSpace: 0)
!8406 = !DILocalVariable(name: "node", scope: !8407, file: !7946, line: 1015, type: !1171, align: 8)
!8407 = distinct !DILexicalBlock(scope: !8404, file: !7946, line: 1015, column: 9)
!8408 = !DILocation(line: 1005, column: 20, scope: !8398)
!8409 = !DILocalVariable(name: "tmp", scope: !8410, file: !7946, line: 1015, type: !1195, align: 8)
!8410 = !DILexicalBlockFile(scope: !8411, file: !7946, discriminator: 0)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !682, line: 1105, column: 5)
!8412 = distinct !DISubprogram(name: "read<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr4read17h8bf767d04cc4fca7E", scope: !260, file: !682, line: 1097, type: !8413, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8416)
!8413 = !DISubroutineType(types: !8414)
!8414 = !{!1171, !8415}
!8415 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1171, size: 64, align: 64, dwarfAddressSpace: 0)
!8416 = !{!8417, !8409}
!8417 = !DILocalVariable(name: "src", scope: !8418, file: !7946, line: 1015, type: !8415, align: 8)
!8418 = !DILexicalBlockFile(scope: !8412, file: !7946, discriminator: 0)
!8419 = !DILocation(line: 1015, column: 29, scope: !8410, inlinedAt: !8420)
!8420 = !DILocation(line: 1152, column: 18, scope: !8421, inlinedAt: !8425)
!8421 = distinct !DISubprogram(name: "read<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17hcf35866457495e91E", scope: !437, file: !436, line: 1147, type: !8413, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8422)
!8422 = !{!8423}
!8423 = !DILocalVariable(name: "self", scope: !8424, file: !7946, line: 1015, type: !8415, align: 8)
!8424 = !DILexicalBlockFile(scope: !8421, file: !7946, discriminator: 0)
!8425 = !DILocation(line: 704, column: 13, scope: !8426, inlinedAt: !8433)
!8426 = distinct !DISubprogram(name: "assume_init_read<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_read17h8cd3a9188a1aca52E", scope: !1195, file: !1452, line: 699, type: !8427, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8430)
!8427 = !DISubroutineType(types: !8428)
!8428 = !{!1171, !8429, !917}
!8429 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1195, size: 64, align: 64, dwarfAddressSpace: 0)
!8430 = !{!8431}
!8431 = !DILocalVariable(name: "self", scope: !8432, file: !7946, line: 1015, type: !8429, align: 8)
!8432 = !DILexicalBlockFile(scope: !8426, file: !7946, discriminator: 0)
!8433 = !DILocation(line: 1015, column: 29, scope: !8404)
!8434 = !DILocation(line: 1006, column: 9, scope: !8398)
!8435 = !DILocation(line: 1014, column: 51, scope: !8398)
!8436 = !DILocation(line: 1014, column: 26, scope: !8398)
!8437 = !DILocation(line: 1014, column: 13, scope: !8404)
!8438 = !DILocalVariable(name: "self", scope: !8439, file: !7946, line: 1015, type: !8443, align: 8)
!8439 = !DILexicalBlockFile(scope: !8440, file: !7946, discriminator: 0)
!8440 = distinct !DISubprogram(name: "get_unchecked<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfe88e5464cc8b841E", scope: !5968, file: !5967, line: 398, type: !8441, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8450, retainedNodes: !8448)
!8441 = !DISubroutineType(types: !8442)
!8442 = !{!8429, !8443, !9}
!8443 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]", file: !2, size: 128, align: 64, elements: !8444, templateParams: !23, identifier: "d9d02912bfab88a87c2e8da061e10139")
!8444 = !{!8445, !8447}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8443, file: !2, baseType: !8446, size: 64, align: 64)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64, align: 64, dwarfAddressSpace: 0)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8443, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8448 = !{!8438, !8449}
!8449 = !DILocalVariable(name: "index", scope: !8439, file: !7946, line: 1015, type: !9, align: 8)
!8450 = !{!8451, !8259}
!8451 = !DITemplateTypeParameter(name: "T", type: !1195)
!8452 = !DILocation(line: 1015, column: 29, scope: !8439, inlinedAt: !8433)
!8453 = !DILocation(line: 1015, column: 63, scope: !8404)
!8454 = !DILocalVariable(name: "self", scope: !8455, file: !7946, line: 1015, type: !9, align: 8)
!8455 = !DILexicalBlockFile(scope: !8456, file: !7946, discriminator: 0)
!8456 = distinct !DISubprogram(name: "get_unchecked<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb65ccc3de73681cfE", scope: !8265, file: !617, line: 219, type: !8457, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8475, retainedNodes: !8464)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{!8459, !9, !8460}
!8459 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1195, size: 64, align: 64, dwarfAddressSpace: 0)
!8460 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]", file: !2, size: 128, align: 64, elements: !8461, templateParams: !23, identifier: "274c197d38da19199afb1958ea185a94")
!8461 = !{!8462, !8463}
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8460, file: !2, baseType: !8446, size: 64, align: 64)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8460, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8464 = !{!8454, !8465, !8466}
!8465 = !DILocalVariable(name: "slice", scope: !8455, file: !7946, line: 1015, type: !8460, align: 8)
!8466 = !DILocalVariable(name: "runtime", scope: !8467, file: !7946, line: 1015, type: !8469, align: 8)
!8467 = !DILexicalBlockFile(scope: !8468, file: !7946, discriminator: 0)
!8468 = distinct !DILexicalBlock(scope: !8456, file: !640, line: 2319, column: 13)
!8469 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", scope: !8470, file: !2, size: 128, align: 64, elements: !8471, templateParams: !23, identifier: "6adc59dc2e885d1e7fcbb059a8497c7d")
!8470 = !DINamespace(name: "get_unchecked", scope: !8265)
!8471 = !{!8472, !8473}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8469, file: !2, baseType: !387, size: 64, align: 64)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8469, file: !2, baseType: !8474, size: 64, align: 64, offset: 64)
!8474 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]", baseType: !8460, size: 64, align: 64, dwarfAddressSpace: 0)
!8475 = !{!8451}
!8476 = !DILocation(line: 1015, column: 29, scope: !8455, inlinedAt: !8477)
!8477 = !DILocation(line: 405, column: 20, scope: !8440, inlinedAt: !8433)
!8478 = !DILocalVariable(name: "self", scope: !8479, file: !7946, line: 1015, type: !8460, align: 8)
!8479 = !DILexicalBlockFile(scope: !8480, file: !7946, discriminator: 0)
!8480 = distinct !DISubprogram(name: "as_ptr<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h282121d1aed75eafE", scope: !655, file: !436, line: 1374, type: !8481, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8475, retainedNodes: !8483)
!8481 = !DISubroutineType(types: !8482)
!8482 = !{!8459, !8460}
!8483 = !{!8478}
!8484 = !DILocation(line: 1015, column: 29, scope: !8479, inlinedAt: !8485)
!8485 = !DILocation(line: 226, column: 13, scope: !8456, inlinedAt: !8477)
!8486 = !DILocalVariable(name: "self", scope: !8487, file: !7946, line: 1015, type: !8459, align: 8)
!8487 = !DILexicalBlockFile(scope: !8488, file: !7946, discriminator: 0)
!8488 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h36f73dd8d7d92738E", scope: !437, file: !436, line: 865, type: !8489, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8475, retainedNodes: !8491)
!8489 = !DISubroutineType(types: !8490)
!8490 = !{!8459, !8459, !9}
!8491 = !{!8486, !8492}
!8492 = !DILocalVariable(name: "count", scope: !8487, file: !7946, line: 1015, type: !9, align: 8)
!8493 = !DILocation(line: 1015, column: 29, scope: !8487, inlinedAt: !8485)
!8494 = !DILocalVariable(name: "self", scope: !8495, file: !7946, line: 1015, type: !8459, align: 8)
!8495 = !DILexicalBlockFile(scope: !8496, file: !7946, discriminator: 0)
!8496 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd722c57b015014eaE", scope: !437, file: !436, line: 452, type: !8497, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8475, retainedNodes: !8499)
!8497 = !DISubroutineType(types: !8498)
!8498 = !{!8459, !8459, !674}
!8499 = !{!8494, !8500}
!8500 = !DILocalVariable(name: "count", scope: !8495, file: !7946, line: 1015, type: !674, align: 8)
!8501 = !DILocation(line: 1015, column: 29, scope: !8495, inlinedAt: !8502)
!8502 = !DILocation(line: 870, column: 18, scope: !8488, inlinedAt: !8485)
!8503 = !DILocation(line: 1015, column: 29, scope: !8432, inlinedAt: !8433)
!8504 = !DILocalVariable(name: "self", scope: !8505, file: !7946, line: 1015, type: !8429, align: 8)
!8505 = !DILexicalBlockFile(scope: !8506, file: !7946, discriminator: 0)
!8506 = distinct !DISubprogram(name: "as_ptr<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hf4a29e0b4133a8c2E", scope: !1195, file: !1452, line: 535, type: !8507, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8509)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{!8415, !8429}
!8509 = !{!8504}
!8510 = !DILocation(line: 1015, column: 29, scope: !8505, inlinedAt: !8425)
!8511 = !DILocation(line: 1015, column: 29, scope: !8424, inlinedAt: !8425)
!8512 = !DILocation(line: 1015, column: 29, scope: !8418, inlinedAt: !8420)
!8513 = !DILocation(line: 1015, column: 29, scope: !8514, inlinedAt: !8518)
!8514 = !DILexicalBlockFile(scope: !8515, file: !7946, discriminator: 0)
!8515 = distinct !DISubprogram(name: "uninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17ha0b5a91dc5e7a90cE", scope: !1195, file: !1452, line: 320, type: !8516, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !23)
!8516 = !DISubroutineType(types: !8517)
!8517 = !{!1195}
!8518 = !DILocation(line: 1105, column: 19, scope: !8412, inlinedAt: !8420)
!8519 = !DILocalVariable(name: "self", scope: !8520, file: !7946, line: 1015, type: !8525, align: 8)
!8520 = !DILexicalBlockFile(scope: !8521, file: !7946, discriminator: 0)
!8521 = distinct !DISubprogram(name: "as_mut_ptr<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hd8413614bf65943eE", scope: !1195, file: !1452, line: 574, type: !8522, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8526)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!8524, !8525}
!8524 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1171, size: 64, align: 64, dwarfAddressSpace: 0)
!8525 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1195, size: 64, align: 64, dwarfAddressSpace: 0)
!8526 = !{!8519}
!8527 = !DILocation(line: 1015, column: 29, scope: !8520, inlinedAt: !8528)
!8528 = !DILocation(line: 1113, column: 34, scope: !8411, inlinedAt: !8420)
!8529 = !DILocalVariable(name: "self", scope: !8530, file: !7946, line: 1015, type: !1195, align: 8)
!8530 = !DILexicalBlockFile(scope: !8531, file: !7946, discriminator: 0)
!8531 = distinct !DISubprogram(name: "assume_init<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h8ac2575392a78f4cE", scope: !1195, file: !1452, line: 629, type: !8532, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8534)
!8532 = !DISubroutineType(types: !8533)
!8533 = !{!1171, !1195, !917}
!8534 = !{!8529}
!8535 = !DILocation(line: 1015, column: 29, scope: !8530, inlinedAt: !8536)
!8536 = !DILocation(line: 1114, column: 9, scope: !8411, inlinedAt: !8420)
!8537 = !DILocalVariable(name: "slot", scope: !8538, file: !7946, line: 1015, type: !1199, align: 8)
!8538 = !DILexicalBlockFile(scope: !8539, file: !7946, discriminator: 0)
!8539 = distinct !DISubprogram(name: "into_inner<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h397800b91cc5d409E", scope: !1199, file: !1418, line: 88, type: !8540, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1202, retainedNodes: !8542)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{!1171, !1199}
!8542 = !{!8537}
!8543 = !DILocation(line: 1015, column: 29, scope: !8538, inlinedAt: !8544)
!8544 = !DILocation(line: 634, column: 13, scope: !8531, inlinedAt: !8536)
!8545 = !DILocation(line: 1015, column: 13, scope: !8407)
!8546 = !DILocation(line: 1016, column: 33, scope: !8407)
!8547 = !DILocation(line: 1016, column: 9, scope: !8407)
!8548 = !DILocation(line: 1017, column: 6, scope: !8398)
!8549 = distinct !DISubprogram(name: "into_node<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", linkageName: "_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17he7e683b6a64520d4E", scope: !8134, file: !7946, line: 739, type: !8550, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8139, retainedNodes: !8552)
!8550 = !DISubroutineType(types: !8551)
!8551 = !{!1166, !8134}
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "self", arg: 1, scope: !8549, file: !7946, line: 739, type: !8134)
!8554 = !DILocation(line: 739, column: 22, scope: !8549)
!8555 = !DILocation(line: 740, column: 9, scope: !8549)
!8556 = !DILocation(line: 741, column: 6, scope: !8549)
!8557 = distinct !DISubprogram(name: "first_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h5c24819afbbba3bbE", scope: !6887, file: !7946, line: 335, type: !8558, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6902, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!6884, !6887}
!8560 = !{!8561}
!8561 = !DILocalVariable(name: "self", arg: 1, scope: !8557, file: !7946, line: 335, type: !6887)
!8562 = !DILocation(line: 335, column: 23, scope: !8557)
!8563 = !DILocation(line: 336, column: 18, scope: !8557)
!8564 = !DILocation(line: 337, column: 6, scope: !8557)
!8565 = distinct !DISubprogram(name: "first_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17hd457110759ca66abE", scope: !1322, file: !7946, line: 335, type: !8566, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1337, retainedNodes: !8568)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{!1319, !1322}
!8568 = !{!8569}
!8569 = !DILocalVariable(name: "self", arg: 1, scope: !8565, file: !7946, line: 335, type: !1322)
!8570 = !DILocation(line: 335, column: 23, scope: !8565)
!8571 = !DILocation(line: 336, column: 18, scope: !8565)
!8572 = !DILocation(line: 337, column: 6, scope: !8565)
!8573 = distinct !DISubprogram(name: "as_leaf_ptr<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hb2b340a320916b6dE", scope: !1166, file: !7946, line: 300, type: !8574, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1311, retainedNodes: !8577)
!8574 = !DISubroutineType(types: !8575)
!8575 = !{!8011, !8576}
!8576 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1166, size: 64, align: 64, dwarfAddressSpace: 0)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "this", arg: 1, scope: !8573, file: !7946, line: 300, type: !8576)
!8579 = !DILocation(line: 300, column: 20, scope: !8573)
!8580 = !DILocation(line: 304, column: 9, scope: !8573)
!8581 = !DILocalVariable(name: "self", scope: !8582, file: !7946, line: 304, type: !1171, align: 8)
!8582 = !DILexicalBlockFile(scope: !8583, file: !7946, discriminator: 0)
!8583 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haffd0a2485f82ff4E", scope: !1171, file: !445, line: 330, type: !8009, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1294, retainedNodes: !8584)
!8584 = !{!8581}
!8585 = !DILocation(line: 304, column: 9, scope: !8582, inlinedAt: !8580)
!8586 = !DILocation(line: 305, column: 6, scope: !8573)
!8587 = distinct !DISubprogram(name: "len<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hdd6b5636bab39150E", scope: !1166, file: !7946, line: 277, type: !8588, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1311, retainedNodes: !8590)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!9, !8576}
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "self", arg: 1, scope: !8587, file: !7946, line: 277, type: !8576)
!8592 = !DILocation(line: 277, column: 16, scope: !8587)
!8593 = !DILocation(line: 280, column: 32, scope: !8587)
!8594 = !DILocation(line: 280, column: 30, scope: !8587)
!8595 = !DILocalVariable(name: "small", scope: !8596, file: !7946, line: 280, type: !1268, align: 2)
!8596 = !DILexicalBlockFile(scope: !8597, file: !7946, discriminator: 0)
!8597 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf03c5b87e7bf0444E", scope: !8599, file: !8598, line: 53, type: !8601, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !8603)
!8598 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "e91066e40000f1322cc7cfcb428337d9")
!8599 = !DINamespace(name: "{impl#70}", scope: !8600)
!8600 = !DINamespace(name: "num", scope: !4202)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{!9, !1268}
!8603 = !{!8595}
!8604 = !DILocation(line: 280, column: 18, scope: !8596, inlinedAt: !8605)
!8605 = !DILocation(line: 280, column: 18, scope: !8587)
!8606 = !DILocation(line: 281, column: 6, scope: !8587)
!8607 = distinct !DISubprogram(name: "ascend<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5101e9d6037fa8a5E", scope: !1166, file: !7946, line: 318, type: !8608, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1311, retainedNodes: !8610)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!7964, !1166}
!8610 = !{!8611, !8612}
!8611 = !DILocalVariable(name: "self", arg: 1, scope: !8607, file: !7946, line: 319, type: !1166)
!8612 = !DILocalVariable(name: "leaf_ptr", scope: !8613, file: !7946, line: 324, type: !1174, align: 8)
!8613 = distinct !DILexicalBlock(scope: !8607, file: !7946, line: 324, column: 9)
!8614 = !DILocation(line: 319, column: 9, scope: !8607)
!8615 = !DILocation(line: 324, column: 13, scope: !8613)
!8616 = !DILocalVariable(name: "self", scope: !8617, file: !7946, line: 325, type: !6876, align: 8)
!8617 = !DILexicalBlockFile(scope: !8618, file: !7946, discriminator: 0)
!8618 = distinct !DISubprogram(name: "ok_or<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hdc8c9158e6ca6bb1E", scope: !6876, file: !1507, line: 1051, type: !8619, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7972, retainedNodes: !8621)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{!7964, !6876, !1166}
!8621 = !{!8616, !8622, !8623}
!8622 = !DILocalVariable(name: "err", scope: !8617, file: !7946, line: 325, type: !1166, align: 8)
!8623 = !DILocalVariable(name: "v", scope: !8624, file: !7946, line: 325, type: !6884, align: 8)
!8624 = !DILexicalBlockFile(scope: !8625, file: !7946, discriminator: 0)
!8625 = distinct !DILexicalBlock(scope: !8618, file: !1507, line: 1056, column: 13)
!8626 = !DILocation(line: 325, column: 9, scope: !8617, inlinedAt: !8627)
!8627 = !DILocation(line: 325, column: 9, scope: !8613)
!8628 = !DILocation(line: 325, column: 9, scope: !8624, inlinedAt: !8627)
!8629 = !DILocation(line: 321, column: 9, scope: !8607)
!8630 = !DILocation(line: 324, column: 34, scope: !8607)
!8631 = !DILocation(line: 325, column: 18, scope: !8613)
!8632 = !DILocalVariable(name: "self", scope: !8633, file: !7946, line: 325, type: !8637, align: 8)
!8633 = !DILexicalBlockFile(scope: !8634, file: !7946, discriminator: 0)
!8634 = distinct !DISubprogram(name: "as_ref<core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_ref17ha6970d5f247d5296E", scope: !1178, file: !1507, line: 626, type: !8635, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1184, retainedNodes: !8638)
!8635 = !DISubroutineType(types: !8636)
!8636 = !{!6860, !8637}
!8637 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1178, size: 64, align: 64, dwarfAddressSpace: 0)
!8638 = !{!8632, !8639}
!8639 = !DILocalVariable(name: "x", scope: !8640, file: !7946, line: 325, type: !6868, align: 8)
!8640 = !DILexicalBlockFile(scope: !8641, file: !7946, discriminator: 0)
!8641 = distinct !DILexicalBlock(scope: !8634, file: !1507, line: 628, column: 13)
!8642 = !DILocation(line: 325, column: 9, scope: !8633, inlinedAt: !8627)
!8643 = !DILocation(line: 325, column: 9, scope: !8640, inlinedAt: !8627)
!8644 = !DILocation(line: 327, column: 18, scope: !8613)
!8645 = !DILocation(line: 332, column: 20, scope: !8613)
!8646 = !DILocation(line: 333, column: 6, scope: !8607)
!8647 = distinct !DISubprogram(name: "{closure#0}<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hd294fbed258e1537E", scope: !6914, file: !7946, line: 327, type: !8648, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1311, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!6884, !6913, !6868}
!8650 = !{!8651, !8652, !8653}
!8651 = !DILocalVariable(name: "parent", arg: 2, scope: !8647, file: !7946, line: 327, type: !6868)
!8652 = !DILocalVariable(name: "self__height", scope: !8647, file: !7946, line: 319, type: !9, align: 8)
!8653 = !DILocalVariable(name: "leaf_ptr", scope: !8647, file: !7946, line: 324, type: !1174, align: 8)
!8654 = !DILocation(line: 319, column: 9, scope: !8647)
!8655 = !DILocation(line: 324, column: 13, scope: !8647)
!8656 = !DILocation(line: 327, column: 19, scope: !8647)
!8657 = !DILocation(line: 328, column: 46, scope: !8647)
!8658 = !DILocation(line: 328, column: 55, scope: !8647)
!8659 = !DILocation(line: 328, column: 23, scope: !8647)
!8660 = !DILocation(line: 329, column: 43, scope: !8647)
!8661 = !DILocalVariable(name: "self", scope: !8662, file: !7946, line: 329, type: !1261, align: 2)
!8662 = !DILexicalBlockFile(scope: !8663, file: !7946, discriminator: 0)
!8663 = distinct !DISubprogram(name: "assume_init<u16>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h52dce39082871008E", scope: !1261, file: !1452, line: 629, type: !8664, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1269, retainedNodes: !8666)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!1268, !1261, !917}
!8666 = !{!8661}
!8667 = !DILocation(line: 329, column: 43, scope: !8662, inlinedAt: !8660)
!8668 = !DILocalVariable(name: "slot", scope: !8669, file: !7946, line: 329, type: !1265, align: 2)
!8669 = !DILexicalBlockFile(scope: !8670, file: !7946, discriminator: 0)
!8670 = distinct !DISubprogram(name: "into_inner<u16>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17haea6145823b391ddE", scope: !1265, file: !1418, line: 88, type: !8671, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1269, retainedNodes: !8673)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!1268, !1265}
!8673 = !{!8668}
!8674 = !DILocation(line: 329, column: 43, scope: !8669, inlinedAt: !8675)
!8675 = !DILocation(line: 634, column: 13, scope: !8663, inlinedAt: !8660)
!8676 = !DILocalVariable(name: "small", scope: !8677, file: !7946, line: 329, type: !1268, align: 2)
!8677 = !DILexicalBlockFile(scope: !8678, file: !7946, discriminator: 0)
!8678 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf03c5b87e7bf0444E", scope: !8599, file: !8598, line: 53, type: !8601, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !8679)
!8679 = !{!8676}
!8680 = !DILocation(line: 329, column: 31, scope: !8677, inlinedAt: !8681)
!8681 = !DILocation(line: 329, column: 31, scope: !8647)
!8682 = !DILocation(line: 327, column: 27, scope: !8647)
!8683 = !DILocation(line: 331, column: 14, scope: !8647)
!8684 = distinct !DISubprogram(name: "as_leaf_dying<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$Type$GT$13as_leaf_dying17h1f2379036ae3410cE", scope: !1166, file: !7946, line: 446, type: !8685, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8692, retainedNodes: !8688)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{!8239, !8687}
!8687 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1166, size: 64, align: 64, dwarfAddressSpace: 0)
!8688 = !{!8689, !8690}
!8689 = !DILocalVariable(name: "self", arg: 1, scope: !8684, file: !7946, line: 446, type: !8687)
!8690 = !DILocalVariable(name: "ptr", scope: !8691, file: !7946, line: 447, type: !8011, align: 8)
!8691 = distinct !DILexicalBlock(scope: !8684, file: !7946, line: 447, column: 9)
!8692 = !{!1207, !1239, !1313}
!8693 = !DILocation(line: 446, column: 22, scope: !8684)
!8694 = !DILocation(line: 447, column: 19, scope: !8684)
!8695 = !DILocation(line: 447, column: 13, scope: !8691)
!8696 = !DILocation(line: 450, column: 6, scope: !8684)
!8697 = distinct !DISubprogram(name: "into_dying<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$Type$GT$10into_dying17h848264588b0c6279E", scope: !1371, file: !7946, line: 623, type: !8698, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8692, retainedNodes: !8700)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!1166, !1371}
!8700 = !{!8701}
!8701 = !DILocalVariable(name: "self", arg: 1, scope: !8697, file: !7946, line: 623, type: !1371)
!8702 = !DILocation(line: 623, column: 23, scope: !8697)
!8703 = !DILocation(line: 624, column: 9, scope: !8697)
!8704 = !DILocation(line: 625, column: 6, scope: !8697)
!8705 = distinct !DISubprogram(name: "forget_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17h3256c35dca3acab9E", scope: !1322, file: !7946, line: 664, type: !8706, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8708)
!8706 = !DISubroutineType(types: !8707)
!8707 = !{!1166, !1322}
!8708 = !{!8709}
!8709 = !DILocalVariable(name: "self", arg: 1, scope: !8705, file: !7946, line: 664, type: !1322)
!8710 = !DILocation(line: 664, column: 24, scope: !8705)
!8711 = !DILocation(line: 665, column: 9, scope: !8705)
!8712 = !DILocation(line: 666, column: 6, scope: !8705)
!8713 = distinct !DISubprogram(name: "forget_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17hf0d4364e798a6935E", scope: !6887, file: !7946, line: 671, type: !8714, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8716)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{!1166, !6887}
!8716 = !{!8717}
!8717 = !DILocalVariable(name: "self", arg: 1, scope: !8713, file: !7946, line: 671, type: !6887)
!8718 = !DILocation(line: 671, column: 24, scope: !8713)
!8719 = !DILocation(line: 672, column: 9, scope: !8713)
!8720 = !DILocation(line: 673, column: 6, scope: !8713)
!8721 = distinct !DISubprogram(name: "from_internal<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17h28781281238a36c7E", scope: !6887, file: !7946, line: 248, type: !8722, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8724)
!8722 = !DISubroutineType(types: !8723)
!8723 = !{!6887, !1186, !9}
!8724 = !{!8725, !8726}
!8725 = !DILocalVariable(name: "node", arg: 1, scope: !8721, file: !7946, line: 248, type: !1186)
!8726 = !DILocalVariable(name: "height", arg: 2, scope: !8721, file: !7946, line: 248, type: !9)
!8727 = !DILocation(line: 248, column: 22, scope: !8721)
!8728 = !DILocation(line: 248, column: 57, scope: !8721)
!8729 = !DILocation(line: 250, column: 33, scope: !8721)
!8730 = !DILocalVariable(name: "self", scope: !8731, file: !7946, line: 250, type: !1186, align: 8)
!8731 = !DILexicalBlockFile(scope: !8732, file: !7946, discriminator: 0)
!8732 = distinct !DISubprogram(name: "cast<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>, alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8241fa4835b683a0E", scope: !1186, file: !445, line: 453, type: !8733, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8736, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!1171, !1186}
!8735 = !{!8730}
!8736 = !{!1254, !8737}
!8737 = !DITemplateTypeParameter(name: "U", type: !1175)
!8738 = !DILocation(line: 250, column: 33, scope: !8731, inlinedAt: !8729)
!8739 = !DILocalVariable(name: "self", scope: !8740, file: !7946, line: 250, type: !1186, align: 8)
!8740 = !DILexicalBlockFile(scope: !8741, file: !7946, discriminator: 0)
!8741 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3ab5b48945014c5fE", scope: !1186, file: !445, line: 330, type: !8742, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1253, retainedNodes: !8744)
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!8405, !1186}
!8744 = !{!8739}
!8745 = !DILocation(line: 250, column: 33, scope: !8740, inlinedAt: !8746)
!8746 = !DILocation(line: 455, column: 41, scope: !8732, inlinedAt: !8729)
!8747 = !DILocalVariable(name: "ptr", scope: !8748, file: !7946, line: 250, type: !8011, align: 8)
!8748 = !DILexicalBlockFile(scope: !8749, file: !7946, discriminator: 0)
!8749 = distinct !DISubprogram(name: "new_unchecked<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2fe6e32de02e373cE", scope: !1171, file: !445, line: 196, type: !8750, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1294, retainedNodes: !8752)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!1171, !8011}
!8752 = !{!8747}
!8753 = !DILocation(line: 250, column: 33, scope: !8748, inlinedAt: !8754)
!8754 = !DILocation(line: 455, column: 18, scope: !8732, inlinedAt: !8729)
!8755 = !DILocation(line: 250, column: 9, scope: !8721)
!8756 = !DILocation(line: 251, column: 6, scope: !8721)
!8757 = distinct !DISubprogram(name: "as_internal_ptr<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17h890b3620526f2a76E", scope: !6887, file: !7946, line: 258, type: !8758, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8761)
!8758 = !DISubroutineType(types: !8759)
!8759 = !{!8405, !8760}
!8760 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", baseType: !6887, size: 64, align: 64, dwarfAddressSpace: 0)
!8761 = !{!8762}
!8762 = !DILocalVariable(name: "this", arg: 1, scope: !8757, file: !7946, line: 258, type: !8760)
!8763 = !DILocation(line: 258, column: 24, scope: !8757)
!8764 = !DILocation(line: 260, column: 9, scope: !8757)
!8765 = !DILocalVariable(name: "self", scope: !8766, file: !7946, line: 260, type: !1171, align: 8)
!8766 = !DILexicalBlockFile(scope: !8767, file: !7946, discriminator: 0)
!8767 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haffd0a2485f82ff4E", scope: !1171, file: !445, line: 330, type: !8009, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1294, retainedNodes: !8768)
!8768 = !{!8765}
!8769 = !DILocation(line: 260, column: 9, scope: !8766, inlinedAt: !8764)
!8770 = !DILocation(line: 261, column: 6, scope: !8757)
!8771 = distinct !DISubprogram(name: "force<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h09b40e64bc83d0e8E", scope: !1166, file: !7946, line: 678, type: !8772, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8790)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!8774, !1166}
!8774 = !DICompositeType(tag: DW_TAG_structure_type, name: "ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", scope: !1167, file: !2, size: 192, align: 64, elements: !8775, templateParams: !23, identifier: "6996d9b7a20ecaffea80e1d3e830c13")
!8775 = !{!8776}
!8776 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8774, file: !2, size: 192, align: 64, elements: !8777, templateParams: !23, identifier: "d820742492641b9ef5443cf376ee1677", discriminator: !8789)
!8777 = !{!8778, !8785}
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "Leaf", scope: !8776, file: !2, baseType: !8779, size: 192, align: 64, extraData: i64 0)
!8779 = !DICompositeType(tag: DW_TAG_structure_type, name: "Leaf", scope: !8774, file: !2, size: 192, align: 64, elements: !8780, templateParams: !8782, identifier: "c1bedeecfaed5cfd8d3135d77aba6801")
!8780 = !{!8781}
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8779, file: !2, baseType: !1322, size: 128, align: 64, offset: 64)
!8782 = !{!8783, !8784}
!8783 = !DITemplateTypeParameter(name: "Leaf", type: !1322)
!8784 = !DITemplateTypeParameter(name: "Internal", type: !6887)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "Internal", scope: !8776, file: !2, baseType: !8786, size: 192, align: 64, extraData: i64 1)
!8786 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !8774, file: !2, size: 192, align: 64, elements: !8787, templateParams: !8782, identifier: "1c3c2426fbfaa2f9ce80f5165b429c3e")
!8787 = !{!8788}
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8786, file: !2, baseType: !6887, size: 128, align: 64, offset: 64)
!8789 = !DIDerivedType(tag: DW_TAG_member, scope: !8774, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!8790 = !{!8791}
!8791 = !DILocalVariable(name: "self", arg: 1, scope: !8771, file: !7946, line: 679, type: !1166)
!8792 = !DILocation(line: 679, column: 9, scope: !8771)
!8793 = !DILocation(line: 684, column: 12, scope: !8771)
!8794 = !DILocation(line: 685, column: 31, scope: !8771)
!8795 = !DILocation(line: 685, column: 13, scope: !8771)
!8796 = !DILocation(line: 684, column: 9, scope: !8771)
!8797 = !DILocation(line: 691, column: 35, scope: !8771)
!8798 = !DILocation(line: 691, column: 13, scope: !8771)
!8799 = !DILocation(line: 697, column: 6, scope: !8771)
!8800 = distinct !DISubprogram(name: "full_range<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate10full_range17h1a89ec6e9fc01634E", scope: !1147, file: !8801, line: 289, type: !8802, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8804)
!8801 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/collections/btree/navigate.rs", directory: "", checksumkind: CSK_MD5, checksum: "42bb7a49bdbf5bdb886aa942955e09f5")
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!1146, !1166, !1166}
!8804 = !{!8805, !8806}
!8805 = !DILocalVariable(name: "root1", arg: 1, scope: !8800, file: !8801, line: 290, type: !1166)
!8806 = !DILocalVariable(name: "root2", arg: 2, scope: !8800, file: !8801, line: 291, type: !1166)
!8807 = !DILocation(line: 290, column: 5, scope: !8800)
!8808 = !DILocation(line: 291, column: 5, scope: !8800)
!8809 = !DILocation(line: 294, column: 21, scope: !8800)
!8810 = !DILocation(line: 294, column: 16, scope: !8800)
!8811 = !DILocation(line: 295, column: 20, scope: !8800)
!8812 = !DILocation(line: 295, column: 15, scope: !8800)
!8813 = !DILocation(line: 293, column: 5, scope: !8800)
!8814 = !DILocation(line: 297, column: 2, scope: !8800)
!8815 = distinct !DISubprogram(name: "first_leaf_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h31736a08cfb9f009E", scope: !1166, file: !8801, line: 618, type: !8816, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8818)
!8816 = !DISubroutineType(types: !8817)
!8817 = !{!1319, !1166}
!8818 = !{!8819, !8820, !8822, !8824}
!8819 = !DILocalVariable(name: "self", arg: 1, scope: !8815, file: !8801, line: 618, type: !1166)
!8820 = !DILocalVariable(name: "node", scope: !8821, file: !8801, line: 619, type: !1166, align: 8)
!8821 = distinct !DILexicalBlock(scope: !8815, file: !8801, line: 619, column: 9)
!8822 = !DILocalVariable(name: "leaf", scope: !8823, file: !8801, line: 622, type: !1322, align: 8)
!8823 = distinct !DILexicalBlock(scope: !8821, file: !8801, line: 622, column: 17)
!8824 = !DILocalVariable(name: "internal", scope: !8825, file: !8801, line: 623, type: !6887, align: 8)
!8825 = distinct !DILexicalBlock(scope: !8821, file: !8801, line: 623, column: 17)
!8826 = !DILocation(line: 618, column: 28, scope: !8815)
!8827 = !DILocation(line: 619, column: 13, scope: !8821)
!8828 = !DILocation(line: 619, column: 24, scope: !8815)
!8829 = !DILocation(line: 620, column: 9, scope: !8821)
!8830 = !DILocation(line: 621, column: 19, scope: !8821)
!8831 = !DILocation(line: 621, column: 13, scope: !8821)
!8832 = !DILocation(line: 622, column: 22, scope: !8821)
!8833 = !DILocation(line: 622, column: 22, scope: !8823)
!8834 = !DILocation(line: 622, column: 38, scope: !8823)
!8835 = !DILocation(line: 623, column: 26, scope: !8821)
!8836 = !DILocation(line: 623, column: 26, scope: !8825)
!8837 = !DILocation(line: 623, column: 46, scope: !8825)
!8838 = !DILocation(line: 623, column: 39, scope: !8825)
!8839 = !DILocation(line: 626, column: 6, scope: !8815)
!8840 = distinct !DISubprogram(name: "full_range<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17hc1846c3e5363f932E", scope: !1166, file: !8801, line: 354, type: !8841, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1206, retainedNodes: !8843)
!8841 = !DISubroutineType(types: !8842)
!8842 = !{!1146, !1166}
!8843 = !{!8844, !8845}
!8844 = !DILocalVariable(name: "self", arg: 1, scope: !8840, file: !8801, line: 354, type: !1166)
!8845 = !DILocalVariable(name: "self2", scope: !8846, file: !8801, line: 357, type: !1166, align: 8)
!8846 = distinct !DILexicalBlock(scope: !8840, file: !8801, line: 357, column: 9)
!8847 = !DILocation(line: 354, column: 23, scope: !8840)
!8848 = !DILocalVariable(name: "tmp", scope: !8849, file: !8801, line: 357, type: !8860, align: 8)
!8849 = !DILexicalBlockFile(scope: !8850, file: !8801, discriminator: 0)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !682, line: 1105, column: 5)
!8851 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3ptr4read17h9d2c4b0138c4201bE", scope: !260, file: !682, line: 1097, type: !8852, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !8855)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{!1166, !8854}
!8854 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1166, size: 64, align: 64, dwarfAddressSpace: 0)
!8855 = !{!8856, !8848}
!8856 = !DILocalVariable(name: "src", scope: !8857, file: !8801, line: 357, type: !8854, align: 8)
!8857 = !DILexicalBlockFile(scope: !8851, file: !8801, discriminator: 0)
!8858 = !{!8859}
!8859 = !DITemplateTypeParameter(name: "T", type: !1166)
!8860 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !799, file: !2, size: 128, align: 64, elements: !8861, templateParams: !8858, identifier: "76b8225cb4060d71fa6952aca0f5cef")
!8861 = !{!8862, !8863}
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !8860, file: !2, baseType: !7, align: 8)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8860, file: !2, baseType: !8864, size: 128, align: 64)
!8864 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !804, file: !2, size: 128, align: 64, elements: !8865, templateParams: !8858, identifier: "ef3d339f52957f8b5c74850acfafea7e")
!8865 = !{!8866}
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8864, file: !2, baseType: !1166, size: 128, align: 64)
!8867 = !DILocation(line: 357, column: 30, scope: !8849, inlinedAt: !8868)
!8868 = !DILocation(line: 357, column: 30, scope: !8840)
!8869 = !DILocation(line: 357, column: 40, scope: !8840)
!8870 = !DILocation(line: 357, column: 30, scope: !8857, inlinedAt: !8868)
!8871 = !DILocation(line: 357, column: 30, scope: !8872, inlinedAt: !8876)
!8872 = !DILexicalBlockFile(scope: !8873, file: !8801, discriminator: 0)
!8873 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf278e722a3d21ea5E", scope: !8860, file: !1452, line: 320, type: !8874, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !23)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!8860}
!8876 = !DILocation(line: 1105, column: 19, scope: !8851, inlinedAt: !8868)
!8877 = !DILocalVariable(name: "self", scope: !8878, file: !8801, line: 357, type: !8883, align: 8)
!8878 = !DILexicalBlockFile(scope: !8879, file: !8801, discriminator: 0)
!8879 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb2f5ec85398d33ffE", scope: !8860, file: !1452, line: 574, type: !8880, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !8884)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!8882, !8883}
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1166, size: 64, align: 64, dwarfAddressSpace: 0)
!8883 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !8860, size: 64, align: 64, dwarfAddressSpace: 0)
!8884 = !{!8877}
!8885 = !DILocation(line: 357, column: 30, scope: !8878, inlinedAt: !8886)
!8886 = !DILocation(line: 1113, column: 34, scope: !8850, inlinedAt: !8868)
!8887 = !DILocalVariable(name: "self", scope: !8888, file: !8801, line: 357, type: !8860, align: 8)
!8888 = !DILexicalBlockFile(scope: !8889, file: !8801, discriminator: 0)
!8889 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h63b5b23af7891365E", scope: !8860, file: !1452, line: 629, type: !8890, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !8892)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{!1166, !8860, !917}
!8892 = !{!8887}
!8893 = !DILocation(line: 357, column: 30, scope: !8888, inlinedAt: !8894)
!8894 = !DILocation(line: 1114, column: 9, scope: !8850, inlinedAt: !8868)
!8895 = !DILocalVariable(name: "slot", scope: !8896, file: !8801, line: 357, type: !8864, align: 8)
!8896 = !DILexicalBlockFile(scope: !8897, file: !8801, discriminator: 0)
!8897 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h4b6e5d8a7fb32ac9E", scope: !8864, file: !1418, line: 88, type: !8898, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !8900)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!1166, !8864}
!8900 = !{!8895}
!8901 = !DILocation(line: 357, column: 30, scope: !8896, inlinedAt: !8902)
!8902 = !DILocation(line: 634, column: 13, scope: !8889, inlinedAt: !8894)
!8903 = !DILocation(line: 357, column: 13, scope: !8846)
!8904 = !DILocation(line: 358, column: 20, scope: !8846)
!8905 = !DILocation(line: 358, column: 9, scope: !8846)
!8906 = !DILocation(line: 359, column: 6, scope: !8840)
!8907 = distinct !DISubprogram(name: "next_leaf_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h18f48e8ddc73bee9E", scope: !1672, file: !8801, line: 699, type: !8908, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !8910)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{!1319, !1672}
!8910 = !{!8911, !8912, !8914, !8916}
!8911 = !DILocalVariable(name: "self", arg: 1, scope: !8907, file: !8801, line: 699, type: !1672)
!8912 = !DILocalVariable(name: "leaf_kv", scope: !8913, file: !8801, line: 701, type: !8076, align: 8)
!8913 = distinct !DILexicalBlock(scope: !8907, file: !8801, line: 701, column: 13)
!8914 = !DILocalVariable(name: "internal_kv", scope: !8915, file: !8801, line: 702, type: !8094, align: 8)
!8915 = distinct !DILexicalBlock(scope: !8907, file: !8801, line: 702, column: 13)
!8916 = !DILocalVariable(name: "next_internal_edge", scope: !8917, file: !8801, line: 703, type: !6884, align: 8)
!8917 = distinct !DILexicalBlock(scope: !8915, file: !8801, line: 703, column: 17)
!8918 = !DILocation(line: 699, column: 27, scope: !8907)
!8919 = !DILocation(line: 701, column: 18, scope: !8913)
!8920 = !DILocation(line: 702, column: 22, scope: !8915)
!8921 = !DILocation(line: 703, column: 21, scope: !8917)
!8922 = !DILocation(line: 700, column: 15, scope: !8907)
!8923 = !DILocation(line: 700, column: 9, scope: !8907)
!8924 = !DILocation(line: 701, column: 18, scope: !8907)
!8925 = !DILocation(line: 701, column: 30, scope: !8913)
!8926 = !DILocation(line: 702, column: 22, scope: !8907)
!8927 = !DILocation(line: 703, column: 42, scope: !8915)
!8928 = !DILocation(line: 704, column: 17, scope: !8917)
!8929 = !DILocation(line: 705, column: 13, scope: !8907)
!8930 = !DILocation(line: 707, column: 6, scope: !8907)
!8931 = !DILocation(line: 701, column: 49, scope: !8907)
!8932 = distinct !DISubprogram(name: "deallocating_end<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17hec1c06f48a7b3557E", scope: !1319, file: !8801, line: 504, type: !8933, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !8935)
!8933 = !DISubroutineType(types: !8934)
!8934 = !{null, !1319, !1234}
!8935 = !{!8936, !8937, !8938, !8940}
!8936 = !DILocalVariable(name: "self", arg: 1, scope: !8932, file: !8801, line: 504, type: !1319)
!8937 = !DILocalVariable(name: "alloc", arg: 2, scope: !8932, file: !8801, line: 504, type: !1234)
!8938 = !DILocalVariable(name: "edge", scope: !8939, file: !8801, line: 505, type: !8134, align: 8)
!8939 = distinct !DILexicalBlock(scope: !8932, file: !8801, line: 505, column: 9)
!8940 = !DILocalVariable(name: "parent_edge", scope: !8941, file: !8801, line: 506, type: !6884, align: 8)
!8941 = distinct !DILexicalBlock(scope: !8939, file: !8801, line: 508, column: 9)
!8942 = !DILocation(line: 504, column: 47, scope: !8932)
!8943 = !DILocation(line: 504, column: 53, scope: !8932)
!8944 = !DILocation(line: 505, column: 13, scope: !8939)
!8945 = !DILocation(line: 506, column: 24, scope: !8941)
!8946 = !DILocation(line: 505, column: 24, scope: !8932)
!8947 = !DILocation(line: 511, column: 5, scope: !8932)
!8948 = !DILocation(line: 506, column: 9, scope: !8939)
!8949 = !DILocation(line: 507, column: 22, scope: !8941)
!8950 = !DILocation(line: 507, column: 61, scope: !8941)
!8951 = !DILocation(line: 506, column: 19, scope: !8941)
!8952 = !DILocation(line: 509, column: 20, scope: !8941)
!8953 = !DILocation(line: 511, column: 6, scope: !8932)
!8954 = !DILocation(line: 509, column: 13, scope: !8941)
!8955 = !DILocation(line: 504, column: 5, scope: !8932)
!8956 = distinct !DISubprogram(name: "deallocating_next<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17h426aa1ed3198066fE", scope: !1319, file: !8801, line: 447, type: !8957, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !8976)
!8957 = !DISubroutineType(types: !8958)
!8958 = !{!8959, !1319, !1234}
!8959 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", scope: !39, file: !2, size: 384, align: 64, elements: !8960, templateParams: !23, identifier: "550a9ff249c18f02239e7dd2c2ff9e66")
!8960 = !{!8961}
!8961 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8959, file: !2, size: 384, align: 64, elements: !8962, templateParams: !23, identifier: "42de5d6bd237c752c84608d508f32c2c", discriminator: !8975)
!8962 = !{!8963, !8971}
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8961, file: !2, baseType: !8964, size: 384, align: 64, extraData: i64 0)
!8964 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8959, file: !2, size: 384, align: 64, elements: !23, templateParams: !8965, identifier: "a44cd40640482906a0045485630daa98")
!8965 = !{!8966}
!8966 = !DITemplateTypeParameter(name: "T", type: !8967)
!8967 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)", file: !2, size: 384, align: 64, elements: !8968, templateParams: !23, identifier: "9393bdf02523f992d2f9f8ec6dd8e8f9")
!8968 = !{!8969, !8970}
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8967, file: !2, baseType: !1319, size: 192, align: 64)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8967, file: !2, baseType: !1672, size: 192, align: 64, offset: 192)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8961, file: !2, baseType: !8972, size: 384, align: 64)
!8972 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8959, file: !2, size: 384, align: 64, elements: !8973, templateParams: !8965, identifier: "71a56c2dd397692ec7540da95e1f0ff0")
!8973 = !{!8974}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8972, file: !2, baseType: !8967, size: 384, align: 64)
!8975 = !DIDerivedType(tag: DW_TAG_member, scope: !8959, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!8976 = !{!8977, !8978, !8979, !8981, !8983, !8985}
!8977 = !DILocalVariable(name: "self", arg: 1, scope: !8956, file: !8801, line: 448, type: !1319)
!8978 = !DILocalVariable(name: "alloc", arg: 2, scope: !8956, file: !8801, line: 449, type: !1234)
!8979 = !DILocalVariable(name: "edge", scope: !8980, file: !8801, line: 452, type: !8134, align: 8)
!8980 = distinct !DILexicalBlock(scope: !8956, file: !8801, line: 452, column: 9)
!8981 = !DILocalVariable(name: "kv", scope: !8982, file: !8801, line: 455, type: !1672, align: 8)
!8982 = distinct !DILexicalBlock(scope: !8980, file: !8801, line: 455, column: 17)
!8983 = !DILocalVariable(name: "last_edge", scope: !8984, file: !8801, line: 456, type: !8134, align: 8)
!8984 = distinct !DILexicalBlock(scope: !8980, file: !8801, line: 456, column: 17)
!8985 = !DILocalVariable(name: "parent_edge", scope: !8986, file: !8801, line: 458, type: !6884, align: 8)
!8986 = distinct !DILexicalBlock(scope: !8984, file: !8801, line: 458, column: 25)
!8987 = !DILocation(line: 448, column: 9, scope: !8956)
!8988 = !DILocation(line: 449, column: 9, scope: !8956)
!8989 = !DILocation(line: 452, column: 13, scope: !8980)
!8990 = !DILocation(line: 455, column: 20, scope: !8982)
!8991 = !DILocation(line: 456, column: 21, scope: !8984)
!8992 = !DILocation(line: 458, column: 30, scope: !8986)
!8993 = !DILocalVariable(name: "tmp", scope: !8994, file: !8801, line: 455, type: !9003, align: 8)
!8994 = !DILexicalBlockFile(scope: !8995, file: !8801, discriminator: 0)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !682, line: 1105, column: 5)
!8996 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3ptr4read17hde0d399c725cac1dE", scope: !260, file: !682, line: 1097, type: !8997, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7805, retainedNodes: !9000)
!8997 = !DISubroutineType(types: !8998)
!8998 = !{!1672, !8999}
!8999 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", baseType: !1672, size: 64, align: 64, dwarfAddressSpace: 0)
!9000 = !{!9001, !8993}
!9001 = !DILocalVariable(name: "src", scope: !9002, file: !8801, line: 455, type: !8999, align: 8)
!9002 = !DILexicalBlockFile(scope: !8996, file: !8801, discriminator: 0)
!9003 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", scope: !799, file: !2, size: 192, align: 64, elements: !9004, templateParams: !7805, identifier: "ab0b30b72f7cfb8224d8bafa2f85e768")
!9004 = !{!9005, !9006}
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !9003, file: !2, baseType: !7, align: 8)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9003, file: !2, baseType: !9007, size: 192, align: 64)
!9007 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", scope: !804, file: !2, size: 192, align: 64, elements: !9008, templateParams: !7805, identifier: "590458a143a725fcaf5e978325627c26")
!9008 = !{!9009}
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9007, file: !2, baseType: !1672, size: 192, align: 64)
!9010 = !DILocation(line: 455, column: 49, scope: !8994, inlinedAt: !9011)
!9011 = !DILocation(line: 455, column: 49, scope: !8982)
!9012 = !DILocalVariable(name: "self", scope: !9013, file: !8801, line: 455, type: !9003, align: 8)
!9013 = !DILexicalBlockFile(scope: !9014, file: !8801, discriminator: 0)
!9014 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h9e825aa8a2588a46E", scope: !9003, file: !1452, line: 629, type: !9015, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7805, retainedNodes: !9017)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{!1672, !9003, !917}
!9017 = !{!9012}
!9018 = !DILocation(line: 455, column: 49, scope: !9013, inlinedAt: !9019)
!9019 = !DILocation(line: 1114, column: 9, scope: !8995, inlinedAt: !9011)
!9020 = !DILocalVariable(name: "slot", scope: !9021, file: !8801, line: 455, type: !9007, align: 8)
!9021 = !DILexicalBlockFile(scope: !9022, file: !8801, discriminator: 0)
!9022 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h5ed0d7bf4d18564bE", scope: !9007, file: !1418, line: 88, type: !9023, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7805, retainedNodes: !9025)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!1672, !9007}
!9025 = !{!9020}
!9026 = !DILocation(line: 455, column: 49, scope: !9021, inlinedAt: !9027)
!9027 = !DILocation(line: 634, column: 13, scope: !9014, inlinedAt: !9019)
!9028 = !DILocation(line: 452, column: 24, scope: !8956)
!9029 = !DILocation(line: 464, column: 5, scope: !8956)
!9030 = !DILocation(line: 453, column: 9, scope: !8980)
!9031 = !DILocation(line: 454, column: 26, scope: !8980)
!9032 = !DILocation(line: 454, column: 20, scope: !8980)
!9033 = !DILocation(line: 455, column: 20, scope: !8980)
!9034 = !DILocation(line: 455, column: 59, scope: !8982)
!9035 = !DILocation(line: 455, column: 49, scope: !9002, inlinedAt: !9011)
!9036 = !DILocation(line: 455, column: 49, scope: !9037, inlinedAt: !9041)
!9037 = !DILexicalBlockFile(scope: !9038, file: !8801, discriminator: 0)
!9038 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hba0d0b7da3775e21E", scope: !9003, file: !1452, line: 320, type: !9039, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7805, retainedNodes: !23)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{!9003}
!9041 = !DILocation(line: 1105, column: 19, scope: !8996, inlinedAt: !9011)
!9042 = !DILocalVariable(name: "self", scope: !9043, file: !8801, line: 455, type: !9048, align: 8)
!9043 = !DILexicalBlockFile(scope: !9044, file: !8801, discriminator: 0)
!9044 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h4fb33e677c783ac9E", scope: !9003, file: !1452, line: 574, type: !9045, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7805, retainedNodes: !9049)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{!9047, !9048}
!9047 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", baseType: !1672, size: 64, align: 64, dwarfAddressSpace: 0)
!9048 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", baseType: !9003, size: 64, align: 64, dwarfAddressSpace: 0)
!9049 = !{!9042}
!9050 = !DILocation(line: 455, column: 49, scope: !9043, inlinedAt: !9051)
!9051 = !DILocation(line: 1113, column: 34, scope: !8995, inlinedAt: !9011)
!9052 = !DILocation(line: 456, column: 21, scope: !8980)
!9053 = !DILocation(line: 457, column: 36, scope: !8984)
!9054 = !DILocation(line: 457, column: 80, scope: !8984)
!9055 = !DILocation(line: 457, column: 27, scope: !8984)
!9056 = !DILocation(line: 457, column: 21, scope: !8984)
!9057 = !DILocation(line: 459, column: 40, scope: !8984)
!9058 = !DILocation(line: 1, column: 1, scope: !9059)
!9059 = !DILexicalBlockFile(scope: !8980, file: !4302, discriminator: 0)
!9060 = !DILocation(line: 458, column: 30, scope: !8984)
!9061 = !DILocation(line: 458, column: 46, scope: !8986)
!9062 = !DILocation(line: 454, column: 13, scope: !8980)
!9063 = !DILocation(line: 455, column: 40, scope: !8982)
!9064 = !DILocation(line: 455, column: 84, scope: !8982)
!9065 = !DILocation(line: 455, column: 39, scope: !8982)
!9066 = !DILocation(line: 455, column: 34, scope: !8982)
!9067 = !DILocation(line: 447, column: 5, scope: !8956)
!9068 = !DILocation(line: 464, column: 6, scope: !8956)
!9069 = distinct !DISubprogram(name: "deallocating_next_unchecked<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked17h6f18ca69ff8e33b2E", scope: !1319, file: !8801, line: 583, type: !9070, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !9072)
!9070 = !DISubroutineType(types: !9071)
!9071 = !{!1672, !7829, !1234}
!9072 = !{!9073, !9074}
!9073 = !DILocalVariable(name: "self", arg: 1, scope: !9069, file: !8801, line: 584, type: !7829)
!9074 = !DILocalVariable(name: "alloc", arg: 2, scope: !9069, file: !8801, line: 585, type: !1234)
!9075 = !DILocation(line: 584, column: 9, scope: !9069)
!9076 = !DILocation(line: 585, column: 9, scope: !9069)
!9077 = !DILocation(line: 587, column: 35, scope: !9069)
!9078 = !DILocation(line: 587, column: 9, scope: !9069)
!9079 = !DILocation(line: 590, column: 6, scope: !9069)
!9080 = distinct !DISubprogram(name: "{closure#0}<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17he84729d45c6fad57E", scope: !7831, file: !8801, line: 587, type: !9081, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !9083)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!8967, !7830, !1319}
!9083 = !{!9084, !9085}
!9084 = !DILocalVariable(name: "leaf_edge", arg: 2, scope: !9080, file: !8801, line: 587, type: !1319)
!9085 = !DILocalVariable(name: "alloc", scope: !9080, file: !8801, line: 585, type: !1234, align: 1)
!9086 = !DILocation(line: 585, column: 9, scope: !9080)
!9087 = !DILocation(line: 587, column: 36, scope: !9080)
!9088 = !DILocalVariable(name: "self", scope: !9089, file: !8801, line: 588, type: !8959, align: 8)
!9089 = !DILexicalBlockFile(scope: !9090, file: !8801, discriminator: 0)
!9090 = distinct !DISubprogram(name: "unwrap<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hba536fbc6a2b2659E", scope: !8959, file: !1507, line: 772, type: !9091, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8965, retainedNodes: !9093)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{!8967, !8959, !917}
!9093 = !{!9088, !9094}
!9094 = !DILocalVariable(name: "val", scope: !9095, file: !8801, line: 588, type: !8967, align: 8)
!9095 = !DILexicalBlockFile(scope: !9096, file: !8801, discriminator: 0)
!9096 = distinct !DILexicalBlock(scope: !9090, file: !1507, line: 774, column: 13)
!9097 = !DILocation(line: 588, column: 13, scope: !9089, inlinedAt: !9098)
!9098 = !DILocation(line: 588, column: 13, scope: !9080)
!9099 = !DILocation(line: 589, column: 10, scope: !9080)
!9100 = distinct !DISubprogram(name: "init_front<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h4610506af1dc0bd3E", scope: !1146, file: !8801, line: 209, type: !9101, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !9117)
!9101 = !DISubroutineType(types: !9102)
!9102 = !{!9103, !9116}
!9103 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !39, file: !2, size: 64, align: 64, elements: !9104, templateParams: !23, identifier: "434333ad1da9804853dd0e0ceacc1652")
!9104 = !{!9105}
!9105 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9103, file: !2, size: 64, align: 64, elements: !9106, templateParams: !23, identifier: "2ed5d1c66e900cc0927b81906cb9a638", discriminator: !9115)
!9106 = !{!9107, !9111}
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9105, file: !2, baseType: !9108, size: 64, align: 64, extraData: i64 0)
!9108 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9103, file: !2, size: 64, align: 64, elements: !23, templateParams: !9109, identifier: "f914edb4883538a3b4f77947ad0d625")
!9109 = !{!9110}
!9110 = !DITemplateTypeParameter(name: "T", type: !7829)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9105, file: !2, baseType: !9112, size: 64, align: 64)
!9112 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9103, file: !2, size: 64, align: 64, elements: !9113, templateParams: !9109, identifier: "b8cd66a757ef1bf0bdb9d9f88a15872f")
!9113 = !{!9114}
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9112, file: !2, baseType: !7829, size: 64, align: 64)
!9115 = !DIDerivedType(tag: DW_TAG_member, scope: !9103, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!9116 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1146, size: 64, align: 64, dwarfAddressSpace: 0)
!9117 = !{!9118, !9119, !9121}
!9118 = !DILocalVariable(name: "self", arg: 1, scope: !9100, file: !8801, line: 210, type: !9116)
!9119 = !DILocalVariable(name: "root", scope: !9120, file: !8801, line: 212, type: !8576, align: 8)
!9120 = distinct !DILexicalBlock(scope: !9100, file: !8801, line: 212, column: 63)
!9121 = !DILocalVariable(name: "edge", scope: !9122, file: !8801, line: 217, type: !7829, align: 8)
!9122 = distinct !DILexicalBlock(scope: !9100, file: !8801, line: 217, column: 13)
!9123 = !DILocation(line: 210, column: 9, scope: !9100)
!9124 = !DILocalVariable(name: "tmp", scope: !9125, file: !8801, line: 213, type: !8860, align: 8)
!9125 = !DILexicalBlockFile(scope: !9126, file: !8801, discriminator: 0)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !682, line: 1105, column: 5)
!9127 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3ptr4read17h9d2c4b0138c4201bE", scope: !260, file: !682, line: 1097, type: !8852, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !9128)
!9128 = !{!9129, !9124}
!9129 = !DILocalVariable(name: "src", scope: !9130, file: !8801, line: 213, type: !8854, align: 8)
!9130 = !DILexicalBlockFile(scope: !9127, file: !8801, discriminator: 0)
!9131 = !DILocation(line: 213, column: 61, scope: !9125, inlinedAt: !9132)
!9132 = !DILocation(line: 213, column: 61, scope: !9120)
!9133 = !DILocation(line: 212, column: 51, scope: !9120)
!9134 = !DILocation(line: 212, column: 16, scope: !9120)
!9135 = !DILocation(line: 215, column: 15, scope: !9100)
!9136 = !DILocation(line: 215, column: 9, scope: !9100)
!9137 = !DILocation(line: 212, column: 42, scope: !9120)
!9138 = !DILocation(line: 213, column: 71, scope: !9120)
!9139 = !DILocation(line: 213, column: 61, scope: !9130, inlinedAt: !9132)
!9140 = !DILocation(line: 213, column: 61, scope: !9141, inlinedAt: !9143)
!9141 = !DILexicalBlockFile(scope: !9142, file: !8801, discriminator: 0)
!9142 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf278e722a3d21ea5E", scope: !8860, file: !1452, line: 320, type: !8874, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !23)
!9143 = !DILocation(line: 1105, column: 19, scope: !9127, inlinedAt: !9132)
!9144 = !DILocalVariable(name: "self", scope: !9145, file: !8801, line: 213, type: !8883, align: 8)
!9145 = !DILexicalBlockFile(scope: !9146, file: !8801, discriminator: 0)
!9146 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb2f5ec85398d33ffE", scope: !8860, file: !1452, line: 574, type: !8880, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !9147)
!9147 = !{!9144}
!9148 = !DILocation(line: 213, column: 61, scope: !9145, inlinedAt: !9149)
!9149 = !DILocation(line: 1113, column: 34, scope: !9126, inlinedAt: !9132)
!9150 = !DILocalVariable(name: "self", scope: !9151, file: !8801, line: 213, type: !8860, align: 8)
!9151 = !DILexicalBlockFile(scope: !9152, file: !8801, discriminator: 0)
!9152 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h63b5b23af7891365E", scope: !8860, file: !1452, line: 629, type: !8890, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !9153)
!9153 = !{!9150}
!9154 = !DILocation(line: 213, column: 61, scope: !9151, inlinedAt: !9155)
!9155 = !DILocation(line: 1114, column: 9, scope: !9126, inlinedAt: !9132)
!9156 = !DILocalVariable(name: "slot", scope: !9157, file: !8801, line: 213, type: !8864, align: 8)
!9157 = !DILexicalBlockFile(scope: !9158, file: !8801, discriminator: 0)
!9158 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h4b6e5d8a7fb32ac9E", scope: !8864, file: !1418, line: 88, type: !8898, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !8858, retainedNodes: !9159)
!9159 = !{!9156}
!9160 = !DILocation(line: 213, column: 61, scope: !9157, inlinedAt: !9161)
!9161 = !DILocation(line: 634, column: 13, scope: !9152, inlinedAt: !9155)
!9162 = !DILocation(line: 213, column: 52, scope: !9120)
!9163 = !DILocation(line: 213, column: 31, scope: !9120)
!9164 = !DILocation(line: 213, column: 26, scope: !9120)
!9165 = !DILocation(line: 213, column: 13, scope: !9120)
!9166 = !DILocation(line: 212, column: 9, scope: !9100)
!9167 = !DILocation(line: 216, column: 21, scope: !9100)
!9168 = !DILocation(line: 219, column: 55, scope: !9169, inlinedAt: !9171)
!9169 = !DILexicalBlockFile(scope: !9170, file: !8801, discriminator: 0)
!9170 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!9171 = !DILocation(line: 219, column: 55, scope: !9100)
!9172 = !DILocation(line: 217, column: 39, scope: !9100)
!9173 = !DILocation(line: 217, column: 39, scope: !9122)
!9174 = !DILocation(line: 217, column: 49, scope: !9122)
!9175 = !DILocation(line: 217, column: 58, scope: !9100)
!9176 = !DILocation(line: 221, column: 6, scope: !9100)
!9177 = distinct !DISubprogram(name: "none<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$4none17h98716b5a8b6b4e9fE", scope: !1146, file: !8801, line: 133, type: !9178, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1314, retainedNodes: !23)
!9178 = !DISubroutineType(types: !9179)
!9179 = !{!1146}
!9180 = !DILocation(line: 134, column: 32, scope: !9177)
!9181 = !DILocation(line: 134, column: 44, scope: !9177)
!9182 = !DILocation(line: 134, column: 9, scope: !9177)
!9183 = !DILocation(line: 135, column: 6, scope: !9177)
!9184 = distinct !DISubprogram(name: "take_front<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17h4115b0d485ebae6fE", scope: !1146, file: !8801, line: 171, type: !9185, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1206, retainedNodes: !9198)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{!9187, !9116}
!9187 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !39, file: !2, size: 192, align: 64, elements: !9188, templateParams: !23, identifier: "441cdb10d4479d5e6b5685489a888063")
!9188 = !{!9189}
!9189 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9187, file: !2, size: 192, align: 64, elements: !9190, templateParams: !23, identifier: "ff2f9abc35e9757920c208e7706e3056", discriminator: !9197)
!9190 = !{!9191, !9193}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9189, file: !2, baseType: !9192, size: 192, align: 64, extraData: i64 0)
!9192 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9187, file: !2, size: 192, align: 64, elements: !23, templateParams: !7863, identifier: "e45e97a703a5ddbaa3671210e8f41f20")
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9189, file: !2, baseType: !9194, size: 192, align: 64)
!9194 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9187, file: !2, size: 192, align: 64, elements: !9195, templateParams: !7863, identifier: "b09312d3d78e011a9bf88497f7c09e35")
!9195 = !{!9196}
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9194, file: !2, baseType: !1319, size: 192, align: 64)
!9197 = !DIDerivedType(tag: DW_TAG_member, scope: !9187, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!9198 = !{!9199, !9200, !9202, !9204, !9206}
!9199 = !DILocalVariable(name: "self", arg: 1, scope: !9184, file: !8801, line: 172, type: !9116)
!9200 = !DILocalVariable(name: "residual", scope: !9201, file: !8801, line: 174, type: !4193, align: 1)
!9201 = distinct !DILexicalBlock(scope: !9184, file: !8801, line: 174, column: 32)
!9202 = !DILocalVariable(name: "val", scope: !9203, file: !8801, line: 174, type: !1158, align: 8)
!9203 = distinct !DILexicalBlock(scope: !9184, file: !8801, line: 174, column: 15)
!9204 = !DILocalVariable(name: "root", scope: !9205, file: !8801, line: 175, type: !1166, align: 8)
!9205 = distinct !DILexicalBlock(scope: !9184, file: !8801, line: 175, column: 13)
!9206 = !DILocalVariable(name: "edge", scope: !9207, file: !8801, line: 176, type: !1319, align: 8)
!9207 = distinct !DILexicalBlock(scope: !9184, file: !8801, line: 176, column: 13)
!9208 = !DILocation(line: 172, column: 9, scope: !9184)
!9209 = !DILocalVariable(name: "self", scope: !9210, file: !8801, line: 174, type: !1150, align: 8)
!9210 = !DILexicalBlockFile(scope: !9211, file: !8801, discriminator: 0)
!9211 = distinct !DISubprogram(name: "branch<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a7c9120b0f46c3cE", scope: !4229, file: !1507, line: 2290, type: !9212, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1156, retainedNodes: !9229)
!9212 = !DISubroutineType(types: !9213)
!9213 = !{!9214, !1150}
!9214 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !4233, file: !2, size: 256, align: 64, elements: !9215, templateParams: !23, identifier: "6ffae984338625cf961a23df59b7281d")
!9215 = !{!9216}
!9216 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9214, file: !2, size: 256, align: 64, elements: !9217, templateParams: !23, identifier: "2901e574ad57685338499e4bb068ac8", discriminator: !9228)
!9217 = !{!9218, !9224}
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !9216, file: !2, baseType: !9219, size: 256, align: 64)
!9219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !9214, file: !2, size: 256, align: 64, elements: !9220, templateParams: !9222, identifier: "e8c54525e673866e3be4b49191ffd8dc")
!9220 = !{!9221}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9219, file: !2, baseType: !1158, size: 256, align: 64)
!9222 = !{!4242, !9223}
!9223 = !DITemplateTypeParameter(name: "C", type: !1158)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !9216, file: !2, baseType: !9225, size: 256, align: 64, extraData: i64 2)
!9225 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !9214, file: !2, size: 256, align: 64, elements: !9226, templateParams: !9222, identifier: "c18efe2417bcf618640bb5fd5f22156d")
!9226 = !{!9227}
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9225, file: !2, baseType: !4193, align: 8)
!9228 = !DIDerivedType(tag: DW_TAG_member, scope: !9214, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!9229 = !{!9209, !9230}
!9230 = !DILocalVariable(name: "v", scope: !9231, file: !8801, line: 174, type: !1158, align: 8)
!9231 = !DILexicalBlockFile(scope: !9232, file: !8801, discriminator: 0)
!9232 = distinct !DILexicalBlock(scope: !9211, file: !1507, line: 2292, column: 13)
!9233 = !DILocation(line: 174, column: 15, scope: !9210, inlinedAt: !9234)
!9234 = !DILocation(line: 174, column: 15, scope: !9184)
!9235 = !DILocation(line: 174, column: 32, scope: !9201)
!9236 = !DILocalVariable(name: "residual", scope: !9237, file: !8801, line: 174, type: !4193, align: 1)
!9237 = !DILexicalBlockFile(scope: !9238, file: !8801, discriminator: 0)
!9238 = distinct !DISubprogram(name: "from_residual<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h873ec69e9b431559E", scope: !4259, file: !1507, line: 2302, type: !9239, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7863, retainedNodes: !9241)
!9239 = !DISubroutineType(types: !9240)
!9240 = !{!9187, !4193}
!9241 = !{!9236}
!9242 = !DILocation(line: 174, column: 15, scope: !9237, inlinedAt: !9243)
!9243 = !DILocation(line: 174, column: 15, scope: !9201)
!9244 = !DILocation(line: 174, column: 15, scope: !9203)
!9245 = !DILocation(line: 176, column: 34, scope: !9207)
!9246 = !DILocation(line: 174, column: 15, scope: !9231, inlinedAt: !9234)
!9247 = !DILocalVariable(name: "self", scope: !9248, file: !8801, line: 174, type: !3209, align: 8)
!9248 = !DILexicalBlockFile(scope: !9249, file: !8801, discriminator: 0)
!9249 = distinct !DISubprogram(name: "take<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17hfd6b8cddd7ce10fbE", scope: !1150, file: !1507, line: 1574, type: !9250, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1156, retainedNodes: !9252)
!9250 = !DISubroutineType(types: !9251)
!9251 = !{!1150, !3209}
!9252 = !{!9247}
!9253 = !DILocation(line: 174, column: 15, scope: !9248, inlinedAt: !9234)
!9254 = !DILocation(line: 174, column: 9, scope: !9184)
!9255 = !DILocation(line: 178, column: 6, scope: !9184)
!9256 = !DILocation(line: 175, column: 34, scope: !9184)
!9257 = !DILocation(line: 175, column: 34, scope: !9205)
!9258 = !DILocation(line: 175, column: 48, scope: !9205)
!9259 = !DILocation(line: 176, column: 34, scope: !9184)
!9260 = !DILocation(line: 176, column: 48, scope: !9207)
!9261 = !DILocation(line: 176, column: 43, scope: !9207)
!9262 = !DILocation(line: 176, column: 52, scope: !9184)
!9263 = !DILocation(line: 175, column: 43, scope: !9205)
!9264 = !DILocation(line: 175, column: 70, scope: !9184)
!9265 = distinct !DISubprogram(name: "deallocating_end<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17h189b8894c8e0b502E", scope: !1146, file: !8801, line: 201, type: !9266, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !9268)
!9266 = !DISubroutineType(types: !9267)
!9267 = !{null, !9116, !1234}
!9268 = !{!9269, !9270, !9271}
!9269 = !DILocalVariable(name: "self", arg: 1, scope: !9265, file: !8801, line: 201, type: !9116)
!9270 = !DILocalVariable(name: "alloc", arg: 2, scope: !9265, file: !8801, line: 201, type: !1234)
!9271 = !DILocalVariable(name: "front", scope: !9272, file: !8801, line: 202, type: !1319, align: 8)
!9272 = distinct !DILexicalBlock(scope: !9265, file: !8801, line: 202, column: 48)
!9273 = !DILocation(line: 201, column: 51, scope: !9265)
!9274 = !DILocation(line: 201, column: 62, scope: !9265)
!9275 = !DILocation(line: 202, column: 21, scope: !9272)
!9276 = !DILocation(line: 202, column: 30, scope: !9272)
!9277 = !DILocation(line: 205, column: 5, scope: !9265)
!9278 = !DILocation(line: 202, column: 16, scope: !9272)
!9279 = !DILocation(line: 203, column: 13, scope: !9272)
!9280 = !DILocation(line: 203, column: 36, scope: !9272)
!9281 = !DILocation(line: 202, column: 9, scope: !9265)
!9282 = !DILocation(line: 201, column: 5, scope: !9265)
!9283 = !DILocation(line: 205, column: 6, scope: !9265)
!9284 = distinct !DISubprogram(name: "deallocating_next_unchecked<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17ha8e0d476af1cb7f6E", scope: !1146, file: !8801, line: 181, type: !9285, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!1672, !9116, !1234}
!9287 = !{!9288, !9289, !9290}
!9288 = !DILocalVariable(name: "self", arg: 1, scope: !9284, file: !8801, line: 182, type: !9116)
!9289 = !DILocalVariable(name: "alloc", arg: 2, scope: !9284, file: !8801, line: 183, type: !1234)
!9290 = !DILocalVariable(name: "front", scope: !9291, file: !8801, line: 186, type: !7829, align: 8)
!9291 = distinct !DILexicalBlock(scope: !9284, file: !8801, line: 186, column: 9)
!9292 = !DILocation(line: 182, column: 9, scope: !9284)
!9293 = !DILocation(line: 183, column: 9, scope: !9284)
!9294 = !DILocalVariable(name: "self", scope: !9295, file: !8801, line: 186, type: !9103, align: 8)
!9295 = !DILexicalBlockFile(scope: !9296, file: !8801, discriminator: 0)
!9296 = distinct !DISubprogram(name: "unwrap<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hde395411a92a6e26E", scope: !9103, file: !1507, line: 772, type: !9297, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9109, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!7829, !9103, !917}
!9299 = !{!9294, !9300}
!9300 = !DILocalVariable(name: "val", scope: !9301, file: !8801, line: 186, type: !7829, align: 8)
!9301 = !DILexicalBlockFile(scope: !9302, file: !8801, discriminator: 0)
!9302 = distinct !DILexicalBlock(scope: !9296, file: !1507, line: 774, column: 13)
!9303 = !DILocation(line: 186, column: 21, scope: !9295, inlinedAt: !9304)
!9304 = !DILocation(line: 186, column: 21, scope: !9284)
!9305 = !DILocation(line: 185, column: 9, scope: !9284)
!9306 = !DILocation(line: 188, column: 5, scope: !9284)
!9307 = !DILocation(line: 186, column: 13, scope: !9291)
!9308 = !DILocation(line: 186, column: 21, scope: !9301, inlinedAt: !9304)
!9309 = !DILocation(line: 187, column: 52, scope: !9291)
!9310 = !DILocation(line: 187, column: 18, scope: !9291)
!9311 = !DILocation(line: 188, column: 6, scope: !9284)
!9312 = !DILocation(line: 181, column: 5, scope: !9284)
!9313 = distinct !DISubprogram(name: "join_generic_copy<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy17ha89ebacfef04eb8dE", scope: !275, file: !9314, line: 147, type: !9315, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9446, retainedNodes: !9317)
!9314 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/str.rs", directory: "", checksumkind: CSK_MD5, checksum: "f5a4e60b6f1008960143e2fa483df20f")
!9315 = !DISubroutineType(types: !9316)
!9316 = !{!1219, !2000, !892}
!9317 = !{!9318, !9319, !9320, !9322, !9324, !9326, !9328, !9330, !9332, !9334, !9336, !9338, !9340, !9342, !9344, !9346, !9348, !9350, !9352, !9354, !9356, !9357, !9359, !9361, !9363, !9364, !9366, !9368, !9370, !9372, !9373, !9375, !9377, !9379, !9380, !9382, !9384, !9386, !9388, !9389, !9391, !9393, !9395, !9396, !9398, !9400, !9402, !9404, !9405, !9407, !9409, !9411, !9412, !9414, !9416, !9418, !9420, !9421, !9423, !9425, !9427, !9428, !9430, !9432, !9434, !9436, !9437, !9439, !9441, !9443, !9444}
!9318 = !DILocalVariable(name: "slice", arg: 1, scope: !9313, file: !9314, line: 147, type: !2000)
!9319 = !DILocalVariable(name: "sep", arg: 2, scope: !9313, file: !9314, line: 147, type: !892)
!9320 = !DILocalVariable(name: "sep_len", scope: !9321, file: !9314, line: 153, type: !9, align: 8)
!9321 = distinct !DILexicalBlock(scope: !9313, file: !9314, line: 153, column: 5)
!9322 = !DILocalVariable(name: "iter", scope: !9323, file: !9314, line: 154, type: !253, align: 8)
!9323 = distinct !DILexicalBlock(scope: !9321, file: !9314, line: 154, column: 5)
!9324 = !DILocalVariable(name: "first", scope: !9325, file: !9314, line: 157, type: !270, align: 8)
!9325 = distinct !DILexicalBlock(scope: !9323, file: !9314, line: 157, column: 5)
!9326 = !DILocalVariable(name: "first", scope: !9327, file: !9314, line: 158, type: !270, align: 8)
!9327 = distinct !DILexicalBlock(scope: !9323, file: !9314, line: 158, column: 9)
!9328 = !DILocalVariable(name: "reserved_len", scope: !9329, file: !9314, line: 166, type: !9, align: 8)
!9329 = distinct !DILexicalBlock(scope: !9325, file: !9314, line: 166, column: 5)
!9330 = !DILocalVariable(name: "result", scope: !9331, file: !9314, line: 174, type: !1219, align: 8)
!9331 = distinct !DILexicalBlock(scope: !9329, file: !9314, line: 174, column: 5)
!9332 = !DILocalVariable(name: "pos", scope: !9333, file: !9314, line: 180, type: !9, align: 8)
!9333 = distinct !DILexicalBlock(scope: !9331, file: !9314, line: 180, column: 9)
!9334 = !DILocalVariable(name: "target", scope: !9335, file: !9314, line: 181, type: !6016, align: 8)
!9335 = distinct !DILexicalBlock(scope: !9333, file: !9314, line: 181, column: 9)
!9336 = !DILocalVariable(name: "sep_uninit", scope: !9337, file: !9314, line: 185, type: !3533, align: 8)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !9314, line: 185, column: 9)
!9338 = !DILocalVariable(name: "iter_uninit", scope: !9339, file: !9314, line: 186, type: !5590, align: 8)
!9339 = distinct !DILexicalBlock(scope: !9337, file: !9314, line: 186, column: 9)
!9340 = !DILocalVariable(name: "remain", scope: !9341, file: !9314, line: 194, type: !6016, align: 8)
!9341 = distinct !DILexicalBlock(scope: !9339, file: !9314, line: 194, column: 9)
!9342 = !DILocalVariable(name: "target", scope: !9343, file: !9314, line: 194, type: !6016, align: 8)
!9343 = distinct !DILexicalBlock(scope: !9339, file: !9314, line: 100, column: 9)
!9344 = !DILocalVariable(name: "iter", scope: !9345, file: !9314, line: 194, type: !5590, align: 8)
!9345 = distinct !DILexicalBlock(scope: !9343, file: !9314, line: 101, column: 9)
!9346 = !DILocalVariable(name: "sep_bytes", scope: !9347, file: !9314, line: 194, type: !3533, align: 8)
!9347 = distinct !DILexicalBlock(scope: !9345, file: !9314, line: 102, column: 9)
!9348 = !DILocalVariable(name: "iter", scope: !9349, file: !9314, line: 194, type: !5590, align: 8)
!9349 = distinct !DILexicalBlock(scope: !9347, file: !9314, line: 108, column: 21)
!9350 = !DILocalVariable(name: "s", scope: !9351, file: !9314, line: 194, type: !3533, align: 8)
!9351 = distinct !DILexicalBlock(scope: !9349, file: !9314, line: 108, column: 35)
!9352 = !DILocalVariable(name: "len", scope: !9353, file: !9314, line: 194, type: !9, align: 8)
!9353 = distinct !DILexicalBlock(scope: !9351, file: !9314, line: 108, column: 35)
!9354 = !DILocalVariable(name: "head", scope: !9355, file: !9314, line: 194, type: !6016, align: 8)
!9355 = distinct !DILexicalBlock(scope: !9353, file: !9314, line: 108, column: 35)
!9356 = !DILocalVariable(name: "tail", scope: !9355, file: !9314, line: 194, type: !6016, align: 8)
!9357 = !DILocalVariable(name: "content_bytes", scope: !9358, file: !9314, line: 194, type: !3533, align: 8)
!9358 = distinct !DILexicalBlock(scope: !9355, file: !9314, line: 110, column: 25)
!9359 = !DILocalVariable(name: "len", scope: !9360, file: !9314, line: 194, type: !9, align: 8)
!9360 = distinct !DILexicalBlock(scope: !9358, file: !9314, line: 108, column: 35)
!9361 = !DILocalVariable(name: "head", scope: !9362, file: !9314, line: 194, type: !6016, align: 8)
!9362 = distinct !DILexicalBlock(scope: !9360, file: !9314, line: 108, column: 35)
!9363 = !DILocalVariable(name: "tail", scope: !9362, file: !9314, line: 194, type: !6016, align: 8)
!9364 = !DILocalVariable(name: "iter", scope: !9365, file: !9314, line: 194, type: !5590, align: 8)
!9365 = distinct !DILexicalBlock(scope: !9347, file: !9314, line: 108, column: 21)
!9366 = !DILocalVariable(name: "s", scope: !9367, file: !9314, line: 194, type: !3533, align: 8)
!9367 = distinct !DILexicalBlock(scope: !9365, file: !9314, line: 108, column: 35)
!9368 = !DILocalVariable(name: "len", scope: !9369, file: !9314, line: 194, type: !9, align: 8)
!9369 = distinct !DILexicalBlock(scope: !9367, file: !9314, line: 108, column: 35)
!9370 = !DILocalVariable(name: "head", scope: !9371, file: !9314, line: 194, type: !6016, align: 8)
!9371 = distinct !DILexicalBlock(scope: !9369, file: !9314, line: 108, column: 35)
!9372 = !DILocalVariable(name: "tail", scope: !9371, file: !9314, line: 194, type: !6016, align: 8)
!9373 = !DILocalVariable(name: "content_bytes", scope: !9374, file: !9314, line: 194, type: !3533, align: 8)
!9374 = distinct !DILexicalBlock(scope: !9371, file: !9314, line: 110, column: 25)
!9375 = !DILocalVariable(name: "len", scope: !9376, file: !9314, line: 194, type: !9, align: 8)
!9376 = distinct !DILexicalBlock(scope: !9374, file: !9314, line: 108, column: 35)
!9377 = !DILocalVariable(name: "head", scope: !9378, file: !9314, line: 194, type: !6016, align: 8)
!9378 = distinct !DILexicalBlock(scope: !9376, file: !9314, line: 108, column: 35)
!9379 = !DILocalVariable(name: "tail", scope: !9378, file: !9314, line: 194, type: !6016, align: 8)
!9380 = !DILocalVariable(name: "iter", scope: !9381, file: !9314, line: 194, type: !5590, align: 8)
!9381 = distinct !DILexicalBlock(scope: !9347, file: !9314, line: 108, column: 21)
!9382 = !DILocalVariable(name: "s", scope: !9383, file: !9314, line: 194, type: !3533, align: 8)
!9383 = distinct !DILexicalBlock(scope: !9381, file: !9314, line: 108, column: 35)
!9384 = !DILocalVariable(name: "len", scope: !9385, file: !9314, line: 194, type: !9, align: 8)
!9385 = distinct !DILexicalBlock(scope: !9383, file: !9314, line: 108, column: 35)
!9386 = !DILocalVariable(name: "head", scope: !9387, file: !9314, line: 194, type: !6016, align: 8)
!9387 = distinct !DILexicalBlock(scope: !9385, file: !9314, line: 108, column: 35)
!9388 = !DILocalVariable(name: "tail", scope: !9387, file: !9314, line: 194, type: !6016, align: 8)
!9389 = !DILocalVariable(name: "content_bytes", scope: !9390, file: !9314, line: 194, type: !3533, align: 8)
!9390 = distinct !DILexicalBlock(scope: !9387, file: !9314, line: 110, column: 25)
!9391 = !DILocalVariable(name: "len", scope: !9392, file: !9314, line: 194, type: !9, align: 8)
!9392 = distinct !DILexicalBlock(scope: !9390, file: !9314, line: 108, column: 35)
!9393 = !DILocalVariable(name: "head", scope: !9394, file: !9314, line: 194, type: !6016, align: 8)
!9394 = distinct !DILexicalBlock(scope: !9392, file: !9314, line: 108, column: 35)
!9395 = !DILocalVariable(name: "tail", scope: !9394, file: !9314, line: 194, type: !6016, align: 8)
!9396 = !DILocalVariable(name: "iter", scope: !9397, file: !9314, line: 194, type: !5590, align: 8)
!9397 = distinct !DILexicalBlock(scope: !9347, file: !9314, line: 108, column: 21)
!9398 = !DILocalVariable(name: "s", scope: !9399, file: !9314, line: 194, type: !3533, align: 8)
!9399 = distinct !DILexicalBlock(scope: !9397, file: !9314, line: 108, column: 35)
!9400 = !DILocalVariable(name: "len", scope: !9401, file: !9314, line: 194, type: !9, align: 8)
!9401 = distinct !DILexicalBlock(scope: !9399, file: !9314, line: 108, column: 35)
!9402 = !DILocalVariable(name: "head", scope: !9403, file: !9314, line: 194, type: !6016, align: 8)
!9403 = distinct !DILexicalBlock(scope: !9401, file: !9314, line: 108, column: 35)
!9404 = !DILocalVariable(name: "tail", scope: !9403, file: !9314, line: 194, type: !6016, align: 8)
!9405 = !DILocalVariable(name: "content_bytes", scope: !9406, file: !9314, line: 194, type: !3533, align: 8)
!9406 = distinct !DILexicalBlock(scope: !9403, file: !9314, line: 110, column: 25)
!9407 = !DILocalVariable(name: "len", scope: !9408, file: !9314, line: 194, type: !9, align: 8)
!9408 = distinct !DILexicalBlock(scope: !9406, file: !9314, line: 108, column: 35)
!9409 = !DILocalVariable(name: "head", scope: !9410, file: !9314, line: 194, type: !6016, align: 8)
!9410 = distinct !DILexicalBlock(scope: !9408, file: !9314, line: 108, column: 35)
!9411 = !DILocalVariable(name: "tail", scope: !9410, file: !9314, line: 194, type: !6016, align: 8)
!9412 = !DILocalVariable(name: "iter", scope: !9413, file: !9314, line: 194, type: !5590, align: 8)
!9413 = distinct !DILexicalBlock(scope: !9347, file: !9314, line: 108, column: 21)
!9414 = !DILocalVariable(name: "s", scope: !9415, file: !9314, line: 194, type: !3533, align: 8)
!9415 = distinct !DILexicalBlock(scope: !9413, file: !9314, line: 108, column: 35)
!9416 = !DILocalVariable(name: "len", scope: !9417, file: !9314, line: 194, type: !9, align: 8)
!9417 = distinct !DILexicalBlock(scope: !9415, file: !9314, line: 108, column: 35)
!9418 = !DILocalVariable(name: "head", scope: !9419, file: !9314, line: 194, type: !6016, align: 8)
!9419 = distinct !DILexicalBlock(scope: !9417, file: !9314, line: 108, column: 35)
!9420 = !DILocalVariable(name: "tail", scope: !9419, file: !9314, line: 194, type: !6016, align: 8)
!9421 = !DILocalVariable(name: "content_bytes", scope: !9422, file: !9314, line: 194, type: !3533, align: 8)
!9422 = distinct !DILexicalBlock(scope: !9419, file: !9314, line: 110, column: 25)
!9423 = !DILocalVariable(name: "len", scope: !9424, file: !9314, line: 194, type: !9, align: 8)
!9424 = distinct !DILexicalBlock(scope: !9422, file: !9314, line: 108, column: 35)
!9425 = !DILocalVariable(name: "head", scope: !9426, file: !9314, line: 194, type: !6016, align: 8)
!9426 = distinct !DILexicalBlock(scope: !9424, file: !9314, line: 108, column: 35)
!9427 = !DILocalVariable(name: "tail", scope: !9426, file: !9314, line: 194, type: !6016, align: 8)
!9428 = !DILocalVariable(name: "iter", scope: !9429, file: !9314, line: 194, type: !5590, align: 8)
!9429 = distinct !DILexicalBlock(scope: !9347, file: !9314, line: 117, column: 17)
!9430 = !DILocalVariable(name: "s", scope: !9431, file: !9314, line: 194, type: !3533, align: 8)
!9431 = distinct !DILexicalBlock(scope: !9429, file: !9314, line: 117, column: 31)
!9432 = !DILocalVariable(name: "len", scope: !9433, file: !9314, line: 194, type: !9, align: 8)
!9433 = distinct !DILexicalBlock(scope: !9431, file: !9314, line: 117, column: 31)
!9434 = !DILocalVariable(name: "head", scope: !9435, file: !9314, line: 194, type: !6016, align: 8)
!9435 = distinct !DILexicalBlock(scope: !9433, file: !9314, line: 117, column: 31)
!9436 = !DILocalVariable(name: "tail", scope: !9435, file: !9314, line: 194, type: !6016, align: 8)
!9437 = !DILocalVariable(name: "content_bytes", scope: !9438, file: !9314, line: 194, type: !3533, align: 8)
!9438 = distinct !DILexicalBlock(scope: !9435, file: !9314, line: 119, column: 21)
!9439 = !DILocalVariable(name: "len", scope: !9440, file: !9314, line: 194, type: !9, align: 8)
!9440 = distinct !DILexicalBlock(scope: !9438, file: !9314, line: 117, column: 31)
!9441 = !DILocalVariable(name: "head", scope: !9442, file: !9314, line: 194, type: !6016, align: 8)
!9442 = distinct !DILexicalBlock(scope: !9440, file: !9314, line: 117, column: 31)
!9443 = !DILocalVariable(name: "tail", scope: !9442, file: !9314, line: 194, type: !6016, align: 8)
!9444 = !DILocalVariable(name: "result_len", scope: !9445, file: !9314, line: 199, type: !9, align: 8)
!9445 = distinct !DILexicalBlock(scope: !9341, file: !9314, line: 199, column: 9)
!9446 = !{!2945, !344, !2731}
!9447 = !DILocation(line: 147, column: 31, scope: !9313)
!9448 = !DILocation(line: 147, column: 44, scope: !9313)
!9449 = !DILocation(line: 154, column: 9, scope: !9323)
!9450 = !DILocalVariable(name: "self", scope: !9451, file: !9314, line: 166, type: !236, align: 8)
!9451 = !DILexicalBlockFile(scope: !9452, file: !9314, discriminator: 0)
!9452 = distinct !DISubprogram(name: "expect<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h63297ea5ef0883f0E", scope: !236, file: !1507, line: 735, type: !9453, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !9455)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!9, !236, !48, !917}
!9455 = !{!9450, !9456, !9457}
!9456 = !DILocalVariable(name: "msg", scope: !9451, file: !9314, line: 166, type: !48, align: 8)
!9457 = !DILocalVariable(name: "val", scope: !9458, file: !9314, line: 166, type: !9, align: 8)
!9458 = !DILexicalBlockFile(scope: !9459, file: !9314, discriminator: 0)
!9459 = distinct !DILexicalBlock(scope: !9452, file: !1507, line: 737, column: 13)
!9460 = !DILocation(line: 166, column: 24, scope: !9451, inlinedAt: !9461)
!9461 = !DILocation(line: 166, column: 24, scope: !9325)
!9462 = !DILocation(line: 174, column: 9, scope: !9331)
!9463 = !DILocalVariable(name: "index", scope: !9464, file: !9314, line: 181, type: !5143, align: 8)
!9464 = !DILexicalBlockFile(scope: !9465, file: !9314, discriminator: 0)
!9465 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hea8da648e3c4f6a5E", scope: !5968, file: !5967, line: 436, type: !9466, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9470, retainedNodes: !9468)
!9466 = !DISubroutineType(types: !9467)
!9467 = !{!6016, !6016, !5143}
!9468 = !{!9469, !9463}
!9469 = !DILocalVariable(name: "self", scope: !9464, file: !9314, line: 181, type: !6016, align: 8)
!9470 = !{!821, !5149}
!9471 = !DILocation(line: 181, column: 22, scope: !9464, inlinedAt: !9472)
!9472 = !DILocation(line: 181, column: 22, scope: !9333)
!9473 = !DILocalVariable(name: "f", scope: !9474, file: !9314, line: 186, type: !3538, align: 1)
!9474 = !DILexicalBlockFile(scope: !9475, file: !9314, discriminator: 0)
!9475 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, &[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h676af48be9dda4e5E", scope: !5328, file: !5327, line: 776, type: !5595, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9478, retainedNodes: !9476)
!9476 = !{!9477, !9473}
!9477 = !DILocalVariable(name: "self", scope: !9474, file: !9314, line: 186, type: !253, align: 8)
!9478 = !{!5526, !9479, !3547}
!9479 = !DITemplateTypeParameter(name: "B", type: !3533)
!9480 = !DILocation(line: 186, column: 27, scope: !9474, inlinedAt: !9481)
!9481 = !DILocation(line: 186, column: 27, scope: !9337)
!9482 = !DILocation(line: 194, column: 22, scope: !9343)
!9483 = !DILocation(line: 194, column: 22, scope: !9349)
!9484 = !DILocation(line: 194, column: 22, scope: !9365)
!9485 = !DILocation(line: 194, column: 22, scope: !9381)
!9486 = !DILocation(line: 194, column: 22, scope: !9397)
!9487 = !DILocation(line: 194, column: 22, scope: !9413)
!9488 = !DILocation(line: 194, column: 22, scope: !9429)
!9489 = !DILocalVariable(name: "alloc", scope: !9490, file: !9314, line: 174, type: !1234, align: 1)
!9490 = !DILexicalBlockFile(scope: !9491, file: !9314, discriminator: 0)
!9491 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hb82664da913097b8E", scope: !1219, file: !2472, line: 640, type: !9492, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !9494)
!9492 = !DISubroutineType(types: !9493)
!9493 = !{!1219, !9, !1234}
!9494 = !{!9495, !9489}
!9495 = !DILocalVariable(name: "capacity", scope: !9490, file: !9314, line: 174, type: !9, align: 8)
!9496 = !DILocation(line: 174, column: 22, scope: !9490, inlinedAt: !9497)
!9497 = !DILocation(line: 483, column: 9, scope: !9498, inlinedAt: !9504)
!9498 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h696dd82b50a7fb21E", scope: !1219, file: !2472, line: 482, type: !9499, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !9501)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!1219, !9}
!9501 = !{!9502}
!9502 = !DILocalVariable(name: "capacity", scope: !9503, file: !9314, line: 174, type: !9, align: 8)
!9503 = !DILexicalBlockFile(scope: !9498, file: !9314, discriminator: 0)
!9504 = !DILocation(line: 174, column: 22, scope: !9329)
!9505 = !DILocalVariable(name: "alloc", scope: !9506, file: !9314, line: 174, type: !1234, align: 1)
!9506 = !DILexicalBlockFile(scope: !9507, file: !9314, discriminator: 0)
!9507 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h3778fdf7d58be656E", scope: !1223, file: !9508, line: 130, type: !9509, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !9511)
!9508 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!9509 = !DISubroutineType(types: !9510)
!9510 = !{!1223, !9, !1234}
!9511 = !{!9512, !9505}
!9512 = !DILocalVariable(name: "capacity", scope: !9506, file: !9314, line: 174, type: !9, align: 8)
!9513 = !DILocation(line: 174, column: 22, scope: !9506, inlinedAt: !9514)
!9514 = !DILocation(line: 641, column: 20, scope: !9491, inlinedAt: !9497)
!9515 = !DILocation(line: 153, column: 19, scope: !9313)
!9516 = !DILocation(line: 153, column: 9, scope: !9321)
!9517 = !DILocation(line: 154, column: 20, scope: !9321)
!9518 = !DILocalVariable(name: "self", scope: !9519, file: !9314, line: 154, type: !2000, align: 8)
!9519 = !DILexicalBlockFile(scope: !9520, file: !9314, discriminator: 0)
!9520 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1e784e2ed6606635E", scope: !5968, file: !5967, line: 734, type: !6217, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9521)
!9521 = !{!9518}
!9522 = !DILocation(line: 154, column: 20, scope: !9519, inlinedAt: !9517)
!9523 = !DILocation(line: 157, column: 23, scope: !9323)
!9524 = !DILocation(line: 157, column: 17, scope: !9323)
!9525 = !DILocation(line: 159, column: 24, scope: !9526, inlinedAt: !9530)
!9526 = !DILexicalBlockFile(scope: !9527, file: !9314, discriminator: 0)
!9527 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h0a031642c6ec1411E", scope: !1219, file: !2472, line: 424, type: !9528, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{!1219}
!9530 = !DILocation(line: 44, column: 36, scope: !9531)
!9531 = !DILexicalBlockFile(scope: !9323, file: !9532, discriminator: 0)
!9532 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "01273458e8d6db9c7d8d25445bca74ed")
!9533 = !DILocation(line: 203, column: 2, scope: !9313)
!9534 = !DILocation(line: 158, column: 14, scope: !9323)
!9535 = !DILocation(line: 158, column: 14, scope: !9327)
!9536 = !DILocation(line: 158, column: 24, scope: !9327)
!9537 = !DILocation(line: 157, column: 9, scope: !9325)
!9538 = !DILocation(line: 167, column: 22, scope: !9325)
!9539 = !DILocalVariable(name: "self", scope: !9540, file: !9314, line: 167, type: !9544, align: 8)
!9540 = !DILexicalBlockFile(scope: !9541, file: !9314, discriminator: 0)
!9541 = distinct !DISubprogram(name: "len<&str>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h356b76f817a2f2a1E", scope: !404, file: !403, line: 119, type: !9542, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9545)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{!9, !9544}
!9544 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<&str>", baseType: !253, size: 64, align: 64, dwarfAddressSpace: 0)
!9545 = !{!9539, !9546, !9549, !9552}
!9546 = !DILocalVariable(name: "start", scope: !9547, file: !9314, line: 167, type: !258, align: 8)
!9547 = !DILexicalBlockFile(scope: !9548, file: !9314, discriminator: 0)
!9548 = distinct !DILexicalBlock(scope: !9541, file: !403, line: 18, column: 9)
!9549 = !DILocalVariable(name: "size", scope: !9550, file: !9314, line: 167, type: !9, align: 8)
!9550 = !DILexicalBlockFile(scope: !9551, file: !9314, discriminator: 0)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !403, line: 19, column: 9)
!9552 = !DILocalVariable(name: "diff", scope: !9553, file: !9314, line: 167, type: !9, align: 8)
!9553 = !DILexicalBlockFile(scope: !9554, file: !9314, discriminator: 0)
!9554 = distinct !DILexicalBlock(scope: !9551, file: !403, line: 29, column: 13)
!9555 = !DILocation(line: 167, column: 22, scope: !9540, inlinedAt: !9538)
!9556 = !DILocation(line: 167, column: 22, scope: !9547, inlinedAt: !9538)
!9557 = !DILocation(line: 167, column: 22, scope: !9558, inlinedAt: !9560)
!9558 = !DILexicalBlockFile(scope: !9559, file: !9314, discriminator: 0)
!9559 = distinct !DISubprogram(name: "size_of<&str>", linkageName: "_ZN4core3mem7size_of17h145f363dc858beffE", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !23)
!9560 = !DILocation(line: 41, column: 5, scope: !9561, inlinedAt: !9564)
!9561 = distinct !DISubprogram(name: "size_from_ptr<&str>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h93cfbbd39deacf82E", scope: !254, file: !428, line: 40, type: !9562, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !23)
!9562 = !DISubroutineType(types: !9563)
!9563 = !{!9, !263}
!9564 = !DILocation(line: 19, column: 20, scope: !9548, inlinedAt: !9538)
!9565 = !DILocation(line: 167, column: 22, scope: !9550, inlinedAt: !9538)
!9566 = !DILocalVariable(name: "self", scope: !9567, file: !9314, line: 167, type: !263, align: 8)
!9567 = !DILexicalBlockFile(scope: !9568, file: !9314, discriminator: 0)
!9568 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h5134e3b58b828f5bE", scope: !437, file: !436, line: 178, type: !9562, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9569)
!9569 = !{!9566}
!9570 = !DILocation(line: 167, column: 22, scope: !9567, inlinedAt: !9571)
!9571 = !DILocation(line: 23, column: 13, scope: !9551, inlinedAt: !9538)
!9572 = !DILocalVariable(name: "self", scope: !9573, file: !9314, line: 167, type: !9, align: 8)
!9573 = !DILexicalBlockFile(scope: !9574, file: !9314, discriminator: 0)
!9574 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h0292a2731c9021a7E", scope: !2890, file: !2889, line: 1225, type: !2878, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !9575)
!9575 = !{!9572, !9576}
!9576 = !DILocalVariable(name: "rhs", scope: !9573, file: !9314, line: 167, type: !9, align: 8)
!9577 = !DILocation(line: 167, column: 22, scope: !9573, inlinedAt: !9571)
!9578 = !DILocalVariable(name: "self", scope: !9579, file: !9314, line: 167, type: !263, align: 8)
!9579 = !DILexicalBlockFile(scope: !9580, file: !9314, discriminator: 0)
!9580 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h5134e3b58b828f5bE", scope: !437, file: !436, line: 178, type: !9562, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9581)
!9581 = !{!9578}
!9582 = !DILocation(line: 167, column: 22, scope: !9579, inlinedAt: !9583)
!9583 = !DILocation(line: 29, column: 47, scope: !9551, inlinedAt: !9538)
!9584 = !DILocalVariable(name: "self", scope: !9585, file: !9314, line: 167, type: !258, align: 8)
!9585 = !DILexicalBlockFile(scope: !9586, file: !9314, discriminator: 0)
!9586 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9589)
!9587 = !DISubroutineType(types: !9588)
!9588 = !{!3688, !258}
!9589 = !{!9584}
!9590 = !DILocation(line: 167, column: 22, scope: !9585, inlinedAt: !9591)
!9591 = !DILocation(line: 29, column: 65, scope: !9551, inlinedAt: !9538)
!9592 = !DILocalVariable(name: "self", scope: !9593, file: !9314, line: 167, type: !3688, align: 8)
!9593 = !DILexicalBlockFile(scope: !9594, file: !9314, discriminator: 0)
!9594 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hb494205229ebc192E", scope: !456, file: !455, line: 182, type: !9595, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9597)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{!9, !3688}
!9597 = !{!9592}
!9598 = !DILocation(line: 167, column: 22, scope: !9593, inlinedAt: !9591)
!9599 = !DILocation(line: 167, column: 22, scope: !9553, inlinedAt: !9538)
!9600 = !DILocalVariable(name: "self", scope: !9601, file: !9314, line: 167, type: !258, align: 8)
!9601 = !DILexicalBlockFile(scope: !9602, file: !9314, discriminator: 0)
!9602 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9603)
!9603 = !{!9600}
!9604 = !DILocation(line: 167, column: 22, scope: !9601, inlinedAt: !9605)
!9605 = !DILocation(line: 23, column: 43, scope: !9551, inlinedAt: !9538)
!9606 = !DILocalVariable(name: "self", scope: !9607, file: !9314, line: 167, type: !3688, align: 8)
!9607 = !DILexicalBlockFile(scope: !9608, file: !9314, discriminator: 0)
!9608 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hb494205229ebc192E", scope: !456, file: !455, line: 182, type: !9595, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !9609)
!9609 = !{!9606}
!9610 = !DILocation(line: 167, column: 22, scope: !9607, inlinedAt: !9605)
!9611 = !DILocation(line: 168, column: 19, scope: !9325)
!9612 = !DILocation(line: 171, column: 17, scope: !9325)
!9613 = !DILocation(line: 166, column: 9, scope: !9329)
!9614 = !DILocation(line: 166, column: 24, scope: !9458, inlinedAt: !9461)
!9615 = !DILocation(line: 174, column: 41, scope: !9329)
!9616 = !DILocation(line: 174, column: 22, scope: !9503, inlinedAt: !9504)
!9617 = !DILocation(line: 177, column: 30, scope: !9331)
!9618 = !DILocation(line: 203, column: 1, scope: !9329)
!9619 = !DILocation(line: 177, column: 5, scope: !9331)
!9620 = !DILocation(line: 180, column: 19, scope: !9331)
!9621 = !DILocalVariable(name: "self", scope: !9622, file: !9314, line: 180, type: !2476, align: 8)
!9622 = !DILexicalBlockFile(scope: !9623, file: !9314, discriminator: 0)
!9623 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5d955c629b2c207bE", scope: !1219, file: !2472, line: 1945, type: !9624, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !9626)
!9624 = !DISubroutineType(types: !9625)
!9625 = !{!9, !2476}
!9626 = !{!9621}
!9627 = !DILocation(line: 180, column: 19, scope: !9622, inlinedAt: !9620)
!9628 = !DILocation(line: 180, column: 13, scope: !9333)
!9629 = !DILocation(line: 181, column: 70, scope: !9333)
!9630 = !DILocation(line: 181, column: 68, scope: !9333)
!9631 = !DILocalVariable(name: "self", scope: !9632, file: !9314, line: 181, type: !5143, align: 8)
!9632 = !DILexicalBlockFile(scope: !9633, file: !9314, discriminator: 0)
!9633 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h5c9e5b78c01569daE", scope: !5218, file: !617, line: 344, type: !9634, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9636)
!9634 = !DISubroutineType(types: !9635)
!9635 = !{!794, !5143, !794}
!9636 = !{!9631, !9637}
!9637 = !DILocalVariable(name: "slice", scope: !9632, file: !9314, line: 181, type: !794, align: 8)
!9638 = !DILocation(line: 181, column: 22, scope: !9632, inlinedAt: !9639)
!9639 = !DILocation(line: 443, column: 24, scope: !9465, inlinedAt: !9472)
!9640 = !DILocation(line: 181, column: 13, scope: !9335)
!9641 = !DILocation(line: 185, column: 54, scope: !9335)
!9642 = !DILocalVariable(name: "self", scope: !9643, file: !9314, line: 185, type: !892, align: 8)
!9643 = !DILexicalBlockFile(scope: !9644, file: !9314, discriminator: 0)
!9644 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd5db123b22cca324E", scope: !5968, file: !5967, line: 476, type: !6345, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !9645)
!9645 = !{!9642}
!9646 = !DILocation(line: 185, column: 54, scope: !9643, inlinedAt: !9641)
!9647 = !DILocalVariable(name: "self", scope: !9648, file: !9314, line: 185, type: !342, align: 8)
!9648 = !DILexicalBlockFile(scope: !9649, file: !9314, discriminator: 0)
!9649 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3dc6b9930fb48b2cE", scope: !437, file: !436, line: 46, type: !9650, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9653, retainedNodes: !9652)
!9650 = !DISubroutineType(types: !9651)
!9651 = !{!6045, !342}
!9652 = !{!9647}
!9653 = !{!344, !9654}
!9654 = !DITemplateTypeParameter(name: "U", type: !798)
!9655 = !DILocation(line: 185, column: 54, scope: !9648, inlinedAt: !9641)
!9656 = !DILocalVariable(name: "data", scope: !9657, file: !9314, line: 185, type: !6045, align: 8)
!9657 = !DILexicalBlockFile(scope: !9658, file: !9314, discriminator: 0)
!9658 = distinct !DISubprogram(name: "from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h97b65a415e0087beE", scope: !2484, file: !2483, line: 90, type: !9659, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9661)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{!3533, !6045, !9}
!9661 = !{!9656, !9662, !9663}
!9662 = !DILocalVariable(name: "len", scope: !9657, file: !9314, line: 185, type: !9, align: 8)
!9663 = !DILocalVariable(name: "runtime", scope: !9664, file: !9314, line: 185, type: !9666, align: 8)
!9664 = !DILexicalBlockFile(scope: !9665, file: !9314, discriminator: 0)
!9665 = distinct !DILexicalBlock(scope: !9658, file: !640, line: 2319, column: 13)
!9666 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !2493, file: !2, size: 128, align: 64, elements: !9667, templateParams: !23, identifier: "acbf99c99e88b0334de2ca1122f64775")
!9667 = !{!9668, !9669}
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !9666, file: !2, baseType: !6055, size: 64, align: 64)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !9666, file: !2, baseType: !387, size: 64, align: 64, offset: 64)
!9670 = !DILocation(line: 185, column: 26, scope: !9657, inlinedAt: !9671)
!9671 = !DILocation(line: 185, column: 26, scope: !9335)
!9672 = !DILocation(line: 185, column: 75, scope: !9335)
!9673 = !DILocalVariable(name: "self", scope: !9674, file: !9314, line: 185, type: !892, align: 8)
!9674 = !DILexicalBlockFile(scope: !9675, file: !9314, discriminator: 0)
!9675 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hfad42130804bf34cE", scope: !5968, file: !5967, line: 129, type: !9676, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !9678)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{!9, !892}
!9678 = !{!9673}
!9679 = !DILocation(line: 185, column: 75, scope: !9674, inlinedAt: !9672)
!9680 = !DILocalVariable(name: "data", scope: !9681, file: !9314, line: 185, type: !6045, align: 8)
!9681 = !DILexicalBlockFile(scope: !9682, file: !9314, discriminator: 0)
!9682 = distinct !DISubprogram(name: "slice_from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h540ee33f05a5aeb5E", scope: !260, file: !682, line: 694, type: !9683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9689)
!9683 = !DISubroutineType(types: !9684)
!9684 = !{!9685, !6045, !9}
!9685 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !9686, templateParams: !23, identifier: "501a18573699971d60ab8c1497dbf49c")
!9686 = !{!9687, !9688}
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !9685, file: !2, baseType: !797, size: 64, align: 64)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9685, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9689 = !{!9680, !9690}
!9690 = !DILocalVariable(name: "len", scope: !9681, file: !9314, line: 185, type: !9, align: 8)
!9691 = !DILocation(line: 185, column: 26, scope: !9681, inlinedAt: !9692)
!9692 = !DILocation(line: 97, column: 11, scope: !9658, inlinedAt: !9671)
!9693 = !DILocalVariable(name: "self", scope: !9694, file: !9314, line: 185, type: !6045, align: 8)
!9694 = !DILexicalBlockFile(scope: !9695, file: !9314, discriminator: 0)
!9695 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7561ec4b410f1901E", scope: !437, file: !436, line: 46, type: !9696, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !868, retainedNodes: !9698)
!9696 = !DISubroutineType(types: !9697)
!9697 = !{!6, !6045}
!9698 = !{!9693}
!9699 = !DILocation(line: 185, column: 26, scope: !9694, inlinedAt: !9700)
!9700 = !DILocation(line: 695, column: 20, scope: !9682, inlinedAt: !9692)
!9701 = !DILocalVariable(name: "data_address", scope: !9702, file: !9314, line: 185, type: !6, align: 8)
!9702 = !DILexicalBlockFile(scope: !9703, file: !9314, discriminator: 0)
!9703 = distinct !DISubprogram(name: "from_raw_parts<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hb21eb48d09a3eb93E", scope: !704, file: !703, line: 110, type: !9704, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9706)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!9685, !6, !9}
!9706 = !{!9701, !9707}
!9707 = !DILocalVariable(name: "metadata", scope: !9702, file: !9314, line: 185, type: !9, align: 8)
!9708 = !DILocation(line: 185, column: 26, scope: !9702, inlinedAt: !9709)
!9709 = !DILocation(line: 695, column: 5, scope: !9682, inlinedAt: !9692)
!9710 = !DILocation(line: 185, column: 13, scope: !9337)
!9711 = !DILocation(line: 186, column: 13, scope: !9339)
!9712 = !DILocation(line: 194, column: 58, scope: !9339)
!9713 = !DILocation(line: 194, column: 66, scope: !9343)
!9714 = !DILocation(line: 194, column: 22, scope: !9345)
!9715 = !DILocation(line: 194, column: 46, scope: !9345)
!9716 = !DILocation(line: 194, column: 22, scope: !9347)
!9717 = !DILocalVariable(name: "self", scope: !9718, file: !9314, line: 194, type: !3533, align: 8)
!9718 = !DILexicalBlockFile(scope: !9719, file: !9314, discriminator: 0)
!9719 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9722)
!9720 = !DISubroutineType(types: !9721)
!9721 = !{!9, !3533}
!9722 = !{!9717}
!9723 = !DILocation(line: 194, column: 22, scope: !9718, inlinedAt: !9724)
!9724 = !DILocation(line: 103, column: 15, scope: !9347)
!9725 = !DILocalVariable(name: "self", scope: !9726, file: !9314, line: 194, type: !5590, align: 8)
!9726 = !DILexicalBlockFile(scope: !9727, file: !9314, discriminator: 0)
!9727 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1c461a862387d42cE", scope: !5381, file: !5380, line: 271, type: !9728, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9731, retainedNodes: !9730)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!5590, !5590}
!9730 = !{!9725}
!9731 = !{!9732}
!9732 = !DITemplateTypeParameter(name: "I", type: !5590)
!9733 = !DILocation(line: 194, column: 22, scope: !9726, inlinedAt: !9734)
!9734 = !DILocation(line: 117, column: 26, scope: !9347)
!9735 = !DILocalVariable(name: "self", scope: !9736, file: !9314, line: 194, type: !5590, align: 8)
!9736 = !DILexicalBlockFile(scope: !9737, file: !9314, discriminator: 0)
!9737 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1c461a862387d42cE", scope: !5381, file: !5380, line: 271, type: !9728, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9731, retainedNodes: !9738)
!9738 = !{!9735}
!9739 = !DILocation(line: 194, column: 22, scope: !9736, inlinedAt: !9740)
!9740 = !DILocation(line: 108, column: 30, scope: !9347)
!9741 = !DILocalVariable(name: "self", scope: !9742, file: !9314, line: 194, type: !5590, align: 8)
!9742 = !DILexicalBlockFile(scope: !9743, file: !9314, discriminator: 0)
!9743 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1c461a862387d42cE", scope: !5381, file: !5380, line: 271, type: !9728, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9731, retainedNodes: !9744)
!9744 = !{!9741}
!9745 = !DILocation(line: 194, column: 22, scope: !9742, inlinedAt: !9740)
!9746 = !DILocalVariable(name: "self", scope: !9747, file: !9314, line: 194, type: !5590, align: 8)
!9747 = !DILexicalBlockFile(scope: !9748, file: !9314, discriminator: 0)
!9748 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1c461a862387d42cE", scope: !5381, file: !5380, line: 271, type: !9728, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9731, retainedNodes: !9749)
!9749 = !{!9746}
!9750 = !DILocation(line: 194, column: 22, scope: !9747, inlinedAt: !9740)
!9751 = !DILocalVariable(name: "self", scope: !9752, file: !9314, line: 194, type: !5590, align: 8)
!9752 = !DILexicalBlockFile(scope: !9753, file: !9314, discriminator: 0)
!9753 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1c461a862387d42cE", scope: !5381, file: !5380, line: 271, type: !9728, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9731, retainedNodes: !9754)
!9754 = !{!9751}
!9755 = !DILocation(line: 194, column: 22, scope: !9752, inlinedAt: !9740)
!9756 = !DILocalVariable(name: "self", scope: !9757, file: !9314, line: 194, type: !5590, align: 8)
!9757 = !DILexicalBlockFile(scope: !9758, file: !9314, discriminator: 0)
!9758 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1c461a862387d42cE", scope: !5381, file: !5380, line: 271, type: !9728, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9731, retainedNodes: !9759)
!9759 = !{!9756}
!9760 = !DILocation(line: 194, column: 22, scope: !9757, inlinedAt: !9740)
!9761 = !DILocalVariable(name: "self", scope: !9762, file: !9314, line: 194, type: !9766, align: 8)
!9762 = !DILexicalBlockFile(scope: !9763, file: !9314, discriminator: 0)
!9763 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h505dbd53a8f03bc0E", scope: !230, file: !229, line: 102, type: !9764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9768, retainedNodes: !9767)
!9764 = !DISubroutineType(types: !9765)
!9765 = !{!6826, !9766}
!9766 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", baseType: !5590, size: 64, align: 64, dwarfAddressSpace: 0)
!9767 = !{!9761}
!9768 = !{!9479, !277, !3547}
!9769 = !DILocation(line: 194, column: 22, scope: !9762, inlinedAt: !9770)
!9770 = !DILocation(line: 117, column: 26, scope: !9429)
!9771 = !DILocation(line: 194, column: 22, scope: !9431)
!9772 = !DILocalVariable(name: "self", scope: !9773, file: !9314, line: 194, type: !3533, align: 8)
!9773 = !DILexicalBlockFile(scope: !9774, file: !9314, discriminator: 0)
!9774 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9775)
!9775 = !{!9772}
!9776 = !DILocation(line: 194, column: 22, scope: !9773, inlinedAt: !9777)
!9777 = !DILocation(line: 131, column: 19, scope: !9431)
!9778 = !DILocation(line: 194, column: 22, scope: !9433)
!9779 = !DILocation(line: 194, column: 22, scope: !9435)
!9780 = !DILocation(line: 194, column: 22, scope: !9438)
!9781 = !DILocalVariable(name: "self", scope: !9782, file: !9314, line: 194, type: !3533, align: 8)
!9782 = !DILexicalBlockFile(scope: !9783, file: !9314, discriminator: 0)
!9783 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9784)
!9784 = !{!9781}
!9785 = !DILocation(line: 194, column: 22, scope: !9782, inlinedAt: !9786)
!9786 = !DILocation(line: 131, column: 19, scope: !9438)
!9787 = !DILocation(line: 194, column: 22, scope: !9440)
!9788 = !DILocation(line: 194, column: 22, scope: !9442)
!9789 = !DILocation(line: 194, column: 22, scope: !9339)
!9790 = !DILocation(line: 194, column: 13, scope: !9341)
!9791 = !DILocation(line: 199, column: 41, scope: !9341)
!9792 = !DILocalVariable(name: "self", scope: !9793, file: !9314, line: 199, type: !3533, align: 8)
!9793 = !DILexicalBlockFile(scope: !9794, file: !9314, discriminator: 0)
!9794 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9795)
!9795 = !{!9792}
!9796 = !DILocation(line: 199, column: 41, scope: !9793, inlinedAt: !9791)
!9797 = !DILocation(line: 199, column: 26, scope: !9341)
!9798 = !DILocation(line: 199, column: 13, scope: !9445)
!9799 = !DILocation(line: 200, column: 9, scope: !9445)
!9800 = !DILocalVariable(name: "self", scope: !9801, file: !9314, line: 200, type: !1645, align: 8)
!9801 = !DILexicalBlockFile(scope: !9802, file: !9314, discriminator: 0)
!9802 = distinct !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h6ab38cb1c5c6cf5dE", scope: !1219, file: !2472, line: 1301, type: !9803, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !9805)
!9803 = !DISubroutineType(types: !9804)
!9804 = !{null, !1645, !9}
!9805 = !{!9800, !9806}
!9806 = !DILocalVariable(name: "new_len", scope: !9801, file: !9314, line: 200, type: !9, align: 8)
!9807 = !DILocation(line: 200, column: 9, scope: !9801, inlinedAt: !9799)
!9808 = !DILocation(line: 200, column: 24, scope: !9445)
!9809 = !DILocation(line: 202, column: 5, scope: !9331)
!9810 = !DILocalVariable(name: "self", scope: !9811, file: !9314, line: 194, type: !9766, align: 8)
!9811 = !DILexicalBlockFile(scope: !9812, file: !9314, discriminator: 0)
!9812 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h505dbd53a8f03bc0E", scope: !230, file: !229, line: 102, type: !9764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9768, retainedNodes: !9813)
!9813 = !{!9810}
!9814 = !DILocation(line: 194, column: 22, scope: !9811, inlinedAt: !9815)
!9815 = !DILocation(line: 108, column: 30, scope: !9413)
!9816 = !DILocation(line: 194, column: 22, scope: !9415)
!9817 = !DILocalVariable(name: "self", scope: !9818, file: !9314, line: 194, type: !3533, align: 8)
!9818 = !DILexicalBlockFile(scope: !9819, file: !9314, discriminator: 0)
!9819 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9820)
!9820 = !{!9817}
!9821 = !DILocation(line: 194, column: 22, scope: !9818, inlinedAt: !9822)
!9822 = !DILocation(line: 131, column: 19, scope: !9415)
!9823 = !DILocation(line: 194, column: 22, scope: !9417)
!9824 = !DILocation(line: 194, column: 22, scope: !9419)
!9825 = !DILocation(line: 194, column: 22, scope: !9422)
!9826 = !DILocalVariable(name: "self", scope: !9827, file: !9314, line: 194, type: !3533, align: 8)
!9827 = !DILexicalBlockFile(scope: !9828, file: !9314, discriminator: 0)
!9828 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9829)
!9829 = !{!9826}
!9830 = !DILocation(line: 194, column: 22, scope: !9827, inlinedAt: !9831)
!9831 = !DILocation(line: 131, column: 19, scope: !9422)
!9832 = !DILocation(line: 194, column: 22, scope: !9424)
!9833 = !DILocation(line: 194, column: 22, scope: !9426)
!9834 = !DILocalVariable(name: "self", scope: !9835, file: !9314, line: 194, type: !9766, align: 8)
!9835 = !DILexicalBlockFile(scope: !9836, file: !9314, discriminator: 0)
!9836 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h505dbd53a8f03bc0E", scope: !230, file: !229, line: 102, type: !9764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9768, retainedNodes: !9837)
!9837 = !{!9834}
!9838 = !DILocation(line: 194, column: 22, scope: !9835, inlinedAt: !9839)
!9839 = !DILocation(line: 108, column: 30, scope: !9397)
!9840 = !DILocation(line: 194, column: 22, scope: !9399)
!9841 = !DILocalVariable(name: "self", scope: !9842, file: !9314, line: 194, type: !3533, align: 8)
!9842 = !DILexicalBlockFile(scope: !9843, file: !9314, discriminator: 0)
!9843 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9844)
!9844 = !{!9841}
!9845 = !DILocation(line: 194, column: 22, scope: !9842, inlinedAt: !9846)
!9846 = !DILocation(line: 131, column: 19, scope: !9399)
!9847 = !DILocation(line: 194, column: 22, scope: !9401)
!9848 = !DILocation(line: 194, column: 22, scope: !9403)
!9849 = !DILocation(line: 194, column: 22, scope: !9406)
!9850 = !DILocalVariable(name: "self", scope: !9851, file: !9314, line: 194, type: !3533, align: 8)
!9851 = !DILexicalBlockFile(scope: !9852, file: !9314, discriminator: 0)
!9852 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9853)
!9853 = !{!9850}
!9854 = !DILocation(line: 194, column: 22, scope: !9851, inlinedAt: !9855)
!9855 = !DILocation(line: 131, column: 19, scope: !9406)
!9856 = !DILocation(line: 194, column: 22, scope: !9408)
!9857 = !DILocation(line: 194, column: 22, scope: !9410)
!9858 = !DILocalVariable(name: "self", scope: !9859, file: !9314, line: 194, type: !9766, align: 8)
!9859 = !DILexicalBlockFile(scope: !9860, file: !9314, discriminator: 0)
!9860 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h505dbd53a8f03bc0E", scope: !230, file: !229, line: 102, type: !9764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9768, retainedNodes: !9861)
!9861 = !{!9858}
!9862 = !DILocation(line: 194, column: 22, scope: !9859, inlinedAt: !9863)
!9863 = !DILocation(line: 108, column: 30, scope: !9381)
!9864 = !DILocation(line: 194, column: 22, scope: !9383)
!9865 = !DILocalVariable(name: "self", scope: !9866, file: !9314, line: 194, type: !3533, align: 8)
!9866 = !DILexicalBlockFile(scope: !9867, file: !9314, discriminator: 0)
!9867 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9868)
!9868 = !{!9865}
!9869 = !DILocation(line: 194, column: 22, scope: !9866, inlinedAt: !9870)
!9870 = !DILocation(line: 131, column: 19, scope: !9383)
!9871 = !DILocation(line: 194, column: 22, scope: !9385)
!9872 = !DILocation(line: 194, column: 22, scope: !9387)
!9873 = !DILocation(line: 194, column: 22, scope: !9390)
!9874 = !DILocalVariable(name: "self", scope: !9875, file: !9314, line: 194, type: !3533, align: 8)
!9875 = !DILexicalBlockFile(scope: !9876, file: !9314, discriminator: 0)
!9876 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9877)
!9877 = !{!9874}
!9878 = !DILocation(line: 194, column: 22, scope: !9875, inlinedAt: !9879)
!9879 = !DILocation(line: 131, column: 19, scope: !9390)
!9880 = !DILocation(line: 194, column: 22, scope: !9392)
!9881 = !DILocation(line: 194, column: 22, scope: !9394)
!9882 = !DILocalVariable(name: "self", scope: !9883, file: !9314, line: 194, type: !9766, align: 8)
!9883 = !DILexicalBlockFile(scope: !9884, file: !9314, discriminator: 0)
!9884 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h505dbd53a8f03bc0E", scope: !230, file: !229, line: 102, type: !9764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9768, retainedNodes: !9885)
!9885 = !{!9882}
!9886 = !DILocation(line: 194, column: 22, scope: !9883, inlinedAt: !9887)
!9887 = !DILocation(line: 108, column: 30, scope: !9365)
!9888 = !DILocation(line: 194, column: 22, scope: !9367)
!9889 = !DILocalVariable(name: "self", scope: !9890, file: !9314, line: 194, type: !3533, align: 8)
!9890 = !DILexicalBlockFile(scope: !9891, file: !9314, discriminator: 0)
!9891 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9892)
!9892 = !{!9889}
!9893 = !DILocation(line: 194, column: 22, scope: !9890, inlinedAt: !9894)
!9894 = !DILocation(line: 131, column: 19, scope: !9367)
!9895 = !DILocation(line: 194, column: 22, scope: !9369)
!9896 = !DILocation(line: 194, column: 22, scope: !9371)
!9897 = !DILocation(line: 194, column: 22, scope: !9374)
!9898 = !DILocalVariable(name: "self", scope: !9899, file: !9314, line: 194, type: !3533, align: 8)
!9899 = !DILexicalBlockFile(scope: !9900, file: !9314, discriminator: 0)
!9900 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9901)
!9901 = !{!9898}
!9902 = !DILocation(line: 194, column: 22, scope: !9899, inlinedAt: !9903)
!9903 = !DILocation(line: 131, column: 19, scope: !9374)
!9904 = !DILocation(line: 194, column: 22, scope: !9376)
!9905 = !DILocation(line: 194, column: 22, scope: !9378)
!9906 = !DILocalVariable(name: "self", scope: !9907, file: !9314, line: 194, type: !9766, align: 8)
!9907 = !DILexicalBlockFile(scope: !9908, file: !9314, discriminator: 0)
!9908 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h505dbd53a8f03bc0E", scope: !230, file: !229, line: 102, type: !9764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9768, retainedNodes: !9909)
!9909 = !{!9906}
!9910 = !DILocation(line: 194, column: 22, scope: !9907, inlinedAt: !9911)
!9911 = !DILocation(line: 108, column: 30, scope: !9349)
!9912 = !DILocation(line: 194, column: 22, scope: !9351)
!9913 = !DILocalVariable(name: "self", scope: !9914, file: !9314, line: 194, type: !3533, align: 8)
!9914 = !DILexicalBlockFile(scope: !9915, file: !9314, discriminator: 0)
!9915 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9916)
!9916 = !{!9913}
!9917 = !DILocation(line: 194, column: 22, scope: !9914, inlinedAt: !9918)
!9918 = !DILocation(line: 131, column: 19, scope: !9351)
!9919 = !DILocation(line: 194, column: 22, scope: !9353)
!9920 = !DILocation(line: 194, column: 22, scope: !9355)
!9921 = !DILocation(line: 194, column: 22, scope: !9358)
!9922 = !DILocalVariable(name: "self", scope: !9923, file: !9314, line: 194, type: !3533, align: 8)
!9923 = !DILexicalBlockFile(scope: !9924, file: !9314, discriminator: 0)
!9924 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf1e16cf36bc4ad6cE", scope: !5968, file: !5967, line: 129, type: !9720, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9925)
!9925 = !{!9922}
!9926 = !DILocation(line: 194, column: 22, scope: !9923, inlinedAt: !9927)
!9927 = !DILocation(line: 131, column: 19, scope: !9358)
!9928 = !DILocation(line: 194, column: 22, scope: !9360)
!9929 = !DILocation(line: 194, column: 22, scope: !9362)
!9930 = !DILocation(line: 147, column: 1, scope: !9313)
!9931 = distinct !DISubprogram(name: "{closure#1}<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h9461ac78f0f5cd8dE", scope: !274, file: !9314, line: 186, type: !3531, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9446, retainedNodes: !9932)
!9932 = !{!9933, !9934, !9936}
!9933 = !DILocalVariable(name: "it", arg: 2, scope: !9931, file: !9314, line: 186, type: !270)
!9934 = !DILocalVariable(name: "it", scope: !9935, file: !9314, line: 187, type: !892, align: 8)
!9935 = distinct !DILexicalBlock(scope: !9931, file: !9314, line: 187, column: 13)
!9936 = !DILocalVariable(arg: 1, scope: !9931, file: !9314, line: 186, type: !3537)
!9937 = !DILocation(line: 186, column: 36, scope: !9931)
!9938 = !DILocation(line: 186, column: 37, scope: !9931)
!9939 = !DILocation(line: 187, column: 22, scope: !9931)
!9940 = !DILocation(line: 187, column: 17, scope: !9935)
!9941 = !DILocation(line: 188, column: 41, scope: !9935)
!9942 = !DILocalVariable(name: "self", scope: !9943, file: !9314, line: 188, type: !892, align: 8)
!9943 = !DILexicalBlockFile(scope: !9944, file: !9314, discriminator: 0)
!9944 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd5db123b22cca324E", scope: !5968, file: !5967, line: 476, type: !6345, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !9945)
!9945 = !{!9942}
!9946 = !DILocation(line: 188, column: 41, scope: !9943, inlinedAt: !9941)
!9947 = !DILocalVariable(name: "self", scope: !9948, file: !9314, line: 188, type: !342, align: 8)
!9948 = !DILexicalBlockFile(scope: !9949, file: !9314, discriminator: 0)
!9949 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3dc6b9930fb48b2cE", scope: !437, file: !436, line: 46, type: !9650, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9653, retainedNodes: !9950)
!9950 = !{!9947}
!9951 = !DILocation(line: 188, column: 41, scope: !9948, inlinedAt: !9941)
!9952 = !DILocalVariable(name: "data", scope: !9953, file: !9314, line: 188, type: !6045, align: 8)
!9953 = !DILexicalBlockFile(scope: !9954, file: !9314, discriminator: 0)
!9954 = distinct !DISubprogram(name: "from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h97b65a415e0087beE", scope: !2484, file: !2483, line: 90, type: !9659, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9955)
!9955 = !{!9952, !9956, !9957}
!9956 = !DILocalVariable(name: "len", scope: !9953, file: !9314, line: 188, type: !9, align: 8)
!9957 = !DILocalVariable(name: "runtime", scope: !9958, file: !9314, line: 188, type: !9666, align: 8)
!9958 = !DILexicalBlockFile(scope: !9959, file: !9314, discriminator: 0)
!9959 = distinct !DILexicalBlock(scope: !9954, file: !640, line: 2319, column: 13)
!9960 = !DILocation(line: 188, column: 13, scope: !9953, inlinedAt: !9961)
!9961 = !DILocation(line: 188, column: 13, scope: !9935)
!9962 = !DILocation(line: 188, column: 61, scope: !9935)
!9963 = !DILocalVariable(name: "data", scope: !9964, file: !9314, line: 188, type: !6045, align: 8)
!9964 = !DILexicalBlockFile(scope: !9965, file: !9314, discriminator: 0)
!9965 = distinct !DISubprogram(name: "slice_from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h540ee33f05a5aeb5E", scope: !260, file: !682, line: 694, type: !9683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9966)
!9966 = !{!9963, !9967}
!9967 = !DILocalVariable(name: "len", scope: !9964, file: !9314, line: 188, type: !9, align: 8)
!9968 = !DILocation(line: 188, column: 13, scope: !9964, inlinedAt: !9969)
!9969 = !DILocation(line: 97, column: 11, scope: !9954, inlinedAt: !9961)
!9970 = !DILocalVariable(name: "self", scope: !9971, file: !9314, line: 188, type: !6045, align: 8)
!9971 = !DILexicalBlockFile(scope: !9972, file: !9314, discriminator: 0)
!9972 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7561ec4b410f1901E", scope: !437, file: !436, line: 46, type: !9696, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !868, retainedNodes: !9973)
!9973 = !{!9970}
!9974 = !DILocation(line: 188, column: 13, scope: !9971, inlinedAt: !9975)
!9975 = !DILocation(line: 695, column: 20, scope: !9965, inlinedAt: !9969)
!9976 = !DILocalVariable(name: "data_address", scope: !9977, file: !9314, line: 188, type: !6, align: 8)
!9977 = !DILexicalBlockFile(scope: !9978, file: !9314, discriminator: 0)
!9978 = distinct !DISubprogram(name: "from_raw_parts<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hb21eb48d09a3eb93E", scope: !704, file: !703, line: 110, type: !9704, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !9979)
!9979 = !{!9976, !9980}
!9980 = !DILocalVariable(name: "metadata", scope: !9977, file: !9314, line: 188, type: !9, align: 8)
!9981 = !DILocation(line: 188, column: 13, scope: !9977, inlinedAt: !9982)
!9982 = !DILocation(line: 695, column: 5, scope: !9965, inlinedAt: !9969)
!9983 = !DILocation(line: 189, column: 10, scope: !9931)
!9984 = distinct !DISubprogram(name: "{closure#0}<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hbf7dcdf19e5da596E", scope: !274, file: !9314, line: 168, type: !9985, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9446, retainedNodes: !9987)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{!236, !7085, !9}
!9987 = !{!9988, !9989}
!9988 = !DILocalVariable(name: "n", arg: 2, scope: !9984, file: !9314, line: 168, type: !9)
!9989 = !DILocalVariable(name: "slice", scope: !9984, file: !9314, line: 147, type: !48, align: 8)
!9990 = !DILocation(line: 147, column: 31, scope: !9984)
!9991 = !DILocation(line: 168, column: 20, scope: !9984)
!9992 = !DILocalVariable(name: "f", scope: !9993, file: !9314, line: 169, type: !272, align: 1)
!9993 = !DILexicalBlockFile(scope: !9994, file: !9314, discriminator: 0)
!9994 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, usize, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h4a8b3587ec994aebE", scope: !5328, file: !5327, line: 776, type: !5580, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9997, retainedNodes: !9995)
!9995 = !{!9996, !9992}
!9996 = !DILocalVariable(name: "self", scope: !9993, file: !9314, line: 169, type: !253, align: 8)
!9997 = !{!5526, !287, !278}
!9998 = !DILocation(line: 169, column: 13, scope: !9993, inlinedAt: !9999)
!9999 = !DILocation(line: 169, column: 13, scope: !9984)
!10000 = !DILocalVariable(name: "self", scope: !10001, file: !9314, line: 169, type: !2000, align: 8)
!10001 = !DILexicalBlockFile(scope: !10002, file: !9314, discriminator: 0)
!10002 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1e784e2ed6606635E", scope: !5968, file: !5967, line: 734, type: !6217, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !10003)
!10003 = !{!10000}
!10004 = !DILocation(line: 169, column: 13, scope: !10001, inlinedAt: !9999)
!10005 = !DILocation(line: 170, column: 10, scope: !9984)
!10006 = distinct !DISubprogram(name: "{closure#0}<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9da2e48680bbcafaE", scope: !273, file: !9314, line: 169, type: !10007, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !9446, retainedNodes: !10009)
!10007 = !DISubroutineType(types: !10008)
!10008 = !{!9, !5512, !270}
!10009 = !{!10010, !10011}
!10010 = !DILocalVariable(name: "s", arg: 2, scope: !10006, file: !9314, line: 169, type: !270)
!10011 = !DILocalVariable(arg: 1, scope: !10006, file: !9314, line: 169, type: !5512)
!10012 = !DILocation(line: 169, column: 30, scope: !10006)
!10013 = !DILocation(line: 169, column: 31, scope: !10006)
!10014 = !DILocation(line: 169, column: 34, scope: !10006)
!10015 = !DILocation(line: 169, column: 59, scope: !10006)
!10016 = distinct !DISubprogram(name: "join<&str>", linkageName: "_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h8940c49ccfa13e56E", scope: !10017, file: !9314, line: 92, type: !10018, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2730, retainedNodes: !10020)
!10017 = !DINamespace(name: "{impl#1}", scope: !275)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!2358, !2000, !48}
!10020 = !{!10021, !10022}
!10021 = !DILocalVariable(name: "slice", arg: 1, scope: !10016, file: !9314, line: 92, type: !2000)
!10022 = !DILocalVariable(name: "sep", arg: 2, scope: !10016, file: !9314, line: 92, type: !48)
!10023 = !DILocation(line: 92, column: 13, scope: !10016)
!10024 = !DILocation(line: 92, column: 27, scope: !10016)
!10025 = !DILocalVariable(name: "bytes", scope: !10026, file: !9314, line: 93, type: !1219, align: 8)
!10026 = !DILexicalBlockFile(scope: !10027, file: !9314, discriminator: 0)
!10027 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17hf161b45de1c12393E", scope: !2358, file: !10028, line: 844, type: !10029, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10031)
!10028 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/string.rs", directory: "", checksumkind: CSK_MD5, checksum: "023588f502e704e6529afba2c7c3c287")
!10029 = !DISubroutineType(types: !10030)
!10030 = !{!2358, !1219}
!10031 = !{!10025}
!10032 = !DILocation(line: 93, column: 18, scope: !10026, inlinedAt: !10033)
!10033 = !DILocation(line: 93, column: 18, scope: !10016)
!10034 = !DILocation(line: 93, column: 71, scope: !10016)
!10035 = !DILocalVariable(name: "self", scope: !10036, file: !9314, line: 93, type: !48, align: 8)
!10036 = !DILexicalBlockFile(scope: !10037, file: !9314, discriminator: 0)
!10037 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10038)
!10038 = !{!10035}
!10039 = !DILocation(line: 93, column: 71, scope: !10036, inlinedAt: !10034)
!10040 = !DILocation(line: 93, column: 46, scope: !10016)
!10041 = !DILocation(line: 94, column: 6, scope: !10016)
!10042 = distinct !DISubprogram(name: "as_mut_ptr<*const i8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h17cff016fdc8b191E", scope: !2564, file: !2472, line: 1204, type: !10043, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2584, retainedNodes: !10047)
!10043 = !DISubroutineType(types: !10044)
!10044 = !{!10045, !10046}
!10045 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *const i8", baseType: !2577, size: 64, align: 64, dwarfAddressSpace: 0)
!10046 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<*const i8, alloc::alloc::Global>", baseType: !2564, size: 64, align: 64, dwarfAddressSpace: 0)
!10047 = !{!10048, !10049}
!10048 = !DILocalVariable(name: "self", arg: 1, scope: !10042, file: !2472, line: 1204, type: !10046)
!10049 = !DILocalVariable(name: "ptr", scope: !10050, file: !2472, line: 1207, type: !10045, align: 8)
!10050 = distinct !DILexicalBlock(scope: !10042, file: !2472, line: 1207, column: 9)
!10051 = !DILocation(line: 1204, column: 23, scope: !10042)
!10052 = !DILocalVariable(name: "metadata", scope: !10053, file: !2472, line: 1209, type: !7, align: 1)
!10053 = !DILexicalBlockFile(scope: !10054, file: !2472, discriminator: 0)
!10054 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10055)
!10055 = !{!10056, !10052}
!10056 = !DILocalVariable(name: "data_address", scope: !10053, file: !2472, line: 1209, type: !777, align: 8)
!10057 = !DILocation(line: 1209, column: 21, scope: !10053, inlinedAt: !10058)
!10058 = !DILocation(line: 668, column: 5, scope: !10059, inlinedAt: !10060)
!10059 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!10060 = !DILocation(line: 38, column: 41, scope: !10061, inlinedAt: !10067)
!10061 = distinct !DISubprogram(name: "is_null<*const i8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h74a1997460c01e62E", scope: !456, file: !455, line: 35, type: !10062, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !10064)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!989, !10045}
!10064 = !{!10065}
!10065 = !DILocalVariable(name: "self", scope: !10066, file: !2472, line: 1209, type: !10045, align: 8)
!10066 = !DILexicalBlockFile(scope: !10061, file: !2472, discriminator: 0)
!10067 = !DILocation(line: 1209, column: 21, scope: !10050)
!10068 = !DILocation(line: 1207, column: 19, scope: !10042)
!10069 = !DILocalVariable(name: "self", scope: !10070, file: !2472, line: 1207, type: !10074, align: 8)
!10070 = !DILexicalBlockFile(scope: !10071, file: !2472, discriminator: 0)
!10071 = distinct !DISubprogram(name: "ptr<*const i8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h00a8ec641cdbc072E", scope: !2567, file: !9508, line: 223, type: !10072, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2584, retainedNodes: !10075)
!10072 = !DISubroutineType(types: !10073)
!10073 = !{!10045, !10074}
!10074 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>", baseType: !2567, size: 64, align: 64, dwarfAddressSpace: 0)
!10075 = !{!10069}
!10076 = !DILocation(line: 1207, column: 19, scope: !10070, inlinedAt: !10068)
!10077 = !DILocalVariable(name: "self", scope: !10078, file: !2472, line: 1207, type: !2570, align: 8)
!10078 = !DILexicalBlockFile(scope: !10079, file: !2472, discriminator: 0)
!10079 = distinct !DISubprogram(name: "as_ptr<*const i8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6e65436c2a4d2f67E", scope: !2570, file: !1586, line: 103, type: !10080, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !10082)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!10045, !2570}
!10082 = !{!10077}
!10083 = !DILocation(line: 1207, column: 19, scope: !10078, inlinedAt: !10084)
!10084 = !DILocation(line: 224, column: 9, scope: !10071, inlinedAt: !10068)
!10085 = !DILocalVariable(name: "self", scope: !10086, file: !2472, line: 1207, type: !2573, align: 8)
!10086 = !DILexicalBlockFile(scope: !10087, file: !2472, discriminator: 0)
!10087 = distinct !DISubprogram(name: "as_ptr<*const i8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4eca9806c000a3cE", scope: !2573, file: !445, line: 330, type: !10088, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !10090)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{!10045, !2573}
!10090 = !{!10085}
!10091 = !DILocation(line: 1207, column: 19, scope: !10086, inlinedAt: !10092)
!10092 = !DILocation(line: 104, column: 9, scope: !10079, inlinedAt: !10084)
!10093 = !DILocation(line: 1207, column: 13, scope: !10050)
!10094 = !DILocation(line: 1209, column: 21, scope: !10066, inlinedAt: !10067)
!10095 = !DILocalVariable(name: "self", scope: !10096, file: !2472, line: 1209, type: !448, align: 8)
!10096 = !DILexicalBlockFile(scope: !10097, file: !2472, discriminator: 0)
!10097 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10098)
!10098 = !{!10095, !10099}
!10099 = !DILocalVariable(name: "other", scope: !10096, file: !2472, line: 1209, type: !448, align: 8)
!10100 = !DILocation(line: 1209, column: 21, scope: !10096, inlinedAt: !10101)
!10101 = !DILocation(line: 38, column: 9, scope: !10061, inlinedAt: !10067)
!10102 = !DILocation(line: 1209, column: 21, scope: !10103, inlinedAt: !10107)
!10103 = !DILexicalBlockFile(scope: !10104, file: !2472, discriminator: 0)
!10104 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !10105)
!10105 = !{!10106}
!10106 = !DILocalVariable(name: "addr", scope: !10103, file: !2472, line: 1209, type: !9, align: 8)
!10107 = !DILocation(line: 668, column: 24, scope: !10059, inlinedAt: !10060)
!10108 = !DILocation(line: 1209, column: 20, scope: !10050)
!10109 = !DILocation(line: 1209, column: 13, scope: !10050)
!10110 = !DILocation(line: 1212, column: 6, scope: !10042)
!10111 = distinct !DISubprogram(name: "as_mut_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h4447c182711b94d6E", scope: !2622, file: !2472, line: 1204, type: !10112, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2647, retainedNodes: !10115)
!10112 = !DISubroutineType(types: !10113)
!10113 = !{!3643, !10114}
!10114 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2622, size: 64, align: 64, dwarfAddressSpace: 0)
!10115 = !{!10116, !10117}
!10116 = !DILocalVariable(name: "self", arg: 1, scope: !10111, file: !2472, line: 1204, type: !10114)
!10117 = !DILocalVariable(name: "ptr", scope: !10118, file: !2472, line: 1207, type: !3643, align: 8)
!10118 = distinct !DILexicalBlock(scope: !10111, file: !2472, line: 1207, column: 9)
!10119 = !DILocation(line: 1204, column: 23, scope: !10111)
!10120 = !DILocalVariable(name: "metadata", scope: !10121, file: !2472, line: 1209, type: !7, align: 1)
!10121 = !DILexicalBlockFile(scope: !10122, file: !2472, discriminator: 0)
!10122 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10123)
!10123 = !{!10124, !10120}
!10124 = !DILocalVariable(name: "data_address", scope: !10121, file: !2472, line: 1209, type: !777, align: 8)
!10125 = !DILocation(line: 1209, column: 21, scope: !10121, inlinedAt: !10126)
!10126 = !DILocation(line: 668, column: 5, scope: !10127, inlinedAt: !10128)
!10127 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!10128 = !DILocation(line: 38, column: 41, scope: !10129, inlinedAt: !10135)
!10129 = distinct !DISubprogram(name: "is_null<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he2b1c7e8b9d9e3c4E", scope: !456, file: !455, line: 35, type: !10130, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{!989, !3643}
!10132 = !{!10133}
!10133 = !DILocalVariable(name: "self", scope: !10134, file: !2472, line: 1209, type: !3643, align: 8)
!10134 = !DILexicalBlockFile(scope: !10129, file: !2472, discriminator: 0)
!10135 = !DILocation(line: 1209, column: 21, scope: !10118)
!10136 = !DILocation(line: 1207, column: 19, scope: !10111)
!10137 = !DILocalVariable(name: "self", scope: !10138, file: !2472, line: 1207, type: !10142, align: 8)
!10138 = !DILexicalBlockFile(scope: !10139, file: !2472, discriminator: 0)
!10139 = distinct !DISubprogram(name: "ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h9a7ee8a38b0b0404E", scope: !2625, file: !9508, line: 223, type: !10140, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2647, retainedNodes: !10143)
!10140 = !DISubroutineType(types: !10141)
!10141 = !{!3643, !10142}
!10142 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2625, size: 64, align: 64, dwarfAddressSpace: 0)
!10143 = !{!10137}
!10144 = !DILocation(line: 1207, column: 19, scope: !10138, inlinedAt: !10136)
!10145 = !DILocalVariable(name: "self", scope: !10146, file: !2472, line: 1207, type: !2628, align: 8)
!10146 = !DILexicalBlockFile(scope: !10147, file: !2472, discriminator: 0)
!10147 = distinct !DISubprogram(name: "as_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hed987f0c14a40e05E", scope: !2628, file: !1586, line: 103, type: !10148, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !10150)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!3643, !2628}
!10150 = !{!10145}
!10151 = !DILocation(line: 1207, column: 19, scope: !10146, inlinedAt: !10152)
!10152 = !DILocation(line: 224, column: 9, scope: !10139, inlinedAt: !10136)
!10153 = !DILocalVariable(name: "self", scope: !10154, file: !2472, line: 1207, type: !2631, align: 8)
!10154 = !DILexicalBlockFile(scope: !10155, file: !2472, discriminator: 0)
!10155 = distinct !DISubprogram(name: "as_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h19260b639fa11e9fE", scope: !2631, file: !445, line: 330, type: !10156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !10158)
!10156 = !DISubroutineType(types: !10157)
!10157 = !{!3643, !2631}
!10158 = !{!10153}
!10159 = !DILocation(line: 1207, column: 19, scope: !10154, inlinedAt: !10160)
!10160 = !DILocation(line: 104, column: 9, scope: !10147, inlinedAt: !10152)
!10161 = !DILocation(line: 1207, column: 13, scope: !10118)
!10162 = !DILocation(line: 1209, column: 21, scope: !10134, inlinedAt: !10135)
!10163 = !DILocalVariable(name: "self", scope: !10164, file: !2472, line: 1209, type: !448, align: 8)
!10164 = !DILexicalBlockFile(scope: !10165, file: !2472, discriminator: 0)
!10165 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10166)
!10166 = !{!10163, !10167}
!10167 = !DILocalVariable(name: "other", scope: !10164, file: !2472, line: 1209, type: !448, align: 8)
!10168 = !DILocation(line: 1209, column: 21, scope: !10164, inlinedAt: !10169)
!10169 = !DILocation(line: 38, column: 9, scope: !10129, inlinedAt: !10135)
!10170 = !DILocation(line: 1209, column: 21, scope: !10171, inlinedAt: !10175)
!10171 = !DILexicalBlockFile(scope: !10172, file: !2472, discriminator: 0)
!10172 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !10173)
!10173 = !{!10174}
!10174 = !DILocalVariable(name: "addr", scope: !10171, file: !2472, line: 1209, type: !9, align: 8)
!10175 = !DILocation(line: 668, column: 24, scope: !10127, inlinedAt: !10128)
!10176 = !DILocation(line: 1209, column: 20, scope: !10118)
!10177 = !DILocation(line: 1209, column: 13, scope: !10118)
!10178 = !DILocation(line: 1212, column: 6, scope: !10111)
!10179 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6eaafedab3801778E", scope: !1219, file: !2472, line: 1204, type: !10180, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{!448, !1645}
!10182 = !{!10183, !10184}
!10183 = !DILocalVariable(name: "self", arg: 1, scope: !10179, file: !2472, line: 1204, type: !1645)
!10184 = !DILocalVariable(name: "ptr", scope: !10185, file: !2472, line: 1207, type: !448, align: 8)
!10185 = distinct !DILexicalBlock(scope: !10179, file: !2472, line: 1207, column: 9)
!10186 = !DILocation(line: 1204, column: 23, scope: !10179)
!10187 = !DILocalVariable(name: "metadata", scope: !10188, file: !2472, line: 1209, type: !7, align: 1)
!10188 = !DILexicalBlockFile(scope: !10189, file: !2472, discriminator: 0)
!10189 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10190)
!10190 = !{!10191, !10187}
!10191 = !DILocalVariable(name: "data_address", scope: !10188, file: !2472, line: 1209, type: !777, align: 8)
!10192 = !DILocation(line: 1209, column: 21, scope: !10188, inlinedAt: !10193)
!10193 = !DILocation(line: 668, column: 5, scope: !10194, inlinedAt: !10195)
!10194 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!10195 = !DILocation(line: 38, column: 41, scope: !10196, inlinedAt: !10200)
!10196 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc23cf25345e04005E", scope: !456, file: !455, line: 35, type: !987, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10197)
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "self", scope: !10199, file: !2472, line: 1209, type: !448, align: 8)
!10199 = !DILexicalBlockFile(scope: !10196, file: !2472, discriminator: 0)
!10200 = !DILocation(line: 1209, column: 21, scope: !10185)
!10201 = !DILocation(line: 1207, column: 19, scope: !10179)
!10202 = !DILocalVariable(name: "self", scope: !10203, file: !2472, line: 1207, type: !10207, align: 8)
!10203 = !DILexicalBlockFile(scope: !10204, file: !2472, discriminator: 0)
!10204 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h7eb820f58e89bcdfE", scope: !1223, file: !9508, line: 223, type: !10205, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10208)
!10205 = !DISubroutineType(types: !10206)
!10206 = !{!448, !10207}
!10207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !1223, size: 64, align: 64, dwarfAddressSpace: 0)
!10208 = !{!10202}
!10209 = !DILocation(line: 1207, column: 19, scope: !10203, inlinedAt: !10201)
!10210 = !DILocalVariable(name: "self", scope: !10211, file: !2472, line: 1207, type: !1226, align: 8)
!10211 = !DILexicalBlockFile(scope: !10212, file: !2472, discriminator: 0)
!10212 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10213)
!10213 = !{!10210}
!10214 = !DILocation(line: 1207, column: 19, scope: !10211, inlinedAt: !10215)
!10215 = !DILocation(line: 224, column: 9, scope: !10204, inlinedAt: !10201)
!10216 = !DILocalVariable(name: "self", scope: !10217, file: !2472, line: 1207, type: !339, align: 8)
!10217 = !DILexicalBlockFile(scope: !10218, file: !2472, discriminator: 0)
!10218 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10219)
!10219 = !{!10216}
!10220 = !DILocation(line: 1207, column: 19, scope: !10217, inlinedAt: !10221)
!10221 = !DILocation(line: 104, column: 9, scope: !10212, inlinedAt: !10215)
!10222 = !DILocation(line: 1207, column: 13, scope: !10185)
!10223 = !DILocation(line: 1209, column: 21, scope: !10199, inlinedAt: !10200)
!10224 = !DILocalVariable(name: "self", scope: !10225, file: !2472, line: 1209, type: !448, align: 8)
!10225 = !DILexicalBlockFile(scope: !10226, file: !2472, discriminator: 0)
!10226 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10227)
!10227 = !{!10224, !10228}
!10228 = !DILocalVariable(name: "other", scope: !10225, file: !2472, line: 1209, type: !448, align: 8)
!10229 = !DILocation(line: 1209, column: 21, scope: !10225, inlinedAt: !10230)
!10230 = !DILocation(line: 38, column: 9, scope: !10196, inlinedAt: !10200)
!10231 = !DILocation(line: 1209, column: 21, scope: !10232, inlinedAt: !10236)
!10232 = !DILexicalBlockFile(scope: !10233, file: !2472, discriminator: 0)
!10233 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !10234)
!10234 = !{!10235}
!10235 = !DILocalVariable(name: "addr", scope: !10232, file: !2472, line: 1209, type: !9, align: 8)
!10236 = !DILocation(line: 668, column: 24, scope: !10194, inlinedAt: !10195)
!10237 = !DILocation(line: 1209, column: 20, scope: !10185)
!10238 = !DILocation(line: 1209, column: 13, scope: !10185)
!10239 = !DILocation(line: 1212, column: 6, scope: !10179)
!10240 = distinct !DISubprogram(name: "as_mut_ptr<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h95e8b847ca462c25E", scope: !2539, file: !2472, line: 1204, type: !10241, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2558, retainedNodes: !10244)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{!3775, !10243}
!10243 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2539, size: 64, align: 64, dwarfAddressSpace: 0)
!10244 = !{!10245, !10246}
!10245 = !DILocalVariable(name: "self", arg: 1, scope: !10240, file: !2472, line: 1204, type: !10243)
!10246 = !DILocalVariable(name: "ptr", scope: !10247, file: !2472, line: 1207, type: !3775, align: 8)
!10247 = distinct !DILexicalBlock(scope: !10240, file: !2472, line: 1207, column: 9)
!10248 = !DILocation(line: 1204, column: 23, scope: !10240)
!10249 = !DILocalVariable(name: "metadata", scope: !10250, file: !2472, line: 1209, type: !7, align: 1)
!10250 = !DILexicalBlockFile(scope: !10251, file: !2472, discriminator: 0)
!10251 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10252)
!10252 = !{!10253, !10249}
!10253 = !DILocalVariable(name: "data_address", scope: !10250, file: !2472, line: 1209, type: !777, align: 8)
!10254 = !DILocation(line: 1209, column: 21, scope: !10250, inlinedAt: !10255)
!10255 = !DILocation(line: 668, column: 5, scope: !10256, inlinedAt: !10257)
!10256 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!10257 = !DILocation(line: 38, column: 41, scope: !10258, inlinedAt: !10264)
!10258 = distinct !DISubprogram(name: "is_null<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h34f4d92c786f526fE", scope: !456, file: !455, line: 35, type: !10259, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !10261)
!10259 = !DISubroutineType(types: !10260)
!10260 = !{!989, !3775}
!10261 = !{!10262}
!10262 = !DILocalVariable(name: "self", scope: !10263, file: !2472, line: 1209, type: !3775, align: 8)
!10263 = !DILexicalBlockFile(scope: !10258, file: !2472, discriminator: 0)
!10264 = !DILocation(line: 1209, column: 21, scope: !10247)
!10265 = !DILocation(line: 1207, column: 19, scope: !10240)
!10266 = !DILocalVariable(name: "self", scope: !10267, file: !2472, line: 1207, type: !10271, align: 8)
!10267 = !DILexicalBlockFile(scope: !10268, file: !2472, discriminator: 0)
!10268 = distinct !DISubprogram(name: "ptr<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc033dd8579b265d5E", scope: !2542, file: !9508, line: 223, type: !10269, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2558, retainedNodes: !10272)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{!3775, !10271}
!10271 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2542, size: 64, align: 64, dwarfAddressSpace: 0)
!10272 = !{!10266}
!10273 = !DILocation(line: 1207, column: 19, scope: !10267, inlinedAt: !10265)
!10274 = !DILocalVariable(name: "self", scope: !10275, file: !2472, line: 1207, type: !2545, align: 8)
!10275 = !DILexicalBlockFile(scope: !10276, file: !2472, discriminator: 0)
!10276 = distinct !DISubprogram(name: "as_ptr<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bbaeec00973373eE", scope: !2545, file: !1586, line: 103, type: !10277, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !10279)
!10277 = !DISubroutineType(types: !10278)
!10278 = !{!3775, !2545}
!10279 = !{!10274}
!10280 = !DILocation(line: 1207, column: 19, scope: !10275, inlinedAt: !10281)
!10281 = !DILocation(line: 224, column: 9, scope: !10268, inlinedAt: !10265)
!10282 = !DILocalVariable(name: "self", scope: !10283, file: !2472, line: 1207, type: !2548, align: 8)
!10283 = !DILexicalBlockFile(scope: !10284, file: !2472, discriminator: 0)
!10284 = distinct !DISubprogram(name: "as_ptr<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h33005aaea3287215E", scope: !2548, file: !445, line: 330, type: !10285, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !10287)
!10285 = !DISubroutineType(types: !10286)
!10286 = !{!3775, !2548}
!10287 = !{!10282}
!10288 = !DILocation(line: 1207, column: 19, scope: !10283, inlinedAt: !10289)
!10289 = !DILocation(line: 104, column: 9, scope: !10276, inlinedAt: !10281)
!10290 = !DILocation(line: 1207, column: 13, scope: !10247)
!10291 = !DILocation(line: 1209, column: 21, scope: !10263, inlinedAt: !10264)
!10292 = !DILocalVariable(name: "self", scope: !10293, file: !2472, line: 1209, type: !448, align: 8)
!10293 = !DILexicalBlockFile(scope: !10294, file: !2472, discriminator: 0)
!10294 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10295)
!10295 = !{!10292, !10296}
!10296 = !DILocalVariable(name: "other", scope: !10293, file: !2472, line: 1209, type: !448, align: 8)
!10297 = !DILocation(line: 1209, column: 21, scope: !10293, inlinedAt: !10298)
!10298 = !DILocation(line: 38, column: 9, scope: !10258, inlinedAt: !10264)
!10299 = !DILocation(line: 1209, column: 21, scope: !10300, inlinedAt: !10304)
!10300 = !DILexicalBlockFile(scope: !10301, file: !2472, discriminator: 0)
!10301 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !10302)
!10302 = !{!10303}
!10303 = !DILocalVariable(name: "addr", scope: !10300, file: !2472, line: 1209, type: !9, align: 8)
!10304 = !DILocation(line: 668, column: 24, scope: !10256, inlinedAt: !10257)
!10305 = !DILocation(line: 1209, column: 20, scope: !10247)
!10306 = !DILocation(line: 1209, column: 13, scope: !10247)
!10307 = !DILocation(line: 1212, column: 6, scope: !10240)
!10308 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h0b9e3e99e6b97e3aE", scope: !1219, file: !2472, line: 1832, type: !10309, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10311)
!10309 = !DISubroutineType(types: !10310)
!10310 = !{null, !1645, !622}
!10311 = !{!10312, !10313, !10314, !10316}
!10312 = !DILocalVariable(name: "self", arg: 1, scope: !10308, file: !2472, line: 1832, type: !1645)
!10313 = !DILocalVariable(name: "other", arg: 2, scope: !10308, file: !2472, line: 1832, type: !622)
!10314 = !DILocalVariable(name: "count", scope: !10315, file: !2472, line: 1833, type: !9, align: 8)
!10315 = distinct !DILexicalBlock(scope: !10308, file: !2472, line: 1833, column: 9)
!10316 = !DILocalVariable(name: "len", scope: !10317, file: !2472, line: 1835, type: !9, align: 8)
!10317 = distinct !DILexicalBlock(scope: !10315, file: !2472, line: 1835, column: 9)
!10318 = !DILocation(line: 1832, column: 31, scope: !10308)
!10319 = !DILocation(line: 1832, column: 42, scope: !10308)
!10320 = !DILocalVariable(name: "runtime", scope: !10321, file: !2472, line: 1836, type: !10331, align: 8)
!10321 = !DILexicalBlockFile(scope: !10322, file: !2472, discriminator: 0)
!10322 = distinct !DILexicalBlock(scope: !10323, file: !640, line: 2319, column: 13)
!10323 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h898a597014fa21afE", scope: !6042, file: !640, line: 2439, type: !10324, scopeLine: 2439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10326)
!10324 = !DISubroutineType(types: !10325)
!10325 = !{null, !342, !448, !9}
!10326 = !{!10327, !10329, !10330, !10320}
!10327 = !DILocalVariable(name: "src", scope: !10328, file: !2472, line: 1836, type: !342, align: 8)
!10328 = !DILexicalBlockFile(scope: !10323, file: !2472, discriminator: 0)
!10329 = !DILocalVariable(name: "dst", scope: !10328, file: !2472, line: 1836, type: !448, align: 8)
!10330 = !DILocalVariable(name: "count", scope: !10328, file: !2472, line: 1836, type: !9, align: 8)
!10331 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !6052, file: !2, size: 192, align: 64, elements: !10332, templateParams: !23, identifier: "789d3af4f2251acc37b327fd35341fa0")
!10332 = !{!10333, !10334, !10336}
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !10331, file: !2, baseType: !2496, size: 64, align: 64)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !10331, file: !2, baseType: !10335, size: 64, align: 64, offset: 64)
!10335 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !448, size: 64, align: 64, dwarfAddressSpace: 0)
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !10331, file: !2, baseType: !387, size: 64, align: 64, offset: 128)
!10337 = !DILocation(line: 1836, column: 18, scope: !10321, inlinedAt: !10338)
!10338 = !DILocation(line: 1836, column: 18, scope: !10317)
!10339 = !DILocation(line: 1833, column: 30, scope: !10308)
!10340 = !DILocation(line: 1833, column: 13, scope: !10315)
!10341 = !DILocation(line: 1834, column: 9, scope: !10315)
!10342 = !DILocation(line: 1835, column: 19, scope: !10315)
!10343 = !DILocalVariable(name: "self", scope: !10344, file: !2472, line: 1835, type: !2476, align: 8)
!10344 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5d955c629b2c207bE", scope: !1219, file: !2472, line: 1945, type: !9624, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10345)
!10345 = !{!10343}
!10346 = !DILocation(line: 1835, column: 19, scope: !10344, inlinedAt: !10342)
!10347 = !DILocation(line: 1835, column: 13, scope: !10317)
!10348 = !DILocation(line: 1836, column: 43, scope: !10317)
!10349 = !DILocation(line: 1836, column: 18, scope: !10328, inlinedAt: !10338)
!10350 = !DILocation(line: 1836, column: 62, scope: !10317)
!10351 = !DILocalVariable(name: "self", scope: !10352, file: !2472, line: 1836, type: !448, align: 8)
!10352 = !DILexicalBlockFile(scope: !10353, file: !2472, discriminator: 0)
!10353 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9f321a7d1697cdfcE", scope: !456, file: !455, line: 977, type: !747, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10354)
!10354 = !{!10351, !10355}
!10355 = !DILocalVariable(name: "count", scope: !10352, file: !2472, line: 1836, type: !9, align: 8)
!10356 = !DILocation(line: 1836, column: 62, scope: !10352, inlinedAt: !10350)
!10357 = !DILocation(line: 1836, column: 84, scope: !10317)
!10358 = !DILocalVariable(name: "self", scope: !10359, file: !2472, line: 1836, type: !448, align: 8)
!10359 = !DILexicalBlockFile(scope: !10360, file: !2472, discriminator: 0)
!10360 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8858ce9471ea0608E", scope: !456, file: !455, line: 462, type: !756, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10361)
!10361 = !{!10358, !10362}
!10362 = !DILocalVariable(name: "count", scope: !10359, file: !2472, line: 1836, type: !674, align: 8)
!10363 = !DILocation(line: 1836, column: 62, scope: !10359, inlinedAt: !10364)
!10364 = !DILocation(line: 982, column: 18, scope: !10353, inlinedAt: !10350)
!10365 = !DILocation(line: 1836, column: 90, scope: !10317)
!10366 = !DILocation(line: 1837, column: 9, scope: !10317)
!10367 = !DILocation(line: 1838, column: 6, scope: !10308)
!10368 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h6a8d930349aa9529E", scope: !1219, file: !2472, line: 2282, type: !10369, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10371)
!10369 = !DISubroutineType(types: !10370)
!10370 = !{null, !1645, !892}
!10371 = !{!10372, !10373}
!10372 = !DILocalVariable(name: "self", arg: 1, scope: !10368, file: !2472, line: 2282, type: !1645)
!10373 = !DILocalVariable(name: "other", arg: 2, scope: !10368, file: !2472, line: 2282, type: !892)
!10374 = !DILocation(line: 2282, column: 30, scope: !10368)
!10375 = !DILocation(line: 2282, column: 41, scope: !10368)
!10376 = !DILocation(line: 2283, column: 26, scope: !10368)
!10377 = !DILocalVariable(name: "self", scope: !10378, file: !2472, line: 2283, type: !892, align: 8)
!10378 = !DILexicalBlockFile(scope: !10379, file: !2472, discriminator: 0)
!10379 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ae0aaa6f77c2546E", scope: !5968, file: !5967, line: 734, type: !6317, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10380)
!10380 = !{!10377}
!10381 = !DILocation(line: 2283, column: 26, scope: !10378, inlinedAt: !10376)
!10382 = !DILocation(line: 2283, column: 9, scope: !10368)
!10383 = !DILocation(line: 2284, column: 6, scope: !10368)
!10384 = distinct !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hdca49d03d486226dE", scope: !1219, file: !2472, line: 2126, type: !10385, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10387)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{!6016, !1645}
!10387 = !{!10388}
!10388 = !DILocalVariable(name: "self", arg: 1, scope: !10384, file: !2472, line: 2126, type: !1645)
!10389 = !DILocation(line: 2126, column: 31, scope: !10384)
!10390 = !DILocation(line: 2132, column: 17, scope: !10384)
!10391 = !DILocalVariable(name: "self", scope: !10392, file: !2472, line: 2132, type: !448, align: 8)
!10392 = !DILexicalBlockFile(scope: !10393, file: !2472, discriminator: 0)
!10393 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9f321a7d1697cdfcE", scope: !456, file: !455, line: 977, type: !747, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10394)
!10394 = !{!10391, !10395}
!10395 = !DILocalVariable(name: "count", scope: !10392, file: !2472, line: 2132, type: !9, align: 8)
!10396 = !DILocation(line: 2132, column: 17, scope: !10392, inlinedAt: !10390)
!10397 = !DILocation(line: 2132, column: 39, scope: !10384)
!10398 = !DILocalVariable(name: "self", scope: !10399, file: !2472, line: 2132, type: !448, align: 8)
!10399 = !DILexicalBlockFile(scope: !10400, file: !2472, discriminator: 0)
!10400 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8858ce9471ea0608E", scope: !456, file: !455, line: 462, type: !756, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10401)
!10401 = !{!10398, !10402}
!10402 = !DILocalVariable(name: "count", scope: !10399, file: !2472, line: 2132, type: !674, align: 8)
!10403 = !DILocation(line: 2132, column: 17, scope: !10399, inlinedAt: !10404)
!10404 = !DILocation(line: 982, column: 18, scope: !10393, inlinedAt: !10390)
!10405 = !DILocalVariable(name: "data", scope: !10406, file: !2472, line: 2131, type: !831, align: 8)
!10406 = !DILexicalBlockFile(scope: !10407, file: !2472, discriminator: 0)
!10407 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h9321c7b196310a06E", scope: !2484, file: !2483, line: 134, type: !6112, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !10408)
!10408 = !{!10405, !10409, !10410}
!10409 = !DILocalVariable(name: "len", scope: !10406, file: !2472, line: 2131, type: !9, align: 8)
!10410 = !DILocalVariable(name: "runtime", scope: !10411, file: !2472, line: 2131, type: !6119, align: 8)
!10411 = !DILexicalBlockFile(scope: !10412, file: !2472, discriminator: 0)
!10412 = distinct !DILexicalBlock(scope: !10407, file: !640, line: 2319, column: 13)
!10413 = !DILocation(line: 2131, column: 13, scope: !10406, inlinedAt: !10414)
!10414 = !DILocation(line: 2131, column: 13, scope: !10384)
!10415 = !DILocation(line: 2133, column: 17, scope: !10384)
!10416 = !DILocalVariable(name: "self", scope: !10417, file: !2472, line: 2133, type: !10207, align: 8)
!10417 = !DILexicalBlockFile(scope: !10418, file: !2472, discriminator: 0)
!10418 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h719ef633207df3eeE", scope: !1223, file: !9508, line: 231, type: !10419, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10421)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!9, !10207}
!10421 = !{!10416}
!10422 = !DILocation(line: 2133, column: 17, scope: !10417, inlinedAt: !10415)
!10423 = !DILocation(line: 2133, column: 39, scope: !10384)
!10424 = !DILocalVariable(name: "data", scope: !10425, file: !2472, line: 2131, type: !831, align: 8)
!10425 = !DILexicalBlockFile(scope: !10426, file: !2472, discriminator: 0)
!10426 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h39edb8315f977252E", scope: !260, file: !682, line: 726, type: !855, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !10427)
!10427 = !{!10424, !10428}
!10428 = !DILocalVariable(name: "len", scope: !10425, file: !2472, line: 2131, type: !9, align: 8)
!10429 = !DILocation(line: 2131, column: 13, scope: !10425, inlinedAt: !10430)
!10430 = !DILocation(line: 141, column: 15, scope: !10407, inlinedAt: !10414)
!10431 = !DILocalVariable(name: "self", scope: !10432, file: !2472, line: 2131, type: !831, align: 8)
!10432 = !DILexicalBlockFile(scope: !10433, file: !2472, discriminator: 0)
!10433 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf416c97be0df382eE", scope: !456, file: !455, line: 45, type: !865, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !868, retainedNodes: !10434)
!10434 = !{!10431}
!10435 = !DILocation(line: 2131, column: 13, scope: !10432, inlinedAt: !10436)
!10436 = !DILocation(line: 727, column: 24, scope: !10426, inlinedAt: !10430)
!10437 = !DILocalVariable(name: "data_address", scope: !10438, file: !2472, line: 2131, type: !777, align: 8)
!10438 = !DILexicalBlockFile(scope: !10439, file: !2472, discriminator: 0)
!10439 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hcc1411d4fda6f2a1E", scope: !704, file: !703, line: 127, type: !874, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !10440)
!10440 = !{!10437, !10441}
!10441 = !DILocalVariable(name: "metadata", scope: !10438, file: !2472, line: 2131, type: !9, align: 8)
!10442 = !DILocation(line: 2131, column: 13, scope: !10438, inlinedAt: !10443)
!10443 = !DILocation(line: 727, column: 5, scope: !10426, inlinedAt: !10430)
!10444 = !DILocation(line: 2136, column: 6, scope: !10384)
!10445 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h24ca90f0e9552633E", scope: !1219, file: !2472, line: 1167, type: !10446, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10448)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{!342, !2476}
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "self", arg: 1, scope: !10445, file: !2472, line: 1167, type: !2476)
!10450 = !DILocalVariable(name: "ptr", scope: !10451, file: !2472, line: 1170, type: !448, align: 8)
!10451 = distinct !DILexicalBlock(scope: !10445, file: !2472, line: 1170, column: 9)
!10452 = !DILocation(line: 1167, column: 19, scope: !10445)
!10453 = !DILocalVariable(name: "metadata", scope: !10454, file: !2472, line: 1172, type: !7, align: 1)
!10454 = !DILexicalBlockFile(scope: !10455, file: !2472, discriminator: 0)
!10455 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10456)
!10456 = !{!10457, !10453}
!10457 = !DILocalVariable(name: "data_address", scope: !10454, file: !2472, line: 1172, type: !777, align: 8)
!10458 = !DILocation(line: 1172, column: 21, scope: !10454, inlinedAt: !10459)
!10459 = !DILocation(line: 668, column: 5, scope: !10460, inlinedAt: !10461)
!10460 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!10461 = !DILocation(line: 38, column: 41, scope: !10462, inlinedAt: !10466)
!10462 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc23cf25345e04005E", scope: !456, file: !455, line: 35, type: !987, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10463)
!10463 = !{!10464}
!10464 = !DILocalVariable(name: "self", scope: !10465, file: !2472, line: 1172, type: !448, align: 8)
!10465 = !DILexicalBlockFile(scope: !10462, file: !2472, discriminator: 0)
!10466 = !DILocation(line: 1172, column: 21, scope: !10451)
!10467 = !DILocation(line: 1170, column: 19, scope: !10445)
!10468 = !DILocalVariable(name: "self", scope: !10469, file: !2472, line: 1170, type: !10207, align: 8)
!10469 = !DILexicalBlockFile(scope: !10470, file: !2472, discriminator: 0)
!10470 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h7eb820f58e89bcdfE", scope: !1223, file: !9508, line: 223, type: !10205, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10471)
!10471 = !{!10468}
!10472 = !DILocation(line: 1170, column: 19, scope: !10469, inlinedAt: !10467)
!10473 = !DILocalVariable(name: "self", scope: !10474, file: !2472, line: 1170, type: !1226, align: 8)
!10474 = !DILexicalBlockFile(scope: !10475, file: !2472, discriminator: 0)
!10475 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10476)
!10476 = !{!10473}
!10477 = !DILocation(line: 1170, column: 19, scope: !10474, inlinedAt: !10478)
!10478 = !DILocation(line: 224, column: 9, scope: !10470, inlinedAt: !10467)
!10479 = !DILocalVariable(name: "self", scope: !10480, file: !2472, line: 1170, type: !339, align: 8)
!10480 = !DILexicalBlockFile(scope: !10481, file: !2472, discriminator: 0)
!10481 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10482)
!10482 = !{!10479}
!10483 = !DILocation(line: 1170, column: 19, scope: !10480, inlinedAt: !10484)
!10484 = !DILocation(line: 104, column: 9, scope: !10475, inlinedAt: !10478)
!10485 = !DILocation(line: 1170, column: 13, scope: !10451)
!10486 = !DILocation(line: 1172, column: 21, scope: !10465, inlinedAt: !10466)
!10487 = !DILocalVariable(name: "self", scope: !10488, file: !2472, line: 1172, type: !448, align: 8)
!10488 = !DILexicalBlockFile(scope: !10489, file: !2472, discriminator: 0)
!10489 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10490)
!10490 = !{!10487, !10491}
!10491 = !DILocalVariable(name: "other", scope: !10488, file: !2472, line: 1172, type: !448, align: 8)
!10492 = !DILocation(line: 1172, column: 21, scope: !10488, inlinedAt: !10493)
!10493 = !DILocation(line: 38, column: 9, scope: !10462, inlinedAt: !10466)
!10494 = !DILocation(line: 1172, column: 21, scope: !10495, inlinedAt: !10499)
!10495 = !DILexicalBlockFile(scope: !10496, file: !2472, discriminator: 0)
!10496 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !10497)
!10497 = !{!10498}
!10498 = !DILocalVariable(name: "addr", scope: !10495, file: !2472, line: 1172, type: !9, align: 8)
!10499 = !DILocation(line: 668, column: 24, scope: !10460, inlinedAt: !10461)
!10500 = !DILocation(line: 1172, column: 20, scope: !10451)
!10501 = !DILocation(line: 1172, column: 13, scope: !10451)
!10502 = !DILocation(line: 1175, column: 6, scope: !10445)
!10503 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h7d1d769595d7f0ecE", scope: !1219, file: !2472, line: 840, type: !9803, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10504)
!10504 = !{!10505, !10506}
!10505 = !DILocalVariable(name: "self", arg: 1, scope: !10503, file: !2472, line: 840, type: !1645)
!10506 = !DILocalVariable(name: "additional", arg: 2, scope: !10503, file: !2472, line: 840, type: !9)
!10507 = !DILocation(line: 840, column: 20, scope: !10503)
!10508 = !DILocation(line: 840, column: 31, scope: !10503)
!10509 = !DILocation(line: 841, column: 9, scope: !10503)
!10510 = !DILocation(line: 841, column: 26, scope: !10503)
!10511 = !DILocation(line: 842, column: 6, scope: !10503)
!10512 = distinct !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h772ad5b351a07f3cE", scope: !1219, file: !2472, line: 1118, type: !2474, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10513)
!10513 = !{!10514}
!10514 = !DILocalVariable(name: "self", arg: 1, scope: !10512, file: !2472, line: 1118, type: !2476)
!10515 = !DILocation(line: 1118, column: 21, scope: !10512)
!10516 = !DILocation(line: 1119, column: 9, scope: !10512)
!10517 = !DILocalVariable(name: "self", scope: !10518, file: !2472, line: 1119, type: !2476, align: 8)
!10518 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E", scope: !2473, file: !2472, line: 2531, type: !2474, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !10519)
!10519 = !{!10517}
!10520 = !DILocation(line: 1119, column: 9, scope: !10518, inlinedAt: !10516)
!10521 = !DILocalVariable(name: "data", scope: !10522, file: !2472, line: 1119, type: !342, align: 8)
!10522 = !DILexicalBlockFile(scope: !10523, file: !2472, discriminator: 0)
!10523 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h7379c702bbd7bb59E", scope: !2484, file: !2483, line: 90, type: !2485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10524)
!10524 = !{!10521, !10525, !10526}
!10525 = !DILocalVariable(name: "len", scope: !10522, file: !2472, line: 1119, type: !9, align: 8)
!10526 = !DILocalVariable(name: "runtime", scope: !10527, file: !2472, line: 1119, type: !2492, align: 8)
!10527 = !DILexicalBlockFile(scope: !10528, file: !2472, discriminator: 0)
!10528 = distinct !DILexicalBlock(scope: !10523, file: !640, line: 2319, column: 13)
!10529 = !DILocation(line: 1119, column: 9, scope: !10522, inlinedAt: !10530)
!10530 = !DILocation(line: 2532, column: 18, scope: !10518, inlinedAt: !10516)
!10531 = !DILocalVariable(name: "data", scope: !10532, file: !2472, line: 1119, type: !342, align: 8)
!10532 = !DILexicalBlockFile(scope: !10533, file: !2472, discriminator: 0)
!10533 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10534)
!10534 = !{!10531, !10535}
!10535 = !DILocalVariable(name: "len", scope: !10532, file: !2472, line: 1119, type: !9, align: 8)
!10536 = !DILocation(line: 1119, column: 9, scope: !10532, inlinedAt: !10537)
!10537 = !DILocation(line: 97, column: 11, scope: !10523, inlinedAt: !10530)
!10538 = !DILocalVariable(name: "self", scope: !10539, file: !2472, line: 1119, type: !342, align: 8)
!10539 = !DILexicalBlockFile(scope: !10540, file: !2472, discriminator: 0)
!10540 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !10541)
!10541 = !{!10538}
!10542 = !DILocation(line: 1119, column: 9, scope: !10539, inlinedAt: !10543)
!10543 = !DILocation(line: 695, column: 20, scope: !10533, inlinedAt: !10537)
!10544 = !DILocalVariable(name: "data_address", scope: !10545, file: !2472, line: 1119, type: !6, align: 8)
!10545 = !DILexicalBlockFile(scope: !10546, file: !2472, discriminator: 0)
!10546 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10547)
!10547 = !{!10544, !10548}
!10548 = !DILocalVariable(name: "metadata", scope: !10545, file: !2472, line: 1119, type: !9, align: 8)
!10549 = !DILocation(line: 1119, column: 9, scope: !10545, inlinedAt: !10550)
!10550 = !DILocation(line: 695, column: 5, scope: !10533, inlinedAt: !10537)
!10551 = !DILocation(line: 1120, column: 6, scope: !10512)
!10552 = distinct !DISubprogram(name: "exchange_malloc", linkageName: "_ZN5alloc5alloc15exchange_malloc17h0ca87beeb65490c9E", scope: !1235, file: !7756, line: 318, type: !10553, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10555)
!10553 = !DISubroutineType(types: !10554)
!10554 = !{!448, !9, !9}
!10555 = !{!10556, !10557, !10558, !10560}
!10556 = !DILocalVariable(name: "size", arg: 1, scope: !10552, file: !7756, line: 318, type: !9)
!10557 = !DILocalVariable(name: "align", arg: 2, scope: !10552, file: !7756, line: 318, type: !9)
!10558 = !DILocalVariable(name: "layout", scope: !10559, file: !7756, line: 319, type: !1622, align: 8)
!10559 = distinct !DILexicalBlock(scope: !10552, file: !7756, line: 319, column: 5)
!10560 = !DILocalVariable(name: "ptr", scope: !10561, file: !7756, line: 321, type: !7463, align: 8)
!10561 = distinct !DILexicalBlock(scope: !10559, file: !7756, line: 321, column: 9)
!10562 = !DILocation(line: 318, column: 27, scope: !10552)
!10563 = !DILocation(line: 318, column: 40, scope: !10552)
!10564 = !DILocation(line: 319, column: 9, scope: !10559)
!10565 = !DILocalVariable(name: "self", scope: !10566, file: !7756, line: 321, type: !339, align: 8)
!10566 = !DILexicalBlockFile(scope: !10567, file: !7756, discriminator: 0)
!10567 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10568)
!10568 = !{!10565}
!10569 = !DILocation(line: 321, column: 20, scope: !10566, inlinedAt: !10570)
!10570 = !DILocation(line: 553, column: 9, scope: !10571, inlinedAt: !10577)
!10571 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hf7fb5522763086e0E", scope: !7463, file: !445, line: 552, type: !10572, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10574)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!448, !7463}
!10574 = !{!10575}
!10575 = !DILocalVariable(name: "self", scope: !10576, file: !7756, line: 321, type: !7463, align: 8)
!10576 = !DILexicalBlockFile(scope: !10571, file: !7756, discriminator: 0)
!10577 = !DILocation(line: 321, column: 20, scope: !10561)
!10578 = !DILocation(line: 319, column: 61, scope: !10552)
!10579 = !DILocalVariable(name: "size", scope: !10580, file: !7756, line: 319, type: !9, align: 8)
!10580 = !DILexicalBlockFile(scope: !10581, file: !7756, discriminator: 0)
!10581 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10582)
!10582 = !{!10579, !10583}
!10583 = !DILocalVariable(name: "align", scope: !10580, file: !7756, line: 319, type: !9, align: 8)
!10584 = !DILocation(line: 319, column: 27, scope: !10580, inlinedAt: !10585)
!10585 = !DILocation(line: 319, column: 27, scope: !10552)
!10586 = !DILocation(line: 319, column: 67, scope: !10552)
!10587 = !DILocalVariable(name: "align", scope: !10588, file: !7756, line: 319, type: !9, align: 8)
!10588 = !DILexicalBlockFile(scope: !10589, file: !7756, discriminator: 0)
!10589 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10590)
!10590 = !{!10587}
!10591 = !DILocation(line: 319, column: 27, scope: !10588, inlinedAt: !10592)
!10592 = !DILocation(line: 100, column: 40, scope: !10581, inlinedAt: !10585)
!10593 = !DILocation(line: 320, column: 11, scope: !10559)
!10594 = !DILocalVariable(name: "self", scope: !10595, file: !7756, line: 320, type: !7760, align: 8)
!10595 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17ha2beffcab7803646E", scope: !10596, file: !7756, line: 230, type: !10597, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10599)
!10596 = !DINamespace(name: "{impl#1}", scope: !1235)
!10597 = !DISubroutineType(types: !10598)
!10598 = !{!7455, !7760, !1622}
!10599 = !{!10594, !10600}
!10600 = !DILocalVariable(name: "layout", scope: !10595, file: !7756, line: 320, type: !1622, align: 8)
!10601 = !DILocation(line: 320, column: 11, scope: !10595, inlinedAt: !10593)
!10602 = !DILocation(line: 320, column: 27, scope: !10559)
!10603 = !DILocation(line: 320, column: 5, scope: !10559)
!10604 = !DILocation(line: 321, column: 12, scope: !10559)
!10605 = !DILocation(line: 321, column: 12, scope: !10561)
!10606 = !DILocation(line: 321, column: 20, scope: !10576, inlinedAt: !10577)
!10607 = !DILocalVariable(name: "self", scope: !10608, file: !7756, line: 321, type: !7463, align: 8)
!10608 = !DILexicalBlockFile(scope: !10609, file: !7756, discriminator: 0)
!10609 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2767a07d858db755E", scope: !7463, file: !445, line: 532, type: !10610, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{!339, !7463}
!10612 = !{!10607}
!10613 = !DILocation(line: 321, column: 20, scope: !10608, inlinedAt: !10570)
!10614 = !DILocalVariable(name: "self", scope: !10615, file: !7756, line: 321, type: !7463, align: 8)
!10615 = !DILexicalBlockFile(scope: !10616, file: !7756, discriminator: 0)
!10616 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!715, !7463}
!10619 = !{!10614}
!10620 = !DILocation(line: 321, column: 20, scope: !10615, inlinedAt: !10621)
!10621 = !DILocation(line: 534, column: 41, scope: !10609, inlinedAt: !10570)
!10622 = !DILocalVariable(name: "self", scope: !10623, file: !7756, line: 321, type: !715, align: 8)
!10623 = !DILexicalBlockFile(scope: !10624, file: !7756, discriminator: 0)
!10624 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h43435e6e9174c7c9E", scope: !739, file: !455, line: 1759, type: !740, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10625)
!10625 = !{!10622}
!10626 = !DILocation(line: 321, column: 20, scope: !10623, inlinedAt: !10621)
!10627 = !DILocalVariable(name: "ptr", scope: !10628, file: !7756, line: 321, type: !448, align: 8)
!10628 = !DILexicalBlockFile(scope: !10629, file: !7756, discriminator: 0)
!10629 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10630)
!10630 = !{!10627}
!10631 = !DILocation(line: 321, column: 20, scope: !10628, inlinedAt: !10632)
!10632 = !DILocation(line: 534, column: 18, scope: !10609, inlinedAt: !10570)
!10633 = !DILocation(line: 324, column: 2, scope: !10552)
!10634 = !DILocation(line: 322, column: 38, scope: !10559)
!10635 = !DILocation(line: 322, column: 19, scope: !10559)
!10636 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h3221bea4722b5d02E", scope: !1234, file: !7756, line: 166, type: !10637, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10639)
!10637 = !DISubroutineType(types: !10638)
!10638 = !{!7455, !7760, !1622, !989}
!10639 = !{!10640, !10641, !10642, !10643, !10645, !10647, !10649, !10664}
!10640 = !DILocalVariable(name: "self", arg: 1, scope: !10636, file: !7756, line: 166, type: !7760)
!10641 = !DILocalVariable(name: "layout", arg: 2, scope: !10636, file: !7756, line: 166, type: !1622)
!10642 = !DILocalVariable(name: "zeroed", arg: 3, scope: !10636, file: !7756, line: 166, type: !989)
!10643 = !DILocalVariable(name: "size", scope: !10644, file: !7756, line: 170, type: !9, align: 8)
!10644 = distinct !DILexicalBlock(scope: !10636, file: !7756, line: 170, column: 13)
!10645 = !DILocalVariable(name: "raw_ptr", scope: !10646, file: !7756, line: 171, type: !448, align: 8)
!10646 = distinct !DILexicalBlock(scope: !10644, file: !7756, line: 171, column: 17)
!10647 = !DILocalVariable(name: "ptr", scope: !10648, file: !7756, line: 172, type: !339, align: 8)
!10648 = distinct !DILexicalBlock(scope: !10646, file: !7756, line: 172, column: 17)
!10649 = !DILocalVariable(name: "residual", scope: !10650, file: !7756, line: 172, type: !10651, align: 1)
!10650 = distinct !DILexicalBlock(scope: !10646, file: !7756, line: 172, column: 66)
!10651 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !2066, file: !2, align: 8, elements: !10652, templateParams: !23, identifier: "851849b43b2baccb4e777e4568a41b9")
!10652 = !{!10653}
!10653 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10651, file: !2, align: 8, elements: !10654, templateParams: !23, identifier: "28f67b6c5e7b425152a0ec4010e122bc")
!10654 = !{!10655, !10660}
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10653, file: !2, baseType: !10656, align: 8)
!10656 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10651, file: !2, align: 8, elements: !10657, templateParams: !10659, identifier: "a2bc135918e8ea40131622e93798c3c0")
!10657 = !{!10658}
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10656, file: !2, baseType: !4201, align: 8)
!10659 = !{!4200, !7468}
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10653, file: !2, baseType: !10661, align: 8)
!10661 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10651, file: !2, align: 8, elements: !10662, templateParams: !10659, identifier: "3e67774f061fa35c3b0bc00bdd604f37")
!10662 = !{!10663}
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10661, file: !2, baseType: !7469, align: 8)
!10664 = !DILocalVariable(name: "val", scope: !10665, file: !7756, line: 172, type: !339, align: 8)
!10665 = distinct !DILexicalBlock(scope: !10646, file: !7756, line: 172, column: 27)
!10666 = !DILocation(line: 166, column: 19, scope: !10636)
!10667 = !DILocation(line: 166, column: 26, scope: !10636)
!10668 = !DILocation(line: 166, column: 42, scope: !10636)
!10669 = !DILocalVariable(name: "data", scope: !10670, file: !7756, line: 168, type: !339, align: 8)
!10670 = !DILexicalBlockFile(scope: !10671, file: !7756, discriminator: 0)
!10671 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hf18ee9ffa785bda9E", scope: !7463, file: !445, line: 487, type: !10672, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10674)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{!7463, !339, !9}
!10674 = !{!10669, !10675}
!10675 = !DILocalVariable(name: "len", scope: !10670, file: !7756, line: 168, type: !9, align: 8)
!10676 = !DILocation(line: 168, column: 21, scope: !10670, inlinedAt: !10677)
!10677 = !DILocation(line: 168, column: 21, scope: !10636)
!10678 = !DILocation(line: 171, column: 21, scope: !10646)
!10679 = !DILocalVariable(name: "layout", scope: !10680, file: !7756, line: 171, type: !1622, align: 8)
!10680 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h0400c0ed2e21acc3E", scope: !1235, file: !7756, line: 159, type: !10681, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10683)
!10681 = !DISubroutineType(types: !10682)
!10682 = !{!448, !1622}
!10683 = !{!10679}
!10684 = !DILocation(line: 171, column: 43, scope: !10680, inlinedAt: !10685)
!10685 = !DILocation(line: 171, column: 43, scope: !10644)
!10686 = !DILocalVariable(name: "layout", scope: !10687, file: !7756, line: 171, type: !1622, align: 8)
!10687 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17hc3755ab8094f1f27E", scope: !1235, file: !7756, line: 88, type: !10681, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10688)
!10688 = !{!10686}
!10689 = !DILocation(line: 171, column: 73, scope: !10687, inlinedAt: !10690)
!10690 = !DILocation(line: 171, column: 73, scope: !10644)
!10691 = !DILocalVariable(name: "self", scope: !10692, file: !7756, line: 172, type: !10712, align: 8)
!10692 = !DILexicalBlockFile(scope: !10693, file: !7756, discriminator: 0)
!10693 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5e5b6654ec8bf19dE", scope: !5658, file: !5392, line: 2108, type: !10694, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10720, retainedNodes: !10726)
!10694 = !DISubroutineType(types: !10695)
!10695 = !{!10696, !10712}
!10696 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !4233, file: !2, size: 64, align: 64, elements: !10697, templateParams: !23, identifier: "8afaf14b9dc4ca4d9ecae240b9ede3c5")
!10697 = !{!10698}
!10698 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10696, file: !2, size: 64, align: 64, elements: !10699, templateParams: !23, identifier: "79ed2f42a48eaca957bd301da78a3b1", discriminator: !10711)
!10699 = !{!10700, !10707}
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !10698, file: !2, baseType: !10701, size: 64, align: 64)
!10701 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !10696, file: !2, size: 64, align: 64, elements: !10702, templateParams: !10704, identifier: "36dba021d25f4678961b50ca8fee84d6")
!10702 = !{!10703}
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10701, file: !2, baseType: !339, size: 64, align: 64)
!10704 = !{!10705, !10706}
!10705 = !DITemplateTypeParameter(name: "B", type: !10651)
!10706 = !DITemplateTypeParameter(name: "C", type: !339)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !10698, file: !2, baseType: !10708, size: 64, align: 64, extraData: i64 0)
!10708 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !10696, file: !2, size: 64, align: 64, elements: !10709, templateParams: !10704, identifier: "edd3828703069985ac9a30c9730b9b8d")
!10709 = !{!10710}
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10708, file: !2, baseType: !10651, align: 8)
!10711 = !DIDerivedType(tag: DW_TAG_member, scope: !10696, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!10712 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !2066, file: !2, size: 64, align: 64, elements: !10713, templateParams: !23, identifier: "d0bbcfe0c30c7b5a19985a17cc32b45")
!10713 = !{!10714}
!10714 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10712, file: !2, size: 64, align: 64, elements: !10715, templateParams: !23, identifier: "e9ea0cae66491d1d9a4d45e9ee217eff", discriminator: !10725)
!10715 = !{!10716, !10721}
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10714, file: !2, baseType: !10717, size: 64, align: 64)
!10717 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10712, file: !2, size: 64, align: 64, elements: !10718, templateParams: !10720, identifier: "6eda9789a07b78e3916cfb1098a09634")
!10718 = !{!10719}
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10717, file: !2, baseType: !339, size: 64, align: 64)
!10720 = !{!4090, !7468}
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10714, file: !2, baseType: !10722, size: 64, align: 64, extraData: i64 0)
!10722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10712, file: !2, size: 64, align: 64, elements: !10723, templateParams: !10720, identifier: "7c849a24ebcf11a22e5234cf99331d18")
!10723 = !{!10724}
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10722, file: !2, baseType: !7469, align: 8)
!10725 = !DIDerivedType(tag: DW_TAG_member, scope: !10712, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!10726 = !{!10691, !10727, !10730}
!10727 = !DILocalVariable(name: "v", scope: !10728, file: !7756, line: 172, type: !339, align: 8)
!10728 = !DILexicalBlockFile(scope: !10729, file: !7756, discriminator: 0)
!10729 = distinct !DILexicalBlock(scope: !10693, file: !5392, line: 2110, column: 13)
!10730 = !DILocalVariable(name: "e", scope: !10731, file: !7756, line: 172, type: !7469, align: 1)
!10731 = !DILexicalBlockFile(scope: !10732, file: !7756, discriminator: 0)
!10732 = distinct !DILexicalBlock(scope: !10693, file: !5392, line: 2111, column: 13)
!10733 = !DILocation(line: 172, column: 27, scope: !10692, inlinedAt: !10734)
!10734 = !DILocation(line: 172, column: 27, scope: !10646)
!10735 = !DILocalVariable(name: "self", scope: !10736, file: !7756, line: 172, type: !4083, align: 8)
!10736 = !DILexicalBlockFile(scope: !10737, file: !7756, discriminator: 0)
!10737 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3e49dbb901eb3bc0E", scope: !4083, file: !1507, line: 1051, type: !10738, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10720, retainedNodes: !10740)
!10738 = !DISubroutineType(types: !10739)
!10739 = !{!10712, !4083, !7469}
!10740 = !{!10735, !10741, !10742}
!10741 = !DILocalVariable(name: "err", scope: !10736, file: !7756, line: 172, type: !7469, align: 1)
!10742 = !DILocalVariable(name: "v", scope: !10743, file: !7756, line: 172, type: !339, align: 8)
!10743 = !DILexicalBlockFile(scope: !10744, file: !7756, discriminator: 0)
!10744 = distinct !DILexicalBlock(scope: !10737, file: !1507, line: 1056, column: 13)
!10745 = !DILocation(line: 172, column: 27, scope: !10736, inlinedAt: !10734)
!10746 = !DILocation(line: 172, column: 66, scope: !10650)
!10747 = !DILocalVariable(name: "residual", scope: !10748, file: !7756, line: 172, type: !10651, align: 1)
!10748 = !DILexicalBlockFile(scope: !10749, file: !7756, discriminator: 0)
!10749 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4efbdb7b4f87458bE", scope: !5393, file: !5392, line: 2123, type: !10750, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10756, retainedNodes: !10752)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{!7455, !10651, !917}
!10752 = !{!10747, !10753}
!10753 = !DILocalVariable(name: "e", scope: !10754, file: !7756, line: 172, type: !7469, align: 1)
!10754 = !DILexicalBlockFile(scope: !10755, file: !7756, discriminator: 0)
!10755 = distinct !DILexicalBlock(scope: !10749, file: !5392, line: 2125, column: 13)
!10756 = !{!7467, !7468, !10757}
!10757 = !DITemplateTypeParameter(name: "F", type: !7469)
!10758 = !DILocation(line: 172, column: 27, scope: !10748, inlinedAt: !10759)
!10759 = !DILocation(line: 172, column: 27, scope: !10650)
!10760 = !DILocalVariable(name: "self", scope: !10761, file: !7756, line: 168, type: !10764, align: 8)
!10761 = !DILexicalBlockFile(scope: !10762, file: !7756, discriminator: 0)
!10762 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10770)
!10763 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "8d0e3794876aa2bb56d6d7f5f0889572")
!10764 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !10765, file: !2, size: 64, align: 64, elements: !10766, templateParams: !23, identifier: "eea6d974bda95d42a4c0d38b3ff819a7")
!10765 = !DINamespace(name: "nonzero", scope: !208)
!10766 = !{!10767}
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10764, file: !2, baseType: !9, size: 64, align: 64)
!10768 = !DISubroutineType(types: !10769)
!10769 = !{!9, !10764}
!10770 = !{!10760}
!10771 = !DILocation(line: 168, column: 51, scope: !10761, inlinedAt: !10772)
!10772 = !DILocation(line: 119, column: 9, scope: !10773, inlinedAt: !10779)
!10773 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10776)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{!9, !7494}
!10776 = !{!10777}
!10777 = !DILocalVariable(name: "self", scope: !10778, file: !7756, line: 168, type: !7494, align: 8)
!10778 = !DILexicalBlockFile(scope: !10773, file: !7756, discriminator: 0)
!10779 = !DILocation(line: 196, column: 71, scope: !10780, inlinedAt: !10786)
!10780 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h4babdbf6a1721a00E", scope: !1622, file: !5605, line: 194, type: !10781, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!339, !7494}
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "self", scope: !10785, file: !7756, line: 168, type: !7494, align: 8)
!10785 = !DILexicalBlockFile(scope: !10780, file: !7756, discriminator: 0)
!10786 = !DILocation(line: 168, column: 51, scope: !10636)
!10787 = !DILocalVariable(name: "self", scope: !10788, file: !7756, line: 168, type: !1628, align: 8)
!10788 = !DILexicalBlockFile(scope: !10789, file: !7756, discriminator: 0)
!10789 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10792)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!10764, !1628}
!10792 = !{!10787}
!10793 = !DILocation(line: 168, column: 51, scope: !10788, inlinedAt: !10772)
!10794 = !DILocalVariable(name: "self", scope: !10795, file: !7756, line: 171, type: !10764, align: 8)
!10795 = !DILexicalBlockFile(scope: !10796, file: !7756, discriminator: 0)
!10796 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10797)
!10797 = !{!10794}
!10798 = !DILocation(line: 171, column: 43, scope: !10795, inlinedAt: !10799)
!10799 = !DILocation(line: 119, column: 9, scope: !10800, inlinedAt: !10804)
!10800 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10801)
!10801 = !{!10802}
!10802 = !DILocalVariable(name: "self", scope: !10803, file: !7756, line: 171, type: !7494, align: 8)
!10803 = !DILexicalBlockFile(scope: !10800, file: !7756, discriminator: 0)
!10804 = !DILocation(line: 160, column: 49, scope: !10680, inlinedAt: !10685)
!10805 = !DILocalVariable(name: "self", scope: !10806, file: !7756, line: 171, type: !1628, align: 8)
!10806 = !DILexicalBlockFile(scope: !10807, file: !7756, discriminator: 0)
!10807 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10808)
!10808 = !{!10805}
!10809 = !DILocation(line: 171, column: 43, scope: !10806, inlinedAt: !10799)
!10810 = !DILocalVariable(name: "self", scope: !10811, file: !7756, line: 171, type: !10764, align: 8)
!10811 = !DILexicalBlockFile(scope: !10812, file: !7756, discriminator: 0)
!10812 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10813)
!10813 = !{!10810}
!10814 = !DILocation(line: 171, column: 73, scope: !10811, inlinedAt: !10815)
!10815 = !DILocation(line: 119, column: 9, scope: !10816, inlinedAt: !10820)
!10816 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10817)
!10817 = !{!10818}
!10818 = !DILocalVariable(name: "self", scope: !10819, file: !7756, line: 171, type: !7494, align: 8)
!10819 = !DILexicalBlockFile(scope: !10816, file: !7756, discriminator: 0)
!10820 = !DILocation(line: 89, column: 42, scope: !10687, inlinedAt: !10690)
!10821 = !DILocalVariable(name: "self", scope: !10822, file: !7756, line: 171, type: !1628, align: 8)
!10822 = !DILexicalBlockFile(scope: !10823, file: !7756, discriminator: 0)
!10823 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10824)
!10824 = !{!10821}
!10825 = !DILocation(line: 171, column: 73, scope: !10822, inlinedAt: !10815)
!10826 = !DILocation(line: 172, column: 27, scope: !10731, inlinedAt: !10734)
!10827 = !DILocation(line: 172, column: 27, scope: !10754, inlinedAt: !10759)
!10828 = !DILocation(line: 167, column: 15, scope: !10636)
!10829 = !DILocalVariable(name: "self", scope: !10830, file: !7756, line: 167, type: !7494, align: 8)
!10830 = !DILexicalBlockFile(scope: !10831, file: !7756, discriminator: 0)
!10831 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10832)
!10832 = !{!10829}
!10833 = !DILocation(line: 167, column: 15, scope: !10830, inlinedAt: !10828)
!10834 = !DILocation(line: 167, column: 9, scope: !10636)
!10835 = !DILocation(line: 168, column: 51, scope: !10785, inlinedAt: !10786)
!10836 = !DILocation(line: 168, column: 51, scope: !10778, inlinedAt: !10779)
!10837 = !DILocalVariable(name: "n", scope: !10838, file: !7756, line: 168, type: !9, align: 8)
!10838 = !DILexicalBlockFile(scope: !10839, file: !7756, discriminator: 0)
!10839 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10842)
!10840 = !DISubroutineType(types: !10841)
!10841 = !{!10764, !9}
!10842 = !{!10837, !10843}
!10843 = !DILocalVariable(name: "runtime", scope: !10844, file: !7756, line: 168, type: !10846, align: 8)
!10844 = !DILexicalBlockFile(scope: !10845, file: !7756, discriminator: 0)
!10845 = distinct !DILexicalBlock(scope: !10839, file: !640, line: 2319, column: 13)
!10846 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !10847, file: !2, size: 64, align: 64, elements: !10849, templateParams: !23, identifier: "63cc719a0da95db449863ffa626d31a9")
!10847 = !DINamespace(name: "new_unchecked", scope: !10848)
!10848 = !DINamespace(name: "{impl#35}", scope: !10765)
!10849 = !{!10850}
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !10846, file: !2, baseType: !387, size: 64, align: 64)
!10851 = !DILocation(line: 168, column: 51, scope: !10838, inlinedAt: !10852)
!10852 = !DILocation(line: 39, column: 18, scope: !10789, inlinedAt: !10772)
!10853 = !DILocalVariable(name: "addr", scope: !10854, file: !7756, line: 168, type: !9, align: 8)
!10854 = !DILexicalBlockFile(scope: !10855, file: !7756, discriminator: 0)
!10855 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h63583657686c1625E", scope: !260, file: !682, line: 569, type: !10856, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10858)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!448, !9}
!10858 = !{!10853}
!10859 = !DILocation(line: 168, column: 51, scope: !10854, inlinedAt: !10860)
!10860 = !DILocation(line: 196, column: 41, scope: !10780, inlinedAt: !10786)
!10861 = !DILocalVariable(name: "ptr", scope: !10862, file: !7756, line: 168, type: !448, align: 8)
!10862 = !DILexicalBlockFile(scope: !10863, file: !7756, discriminator: 0)
!10863 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10864)
!10864 = !{!10861}
!10865 = !DILocation(line: 168, column: 51, scope: !10862, inlinedAt: !10866)
!10866 = !DILocation(line: 196, column: 18, scope: !10780, inlinedAt: !10786)
!10867 = !DILocation(line: 170, column: 13, scope: !10636)
!10868 = !DILocation(line: 170, column: 13, scope: !10644)
!10869 = !DILocation(line: 171, column: 34, scope: !10644)
!10870 = !DILocation(line: 171, column: 79, scope: !10644)
!10871 = !DILocalVariable(name: "self", scope: !10872, file: !7756, line: 171, type: !7494, align: 8)
!10872 = !DILexicalBlockFile(scope: !10873, file: !7756, discriminator: 0)
!10873 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10874)
!10874 = !{!10871}
!10875 = !DILocation(line: 171, column: 73, scope: !10872, inlinedAt: !10876)
!10876 = !DILocation(line: 89, column: 27, scope: !10687, inlinedAt: !10690)
!10877 = !DILocation(line: 171, column: 73, scope: !10819, inlinedAt: !10820)
!10878 = !DILocalVariable(name: "n", scope: !10879, file: !7756, line: 171, type: !9, align: 8)
!10879 = !DILexicalBlockFile(scope: !10880, file: !7756, discriminator: 0)
!10880 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10881)
!10881 = !{!10878, !10882}
!10882 = !DILocalVariable(name: "runtime", scope: !10883, file: !7756, line: 171, type: !10846, align: 8)
!10883 = !DILexicalBlockFile(scope: !10884, file: !7756, discriminator: 0)
!10884 = distinct !DILexicalBlock(scope: !10880, file: !640, line: 2319, column: 13)
!10885 = !DILocation(line: 171, column: 73, scope: !10879, inlinedAt: !10886)
!10886 = !DILocation(line: 39, column: 18, scope: !10823, inlinedAt: !10815)
!10887 = !DILocation(line: 171, column: 56, scope: !10644)
!10888 = !DILocalVariable(name: "self", scope: !10889, file: !7756, line: 171, type: !7494, align: 8)
!10889 = !DILexicalBlockFile(scope: !10890, file: !7756, discriminator: 0)
!10890 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10891)
!10891 = !{!10888}
!10892 = !DILocation(line: 171, column: 43, scope: !10889, inlinedAt: !10893)
!10893 = !DILocation(line: 160, column: 34, scope: !10680, inlinedAt: !10685)
!10894 = !DILocation(line: 171, column: 43, scope: !10803, inlinedAt: !10804)
!10895 = !DILocalVariable(name: "n", scope: !10896, file: !7756, line: 171, type: !9, align: 8)
!10896 = !DILexicalBlockFile(scope: !10897, file: !7756, discriminator: 0)
!10897 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10898)
!10898 = !{!10895, !10899}
!10899 = !DILocalVariable(name: "runtime", scope: !10900, file: !7756, line: 171, type: !10846, align: 8)
!10900 = !DILexicalBlockFile(scope: !10901, file: !7756, discriminator: 0)
!10901 = distinct !DILexicalBlock(scope: !10897, file: !640, line: 2319, column: 13)
!10902 = !DILocation(line: 171, column: 43, scope: !10896, inlinedAt: !10903)
!10903 = !DILocation(line: 39, column: 18, scope: !10807, inlinedAt: !10799)
!10904 = !DILocation(line: 171, column: 31, scope: !10644)
!10905 = !DILocation(line: 172, column: 40, scope: !10646)
!10906 = !DILocation(line: 172, column: 27, scope: !10743, inlinedAt: !10734)
!10907 = !DILocation(line: 172, column: 27, scope: !10728, inlinedAt: !10734)
!10908 = !DILocation(line: 172, column: 27, scope: !10665)
!10909 = !DILocation(line: 172, column: 21, scope: !10648)
!10910 = !DILocation(line: 173, column: 50, scope: !10648)
!10911 = !DILocalVariable(name: "data", scope: !10912, file: !7756, line: 173, type: !339, align: 8)
!10912 = !DILexicalBlockFile(scope: !10913, file: !7756, discriminator: 0)
!10913 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hf18ee9ffa785bda9E", scope: !7463, file: !445, line: 487, type: !10672, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10914)
!10914 = !{!10911, !10915}
!10915 = !DILocalVariable(name: "len", scope: !10912, file: !7756, line: 173, type: !9, align: 8)
!10916 = !DILocation(line: 173, column: 20, scope: !10912, inlinedAt: !10917)
!10917 = !DILocation(line: 173, column: 20, scope: !10648)
!10918 = !DILocation(line: 173, column: 55, scope: !10648)
!10919 = !DILocalVariable(name: "self", scope: !10920, file: !7756, line: 173, type: !339, align: 8)
!10920 = !DILexicalBlockFile(scope: !10921, file: !7756, discriminator: 0)
!10921 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10922)
!10922 = !{!10919}
!10923 = !DILocation(line: 173, column: 20, scope: !10920, inlinedAt: !10924)
!10924 = !DILocation(line: 489, column: 70, scope: !10913, inlinedAt: !10917)
!10925 = !DILocalVariable(name: "data", scope: !10926, file: !7756, line: 173, type: !448, align: 8)
!10926 = !DILexicalBlockFile(scope: !10927, file: !7756, discriminator: 0)
!10927 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hd34dadd7044cb66fE", scope: !260, file: !682, line: 726, type: !765, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10928)
!10928 = !{!10925, !10929}
!10929 = !DILocalVariable(name: "len", scope: !10926, file: !7756, line: 173, type: !9, align: 8)
!10930 = !DILocation(line: 173, column: 20, scope: !10926, inlinedAt: !10931)
!10931 = !DILocation(line: 489, column: 38, scope: !10913, inlinedAt: !10917)
!10932 = !DILocalVariable(name: "self", scope: !10933, file: !7756, line: 173, type: !448, align: 8)
!10933 = !DILexicalBlockFile(scope: !10934, file: !7756, discriminator: 0)
!10934 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2521638f5850fb66E", scope: !456, file: !455, line: 45, type: !775, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !10935)
!10935 = !{!10932}
!10936 = !DILocation(line: 173, column: 20, scope: !10933, inlinedAt: !10937)
!10937 = !DILocation(line: 727, column: 24, scope: !10927, inlinedAt: !10931)
!10938 = !DILocalVariable(name: "data_address", scope: !10939, file: !7756, line: 173, type: !777, align: 8)
!10939 = !DILexicalBlockFile(scope: !10940, file: !7756, discriminator: 0)
!10940 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h831a101dd10ae1e2E", scope: !704, file: !703, line: 127, type: !784, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10941)
!10941 = !{!10938, !10942}
!10942 = !DILocalVariable(name: "metadata", scope: !10939, file: !7756, line: 173, type: !9, align: 8)
!10943 = !DILocation(line: 173, column: 20, scope: !10939, inlinedAt: !10944)
!10944 = !DILocation(line: 727, column: 5, scope: !10927, inlinedAt: !10931)
!10945 = !DILocalVariable(name: "ptr", scope: !10946, file: !7756, line: 173, type: !715, align: 8)
!10946 = !DILexicalBlockFile(scope: !10947, file: !7756, discriminator: 0)
!10947 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdc564488f709a120E", scope: !7463, file: !445, line: 196, type: !10948, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10950)
!10948 = !DISubroutineType(types: !10949)
!10949 = !{!7463, !715}
!10950 = !{!10945}
!10951 = !DILocation(line: 173, column: 20, scope: !10946, inlinedAt: !10952)
!10952 = !DILocation(line: 489, column: 18, scope: !10913, inlinedAt: !10917)
!10953 = !DILocation(line: 173, column: 17, scope: !10648)
!10954 = !DILocation(line: 174, column: 13, scope: !10636)
!10955 = !DILocation(line: 176, column: 6, scope: !10636)
!10956 = !DILocalVariable(name: "self", scope: !10957, file: !7756, line: 168, type: !339, align: 8)
!10957 = !DILexicalBlockFile(scope: !10958, file: !7756, discriminator: 0)
!10958 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10959)
!10959 = !{!10956}
!10960 = !DILocation(line: 168, column: 21, scope: !10957, inlinedAt: !10961)
!10961 = !DILocation(line: 489, column: 70, scope: !10671, inlinedAt: !10677)
!10962 = !DILocalVariable(name: "data", scope: !10963, file: !7756, line: 168, type: !448, align: 8)
!10963 = !DILexicalBlockFile(scope: !10964, file: !7756, discriminator: 0)
!10964 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hd34dadd7044cb66fE", scope: !260, file: !682, line: 726, type: !765, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10965)
!10965 = !{!10962, !10966}
!10966 = !DILocalVariable(name: "len", scope: !10963, file: !7756, line: 168, type: !9, align: 8)
!10967 = !DILocation(line: 168, column: 21, scope: !10963, inlinedAt: !10968)
!10968 = !DILocation(line: 489, column: 38, scope: !10671, inlinedAt: !10677)
!10969 = !DILocalVariable(name: "self", scope: !10970, file: !7756, line: 168, type: !448, align: 8)
!10970 = !DILexicalBlockFile(scope: !10971, file: !7756, discriminator: 0)
!10971 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2521638f5850fb66E", scope: !456, file: !455, line: 45, type: !775, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !10972)
!10972 = !{!10969}
!10973 = !DILocation(line: 168, column: 21, scope: !10970, inlinedAt: !10974)
!10974 = !DILocation(line: 727, column: 24, scope: !10964, inlinedAt: !10968)
!10975 = !DILocalVariable(name: "data_address", scope: !10976, file: !7756, line: 168, type: !777, align: 8)
!10976 = !DILexicalBlockFile(scope: !10977, file: !7756, discriminator: 0)
!10977 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h831a101dd10ae1e2E", scope: !704, file: !703, line: 127, type: !784, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10978)
!10978 = !{!10975, !10979}
!10979 = !DILocalVariable(name: "metadata", scope: !10976, file: !7756, line: 168, type: !9, align: 8)
!10980 = !DILocation(line: 168, column: 21, scope: !10976, inlinedAt: !10981)
!10981 = !DILocation(line: 727, column: 5, scope: !10964, inlinedAt: !10968)
!10982 = !DILocalVariable(name: "ptr", scope: !10983, file: !7756, line: 168, type: !715, align: 8)
!10983 = !DILexicalBlockFile(scope: !10984, file: !7756, discriminator: 0)
!10984 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdc564488f709a120E", scope: !7463, file: !445, line: 196, type: !10948, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !10985)
!10985 = !{!10982}
!10986 = !DILocation(line: 168, column: 21, scope: !10983, inlinedAt: !10987)
!10987 = !DILocation(line: 489, column: 18, scope: !10671, inlinedAt: !10677)
!10988 = !DILocation(line: 168, column: 18, scope: !10636)
!10989 = !DILocation(line: 168, column: 72, scope: !10636)
!10990 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h3530581f4db6a6e9E", scope: !1234, file: !7756, line: 180, type: !10991, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !10993)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{!7455, !7760, !339, !1622, !1622, !989}
!10993 = !{!10994, !10995, !10996, !10997, !10998, !10999, !11001, !11002, !11004, !11006, !11008, !11010, !11012, !11014, !11016, !11018}
!10994 = !DILocalVariable(name: "self", arg: 1, scope: !10990, file: !7756, line: 181, type: !7760)
!10995 = !DILocalVariable(name: "ptr", arg: 2, scope: !10990, file: !7756, line: 182, type: !339)
!10996 = !DILocalVariable(name: "old_layout", arg: 3, scope: !10990, file: !7756, line: 183, type: !1622)
!10997 = !DILocalVariable(name: "new_layout", arg: 4, scope: !10990, file: !7756, line: 184, type: !1622)
!10998 = !DILocalVariable(name: "zeroed", arg: 5, scope: !10990, file: !7756, line: 185, type: !989)
!10999 = !DILocalVariable(name: "old_size", scope: !11000, file: !7756, line: 197, type: !9, align: 8)
!11000 = distinct !DILexicalBlock(scope: !10990, file: !7756, line: 197, column: 13)
!11001 = !DILocalVariable(name: "old_size", scope: !11000, file: !7756, line: 197, type: !387, align: 8)
!11002 = !DILocalVariable(name: "new_size", scope: !11003, file: !7756, line: 198, type: !9, align: 8)
!11003 = distinct !DILexicalBlock(scope: !11000, file: !7756, line: 198, column: 17)
!11004 = !DILocalVariable(name: "raw_ptr", scope: !11005, file: !7756, line: 203, type: !448, align: 8)
!11005 = distinct !DILexicalBlock(scope: !11003, file: !7756, line: 203, column: 17)
!11006 = !DILocalVariable(name: "ptr", scope: !11007, file: !7756, line: 204, type: !339, align: 8)
!11007 = distinct !DILexicalBlock(scope: !11005, file: !7756, line: 204, column: 17)
!11008 = !DILocalVariable(name: "residual", scope: !11009, file: !7756, line: 204, type: !10651, align: 1)
!11009 = distinct !DILexicalBlock(scope: !11005, file: !7756, line: 204, column: 66)
!11010 = !DILocalVariable(name: "val", scope: !11011, file: !7756, line: 204, type: !339, align: 8)
!11011 = distinct !DILexicalBlock(scope: !11005, file: !7756, line: 204, column: 27)
!11012 = !DILocalVariable(name: "old_size", scope: !11013, file: !7756, line: 216, type: !9, align: 8)
!11013 = distinct !DILexicalBlock(scope: !10990, file: !7756, line: 216, column: 13)
!11014 = !DILocalVariable(name: "new_ptr", scope: !11015, file: !7756, line: 217, type: !7463, align: 8)
!11015 = distinct !DILexicalBlock(scope: !11013, file: !7756, line: 217, column: 17)
!11016 = !DILocalVariable(name: "residual", scope: !11017, file: !7756, line: 217, type: !10651, align: 1)
!11017 = distinct !DILexicalBlock(scope: !11013, file: !7756, line: 217, column: 66)
!11018 = !DILocalVariable(name: "val", scope: !11019, file: !7756, line: 217, type: !7463, align: 8)
!11019 = distinct !DILexicalBlock(scope: !11013, file: !7756, line: 217, column: 31)
!11020 = !DILocation(line: 181, column: 9, scope: !10990)
!11021 = !DILocation(line: 182, column: 9, scope: !10990)
!11022 = !DILocation(line: 183, column: 9, scope: !10990)
!11023 = !DILocation(line: 184, column: 9, scope: !10990)
!11024 = !DILocation(line: 185, column: 9, scope: !10990)
!11025 = !DILocalVariable(name: "layout", scope: !11026, file: !7756, line: 203, type: !1622, align: 8)
!11026 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h40454734b96ee4e8E", scope: !1235, file: !7756, line: 125, type: !11027, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11029)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{!448, !448, !1622, !9}
!11029 = !{!11030, !11025, !11031}
!11030 = !DILocalVariable(name: "ptr", scope: !11026, file: !7756, line: 203, type: !448, align: 8)
!11031 = !DILocalVariable(name: "new_size", scope: !11026, file: !7756, line: 203, type: !9, align: 8)
!11032 = !DILocation(line: 203, column: 31, scope: !11026, inlinedAt: !11033)
!11033 = !DILocation(line: 203, column: 31, scope: !11003)
!11034 = !DILocalVariable(name: "self", scope: !11035, file: !7756, line: 204, type: !10712, align: 8)
!11035 = !DILexicalBlockFile(scope: !11036, file: !7756, discriminator: 0)
!11036 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5e5b6654ec8bf19dE", scope: !5658, file: !5392, line: 2108, type: !10694, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10720, retainedNodes: !11037)
!11037 = !{!11034, !11038, !11041}
!11038 = !DILocalVariable(name: "v", scope: !11039, file: !7756, line: 204, type: !339, align: 8)
!11039 = !DILexicalBlockFile(scope: !11040, file: !7756, discriminator: 0)
!11040 = distinct !DILexicalBlock(scope: !11036, file: !5392, line: 2110, column: 13)
!11041 = !DILocalVariable(name: "e", scope: !11042, file: !7756, line: 204, type: !7469, align: 1)
!11042 = !DILexicalBlockFile(scope: !11043, file: !7756, discriminator: 0)
!11043 = distinct !DILexicalBlock(scope: !11036, file: !5392, line: 2111, column: 13)
!11044 = !DILocation(line: 204, column: 27, scope: !11035, inlinedAt: !11045)
!11045 = !DILocation(line: 204, column: 27, scope: !11005)
!11046 = !DILocalVariable(name: "self", scope: !11047, file: !7756, line: 204, type: !4083, align: 8)
!11047 = !DILexicalBlockFile(scope: !11048, file: !7756, discriminator: 0)
!11048 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3e49dbb901eb3bc0E", scope: !4083, file: !1507, line: 1051, type: !10738, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10720, retainedNodes: !11049)
!11049 = !{!11046, !11050, !11051}
!11050 = !DILocalVariable(name: "err", scope: !11047, file: !7756, line: 204, type: !7469, align: 1)
!11051 = !DILocalVariable(name: "v", scope: !11052, file: !7756, line: 204, type: !339, align: 8)
!11052 = !DILexicalBlockFile(scope: !11053, file: !7756, discriminator: 0)
!11053 = distinct !DILexicalBlock(scope: !11048, file: !1507, line: 1056, column: 13)
!11054 = !DILocation(line: 204, column: 27, scope: !11047, inlinedAt: !11045)
!11055 = !DILocation(line: 204, column: 66, scope: !11009)
!11056 = !DILocalVariable(name: "residual", scope: !11057, file: !7756, line: 204, type: !10651, align: 1)
!11057 = !DILexicalBlockFile(scope: !11058, file: !7756, discriminator: 0)
!11058 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4efbdb7b4f87458bE", scope: !5393, file: !5392, line: 2123, type: !10750, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10756, retainedNodes: !11059)
!11059 = !{!11056, !11060}
!11060 = !DILocalVariable(name: "e", scope: !11061, file: !7756, line: 204, type: !7469, align: 1)
!11061 = !DILexicalBlockFile(scope: !11062, file: !7756, discriminator: 0)
!11062 = distinct !DILexicalBlock(scope: !11058, file: !5392, line: 2125, column: 13)
!11063 = !DILocation(line: 204, column: 27, scope: !11057, inlinedAt: !11064)
!11064 = !DILocation(line: 204, column: 27, scope: !11009)
!11065 = !DILocalVariable(name: "self", scope: !11066, file: !7756, line: 217, type: !7455, align: 8)
!11066 = !DILexicalBlockFile(scope: !11067, file: !7756, discriminator: 0)
!11067 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haece01189c6fb24bE", scope: !5658, file: !5392, line: 2108, type: !11068, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7466, retainedNodes: !11085)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!11070, !7455}
!11070 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !4233, file: !2, size: 128, align: 64, elements: !11071, templateParams: !23, identifier: "d094f192948376646b7ab88b4c314947")
!11071 = !{!11072}
!11072 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11070, file: !2, size: 128, align: 64, elements: !11073, templateParams: !23, identifier: "ad6b368bba26306638d0d7d63c3fcfad", discriminator: !11084)
!11073 = !{!11074, !11080}
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !11072, file: !2, baseType: !11075, size: 128, align: 64)
!11075 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !11070, file: !2, size: 128, align: 64, elements: !11076, templateParams: !11078, identifier: "1d5d25af77da5bb81354f302d102716")
!11076 = !{!11077}
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11075, file: !2, baseType: !7463, size: 128, align: 64)
!11078 = !{!10705, !11079}
!11079 = !DITemplateTypeParameter(name: "C", type: !7463)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !11072, file: !2, baseType: !11081, size: 128, align: 64, extraData: i64 0)
!11081 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !11070, file: !2, size: 128, align: 64, elements: !11082, templateParams: !11078, identifier: "99981450cbb8b213ee169a9f5eeab3a5")
!11082 = !{!11083}
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11081, file: !2, baseType: !10651, align: 8)
!11084 = !DIDerivedType(tag: DW_TAG_member, scope: !11070, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!11085 = !{!11065, !11086, !11089}
!11086 = !DILocalVariable(name: "v", scope: !11087, file: !7756, line: 217, type: !7463, align: 8)
!11087 = !DILexicalBlockFile(scope: !11088, file: !7756, discriminator: 0)
!11088 = distinct !DILexicalBlock(scope: !11067, file: !5392, line: 2110, column: 13)
!11089 = !DILocalVariable(name: "e", scope: !11090, file: !7756, line: 217, type: !7469, align: 1)
!11090 = !DILexicalBlockFile(scope: !11091, file: !7756, discriminator: 0)
!11091 = distinct !DILexicalBlock(scope: !11067, file: !5392, line: 2111, column: 13)
!11092 = !DILocation(line: 217, column: 31, scope: !11066, inlinedAt: !11093)
!11093 = !DILocation(line: 217, column: 31, scope: !11013)
!11094 = !DILocation(line: 217, column: 66, scope: !11017)
!11095 = !DILocalVariable(name: "residual", scope: !11096, file: !7756, line: 217, type: !10651, align: 1)
!11096 = !DILexicalBlockFile(scope: !11097, file: !7756, discriminator: 0)
!11097 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4efbdb7b4f87458bE", scope: !5393, file: !5392, line: 2123, type: !10750, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !10756, retainedNodes: !11098)
!11098 = !{!11095, !11099}
!11099 = !DILocalVariable(name: "e", scope: !11100, file: !7756, line: 217, type: !7469, align: 1)
!11100 = !DILexicalBlockFile(scope: !11101, file: !7756, discriminator: 0)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !5392, line: 2125, column: 13)
!11102 = !DILocation(line: 217, column: 31, scope: !11096, inlinedAt: !11103)
!11103 = !DILocation(line: 217, column: 31, scope: !11017)
!11104 = !DILocalVariable(name: "self", scope: !11105, file: !7756, line: 197, type: !10764, align: 8)
!11105 = !DILexicalBlockFile(scope: !11106, file: !7756, discriminator: 0)
!11106 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11107)
!11107 = !{!11104}
!11108 = !DILocation(line: 197, column: 25, scope: !11105, inlinedAt: !11109)
!11109 = !DILocation(line: 119, column: 9, scope: !11110, inlinedAt: !11114)
!11110 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11111)
!11111 = !{!11112}
!11112 = !DILocalVariable(name: "self", scope: !11113, file: !7756, line: 197, type: !7494, align: 8)
!11113 = !DILexicalBlockFile(scope: !11110, file: !7756, discriminator: 0)
!11114 = !DILocation(line: 197, column: 25, scope: !10990)
!11115 = !DILocalVariable(name: "self", scope: !11116, file: !7756, line: 197, type: !1628, align: 8)
!11116 = !DILexicalBlockFile(scope: !11117, file: !7756, discriminator: 0)
!11117 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11118)
!11118 = !{!11115}
!11119 = !DILocation(line: 197, column: 25, scope: !11116, inlinedAt: !11109)
!11120 = !DILocalVariable(name: "self", scope: !11121, file: !7756, line: 197, type: !10764, align: 8)
!11121 = !DILexicalBlockFile(scope: !11122, file: !7756, discriminator: 0)
!11122 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11123)
!11123 = !{!11120}
!11124 = !DILocation(line: 197, column: 47, scope: !11121, inlinedAt: !11125)
!11125 = !DILocation(line: 119, column: 9, scope: !11126, inlinedAt: !11130)
!11126 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11127)
!11127 = !{!11128}
!11128 = !DILocalVariable(name: "self", scope: !11129, file: !7756, line: 197, type: !7494, align: 8)
!11129 = !DILexicalBlockFile(scope: !11126, file: !7756, discriminator: 0)
!11130 = !DILocation(line: 197, column: 47, scope: !10990)
!11131 = !DILocalVariable(name: "self", scope: !11132, file: !7756, line: 197, type: !1628, align: 8)
!11132 = !DILexicalBlockFile(scope: !11133, file: !7756, discriminator: 0)
!11133 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11134)
!11134 = !{!11131}
!11135 = !DILocation(line: 197, column: 47, scope: !11132, inlinedAt: !11125)
!11136 = !DILocalVariable(name: "self", scope: !11137, file: !7756, line: 203, type: !10764, align: 8)
!11137 = !DILexicalBlockFile(scope: !11138, file: !7756, discriminator: 0)
!11138 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11139)
!11139 = !{!11136}
!11140 = !DILocation(line: 203, column: 31, scope: !11137, inlinedAt: !11141)
!11141 = !DILocation(line: 119, column: 9, scope: !11142, inlinedAt: !11146)
!11142 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11143)
!11143 = !{!11144}
!11144 = !DILocalVariable(name: "self", scope: !11145, file: !7756, line: 203, type: !7494, align: 8)
!11145 = !DILexicalBlockFile(scope: !11142, file: !7756, discriminator: 0)
!11146 = !DILocation(line: 126, column: 49, scope: !11026, inlinedAt: !11033)
!11147 = !DILocalVariable(name: "self", scope: !11148, file: !7756, line: 203, type: !1628, align: 8)
!11148 = !DILexicalBlockFile(scope: !11149, file: !7756, discriminator: 0)
!11149 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11150)
!11150 = !{!11147}
!11151 = !DILocation(line: 203, column: 31, scope: !11148, inlinedAt: !11141)
!11152 = !DILocation(line: 204, column: 27, scope: !11042, inlinedAt: !11045)
!11153 = !DILocation(line: 204, column: 27, scope: !11061, inlinedAt: !11064)
!11154 = !DILocation(line: 217, column: 31, scope: !11090, inlinedAt: !11093)
!11155 = !DILocation(line: 217, column: 31, scope: !11100, inlinedAt: !11103)
!11156 = !DILocalVariable(name: "self", scope: !11157, file: !7756, line: 218, type: !339, align: 8)
!11157 = !DILexicalBlockFile(scope: !11158, file: !7756, discriminator: 0)
!11158 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11159)
!11159 = !{!11156}
!11160 = !DILocation(line: 218, column: 56, scope: !11157, inlinedAt: !11161)
!11161 = !DILocation(line: 553, column: 9, scope: !11162, inlinedAt: !11166)
!11162 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hf7fb5522763086e0E", scope: !7463, file: !445, line: 552, type: !10572, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11163)
!11163 = !{!11164}
!11164 = !DILocalVariable(name: "self", scope: !11165, file: !7756, line: 218, type: !7463, align: 8)
!11165 = !DILexicalBlockFile(scope: !11162, file: !7756, discriminator: 0)
!11166 = !DILocation(line: 218, column: 56, scope: !11015)
!11167 = !DILocalVariable(name: "runtime", scope: !11168, file: !7756, line: 218, type: !10331, align: 8)
!11168 = !DILexicalBlockFile(scope: !11169, file: !7756, discriminator: 0)
!11169 = distinct !DILexicalBlock(scope: !11170, file: !640, line: 2319, column: 13)
!11170 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h898a597014fa21afE", scope: !6042, file: !640, line: 2439, type: !10324, scopeLine: 2439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11171)
!11171 = !{!11172, !11174, !11175, !11167}
!11172 = !DILocalVariable(name: "src", scope: !11173, file: !7756, line: 218, type: !342, align: 8)
!11173 = !DILexicalBlockFile(scope: !11170, file: !7756, discriminator: 0)
!11174 = !DILocalVariable(name: "dst", scope: !11173, file: !7756, line: 218, type: !448, align: 8)
!11175 = !DILocalVariable(name: "count", scope: !11173, file: !7756, line: 218, type: !9, align: 8)
!11176 = !DILocation(line: 218, column: 17, scope: !11168, inlinedAt: !11177)
!11177 = !DILocation(line: 218, column: 17, scope: !11015)
!11178 = !DILocation(line: 192, column: 15, scope: !10990)
!11179 = !DILocalVariable(name: "self", scope: !11180, file: !7756, line: 192, type: !7494, align: 8)
!11180 = !DILexicalBlockFile(scope: !11181, file: !7756, discriminator: 0)
!11181 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11182)
!11182 = !{!11179}
!11183 = !DILocation(line: 192, column: 15, scope: !11180, inlinedAt: !11178)
!11184 = !DILocation(line: 192, column: 9, scope: !10990)
!11185 = !DILocation(line: 193, column: 34, scope: !10990)
!11186 = !DILocation(line: 193, column: 18, scope: !10990)
!11187 = !DILocation(line: 197, column: 25, scope: !11113, inlinedAt: !11114)
!11188 = !DILocalVariable(name: "n", scope: !11189, file: !7756, line: 197, type: !9, align: 8)
!11189 = !DILexicalBlockFile(scope: !11190, file: !7756, discriminator: 0)
!11190 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11191)
!11191 = !{!11188, !11192}
!11192 = !DILocalVariable(name: "runtime", scope: !11193, file: !7756, line: 197, type: !10846, align: 8)
!11193 = !DILexicalBlockFile(scope: !11194, file: !7756, discriminator: 0)
!11194 = distinct !DILexicalBlock(scope: !11190, file: !640, line: 2319, column: 13)
!11195 = !DILocation(line: 197, column: 25, scope: !11189, inlinedAt: !11196)
!11196 = !DILocation(line: 39, column: 18, scope: !11117, inlinedAt: !11109)
!11197 = !DILocation(line: 197, column: 47, scope: !11129, inlinedAt: !11130)
!11198 = !DILocalVariable(name: "n", scope: !11199, file: !7756, line: 197, type: !9, align: 8)
!11199 = !DILexicalBlockFile(scope: !11200, file: !7756, discriminator: 0)
!11200 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11201)
!11201 = !{!11198, !11202}
!11202 = !DILocalVariable(name: "runtime", scope: !11203, file: !7756, line: 197, type: !10846, align: 8)
!11203 = !DILexicalBlockFile(scope: !11204, file: !7756, discriminator: 0)
!11204 = distinct !DILexicalBlock(scope: !11200, file: !640, line: 2319, column: 13)
!11205 = !DILocation(line: 197, column: 47, scope: !11199, inlinedAt: !11206)
!11206 = !DILocation(line: 39, column: 18, scope: !11133, inlinedAt: !11125)
!11207 = !DILocation(line: 216, column: 13, scope: !10990)
!11208 = !DILocation(line: 216, column: 13, scope: !11013)
!11209 = !DILocation(line: 217, column: 47, scope: !11013)
!11210 = !DILocation(line: 197, column: 13, scope: !10990)
!11211 = !DILocation(line: 197, column: 13, scope: !11000)
!11212 = !DILocation(line: 198, column: 32, scope: !11000)
!11213 = !DILocalVariable(name: "self", scope: !11214, file: !7756, line: 198, type: !7494, align: 8)
!11214 = !DILexicalBlockFile(scope: !11215, file: !7756, discriminator: 0)
!11215 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11216)
!11216 = !{!11213}
!11217 = !DILocation(line: 198, column: 32, scope: !11214, inlinedAt: !11212)
!11218 = !DILocation(line: 198, column: 21, scope: !11003)
!11219 = !DILocation(line: 201, column: 48, scope: !11003)
!11220 = !DILocalVariable(name: "self", scope: !11221, file: !7756, line: 201, type: !7494, align: 8)
!11221 = !DILexicalBlockFile(scope: !11222, file: !7756, discriminator: 0)
!11222 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11223)
!11223 = !{!11220}
!11224 = !DILocation(line: 201, column: 48, scope: !11221, inlinedAt: !11219)
!11225 = !DILocation(line: 201, column: 36, scope: !11003)
!11226 = !DILocation(line: 201, column: 17, scope: !11003)
!11227 = !DILocation(line: 203, column: 39, scope: !11003)
!11228 = !DILocalVariable(name: "self", scope: !11229, file: !7756, line: 203, type: !339, align: 8)
!11229 = !DILexicalBlockFile(scope: !11230, file: !7756, discriminator: 0)
!11230 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11231)
!11231 = !{!11228}
!11232 = !DILocation(line: 203, column: 39, scope: !11229, inlinedAt: !11227)
!11233 = !DILocation(line: 203, column: 53, scope: !11003)
!11234 = !DILocation(line: 203, column: 65, scope: !11003)
!11235 = !DILocalVariable(name: "self", scope: !11236, file: !7756, line: 203, type: !7494, align: 8)
!11236 = !DILexicalBlockFile(scope: !11237, file: !7756, discriminator: 0)
!11237 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11238)
!11238 = !{!11235}
!11239 = !DILocation(line: 203, column: 31, scope: !11236, inlinedAt: !11240)
!11240 = !DILocation(line: 126, column: 34, scope: !11026, inlinedAt: !11033)
!11241 = !DILocation(line: 203, column: 31, scope: !11145, inlinedAt: !11146)
!11242 = !DILocalVariable(name: "n", scope: !11243, file: !7756, line: 203, type: !9, align: 8)
!11243 = !DILexicalBlockFile(scope: !11244, file: !7756, discriminator: 0)
!11244 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11245)
!11245 = !{!11242, !11246}
!11246 = !DILocalVariable(name: "runtime", scope: !11247, file: !7756, line: 203, type: !10846, align: 8)
!11247 = !DILexicalBlockFile(scope: !11248, file: !7756, discriminator: 0)
!11248 = distinct !DILexicalBlock(scope: !11244, file: !640, line: 2319, column: 13)
!11249 = !DILocation(line: 203, column: 31, scope: !11243, inlinedAt: !11250)
!11250 = !DILocation(line: 39, column: 18, scope: !11149, inlinedAt: !11141)
!11251 = !DILocation(line: 203, column: 21, scope: !11005)
!11252 = !DILocation(line: 204, column: 27, scope: !11052, inlinedAt: !11045)
!11253 = !DILocation(line: 204, column: 27, scope: !11039, inlinedAt: !11045)
!11254 = !DILocation(line: 204, column: 27, scope: !11011)
!11255 = !DILocation(line: 204, column: 21, scope: !11007)
!11256 = !DILocation(line: 205, column: 20, scope: !11007)
!11257 = !DILocation(line: 1, column: 1, scope: !11258)
!11258 = !DILexicalBlockFile(scope: !10990, file: !4302, discriminator: 0)
!11259 = !DILocation(line: 223, column: 6, scope: !10990)
!11260 = !DILocation(line: 208, column: 50, scope: !11007)
!11261 = !DILocalVariable(name: "data", scope: !11262, file: !7756, line: 208, type: !339, align: 8)
!11262 = !DILexicalBlockFile(scope: !11263, file: !7756, discriminator: 0)
!11263 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hf18ee9ffa785bda9E", scope: !7463, file: !445, line: 487, type: !10672, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11264)
!11264 = !{!11261, !11265}
!11265 = !DILocalVariable(name: "len", scope: !11262, file: !7756, line: 208, type: !9, align: 8)
!11266 = !DILocation(line: 208, column: 20, scope: !11262, inlinedAt: !11267)
!11267 = !DILocation(line: 208, column: 20, scope: !11007)
!11268 = !DILocation(line: 208, column: 55, scope: !11007)
!11269 = !DILocalVariable(name: "self", scope: !11270, file: !7756, line: 208, type: !339, align: 8)
!11270 = !DILexicalBlockFile(scope: !11271, file: !7756, discriminator: 0)
!11271 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11272)
!11272 = !{!11269}
!11273 = !DILocation(line: 208, column: 20, scope: !11270, inlinedAt: !11274)
!11274 = !DILocation(line: 489, column: 70, scope: !11263, inlinedAt: !11267)
!11275 = !DILocalVariable(name: "data", scope: !11276, file: !7756, line: 208, type: !448, align: 8)
!11276 = !DILexicalBlockFile(scope: !11277, file: !7756, discriminator: 0)
!11277 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hd34dadd7044cb66fE", scope: !260, file: !682, line: 726, type: !765, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11278)
!11278 = !{!11275, !11279}
!11279 = !DILocalVariable(name: "len", scope: !11276, file: !7756, line: 208, type: !9, align: 8)
!11280 = !DILocation(line: 208, column: 20, scope: !11276, inlinedAt: !11281)
!11281 = !DILocation(line: 489, column: 38, scope: !11263, inlinedAt: !11267)
!11282 = !DILocalVariable(name: "self", scope: !11283, file: !7756, line: 208, type: !448, align: 8)
!11283 = !DILexicalBlockFile(scope: !11284, file: !7756, discriminator: 0)
!11284 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2521638f5850fb66E", scope: !456, file: !455, line: 45, type: !775, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !11285)
!11285 = !{!11282}
!11286 = !DILocation(line: 208, column: 20, scope: !11283, inlinedAt: !11287)
!11287 = !DILocation(line: 727, column: 24, scope: !11277, inlinedAt: !11281)
!11288 = !DILocalVariable(name: "data_address", scope: !11289, file: !7756, line: 208, type: !777, align: 8)
!11289 = !DILexicalBlockFile(scope: !11290, file: !7756, discriminator: 0)
!11290 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h831a101dd10ae1e2E", scope: !704, file: !703, line: 127, type: !784, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11291)
!11291 = !{!11288, !11292}
!11292 = !DILocalVariable(name: "metadata", scope: !11289, file: !7756, line: 208, type: !9, align: 8)
!11293 = !DILocation(line: 208, column: 20, scope: !11289, inlinedAt: !11294)
!11294 = !DILocation(line: 727, column: 5, scope: !11277, inlinedAt: !11281)
!11295 = !DILocalVariable(name: "ptr", scope: !11296, file: !7756, line: 208, type: !715, align: 8)
!11296 = !DILexicalBlockFile(scope: !11297, file: !7756, discriminator: 0)
!11297 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdc564488f709a120E", scope: !7463, file: !445, line: 196, type: !10948, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11298)
!11298 = !{!11295}
!11299 = !DILocation(line: 208, column: 20, scope: !11296, inlinedAt: !11300)
!11300 = !DILocation(line: 489, column: 18, scope: !11263, inlinedAt: !11267)
!11301 = !DILocation(line: 208, column: 17, scope: !11007)
!11302 = !DILocation(line: 209, column: 13, scope: !10990)
!11303 = !DILocation(line: 206, column: 21, scope: !11007)
!11304 = !DILocalVariable(name: "self", scope: !11305, file: !7756, line: 206, type: !448, align: 8)
!11305 = !DILexicalBlockFile(scope: !11306, file: !7756, discriminator: 0)
!11306 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9f321a7d1697cdfcE", scope: !456, file: !455, line: 977, type: !747, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11307)
!11307 = !{!11304, !11308}
!11308 = !DILocalVariable(name: "count", scope: !11305, file: !7756, line: 206, type: !9, align: 8)
!11309 = !DILocation(line: 206, column: 21, scope: !11305, inlinedAt: !11303)
!11310 = !DILocation(line: 206, column: 33, scope: !11007)
!11311 = !DILocalVariable(name: "self", scope: !11312, file: !7756, line: 206, type: !448, align: 8)
!11312 = !DILexicalBlockFile(scope: !11313, file: !7756, discriminator: 0)
!11313 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8858ce9471ea0608E", scope: !456, file: !455, line: 462, type: !756, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11314)
!11314 = !{!11311, !11315}
!11315 = !DILocalVariable(name: "count", scope: !11312, file: !7756, line: 206, type: !674, align: 8)
!11316 = !DILocation(line: 206, column: 21, scope: !11312, inlinedAt: !11317)
!11317 = !DILocation(line: 982, column: 18, scope: !11306, inlinedAt: !11303)
!11318 = !DILocalVariable(name: "self", scope: !11319, file: !7756, line: 206, type: !448, align: 8)
!11319 = !DILexicalBlockFile(scope: !11320, file: !7756, discriminator: 0)
!11320 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17hccc16b35cf211445E", scope: !456, file: !455, line: 1421, type: !11321, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11323)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{null, !448, !52, !9}
!11323 = !{!11318, !11324, !11325}
!11324 = !DILocalVariable(name: "val", scope: !11319, file: !7756, line: 206, type: !52, align: 1)
!11325 = !DILocalVariable(name: "count", scope: !11319, file: !7756, line: 206, type: !9, align: 8)
!11326 = !DILocation(line: 206, column: 21, scope: !11319, inlinedAt: !11303)
!11327 = !DILocation(line: 206, column: 58, scope: !11007)
!11328 = !DILocalVariable(name: "dst", scope: !11329, file: !7756, line: 206, type: !448, align: 8)
!11329 = !DILexicalBlockFile(scope: !11330, file: !7756, discriminator: 0)
!11330 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17h4608f38989e63137E", scope: !6042, file: !640, line: 2613, type: !11321, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11331)
!11331 = !{!11328, !11332, !11333, !11334}
!11332 = !DILocalVariable(name: "val", scope: !11329, file: !7756, line: 206, type: !52, align: 1)
!11333 = !DILocalVariable(name: "count", scope: !11329, file: !7756, line: 206, type: !9, align: 8)
!11334 = !DILocalVariable(name: "runtime", scope: !11335, file: !7756, line: 206, type: !11337, align: 8)
!11335 = !DILexicalBlockFile(scope: !11336, file: !7756, discriminator: 0)
!11336 = distinct !DILexicalBlock(scope: !11330, file: !640, line: 2319, column: 13)
!11337 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !11338, file: !2, size: 64, align: 64, elements: !11339, templateParams: !23, identifier: "987db8eeaba3cb48874813cca3b000")
!11338 = !DINamespace(name: "write_bytes", scope: !6042)
!11339 = !{!11340}
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !11337, file: !2, baseType: !10335, size: 64, align: 64)
!11341 = !DILocation(line: 206, column: 21, scope: !11329, inlinedAt: !11342)
!11342 = !DILocation(line: 1426, column: 18, scope: !11320, inlinedAt: !11303)
!11343 = !DILocation(line: 205, column: 17, scope: !11007)
!11344 = !DILocation(line: 217, column: 31, scope: !11087, inlinedAt: !11093)
!11345 = !DILocation(line: 217, column: 31, scope: !11019)
!11346 = !DILocation(line: 217, column: 21, scope: !11015)
!11347 = !DILocation(line: 218, column: 42, scope: !11015)
!11348 = !DILocalVariable(name: "self", scope: !11349, file: !7756, line: 218, type: !339, align: 8)
!11349 = !DILexicalBlockFile(scope: !11350, file: !7756, discriminator: 0)
!11350 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11351)
!11351 = !{!11348}
!11352 = !DILocation(line: 218, column: 42, scope: !11349, inlinedAt: !11347)
!11353 = !DILocation(line: 218, column: 17, scope: !11173, inlinedAt: !11177)
!11354 = !DILocation(line: 218, column: 56, scope: !11165, inlinedAt: !11166)
!11355 = !DILocalVariable(name: "self", scope: !11356, file: !7756, line: 218, type: !7463, align: 8)
!11356 = !DILexicalBlockFile(scope: !11357, file: !7756, discriminator: 0)
!11357 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2767a07d858db755E", scope: !7463, file: !445, line: 532, type: !10610, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11358)
!11358 = !{!11355}
!11359 = !DILocation(line: 218, column: 56, scope: !11356, inlinedAt: !11161)
!11360 = !DILocalVariable(name: "self", scope: !11361, file: !7756, line: 218, type: !7463, align: 8)
!11361 = !DILexicalBlockFile(scope: !11362, file: !7756, discriminator: 0)
!11362 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11363)
!11363 = !{!11360}
!11364 = !DILocation(line: 218, column: 56, scope: !11361, inlinedAt: !11365)
!11365 = !DILocation(line: 534, column: 41, scope: !11357, inlinedAt: !11161)
!11366 = !DILocalVariable(name: "self", scope: !11367, file: !7756, line: 218, type: !715, align: 8)
!11367 = !DILexicalBlockFile(scope: !11368, file: !7756, discriminator: 0)
!11368 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h43435e6e9174c7c9E", scope: !739, file: !455, line: 1759, type: !740, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11369)
!11369 = !{!11366}
!11370 = !DILocation(line: 218, column: 56, scope: !11367, inlinedAt: !11365)
!11371 = !DILocalVariable(name: "ptr", scope: !11372, file: !7756, line: 218, type: !448, align: 8)
!11372 = !DILexicalBlockFile(scope: !11373, file: !7756, discriminator: 0)
!11373 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11374)
!11374 = !{!11371}
!11375 = !DILocation(line: 218, column: 56, scope: !11372, inlinedAt: !11376)
!11376 = !DILocation(line: 534, column: 18, scope: !11357, inlinedAt: !11161)
!11377 = !DILocation(line: 218, column: 78, scope: !11015)
!11378 = !DILocation(line: 219, column: 38, scope: !11015)
!11379 = !DILocation(line: 219, column: 17, scope: !11015)
!11380 = !DILocation(line: 220, column: 17, scope: !11015)
!11381 = !DILocation(line: 221, column: 13, scope: !10990)
!11382 = !DILocation(line: 193, column: 52, scope: !10990)
!11383 = distinct !DISubprogram(name: "box_free<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h670519a61cb0e8f8E", scope: !1235, file: !7756, line: 334, type: !11384, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11404, retainedNodes: !11395)
!11384 = !DISubroutineType(types: !11385)
!11385 = !{null, !11386, !1234}
!11386 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<std::io::error::Custom>", scope: !1227, file: !2, size: 64, align: 64, elements: !11387, templateParams: !3760, identifier: "3dc1f384ad4ef48742c31849aa0f48ee")
!11387 = !{!11388, !11393}
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11386, file: !2, baseType: !11389, size: 64, align: 64)
!11389 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::Custom>", scope: !259, file: !2, size: 64, align: 64, elements: !11390, templateParams: !3760, identifier: "660454cd5ddc2ca8645e400b7a3b19e0")
!11390 = !{!11391}
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11389, file: !2, baseType: !11392, size: 64, align: 64)
!11392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::Custom", baseType: !1780, size: 64, align: 64, dwarfAddressSpace: 0)
!11393 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11386, file: !2, baseType: !11394, align: 8)
!11394 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::Custom>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !3760, identifier: "fcf4e94b1de4248d444d05acedfadeb9")
!11395 = !{!11396, !11397, !11398, !11400, !11402}
!11396 = !DILocalVariable(name: "ptr", arg: 1, scope: !11383, file: !7756, line: 335, type: !11386)
!11397 = !DILocalVariable(name: "alloc", arg: 2, scope: !11383, file: !7756, line: 336, type: !1234)
!11398 = !DILocalVariable(name: "size", scope: !11399, file: !7756, line: 339, type: !9, align: 8)
!11399 = distinct !DILexicalBlock(scope: !11383, file: !7756, line: 339, column: 9)
!11400 = !DILocalVariable(name: "align", scope: !11401, file: !7756, line: 340, type: !9, align: 8)
!11401 = distinct !DILexicalBlock(scope: !11399, file: !7756, line: 340, column: 9)
!11402 = !DILocalVariable(name: "layout", scope: !11403, file: !7756, line: 341, type: !1622, align: 8)
!11403 = distinct !DILexicalBlock(scope: !11401, file: !7756, line: 341, column: 9)
!11404 = !{!3761, !1237}
!11405 = !DILocation(line: 335, column: 5, scope: !11383)
!11406 = !DILocation(line: 336, column: 5, scope: !11383)
!11407 = !DILocation(line: 341, column: 13, scope: !11403)
!11408 = !DILocalVariable(name: "unique", scope: !11409, file: !7756, line: 342, type: !1226, align: 8)
!11409 = !DILexicalBlockFile(scope: !11410, file: !7756, discriminator: 0)
!11410 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11411)
!11411 = !{!11408}
!11412 = !DILocation(line: 342, column: 26, scope: !11409, inlinedAt: !11413)
!11413 = !DILocation(line: 342, column: 26, scope: !11403)
!11414 = !DILocalVariable(name: "pointer", scope: !11415, file: !7756, line: 342, type: !339, align: 8)
!11415 = !DILexicalBlockFile(scope: !11416, file: !7756, discriminator: 0)
!11416 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11420)
!11417 = !DINamespace(name: "{impl#11}", scope: !1227)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{!1226, !339}
!11420 = !{!11414}
!11421 = !DILocation(line: 342, column: 37, scope: !11415, inlinedAt: !11422)
!11422 = !DILocation(line: 137, column: 9, scope: !11423, inlinedAt: !11430)
!11423 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h24279b319db779fdE", scope: !11386, file: !1586, line: 136, type: !11424, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11429, retainedNodes: !11426)
!11424 = !DISubroutineType(types: !11425)
!11425 = !{!1226, !11386}
!11426 = !{!11427}
!11427 = !DILocalVariable(name: "self", scope: !11428, file: !7756, line: 342, type: !11386, align: 8)
!11428 = !DILexicalBlockFile(scope: !11423, file: !7756, discriminator: 0)
!11429 = !{!3761, !1950}
!11430 = !DILocation(line: 342, column: 37, scope: !11403)
!11431 = !DILocation(line: 339, column: 32, scope: !11383)
!11432 = !DILocalVariable(name: "self", scope: !11433, file: !7756, line: 339, type: !11438, align: 8)
!11433 = !DILexicalBlockFile(scope: !11434, file: !7756, discriminator: 0)
!11434 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h58d6efbbe2837aecE", scope: !11386, file: !1586, line: 114, type: !11435, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11439)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!11437, !11438}
!11437 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::Custom", baseType: !1780, size: 64, align: 64, dwarfAddressSpace: 0)
!11438 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<std::io::error::Custom>", baseType: !11386, size: 64, align: 64, dwarfAddressSpace: 0)
!11439 = !{!11432}
!11440 = !DILocation(line: 339, column: 32, scope: !11433, inlinedAt: !11431)
!11441 = !DILocalVariable(name: "self", scope: !11442, file: !7756, line: 339, type: !11446, align: 8)
!11442 = !DILexicalBlockFile(scope: !11443, file: !7756, discriminator: 0)
!11443 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h48b54d3ac952acc0E", scope: !11389, file: !445, line: 378, type: !11444, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11447)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!11437, !11446}
!11446 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<std::io::error::Custom>", baseType: !11389, size: 64, align: 64, dwarfAddressSpace: 0)
!11447 = !{!11441}
!11448 = !DILocation(line: 339, column: 32, scope: !11442, inlinedAt: !11449)
!11449 = !DILocation(line: 117, column: 18, scope: !11434, inlinedAt: !11431)
!11450 = !DILocalVariable(name: "self", scope: !11451, file: !7756, line: 339, type: !11389, align: 8)
!11451 = !DILexicalBlockFile(scope: !11452, file: !7756, discriminator: 0)
!11452 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0f9ff63b2760deeE", scope: !11389, file: !445, line: 330, type: !11453, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11455)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!1831, !11389}
!11455 = !{!11450}
!11456 = !DILocation(line: 339, column: 32, scope: !11451, inlinedAt: !11457)
!11457 = !DILocation(line: 381, column: 20, scope: !11443, inlinedAt: !11449)
!11458 = !DILocation(line: 339, column: 20, scope: !11383)
!11459 = !DILocation(line: 339, column: 13, scope: !11399)
!11460 = !DILocation(line: 340, column: 38, scope: !11399)
!11461 = !DILocalVariable(name: "self", scope: !11462, file: !7756, line: 340, type: !11438, align: 8)
!11462 = !DILexicalBlockFile(scope: !11463, file: !7756, discriminator: 0)
!11463 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h58d6efbbe2837aecE", scope: !11386, file: !1586, line: 114, type: !11435, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11464)
!11464 = !{!11461}
!11465 = !DILocation(line: 340, column: 38, scope: !11462, inlinedAt: !11460)
!11466 = !DILocalVariable(name: "self", scope: !11467, file: !7756, line: 340, type: !11446, align: 8)
!11467 = !DILexicalBlockFile(scope: !11468, file: !7756, discriminator: 0)
!11468 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h48b54d3ac952acc0E", scope: !11389, file: !445, line: 378, type: !11444, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11469)
!11469 = !{!11466}
!11470 = !DILocation(line: 340, column: 38, scope: !11467, inlinedAt: !11471)
!11471 = !DILocation(line: 117, column: 18, scope: !11463, inlinedAt: !11460)
!11472 = !DILocalVariable(name: "self", scope: !11473, file: !7756, line: 340, type: !11389, align: 8)
!11473 = !DILexicalBlockFile(scope: !11474, file: !7756, discriminator: 0)
!11474 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0f9ff63b2760deeE", scope: !11389, file: !445, line: 330, type: !11453, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11475)
!11475 = !{!11472}
!11476 = !DILocation(line: 340, column: 38, scope: !11473, inlinedAt: !11477)
!11477 = !DILocation(line: 381, column: 20, scope: !11468, inlinedAt: !11471)
!11478 = !DILocation(line: 340, column: 21, scope: !11399)
!11479 = !DILocation(line: 340, column: 13, scope: !11401)
!11480 = !DILocation(line: 341, column: 56, scope: !11401)
!11481 = !DILocalVariable(name: "size", scope: !11482, file: !7756, line: 341, type: !9, align: 8)
!11482 = !DILexicalBlockFile(scope: !11483, file: !7756, discriminator: 0)
!11483 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11484)
!11484 = !{!11481, !11485}
!11485 = !DILocalVariable(name: "align", scope: !11482, file: !7756, line: 341, type: !9, align: 8)
!11486 = !DILocation(line: 341, column: 22, scope: !11482, inlinedAt: !11487)
!11487 = !DILocation(line: 341, column: 22, scope: !11401)
!11488 = !DILocation(line: 341, column: 62, scope: !11401)
!11489 = !DILocalVariable(name: "align", scope: !11490, file: !7756, line: 341, type: !9, align: 8)
!11490 = !DILexicalBlockFile(scope: !11491, file: !7756, discriminator: 0)
!11491 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11492)
!11492 = !{!11489}
!11493 = !DILocation(line: 341, column: 22, scope: !11490, inlinedAt: !11494)
!11494 = !DILocation(line: 100, column: 40, scope: !11483, inlinedAt: !11487)
!11495 = !DILocation(line: 342, column: 37, scope: !11428, inlinedAt: !11430)
!11496 = !DILocalVariable(name: "self", scope: !11497, file: !7756, line: 342, type: !11389, align: 8)
!11497 = !DILexicalBlockFile(scope: !11498, file: !7756, discriminator: 0)
!11498 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4b14463986d8e838E", scope: !11389, file: !445, line: 453, type: !11499, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11429, retainedNodes: !11501)
!11499 = !DISubroutineType(types: !11500)
!11500 = !{!339, !11389}
!11501 = !{!11496}
!11502 = !DILocation(line: 342, column: 37, scope: !11497, inlinedAt: !11503)
!11503 = !DILocation(line: 137, column: 22, scope: !11423, inlinedAt: !11430)
!11504 = !DILocalVariable(name: "self", scope: !11505, file: !7756, line: 342, type: !11389, align: 8)
!11505 = !DILexicalBlockFile(scope: !11506, file: !7756, discriminator: 0)
!11506 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0f9ff63b2760deeE", scope: !11389, file: !445, line: 330, type: !11453, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !11507)
!11507 = !{!11504}
!11508 = !DILocation(line: 342, column: 37, scope: !11505, inlinedAt: !11509)
!11509 = !DILocation(line: 455, column: 41, scope: !11498, inlinedAt: !11503)
!11510 = !DILocalVariable(name: "ptr", scope: !11511, file: !7756, line: 342, type: !448, align: 8)
!11511 = !DILexicalBlockFile(scope: !11512, file: !7756, discriminator: 0)
!11512 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11513)
!11513 = !{!11510}
!11514 = !DILocation(line: 342, column: 37, scope: !11511, inlinedAt: !11515)
!11515 = !DILocation(line: 455, column: 18, scope: !11498, inlinedAt: !11503)
!11516 = !DILocalVariable(name: "self", scope: !11517, file: !7756, line: 342, type: !1226, align: 8)
!11517 = !DILexicalBlockFile(scope: !11518, file: !7756, discriminator: 0)
!11518 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11519)
!11519 = !{!11516}
!11520 = !DILocation(line: 342, column: 26, scope: !11517, inlinedAt: !11521)
!11521 = !DILocation(line: 773, column: 41, scope: !11410, inlinedAt: !11413)
!11522 = !DILocalVariable(name: "self", scope: !11523, file: !7756, line: 342, type: !339, align: 8)
!11523 = !DILexicalBlockFile(scope: !11524, file: !7756, discriminator: 0)
!11524 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11525)
!11525 = !{!11522}
!11526 = !DILocation(line: 342, column: 26, scope: !11523, inlinedAt: !11527)
!11527 = !DILocation(line: 104, column: 9, scope: !11518, inlinedAt: !11521)
!11528 = !DILocalVariable(name: "ptr", scope: !11529, file: !7756, line: 342, type: !448, align: 8)
!11529 = !DILexicalBlockFile(scope: !11530, file: !7756, discriminator: 0)
!11530 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11531)
!11531 = !{!11528}
!11532 = !DILocation(line: 342, column: 26, scope: !11529, inlinedAt: !11533)
!11533 = !DILocation(line: 773, column: 18, scope: !11410, inlinedAt: !11413)
!11534 = !DILocation(line: 342, column: 50, scope: !11403)
!11535 = !DILocation(line: 342, column: 9, scope: !11403)
!11536 = !DILocation(line: 344, column: 1, scope: !11383)
!11537 = !DILocation(line: 334, column: 1, scope: !11383)
!11538 = !DILocation(line: 344, column: 2, scope: !11383)
!11539 = distinct !DISubprogram(name: "box_free<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h8015f80a71312221E", scope: !1235, file: !7756, line: 334, type: !11540, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11563, retainedNodes: !11554)
!11540 = !DISubroutineType(types: !11541)
!11541 = !{null, !11542, !1234}
!11542 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn core::any::Any + core::marker::Send)>", scope: !1227, file: !2, size: 128, align: 64, elements: !11543, templateParams: !3922, identifier: "16c9c9b0bc474265a24ae5b0459b3474")
!11543 = !{!11544, !11552}
!11544 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11542, file: !2, baseType: !11545, size: 128, align: 64)
!11545 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn core::any::Any + core::marker::Send)>", scope: !259, file: !2, size: 128, align: 64, elements: !11546, templateParams: !3922, identifier: "ca5b4cb1bd84d0627e939d082c3ba0fb")
!11546 = !{!11547}
!11547 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11545, file: !2, baseType: !11548, size: 128, align: 64)
!11548 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !11549, templateParams: !23, identifier: "efb594e8529d868d5ddc785fb758f358")
!11549 = !{!11550, !11551}
!11550 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11548, file: !2, baseType: !3917, size: 64, align: 64)
!11551 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11548, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!11552 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11542, file: !2, baseType: !11553, align: 8)
!11553 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn core::any::Any + core::marker::Send)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !3922, identifier: "99d4771a2a7fbd7a16c593f82fd12b4d")
!11554 = !{!11555, !11556, !11557, !11559, !11561}
!11555 = !DILocalVariable(name: "ptr", arg: 1, scope: !11539, file: !7756, line: 335, type: !11542)
!11556 = !DILocalVariable(name: "alloc", arg: 2, scope: !11539, file: !7756, line: 336, type: !1234)
!11557 = !DILocalVariable(name: "size", scope: !11558, file: !7756, line: 339, type: !9, align: 8)
!11558 = distinct !DILexicalBlock(scope: !11539, file: !7756, line: 339, column: 9)
!11559 = !DILocalVariable(name: "align", scope: !11560, file: !7756, line: 340, type: !9, align: 8)
!11560 = distinct !DILexicalBlock(scope: !11558, file: !7756, line: 340, column: 9)
!11561 = !DILocalVariable(name: "layout", scope: !11562, file: !7756, line: 341, type: !1622, align: 8)
!11562 = distinct !DILexicalBlock(scope: !11560, file: !7756, line: 341, column: 9)
!11563 = !{!3923, !1237}
!11564 = !DILocation(line: 335, column: 5, scope: !11539)
!11565 = !DILocation(line: 336, column: 5, scope: !11539)
!11566 = !DILocation(line: 341, column: 13, scope: !11562)
!11567 = !DILocalVariable(name: "unique", scope: !11568, file: !7756, line: 342, type: !1226, align: 8)
!11568 = !DILexicalBlockFile(scope: !11569, file: !7756, discriminator: 0)
!11569 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11570)
!11570 = !{!11567}
!11571 = !DILocation(line: 342, column: 26, scope: !11568, inlinedAt: !11572)
!11572 = !DILocation(line: 342, column: 26, scope: !11562)
!11573 = !DILocalVariable(name: "pointer", scope: !11574, file: !7756, line: 342, type: !339, align: 8)
!11574 = !DILexicalBlockFile(scope: !11575, file: !7756, discriminator: 0)
!11575 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11576)
!11576 = !{!11573}
!11577 = !DILocation(line: 342, column: 37, scope: !11574, inlinedAt: !11578)
!11578 = !DILocation(line: 137, column: 9, scope: !11579, inlinedAt: !11586)
!11579 = distinct !DISubprogram(name: "cast<(dyn core::any::Any + core::marker::Send), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1c9b189cb0f6de34E", scope: !11542, file: !1586, line: 136, type: !11580, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11585, retainedNodes: !11582)
!11580 = !DISubroutineType(types: !11581)
!11581 = !{!1226, !11542}
!11582 = !{!11583}
!11583 = !DILocalVariable(name: "self", scope: !11584, file: !7756, line: 342, type: !11542, align: 8)
!11584 = !DILexicalBlockFile(scope: !11579, file: !7756, discriminator: 0)
!11585 = !{!3923, !1950}
!11586 = !DILocation(line: 342, column: 37, scope: !11562)
!11587 = !DILocation(line: 339, column: 32, scope: !11539)
!11588 = !DILocalVariable(name: "self", scope: !11589, file: !7756, line: 339, type: !11597, align: 8)
!11589 = !DILexicalBlockFile(scope: !11590, file: !7756, discriminator: 0)
!11590 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hd87144889244e3e1E", scope: !11542, file: !1586, line: 114, type: !11591, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11598)
!11591 = !DISubroutineType(types: !11592)
!11592 = !{!11593, !11597}
!11593 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !11594, templateParams: !23, identifier: "2ff30e79a39f07bd89f42b201441cc1b")
!11594 = !{!11595, !11596}
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11593, file: !2, baseType: !3917, size: 64, align: 64)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11593, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!11597 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn core::any::Any + core::marker::Send)>", baseType: !11542, size: 64, align: 64, dwarfAddressSpace: 0)
!11598 = !{!11588}
!11599 = !DILocation(line: 339, column: 32, scope: !11589, inlinedAt: !11587)
!11600 = !DILocalVariable(name: "self", scope: !11601, file: !7756, line: 339, type: !11605, align: 8)
!11601 = !DILexicalBlockFile(scope: !11602, file: !7756, discriminator: 0)
!11602 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h090c84158646d66bE", scope: !11545, file: !445, line: 378, type: !11603, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11606)
!11603 = !DISubroutineType(types: !11604)
!11604 = !{!11593, !11605}
!11605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn core::any::Any + core::marker::Send)>", baseType: !11545, size: 64, align: 64, dwarfAddressSpace: 0)
!11606 = !{!11600}
!11607 = !DILocation(line: 339, column: 32, scope: !11601, inlinedAt: !11608)
!11608 = !DILocation(line: 117, column: 18, scope: !11590, inlinedAt: !11587)
!11609 = !DILocalVariable(name: "self", scope: !11610, file: !7756, line: 339, type: !11545, align: 8)
!11610 = !DILexicalBlockFile(scope: !11611, file: !7756, discriminator: 0)
!11611 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf492283f8127be86E", scope: !11545, file: !445, line: 330, type: !11612, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11614)
!11612 = !DISubroutineType(types: !11613)
!11613 = !{!3914, !11545}
!11614 = !{!11609}
!11615 = !DILocation(line: 339, column: 32, scope: !11610, inlinedAt: !11616)
!11616 = !DILocation(line: 381, column: 20, scope: !11602, inlinedAt: !11608)
!11617 = !DILocation(line: 339, column: 20, scope: !11539)
!11618 = !{i64 1, i64 0}
!11619 = !DILocation(line: 339, column: 13, scope: !11558)
!11620 = !DILocation(line: 340, column: 38, scope: !11558)
!11621 = !DILocalVariable(name: "self", scope: !11622, file: !7756, line: 340, type: !11597, align: 8)
!11622 = !DILexicalBlockFile(scope: !11623, file: !7756, discriminator: 0)
!11623 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hd87144889244e3e1E", scope: !11542, file: !1586, line: 114, type: !11591, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11624)
!11624 = !{!11621}
!11625 = !DILocation(line: 340, column: 38, scope: !11622, inlinedAt: !11620)
!11626 = !DILocalVariable(name: "self", scope: !11627, file: !7756, line: 340, type: !11605, align: 8)
!11627 = !DILexicalBlockFile(scope: !11628, file: !7756, discriminator: 0)
!11628 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h090c84158646d66bE", scope: !11545, file: !445, line: 378, type: !11603, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11629)
!11629 = !{!11626}
!11630 = !DILocation(line: 340, column: 38, scope: !11627, inlinedAt: !11631)
!11631 = !DILocation(line: 117, column: 18, scope: !11623, inlinedAt: !11620)
!11632 = !DILocalVariable(name: "self", scope: !11633, file: !7756, line: 340, type: !11545, align: 8)
!11633 = !DILexicalBlockFile(scope: !11634, file: !7756, discriminator: 0)
!11634 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf492283f8127be86E", scope: !11545, file: !445, line: 330, type: !11612, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11635)
!11635 = !{!11632}
!11636 = !DILocation(line: 340, column: 38, scope: !11633, inlinedAt: !11637)
!11637 = !DILocation(line: 381, column: 20, scope: !11628, inlinedAt: !11631)
!11638 = !DILocation(line: 340, column: 21, scope: !11558)
!11639 = !DILocation(line: 340, column: 13, scope: !11560)
!11640 = !DILocation(line: 341, column: 56, scope: !11560)
!11641 = !DILocalVariable(name: "size", scope: !11642, file: !7756, line: 341, type: !9, align: 8)
!11642 = !DILexicalBlockFile(scope: !11643, file: !7756, discriminator: 0)
!11643 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11644)
!11644 = !{!11641, !11645}
!11645 = !DILocalVariable(name: "align", scope: !11642, file: !7756, line: 341, type: !9, align: 8)
!11646 = !DILocation(line: 341, column: 22, scope: !11642, inlinedAt: !11647)
!11647 = !DILocation(line: 341, column: 22, scope: !11560)
!11648 = !DILocation(line: 341, column: 62, scope: !11560)
!11649 = !DILocalVariable(name: "align", scope: !11650, file: !7756, line: 341, type: !9, align: 8)
!11650 = !DILexicalBlockFile(scope: !11651, file: !7756, discriminator: 0)
!11651 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11652)
!11652 = !{!11649}
!11653 = !DILocation(line: 341, column: 22, scope: !11650, inlinedAt: !11654)
!11654 = !DILocation(line: 100, column: 40, scope: !11643, inlinedAt: !11647)
!11655 = !DILocation(line: 342, column: 37, scope: !11584, inlinedAt: !11586)
!11656 = !DILocalVariable(name: "self", scope: !11657, file: !7756, line: 342, type: !11545, align: 8)
!11657 = !DILexicalBlockFile(scope: !11658, file: !7756, discriminator: 0)
!11658 = distinct !DISubprogram(name: "cast<(dyn core::any::Any + core::marker::Send), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8acfee5c34db927dE", scope: !11545, file: !445, line: 453, type: !11659, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11585, retainedNodes: !11661)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{!339, !11545}
!11661 = !{!11656}
!11662 = !DILocation(line: 342, column: 37, scope: !11657, inlinedAt: !11663)
!11663 = !DILocation(line: 137, column: 22, scope: !11579, inlinedAt: !11586)
!11664 = !DILocalVariable(name: "self", scope: !11665, file: !7756, line: 342, type: !11545, align: 8)
!11665 = !DILexicalBlockFile(scope: !11666, file: !7756, discriminator: 0)
!11666 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf492283f8127be86E", scope: !11545, file: !445, line: 330, type: !11612, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !11667)
!11667 = !{!11664}
!11668 = !DILocation(line: 342, column: 37, scope: !11665, inlinedAt: !11669)
!11669 = !DILocation(line: 455, column: 41, scope: !11658, inlinedAt: !11663)
!11670 = !DILocalVariable(name: "ptr", scope: !11671, file: !7756, line: 342, type: !448, align: 8)
!11671 = !DILexicalBlockFile(scope: !11672, file: !7756, discriminator: 0)
!11672 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11673)
!11673 = !{!11670}
!11674 = !DILocation(line: 342, column: 37, scope: !11671, inlinedAt: !11675)
!11675 = !DILocation(line: 455, column: 18, scope: !11658, inlinedAt: !11663)
!11676 = !DILocalVariable(name: "self", scope: !11677, file: !7756, line: 342, type: !1226, align: 8)
!11677 = !DILexicalBlockFile(scope: !11678, file: !7756, discriminator: 0)
!11678 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11679)
!11679 = !{!11676}
!11680 = !DILocation(line: 342, column: 26, scope: !11677, inlinedAt: !11681)
!11681 = !DILocation(line: 773, column: 41, scope: !11569, inlinedAt: !11572)
!11682 = !DILocalVariable(name: "self", scope: !11683, file: !7756, line: 342, type: !339, align: 8)
!11683 = !DILexicalBlockFile(scope: !11684, file: !7756, discriminator: 0)
!11684 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11685)
!11685 = !{!11682}
!11686 = !DILocation(line: 342, column: 26, scope: !11683, inlinedAt: !11687)
!11687 = !DILocation(line: 104, column: 9, scope: !11678, inlinedAt: !11681)
!11688 = !DILocalVariable(name: "ptr", scope: !11689, file: !7756, line: 342, type: !448, align: 8)
!11689 = !DILexicalBlockFile(scope: !11690, file: !7756, discriminator: 0)
!11690 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11691)
!11691 = !{!11688}
!11692 = !DILocation(line: 342, column: 26, scope: !11689, inlinedAt: !11693)
!11693 = !DILocation(line: 773, column: 18, scope: !11569, inlinedAt: !11572)
!11694 = !DILocation(line: 342, column: 50, scope: !11562)
!11695 = !DILocation(line: 342, column: 9, scope: !11562)
!11696 = !DILocation(line: 344, column: 1, scope: !11539)
!11697 = !DILocation(line: 334, column: 1, scope: !11539)
!11698 = !DILocation(line: 344, column: 2, scope: !11539)
!11699 = distinct !DISubprogram(name: "box_free<[u32], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h956b22549fd78293E", scope: !1235, file: !7756, line: 334, type: !11700, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11723, retainedNodes: !11714)
!11700 = !DISubroutineType(types: !11701)
!11701 = !{null, !11702, !1234}
!11702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u32]>", scope: !1227, file: !2, size: 128, align: 64, elements: !11703, templateParams: !2612, identifier: "2627bfab0ac3b5148edada8b76c5b6dc")
!11703 = !{!11704, !11712}
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11702, file: !2, baseType: !11705, size: 128, align: 64)
!11705 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u32]>", scope: !259, file: !2, size: 128, align: 64, elements: !11706, templateParams: !2612, identifier: "a32c6f6a8f9fe0e71c6deb22254d3171")
!11706 = !{!11707}
!11707 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11705, file: !2, baseType: !11708, size: 128, align: 64)
!11708 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u32]", file: !2, size: 128, align: 64, elements: !11709, templateParams: !23, identifier: "e33f23ed2fbada25e0d97da9bc9cd540")
!11709 = !{!11710, !11711}
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11708, file: !2, baseType: !2661, size: 64, align: 64)
!11711 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11708, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11712 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11702, file: !2, baseType: !11713, align: 8)
!11713 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u32]>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !2612, identifier: "1c8475bfb765bf32fa3c396c88d8de27")
!11714 = !{!11715, !11716, !11717, !11719, !11721}
!11715 = !DILocalVariable(name: "ptr", arg: 1, scope: !11699, file: !7756, line: 335, type: !11702)
!11716 = !DILocalVariable(name: "alloc", arg: 2, scope: !11699, file: !7756, line: 336, type: !1234)
!11717 = !DILocalVariable(name: "size", scope: !11718, file: !7756, line: 339, type: !9, align: 8)
!11718 = distinct !DILexicalBlock(scope: !11699, file: !7756, line: 339, column: 9)
!11719 = !DILocalVariable(name: "align", scope: !11720, file: !7756, line: 340, type: !9, align: 8)
!11720 = distinct !DILexicalBlock(scope: !11718, file: !7756, line: 340, column: 9)
!11721 = !DILocalVariable(name: "layout", scope: !11722, file: !7756, line: 341, type: !1622, align: 8)
!11722 = distinct !DILexicalBlock(scope: !11720, file: !7756, line: 341, column: 9)
!11723 = !{!2613, !1237}
!11724 = !DILocation(line: 335, column: 5, scope: !11699)
!11725 = !DILocation(line: 336, column: 5, scope: !11699)
!11726 = !DILocation(line: 341, column: 13, scope: !11722)
!11727 = !DILocalVariable(name: "unique", scope: !11728, file: !7756, line: 342, type: !1226, align: 8)
!11728 = !DILexicalBlockFile(scope: !11729, file: !7756, discriminator: 0)
!11729 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11730)
!11730 = !{!11727}
!11731 = !DILocation(line: 342, column: 26, scope: !11728, inlinedAt: !11732)
!11732 = !DILocation(line: 342, column: 26, scope: !11722)
!11733 = !DILocalVariable(name: "pointer", scope: !11734, file: !7756, line: 342, type: !339, align: 8)
!11734 = !DILexicalBlockFile(scope: !11735, file: !7756, discriminator: 0)
!11735 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11736)
!11736 = !{!11733}
!11737 = !DILocation(line: 342, column: 37, scope: !11734, inlinedAt: !11738)
!11738 = !DILocation(line: 137, column: 9, scope: !11739, inlinedAt: !11746)
!11739 = distinct !DISubprogram(name: "cast<[u32], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h20364925eea275b8E", scope: !11702, file: !1586, line: 136, type: !11740, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11745, retainedNodes: !11742)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{!1226, !11702}
!11742 = !{!11743}
!11743 = !DILocalVariable(name: "self", scope: !11744, file: !7756, line: 342, type: !11702, align: 8)
!11744 = !DILexicalBlockFile(scope: !11739, file: !7756, discriminator: 0)
!11745 = !{!2613, !1950}
!11746 = !DILocation(line: 342, column: 37, scope: !11722)
!11747 = !DILocation(line: 339, column: 32, scope: !11699)
!11748 = !DILocalVariable(name: "self", scope: !11749, file: !7756, line: 339, type: !11757, align: 8)
!11749 = !DILexicalBlockFile(scope: !11750, file: !7756, discriminator: 0)
!11750 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf1493170c98bc7caE", scope: !11702, file: !1586, line: 114, type: !11751, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11758)
!11751 = !DISubroutineType(types: !11752)
!11752 = !{!11753, !11757}
!11753 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u32]", file: !2, size: 128, align: 64, elements: !11754, templateParams: !23, identifier: "ceabaa3234527e8fd9f4b155390e057f")
!11754 = !{!11755, !11756}
!11755 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11753, file: !2, baseType: !2661, size: 64, align: 64)
!11756 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11753, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11757 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u32]>", baseType: !11702, size: 64, align: 64, dwarfAddressSpace: 0)
!11758 = !{!11748}
!11759 = !DILocation(line: 339, column: 32, scope: !11749, inlinedAt: !11747)
!11760 = !DILocalVariable(name: "self", scope: !11761, file: !7756, line: 339, type: !11765, align: 8)
!11761 = !DILexicalBlockFile(scope: !11762, file: !7756, discriminator: 0)
!11762 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h5d89d3c089798903E", scope: !11705, file: !445, line: 378, type: !11763, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11766)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{!11753, !11765}
!11765 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u32]>", baseType: !11705, size: 64, align: 64, dwarfAddressSpace: 0)
!11766 = !{!11760}
!11767 = !DILocation(line: 339, column: 32, scope: !11761, inlinedAt: !11768)
!11768 = !DILocation(line: 117, column: 18, scope: !11750, inlinedAt: !11747)
!11769 = !DILocalVariable(name: "self", scope: !11770, file: !7756, line: 339, type: !11705, align: 8)
!11770 = !DILexicalBlockFile(scope: !11771, file: !7756, discriminator: 0)
!11771 = distinct !DISubprogram(name: "as_ptr<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he91222f186c1c08bE", scope: !11705, file: !445, line: 330, type: !11772, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11778)
!11772 = !DISubroutineType(types: !11773)
!11773 = !{!11774, !11705}
!11774 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u32]", file: !2, size: 128, align: 64, elements: !11775, templateParams: !23, identifier: "feb60d61d2db6da74cd74d46fb7ee4a0")
!11775 = !{!11776, !11777}
!11776 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11774, file: !2, baseType: !2661, size: 64, align: 64)
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11774, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11778 = !{!11769}
!11779 = !DILocation(line: 339, column: 32, scope: !11770, inlinedAt: !11780)
!11780 = !DILocation(line: 381, column: 20, scope: !11762, inlinedAt: !11768)
!11781 = !DILocation(line: 339, column: 20, scope: !11699)
!11782 = !DILocation(line: 339, column: 13, scope: !11718)
!11783 = !DILocation(line: 340, column: 38, scope: !11718)
!11784 = !DILocalVariable(name: "self", scope: !11785, file: !7756, line: 340, type: !11757, align: 8)
!11785 = !DILexicalBlockFile(scope: !11786, file: !7756, discriminator: 0)
!11786 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf1493170c98bc7caE", scope: !11702, file: !1586, line: 114, type: !11751, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11787)
!11787 = !{!11784}
!11788 = !DILocation(line: 340, column: 38, scope: !11785, inlinedAt: !11783)
!11789 = !DILocalVariable(name: "self", scope: !11790, file: !7756, line: 340, type: !11765, align: 8)
!11790 = !DILexicalBlockFile(scope: !11791, file: !7756, discriminator: 0)
!11791 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h5d89d3c089798903E", scope: !11705, file: !445, line: 378, type: !11763, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11792)
!11792 = !{!11789}
!11793 = !DILocation(line: 340, column: 38, scope: !11790, inlinedAt: !11794)
!11794 = !DILocation(line: 117, column: 18, scope: !11786, inlinedAt: !11783)
!11795 = !DILocalVariable(name: "self", scope: !11796, file: !7756, line: 340, type: !11705, align: 8)
!11796 = !DILexicalBlockFile(scope: !11797, file: !7756, discriminator: 0)
!11797 = distinct !DISubprogram(name: "as_ptr<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he91222f186c1c08bE", scope: !11705, file: !445, line: 330, type: !11772, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11798)
!11798 = !{!11795}
!11799 = !DILocation(line: 340, column: 38, scope: !11796, inlinedAt: !11800)
!11800 = !DILocation(line: 381, column: 20, scope: !11791, inlinedAt: !11794)
!11801 = !DILocation(line: 340, column: 21, scope: !11718)
!11802 = !DILocation(line: 340, column: 13, scope: !11720)
!11803 = !DILocation(line: 341, column: 56, scope: !11720)
!11804 = !DILocalVariable(name: "size", scope: !11805, file: !7756, line: 341, type: !9, align: 8)
!11805 = !DILexicalBlockFile(scope: !11806, file: !7756, discriminator: 0)
!11806 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11807)
!11807 = !{!11804, !11808}
!11808 = !DILocalVariable(name: "align", scope: !11805, file: !7756, line: 341, type: !9, align: 8)
!11809 = !DILocation(line: 341, column: 22, scope: !11805, inlinedAt: !11810)
!11810 = !DILocation(line: 341, column: 22, scope: !11720)
!11811 = !DILocation(line: 341, column: 62, scope: !11720)
!11812 = !DILocalVariable(name: "align", scope: !11813, file: !7756, line: 341, type: !9, align: 8)
!11813 = !DILexicalBlockFile(scope: !11814, file: !7756, discriminator: 0)
!11814 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11815)
!11815 = !{!11812}
!11816 = !DILocation(line: 341, column: 22, scope: !11813, inlinedAt: !11817)
!11817 = !DILocation(line: 100, column: 40, scope: !11806, inlinedAt: !11810)
!11818 = !DILocation(line: 342, column: 37, scope: !11744, inlinedAt: !11746)
!11819 = !DILocalVariable(name: "self", scope: !11820, file: !7756, line: 342, type: !11705, align: 8)
!11820 = !DILexicalBlockFile(scope: !11821, file: !7756, discriminator: 0)
!11821 = distinct !DISubprogram(name: "cast<[u32], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haedaa0b90176460aE", scope: !11705, file: !445, line: 453, type: !11822, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11745, retainedNodes: !11824)
!11822 = !DISubroutineType(types: !11823)
!11823 = !{!339, !11705}
!11824 = !{!11819}
!11825 = !DILocation(line: 342, column: 37, scope: !11820, inlinedAt: !11826)
!11826 = !DILocation(line: 137, column: 22, scope: !11739, inlinedAt: !11746)
!11827 = !DILocalVariable(name: "self", scope: !11828, file: !7756, line: 342, type: !11705, align: 8)
!11828 = !DILexicalBlockFile(scope: !11829, file: !7756, discriminator: 0)
!11829 = distinct !DISubprogram(name: "as_ptr<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he91222f186c1c08bE", scope: !11705, file: !445, line: 330, type: !11772, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2612, retainedNodes: !11830)
!11830 = !{!11827}
!11831 = !DILocation(line: 342, column: 37, scope: !11828, inlinedAt: !11832)
!11832 = !DILocation(line: 455, column: 41, scope: !11821, inlinedAt: !11826)
!11833 = !DILocalVariable(name: "ptr", scope: !11834, file: !7756, line: 342, type: !448, align: 8)
!11834 = !DILexicalBlockFile(scope: !11835, file: !7756, discriminator: 0)
!11835 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11836)
!11836 = !{!11833}
!11837 = !DILocation(line: 342, column: 37, scope: !11834, inlinedAt: !11838)
!11838 = !DILocation(line: 455, column: 18, scope: !11821, inlinedAt: !11826)
!11839 = !DILocalVariable(name: "self", scope: !11840, file: !7756, line: 342, type: !1226, align: 8)
!11840 = !DILexicalBlockFile(scope: !11841, file: !7756, discriminator: 0)
!11841 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11842)
!11842 = !{!11839}
!11843 = !DILocation(line: 342, column: 26, scope: !11840, inlinedAt: !11844)
!11844 = !DILocation(line: 773, column: 41, scope: !11729, inlinedAt: !11732)
!11845 = !DILocalVariable(name: "self", scope: !11846, file: !7756, line: 342, type: !339, align: 8)
!11846 = !DILexicalBlockFile(scope: !11847, file: !7756, discriminator: 0)
!11847 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11848)
!11848 = !{!11845}
!11849 = !DILocation(line: 342, column: 26, scope: !11846, inlinedAt: !11850)
!11850 = !DILocation(line: 104, column: 9, scope: !11841, inlinedAt: !11844)
!11851 = !DILocalVariable(name: "ptr", scope: !11852, file: !7756, line: 342, type: !448, align: 8)
!11852 = !DILexicalBlockFile(scope: !11853, file: !7756, discriminator: 0)
!11853 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11854)
!11854 = !{!11851}
!11855 = !DILocation(line: 342, column: 26, scope: !11852, inlinedAt: !11856)
!11856 = !DILocation(line: 773, column: 18, scope: !11729, inlinedAt: !11732)
!11857 = !DILocation(line: 342, column: 50, scope: !11722)
!11858 = !DILocation(line: 342, column: 9, scope: !11722)
!11859 = !DILocation(line: 344, column: 1, scope: !11699)
!11860 = !DILocation(line: 334, column: 1, scope: !11699)
!11861 = !DILocation(line: 344, column: 2, scope: !11699)
!11862 = distinct !DISubprogram(name: "box_free<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17ha18ccfeeb56ca191E", scope: !1235, file: !7756, line: 334, type: !11863, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11886, retainedNodes: !11877)
!11863 = !DISubroutineType(types: !11864)
!11864 = !{null, !11865, !1234}
!11865 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", scope: !1227, file: !2, size: 128, align: 64, elements: !11866, templateParams: !3637, identifier: "c9f3c6a3e053c59fd46d24dba6dc197b")
!11866 = !{!11867, !11875}
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11865, file: !2, baseType: !11868, size: 128, align: 64)
!11868 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", scope: !259, file: !2, size: 128, align: 64, elements: !11869, templateParams: !3637, identifier: "ce920a5ee069541ad2a03cc06b7b12ae")
!11869 = !{!11870}
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11868, file: !2, baseType: !11871, size: 128, align: 64)
!11871 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !11872, templateParams: !23, identifier: "677f193e962d5bc7a5ca25b764501cd0")
!11872 = !{!11873, !11874}
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11871, file: !2, baseType: !2638, size: 64, align: 64)
!11874 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11871, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!11875 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11865, file: !2, baseType: !11876, align: 8)
!11876 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !3637, identifier: "e43e57c4361bc1c25280931a7c5f88aa")
!11877 = !{!11878, !11879, !11880, !11882, !11884}
!11878 = !DILocalVariable(name: "ptr", arg: 1, scope: !11862, file: !7756, line: 335, type: !11865)
!11879 = !DILocalVariable(name: "alloc", arg: 2, scope: !11862, file: !7756, line: 336, type: !1234)
!11880 = !DILocalVariable(name: "size", scope: !11881, file: !7756, line: 339, type: !9, align: 8)
!11881 = distinct !DILexicalBlock(scope: !11862, file: !7756, line: 339, column: 9)
!11882 = !DILocalVariable(name: "align", scope: !11883, file: !7756, line: 340, type: !9, align: 8)
!11883 = distinct !DILexicalBlock(scope: !11881, file: !7756, line: 340, column: 9)
!11884 = !DILocalVariable(name: "layout", scope: !11885, file: !7756, line: 341, type: !1622, align: 8)
!11885 = distinct !DILexicalBlock(scope: !11883, file: !7756, line: 341, column: 9)
!11886 = !{!3638, !1237}
!11887 = !DILocation(line: 335, column: 5, scope: !11862)
!11888 = !DILocation(line: 336, column: 5, scope: !11862)
!11889 = !DILocation(line: 341, column: 13, scope: !11885)
!11890 = !DILocalVariable(name: "unique", scope: !11891, file: !7756, line: 342, type: !1226, align: 8)
!11891 = !DILexicalBlockFile(scope: !11892, file: !7756, discriminator: 0)
!11892 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11893)
!11893 = !{!11890}
!11894 = !DILocation(line: 342, column: 26, scope: !11891, inlinedAt: !11895)
!11895 = !DILocation(line: 342, column: 26, scope: !11885)
!11896 = !DILocalVariable(name: "pointer", scope: !11897, file: !7756, line: 342, type: !339, align: 8)
!11897 = !DILexicalBlockFile(scope: !11898, file: !7756, discriminator: 0)
!11898 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11899)
!11899 = !{!11896}
!11900 = !DILocation(line: 342, column: 37, scope: !11897, inlinedAt: !11901)
!11901 = !DILocation(line: 137, column: 9, scope: !11902, inlinedAt: !11909)
!11902 = distinct !DISubprogram(name: "cast<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h3228c9fab62ee097E", scope: !11865, file: !1586, line: 136, type: !11903, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11908, retainedNodes: !11905)
!11903 = !DISubroutineType(types: !11904)
!11904 = !{!1226, !11865}
!11905 = !{!11906}
!11906 = !DILocalVariable(name: "self", scope: !11907, file: !7756, line: 342, type: !11865, align: 8)
!11907 = !DILexicalBlockFile(scope: !11902, file: !7756, discriminator: 0)
!11908 = !{!3638, !1950}
!11909 = !DILocation(line: 342, column: 37, scope: !11885)
!11910 = !DILocation(line: 339, column: 32, scope: !11862)
!11911 = !DILocalVariable(name: "self", scope: !11912, file: !7756, line: 339, type: !11920, align: 8)
!11912 = !DILexicalBlockFile(scope: !11913, file: !7756, discriminator: 0)
!11913 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h549eb8d876c51510E", scope: !11865, file: !1586, line: 114, type: !11914, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11921)
!11914 = !DISubroutineType(types: !11915)
!11915 = !{!11916, !11920}
!11916 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !11917, templateParams: !23, identifier: "c26b38a52cbc93ef7a2e358a40b8eb75")
!11917 = !{!11918, !11919}
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11916, file: !2, baseType: !2638, size: 64, align: 64)
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11916, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!11920 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", baseType: !11865, size: 64, align: 64, dwarfAddressSpace: 0)
!11921 = !{!11911}
!11922 = !DILocation(line: 339, column: 32, scope: !11912, inlinedAt: !11910)
!11923 = !DILocalVariable(name: "self", scope: !11924, file: !7756, line: 339, type: !11928, align: 8)
!11924 = !DILexicalBlockFile(scope: !11925, file: !7756, discriminator: 0)
!11925 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf4412b306091d159E", scope: !11868, file: !445, line: 378, type: !11926, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11929)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{!11916, !11928}
!11928 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", baseType: !11868, size: 64, align: 64, dwarfAddressSpace: 0)
!11929 = !{!11923}
!11930 = !DILocation(line: 339, column: 32, scope: !11924, inlinedAt: !11931)
!11931 = !DILocation(line: 117, column: 18, scope: !11913, inlinedAt: !11910)
!11932 = !DILocalVariable(name: "self", scope: !11933, file: !7756, line: 339, type: !11868, align: 8)
!11933 = !DILexicalBlockFile(scope: !11934, file: !7756, discriminator: 0)
!11934 = distinct !DISubprogram(name: "as_ptr<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd2878fde00390b86E", scope: !11868, file: !445, line: 330, type: !11935, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11937)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!3631, !11868}
!11937 = !{!11932}
!11938 = !DILocation(line: 339, column: 32, scope: !11933, inlinedAt: !11939)
!11939 = !DILocation(line: 381, column: 20, scope: !11925, inlinedAt: !11931)
!11940 = !DILocation(line: 339, column: 20, scope: !11862)
!11941 = !DILocation(line: 339, column: 13, scope: !11881)
!11942 = !DILocation(line: 340, column: 38, scope: !11881)
!11943 = !DILocalVariable(name: "self", scope: !11944, file: !7756, line: 340, type: !11920, align: 8)
!11944 = !DILexicalBlockFile(scope: !11945, file: !7756, discriminator: 0)
!11945 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h549eb8d876c51510E", scope: !11865, file: !1586, line: 114, type: !11914, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11946)
!11946 = !{!11943}
!11947 = !DILocation(line: 340, column: 38, scope: !11944, inlinedAt: !11942)
!11948 = !DILocalVariable(name: "self", scope: !11949, file: !7756, line: 340, type: !11928, align: 8)
!11949 = !DILexicalBlockFile(scope: !11950, file: !7756, discriminator: 0)
!11950 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf4412b306091d159E", scope: !11868, file: !445, line: 378, type: !11926, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11951)
!11951 = !{!11948}
!11952 = !DILocation(line: 340, column: 38, scope: !11949, inlinedAt: !11953)
!11953 = !DILocation(line: 117, column: 18, scope: !11945, inlinedAt: !11942)
!11954 = !DILocalVariable(name: "self", scope: !11955, file: !7756, line: 340, type: !11868, align: 8)
!11955 = !DILexicalBlockFile(scope: !11956, file: !7756, discriminator: 0)
!11956 = distinct !DISubprogram(name: "as_ptr<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd2878fde00390b86E", scope: !11868, file: !445, line: 330, type: !11935, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11957)
!11957 = !{!11954}
!11958 = !DILocation(line: 340, column: 38, scope: !11955, inlinedAt: !11959)
!11959 = !DILocation(line: 381, column: 20, scope: !11950, inlinedAt: !11953)
!11960 = !DILocation(line: 340, column: 21, scope: !11881)
!11961 = !DILocation(line: 340, column: 13, scope: !11883)
!11962 = !DILocation(line: 341, column: 56, scope: !11883)
!11963 = !DILocalVariable(name: "size", scope: !11964, file: !7756, line: 341, type: !9, align: 8)
!11964 = !DILexicalBlockFile(scope: !11965, file: !7756, discriminator: 0)
!11965 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11966)
!11966 = !{!11963, !11967}
!11967 = !DILocalVariable(name: "align", scope: !11964, file: !7756, line: 341, type: !9, align: 8)
!11968 = !DILocation(line: 341, column: 22, scope: !11964, inlinedAt: !11969)
!11969 = !DILocation(line: 341, column: 22, scope: !11883)
!11970 = !DILocation(line: 341, column: 62, scope: !11883)
!11971 = !DILocalVariable(name: "align", scope: !11972, file: !7756, line: 341, type: !9, align: 8)
!11972 = !DILexicalBlockFile(scope: !11973, file: !7756, discriminator: 0)
!11973 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !11974)
!11974 = !{!11971}
!11975 = !DILocation(line: 341, column: 22, scope: !11972, inlinedAt: !11976)
!11976 = !DILocation(line: 100, column: 40, scope: !11965, inlinedAt: !11969)
!11977 = !DILocation(line: 342, column: 37, scope: !11907, inlinedAt: !11909)
!11978 = !DILocalVariable(name: "self", scope: !11979, file: !7756, line: 342, type: !11868, align: 8)
!11979 = !DILexicalBlockFile(scope: !11980, file: !7756, discriminator: 0)
!11980 = distinct !DISubprogram(name: "cast<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hdf2d411c7339537cE", scope: !11868, file: !445, line: 453, type: !11981, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11908, retainedNodes: !11983)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!339, !11868}
!11983 = !{!11978}
!11984 = !DILocation(line: 342, column: 37, scope: !11979, inlinedAt: !11985)
!11985 = !DILocation(line: 137, column: 22, scope: !11902, inlinedAt: !11909)
!11986 = !DILocalVariable(name: "self", scope: !11987, file: !7756, line: 342, type: !11868, align: 8)
!11987 = !DILexicalBlockFile(scope: !11988, file: !7756, discriminator: 0)
!11988 = distinct !DISubprogram(name: "as_ptr<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd2878fde00390b86E", scope: !11868, file: !445, line: 330, type: !11935, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3637, retainedNodes: !11989)
!11989 = !{!11986}
!11990 = !DILocation(line: 342, column: 37, scope: !11987, inlinedAt: !11991)
!11991 = !DILocation(line: 455, column: 41, scope: !11980, inlinedAt: !11985)
!11992 = !DILocalVariable(name: "ptr", scope: !11993, file: !7756, line: 342, type: !448, align: 8)
!11993 = !DILexicalBlockFile(scope: !11994, file: !7756, discriminator: 0)
!11994 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !11995)
!11995 = !{!11992}
!11996 = !DILocation(line: 342, column: 37, scope: !11993, inlinedAt: !11997)
!11997 = !DILocation(line: 455, column: 18, scope: !11980, inlinedAt: !11985)
!11998 = !DILocalVariable(name: "self", scope: !11999, file: !7756, line: 342, type: !1226, align: 8)
!11999 = !DILexicalBlockFile(scope: !12000, file: !7756, discriminator: 0)
!12000 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12001)
!12001 = !{!11998}
!12002 = !DILocation(line: 342, column: 26, scope: !11999, inlinedAt: !12003)
!12003 = !DILocation(line: 773, column: 41, scope: !11892, inlinedAt: !11895)
!12004 = !DILocalVariable(name: "self", scope: !12005, file: !7756, line: 342, type: !339, align: 8)
!12005 = !DILexicalBlockFile(scope: !12006, file: !7756, discriminator: 0)
!12006 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12007)
!12007 = !{!12004}
!12008 = !DILocation(line: 342, column: 26, scope: !12005, inlinedAt: !12009)
!12009 = !DILocation(line: 104, column: 9, scope: !12000, inlinedAt: !12003)
!12010 = !DILocalVariable(name: "ptr", scope: !12011, file: !7756, line: 342, type: !448, align: 8)
!12011 = !DILexicalBlockFile(scope: !12012, file: !7756, discriminator: 0)
!12012 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12013)
!12013 = !{!12010}
!12014 = !DILocation(line: 342, column: 26, scope: !12011, inlinedAt: !12015)
!12015 = !DILocation(line: 773, column: 18, scope: !11892, inlinedAt: !11895)
!12016 = !DILocation(line: 342, column: 50, scope: !11885)
!12017 = !DILocation(line: 342, column: 9, scope: !11885)
!12018 = !DILocation(line: 344, column: 1, scope: !11862)
!12019 = !DILocation(line: 334, column: 1, scope: !11862)
!12020 = !DILocation(line: 344, column: 2, scope: !11862)
!12021 = distinct !DISubprogram(name: "box_free<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hb1917f1427afb187E", scope: !1235, file: !7756, line: 334, type: !12022, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12045, retainedNodes: !12036)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{null, !12024, !1234}
!12024 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !1227, file: !2, size: 128, align: 64, elements: !12025, templateParams: !4169, identifier: "787658fccb22b40a88ea7f6ca0ba7e1")
!12025 = !{!12026, !12034}
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12024, file: !2, baseType: !12027, size: 128, align: 64)
!12027 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !259, file: !2, size: 128, align: 64, elements: !12028, templateParams: !4169, identifier: "9280e0c2b313bb24720bb6ad4cb552d5")
!12028 = !{!12029}
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12027, file: !2, baseType: !12030, size: 128, align: 64)
!12030 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !12031, templateParams: !23, identifier: "e20f5c4735b899e0790b625bc1c644d9")
!12031 = !{!12032, !12033}
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12030, file: !2, baseType: !1787, size: 64, align: 64)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !12030, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !12024, file: !2, baseType: !12035, align: 8)
!12035 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !4169, identifier: "d7d960abfa98004047d155a0692d103d")
!12036 = !{!12037, !12038, !12039, !12041, !12043}
!12037 = !DILocalVariable(name: "ptr", arg: 1, scope: !12021, file: !7756, line: 335, type: !12024)
!12038 = !DILocalVariable(name: "alloc", arg: 2, scope: !12021, file: !7756, line: 336, type: !1234)
!12039 = !DILocalVariable(name: "size", scope: !12040, file: !7756, line: 339, type: !9, align: 8)
!12040 = distinct !DILexicalBlock(scope: !12021, file: !7756, line: 339, column: 9)
!12041 = !DILocalVariable(name: "align", scope: !12042, file: !7756, line: 340, type: !9, align: 8)
!12042 = distinct !DILexicalBlock(scope: !12040, file: !7756, line: 340, column: 9)
!12043 = !DILocalVariable(name: "layout", scope: !12044, file: !7756, line: 341, type: !1622, align: 8)
!12044 = distinct !DILexicalBlock(scope: !12042, file: !7756, line: 341, column: 9)
!12045 = !{!4170, !1237}
!12046 = !DILocation(line: 335, column: 5, scope: !12021)
!12047 = !DILocation(line: 336, column: 5, scope: !12021)
!12048 = !DILocation(line: 341, column: 13, scope: !12044)
!12049 = !DILocalVariable(name: "unique", scope: !12050, file: !7756, line: 342, type: !1226, align: 8)
!12050 = !DILexicalBlockFile(scope: !12051, file: !7756, discriminator: 0)
!12051 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12052)
!12052 = !{!12049}
!12053 = !DILocation(line: 342, column: 26, scope: !12050, inlinedAt: !12054)
!12054 = !DILocation(line: 342, column: 26, scope: !12044)
!12055 = !DILocalVariable(name: "pointer", scope: !12056, file: !7756, line: 342, type: !339, align: 8)
!12056 = !DILexicalBlockFile(scope: !12057, file: !7756, discriminator: 0)
!12057 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12058)
!12058 = !{!12055}
!12059 = !DILocation(line: 342, column: 37, scope: !12056, inlinedAt: !12060)
!12060 = !DILocation(line: 137, column: 9, scope: !12061, inlinedAt: !12068)
!12061 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h79c28cd858253ef0E", scope: !12024, file: !1586, line: 136, type: !12062, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12067, retainedNodes: !12064)
!12062 = !DISubroutineType(types: !12063)
!12063 = !{!1226, !12024}
!12064 = !{!12065}
!12065 = !DILocalVariable(name: "self", scope: !12066, file: !7756, line: 342, type: !12024, align: 8)
!12066 = !DILexicalBlockFile(scope: !12061, file: !7756, discriminator: 0)
!12067 = !{!4170, !1950}
!12068 = !DILocation(line: 342, column: 37, scope: !12044)
!12069 = !DILocation(line: 339, column: 32, scope: !12021)
!12070 = !DILocalVariable(name: "self", scope: !12071, file: !7756, line: 339, type: !12079, align: 8)
!12071 = !DILexicalBlockFile(scope: !12072, file: !7756, discriminator: 0)
!12072 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h316b9cd7929e2f02E", scope: !12024, file: !1586, line: 114, type: !12073, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12080)
!12073 = !DISubroutineType(types: !12074)
!12074 = !{!12075, !12079}
!12075 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !12076, templateParams: !23, identifier: "e650aecdb423b1f524d5c6b29340ff8d")
!12076 = !{!12077, !12078}
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12075, file: !2, baseType: !1787, size: 64, align: 64)
!12078 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !12075, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!12079 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !12024, size: 64, align: 64, dwarfAddressSpace: 0)
!12080 = !{!12070}
!12081 = !DILocation(line: 339, column: 32, scope: !12071, inlinedAt: !12069)
!12082 = !DILocalVariable(name: "self", scope: !12083, file: !7756, line: 339, type: !12087, align: 8)
!12083 = !DILexicalBlockFile(scope: !12084, file: !7756, discriminator: 0)
!12084 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h8dafa5c2aee87f19E", scope: !12027, file: !445, line: 378, type: !12085, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12088)
!12085 = !DISubroutineType(types: !12086)
!12086 = !{!12075, !12087}
!12087 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !12027, size: 64, align: 64, dwarfAddressSpace: 0)
!12088 = !{!12082}
!12089 = !DILocation(line: 339, column: 32, scope: !12083, inlinedAt: !12090)
!12090 = !DILocation(line: 117, column: 18, scope: !12072, inlinedAt: !12069)
!12091 = !DILocalVariable(name: "self", scope: !12092, file: !7756, line: 339, type: !12027, align: 8)
!12092 = !DILexicalBlockFile(scope: !12093, file: !7756, discriminator: 0)
!12093 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92b32fd8547aa5edE", scope: !12027, file: !445, line: 330, type: !12094, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12096)
!12094 = !DISubroutineType(types: !12095)
!12095 = !{!4163, !12027}
!12096 = !{!12091}
!12097 = !DILocation(line: 339, column: 32, scope: !12092, inlinedAt: !12098)
!12098 = !DILocation(line: 381, column: 20, scope: !12084, inlinedAt: !12090)
!12099 = !DILocation(line: 339, column: 20, scope: !12021)
!12100 = !DILocation(line: 339, column: 13, scope: !12040)
!12101 = !DILocation(line: 340, column: 38, scope: !12040)
!12102 = !DILocalVariable(name: "self", scope: !12103, file: !7756, line: 340, type: !12079, align: 8)
!12103 = !DILexicalBlockFile(scope: !12104, file: !7756, discriminator: 0)
!12104 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h316b9cd7929e2f02E", scope: !12024, file: !1586, line: 114, type: !12073, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12105)
!12105 = !{!12102}
!12106 = !DILocation(line: 340, column: 38, scope: !12103, inlinedAt: !12101)
!12107 = !DILocalVariable(name: "self", scope: !12108, file: !7756, line: 340, type: !12087, align: 8)
!12108 = !DILexicalBlockFile(scope: !12109, file: !7756, discriminator: 0)
!12109 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h8dafa5c2aee87f19E", scope: !12027, file: !445, line: 378, type: !12085, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12110)
!12110 = !{!12107}
!12111 = !DILocation(line: 340, column: 38, scope: !12108, inlinedAt: !12112)
!12112 = !DILocation(line: 117, column: 18, scope: !12104, inlinedAt: !12101)
!12113 = !DILocalVariable(name: "self", scope: !12114, file: !7756, line: 340, type: !12027, align: 8)
!12114 = !DILexicalBlockFile(scope: !12115, file: !7756, discriminator: 0)
!12115 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92b32fd8547aa5edE", scope: !12027, file: !445, line: 330, type: !12094, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12116)
!12116 = !{!12113}
!12117 = !DILocation(line: 340, column: 38, scope: !12114, inlinedAt: !12118)
!12118 = !DILocation(line: 381, column: 20, scope: !12109, inlinedAt: !12112)
!12119 = !DILocation(line: 340, column: 21, scope: !12040)
!12120 = !DILocation(line: 340, column: 13, scope: !12042)
!12121 = !DILocation(line: 341, column: 56, scope: !12042)
!12122 = !DILocalVariable(name: "size", scope: !12123, file: !7756, line: 341, type: !9, align: 8)
!12123 = !DILexicalBlockFile(scope: !12124, file: !7756, discriminator: 0)
!12124 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12125)
!12125 = !{!12122, !12126}
!12126 = !DILocalVariable(name: "align", scope: !12123, file: !7756, line: 341, type: !9, align: 8)
!12127 = !DILocation(line: 341, column: 22, scope: !12123, inlinedAt: !12128)
!12128 = !DILocation(line: 341, column: 22, scope: !12042)
!12129 = !DILocation(line: 341, column: 62, scope: !12042)
!12130 = !DILocalVariable(name: "align", scope: !12131, file: !7756, line: 341, type: !9, align: 8)
!12131 = !DILexicalBlockFile(scope: !12132, file: !7756, discriminator: 0)
!12132 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12133)
!12133 = !{!12130}
!12134 = !DILocation(line: 341, column: 22, scope: !12131, inlinedAt: !12135)
!12135 = !DILocation(line: 100, column: 40, scope: !12124, inlinedAt: !12128)
!12136 = !DILocation(line: 342, column: 37, scope: !12066, inlinedAt: !12068)
!12137 = !DILocalVariable(name: "self", scope: !12138, file: !7756, line: 342, type: !12027, align: 8)
!12138 = !DILexicalBlockFile(scope: !12139, file: !7756, discriminator: 0)
!12139 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2c2e219984baac16E", scope: !12027, file: !445, line: 453, type: !12140, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12067, retainedNodes: !12142)
!12140 = !DISubroutineType(types: !12141)
!12141 = !{!339, !12027}
!12142 = !{!12137}
!12143 = !DILocation(line: 342, column: 37, scope: !12138, inlinedAt: !12144)
!12144 = !DILocation(line: 137, column: 22, scope: !12061, inlinedAt: !12068)
!12145 = !DILocalVariable(name: "self", scope: !12146, file: !7756, line: 342, type: !12027, align: 8)
!12146 = !DILexicalBlockFile(scope: !12147, file: !7756, discriminator: 0)
!12147 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92b32fd8547aa5edE", scope: !12027, file: !445, line: 330, type: !12094, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4169, retainedNodes: !12148)
!12148 = !{!12145}
!12149 = !DILocation(line: 342, column: 37, scope: !12146, inlinedAt: !12150)
!12150 = !DILocation(line: 455, column: 41, scope: !12139, inlinedAt: !12144)
!12151 = !DILocalVariable(name: "ptr", scope: !12152, file: !7756, line: 342, type: !448, align: 8)
!12152 = !DILexicalBlockFile(scope: !12153, file: !7756, discriminator: 0)
!12153 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12154)
!12154 = !{!12151}
!12155 = !DILocation(line: 342, column: 37, scope: !12152, inlinedAt: !12156)
!12156 = !DILocation(line: 455, column: 18, scope: !12139, inlinedAt: !12144)
!12157 = !DILocalVariable(name: "self", scope: !12158, file: !7756, line: 342, type: !1226, align: 8)
!12158 = !DILexicalBlockFile(scope: !12159, file: !7756, discriminator: 0)
!12159 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12160)
!12160 = !{!12157}
!12161 = !DILocation(line: 342, column: 26, scope: !12158, inlinedAt: !12162)
!12162 = !DILocation(line: 773, column: 41, scope: !12051, inlinedAt: !12054)
!12163 = !DILocalVariable(name: "self", scope: !12164, file: !7756, line: 342, type: !339, align: 8)
!12164 = !DILexicalBlockFile(scope: !12165, file: !7756, discriminator: 0)
!12165 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12166)
!12166 = !{!12163}
!12167 = !DILocation(line: 342, column: 26, scope: !12164, inlinedAt: !12168)
!12168 = !DILocation(line: 104, column: 9, scope: !12159, inlinedAt: !12162)
!12169 = !DILocalVariable(name: "ptr", scope: !12170, file: !7756, line: 342, type: !448, align: 8)
!12170 = !DILexicalBlockFile(scope: !12171, file: !7756, discriminator: 0)
!12171 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12172)
!12172 = !{!12169}
!12173 = !DILocation(line: 342, column: 26, scope: !12170, inlinedAt: !12174)
!12174 = !DILocation(line: 773, column: 18, scope: !12051, inlinedAt: !12054)
!12175 = !DILocation(line: 342, column: 50, scope: !12044)
!12176 = !DILocation(line: 342, column: 9, scope: !12044)
!12177 = !DILocation(line: 344, column: 1, scope: !12021)
!12178 = !DILocation(line: 334, column: 1, scope: !12021)
!12179 = !DILocation(line: 344, column: 2, scope: !12021)
!12180 = distinct !DISubprogram(name: "box_free<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hde9034a7bbb7537bE", scope: !1235, file: !7756, line: 334, type: !12181, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !12188)
!12181 = !DISubroutineType(types: !12182)
!12182 = !{null, !12183, !1234}
!12183 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !1227, file: !2, size: 128, align: 64, elements: !12184, templateParams: !343, identifier: "633702d0972b7ad26ca4d40502994fb")
!12184 = !{!12185, !12186}
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12183, file: !2, baseType: !7463, size: 128, align: 64)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !12183, file: !2, baseType: !12187, align: 8)
!12187 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !267, file: !2, align: 8, elements: !23, templateParams: !343, identifier: "438f2b9c9f9716864a2f446cf282a394")
!12188 = !{!12189, !12190, !12191, !12193, !12195}
!12189 = !DILocalVariable(name: "ptr", arg: 1, scope: !12180, file: !7756, line: 335, type: !12183)
!12190 = !DILocalVariable(name: "alloc", arg: 2, scope: !12180, file: !7756, line: 336, type: !1234)
!12191 = !DILocalVariable(name: "size", scope: !12192, file: !7756, line: 339, type: !9, align: 8)
!12192 = distinct !DILexicalBlock(scope: !12180, file: !7756, line: 339, column: 9)
!12193 = !DILocalVariable(name: "align", scope: !12194, file: !7756, line: 340, type: !9, align: 8)
!12194 = distinct !DILexicalBlock(scope: !12192, file: !7756, line: 340, column: 9)
!12195 = !DILocalVariable(name: "layout", scope: !12196, file: !7756, line: 341, type: !1622, align: 8)
!12196 = distinct !DILexicalBlock(scope: !12194, file: !7756, line: 341, column: 9)
!12197 = !DILocation(line: 335, column: 5, scope: !12180)
!12198 = !DILocation(line: 336, column: 5, scope: !12180)
!12199 = !DILocation(line: 341, column: 13, scope: !12196)
!12200 = !DILocalVariable(name: "unique", scope: !12201, file: !7756, line: 342, type: !1226, align: 8)
!12201 = !DILexicalBlockFile(scope: !12202, file: !7756, discriminator: 0)
!12202 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h418201c999065018E", scope: !1576, file: !445, line: 770, type: !1577, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12203)
!12203 = !{!12200}
!12204 = !DILocation(line: 342, column: 26, scope: !12201, inlinedAt: !12205)
!12205 = !DILocation(line: 342, column: 26, scope: !12196)
!12206 = !DILocalVariable(name: "pointer", scope: !12207, file: !7756, line: 342, type: !339, align: 8)
!12207 = !DILexicalBlockFile(scope: !12208, file: !7756, discriminator: 0)
!12208 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12209)
!12209 = !{!12206}
!12210 = !DILocation(line: 342, column: 37, scope: !12207, inlinedAt: !12211)
!12211 = !DILocation(line: 137, column: 9, scope: !12212, inlinedAt: !12219)
!12212 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h383a647a97f362b1E", scope: !12183, file: !1586, line: 136, type: !12213, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12218, retainedNodes: !12215)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{!1226, !12183}
!12215 = !{!12216}
!12216 = !DILocalVariable(name: "self", scope: !12217, file: !7756, line: 342, type: !12183, align: 8)
!12217 = !DILexicalBlockFile(scope: !12212, file: !7756, discriminator: 0)
!12218 = !{!344, !1950}
!12219 = !DILocation(line: 342, column: 37, scope: !12196)
!12220 = !DILocation(line: 339, column: 32, scope: !12180)
!12221 = !DILocalVariable(name: "self", scope: !12222, file: !7756, line: 339, type: !12226, align: 8)
!12222 = !DILexicalBlockFile(scope: !12223, file: !7756, discriminator: 0)
!12223 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hccc53b492340fc13E", scope: !12183, file: !1586, line: 114, type: !12224, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12227)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{!892, !12226}
!12226 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u8]>", baseType: !12183, size: 64, align: 64, dwarfAddressSpace: 0)
!12227 = !{!12221}
!12228 = !DILocation(line: 339, column: 32, scope: !12222, inlinedAt: !12220)
!12229 = !DILocalVariable(name: "self", scope: !12230, file: !7756, line: 339, type: !12234, align: 8)
!12230 = !DILexicalBlockFile(scope: !12231, file: !7756, discriminator: 0)
!12231 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h701e309f8c176a57E", scope: !7463, file: !445, line: 378, type: !12232, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12235)
!12232 = !DISubroutineType(types: !12233)
!12233 = !{!892, !12234}
!12234 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8]>", baseType: !7463, size: 64, align: 64, dwarfAddressSpace: 0)
!12235 = !{!12229}
!12236 = !DILocation(line: 339, column: 32, scope: !12230, inlinedAt: !12237)
!12237 = !DILocation(line: 117, column: 18, scope: !12223, inlinedAt: !12220)
!12238 = !DILocalVariable(name: "self", scope: !12239, file: !7756, line: 339, type: !7463, align: 8)
!12239 = !DILexicalBlockFile(scope: !12240, file: !7756, discriminator: 0)
!12240 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12241)
!12241 = !{!12238}
!12242 = !DILocation(line: 339, column: 32, scope: !12239, inlinedAt: !12243)
!12243 = !DILocation(line: 381, column: 20, scope: !12231, inlinedAt: !12237)
!12244 = !DILocation(line: 339, column: 20, scope: !12180)
!12245 = !DILocation(line: 339, column: 13, scope: !12192)
!12246 = !DILocation(line: 340, column: 38, scope: !12192)
!12247 = !DILocalVariable(name: "self", scope: !12248, file: !7756, line: 340, type: !12226, align: 8)
!12248 = !DILexicalBlockFile(scope: !12249, file: !7756, discriminator: 0)
!12249 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hccc53b492340fc13E", scope: !12183, file: !1586, line: 114, type: !12224, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12250)
!12250 = !{!12247}
!12251 = !DILocation(line: 340, column: 38, scope: !12248, inlinedAt: !12246)
!12252 = !DILocalVariable(name: "self", scope: !12253, file: !7756, line: 340, type: !12234, align: 8)
!12253 = !DILexicalBlockFile(scope: !12254, file: !7756, discriminator: 0)
!12254 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h701e309f8c176a57E", scope: !7463, file: !445, line: 378, type: !12232, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12255)
!12255 = !{!12252}
!12256 = !DILocation(line: 340, column: 38, scope: !12253, inlinedAt: !12257)
!12257 = !DILocation(line: 117, column: 18, scope: !12249, inlinedAt: !12246)
!12258 = !DILocalVariable(name: "self", scope: !12259, file: !7756, line: 340, type: !7463, align: 8)
!12259 = !DILexicalBlockFile(scope: !12260, file: !7756, discriminator: 0)
!12260 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12261)
!12261 = !{!12258}
!12262 = !DILocation(line: 340, column: 38, scope: !12259, inlinedAt: !12263)
!12263 = !DILocation(line: 381, column: 20, scope: !12254, inlinedAt: !12257)
!12264 = !DILocation(line: 340, column: 21, scope: !12192)
!12265 = !DILocation(line: 340, column: 13, scope: !12194)
!12266 = !DILocation(line: 341, column: 56, scope: !12194)
!12267 = !DILocalVariable(name: "size", scope: !12268, file: !7756, line: 341, type: !9, align: 8)
!12268 = !DILexicalBlockFile(scope: !12269, file: !7756, discriminator: 0)
!12269 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hac11c2d4fba6dad4E", scope: !1622, file: !5605, line: 98, type: !5734, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12270)
!12270 = !{!12267, !12271}
!12271 = !DILocalVariable(name: "align", scope: !12268, file: !7756, line: 341, type: !9, align: 8)
!12272 = !DILocation(line: 341, column: 22, scope: !12268, inlinedAt: !12273)
!12273 = !DILocation(line: 341, column: 22, scope: !12194)
!12274 = !DILocation(line: 341, column: 62, scope: !12194)
!12275 = !DILocalVariable(name: "align", scope: !12276, file: !7756, line: 341, type: !9, align: 8)
!12276 = !DILexicalBlockFile(scope: !12277, file: !7756, discriminator: 0)
!12277 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h88ad95089008f101E", scope: !1628, file: !5747, line: 28, type: !5748, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12278)
!12278 = !{!12275}
!12279 = !DILocation(line: 341, column: 22, scope: !12276, inlinedAt: !12280)
!12280 = !DILocation(line: 100, column: 40, scope: !12269, inlinedAt: !12273)
!12281 = !DILocation(line: 342, column: 37, scope: !12217, inlinedAt: !12219)
!12282 = !DILocalVariable(name: "self", scope: !12283, file: !7756, line: 342, type: !7463, align: 8)
!12283 = !DILexicalBlockFile(scope: !12284, file: !7756, discriminator: 0)
!12284 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h43e1222c2a8f698bE", scope: !7463, file: !445, line: 453, type: !10610, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12218, retainedNodes: !12285)
!12285 = !{!12282}
!12286 = !DILocation(line: 342, column: 37, scope: !12283, inlinedAt: !12287)
!12287 = !DILocation(line: 137, column: 22, scope: !12212, inlinedAt: !12219)
!12288 = !DILocalVariable(name: "self", scope: !12289, file: !7756, line: 342, type: !7463, align: 8)
!12289 = !DILexicalBlockFile(scope: !12290, file: !7756, discriminator: 0)
!12290 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12291)
!12291 = !{!12288}
!12292 = !DILocation(line: 342, column: 37, scope: !12289, inlinedAt: !12293)
!12293 = !DILocation(line: 455, column: 41, scope: !12284, inlinedAt: !12287)
!12294 = !DILocalVariable(name: "ptr", scope: !12295, file: !7756, line: 342, type: !448, align: 8)
!12295 = !DILexicalBlockFile(scope: !12296, file: !7756, discriminator: 0)
!12296 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12297)
!12297 = !{!12294}
!12298 = !DILocation(line: 342, column: 37, scope: !12295, inlinedAt: !12299)
!12299 = !DILocation(line: 455, column: 18, scope: !12284, inlinedAt: !12287)
!12300 = !DILocalVariable(name: "self", scope: !12301, file: !7756, line: 342, type: !1226, align: 8)
!12301 = !DILexicalBlockFile(scope: !12302, file: !7756, discriminator: 0)
!12302 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcc12f80d8efb640cE", scope: !1226, file: !1586, line: 103, type: !1587, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12303)
!12303 = !{!12300}
!12304 = !DILocation(line: 342, column: 26, scope: !12301, inlinedAt: !12305)
!12305 = !DILocation(line: 773, column: 41, scope: !12202, inlinedAt: !12205)
!12306 = !DILocalVariable(name: "self", scope: !12307, file: !7756, line: 342, type: !339, align: 8)
!12307 = !DILexicalBlockFile(scope: !12308, file: !7756, discriminator: 0)
!12308 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12309)
!12309 = !{!12306}
!12310 = !DILocation(line: 342, column: 26, scope: !12307, inlinedAt: !12311)
!12311 = !DILocation(line: 104, column: 9, scope: !12302, inlinedAt: !12305)
!12312 = !DILocalVariable(name: "ptr", scope: !12313, file: !7756, line: 342, type: !448, align: 8)
!12313 = !DILexicalBlockFile(scope: !12314, file: !7756, discriminator: 0)
!12314 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12315)
!12315 = !{!12312}
!12316 = !DILocation(line: 342, column: 26, scope: !12313, inlinedAt: !12317)
!12317 = !DILocation(line: 773, column: 18, scope: !12202, inlinedAt: !12205)
!12318 = !DILocation(line: 342, column: 50, scope: !12196)
!12319 = !DILocation(line: 342, column: 9, scope: !12196)
!12320 = !DILocation(line: 344, column: 1, scope: !12180)
!12321 = !DILocation(line: 334, column: 1, scope: !12180)
!12322 = !DILocation(line: 344, column: 2, scope: !12180)
!12323 = distinct !DISubprogram(name: "into_unique<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hbb3c7feb6b0894daE", scope: !12325, file: !12324, line: 1119, type: !12327, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11563, retainedNodes: !12333)
!12324 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/boxed.rs", directory: "", checksumkind: CSK_MD5, checksum: "219e910b9870be506ebf33cf9fc18e94")
!12325 = !DINamespace(name: "{impl#7}", scope: !12326)
!12326 = !DINamespace(name: "boxed", scope: !223)
!12327 = !DISubroutineType(types: !12328)
!12328 = !{!12329, !4142}
!12329 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::unique::Unique<(dyn core::any::Any + core::marker::Send)>, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !12330, templateParams: !23, identifier: "a6e0253cc94d9bda214cf3919e6cfff")
!12330 = !{!12331, !12332}
!12331 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12329, file: !2, baseType: !11542, size: 128, align: 64)
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12329, file: !2, baseType: !1234, align: 8, offset: 128)
!12333 = !{!12334, !12335}
!12334 = !DILocalVariable(name: "b", arg: 1, scope: !12323, file: !12324, line: 1119, type: !4142)
!12335 = !DILocalVariable(name: "alloc", scope: !12336, file: !12324, line: 1125, type: !1234, align: 1)
!12336 = distinct !DILexicalBlock(scope: !12323, file: !12324, line: 1125, column: 9)
!12337 = !DILocation(line: 1119, column: 30, scope: !12323)
!12338 = !DILocation(line: 1125, column: 13, scope: !12336)
!12339 = !DILocalVariable(name: "tmp", scope: !12340, file: !12324, line: 1125, type: !1435, align: 1)
!12340 = !DILexicalBlockFile(scope: !12341, file: !12324, discriminator: 0)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !682, line: 1105, column: 5)
!12342 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17hceebf0c7b107f254E", scope: !260, file: !682, line: 1097, type: !1429, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !12343)
!12343 = !{!12344, !12339}
!12344 = !DILocalVariable(name: "src", scope: !12345, file: !12324, line: 1125, type: !1431, align: 8)
!12345 = !DILexicalBlockFile(scope: !12342, file: !12324, discriminator: 0)
!12346 = !DILocation(line: 1125, column: 30, scope: !12340, inlinedAt: !12347)
!12347 = !DILocation(line: 1125, column: 30, scope: !12323)
!12348 = !DILocalVariable(name: "self", scope: !12349, file: !12324, line: 1125, type: !1435, align: 1)
!12349 = !DILexicalBlockFile(scope: !12350, file: !12324, discriminator: 0)
!12350 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h28d78f971b6a73e8E", scope: !1435, file: !1452, line: 629, type: !1453, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !12351)
!12351 = !{!12348}
!12352 = !DILocation(line: 1125, column: 30, scope: !12349, inlinedAt: !12353)
!12353 = !DILocation(line: 1114, column: 9, scope: !12341, inlinedAt: !12347)
!12354 = !DILocalVariable(name: "slot", scope: !12355, file: !12324, line: 1125, type: !1395, align: 1)
!12355 = !DILexicalBlockFile(scope: !12356, file: !12324, discriminator: 0)
!12356 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hc6b55e47bcc3b97aE", scope: !1395, file: !1418, line: 88, type: !1461, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !12357)
!12357 = !{!12354}
!12358 = !DILocation(line: 1125, column: 30, scope: !12355, inlinedAt: !12359)
!12359 = !DILocation(line: 634, column: 13, scope: !12350, inlinedAt: !12353)
!12360 = !DILocalVariable(name: "pointer", scope: !12361, file: !12324, line: 1126, type: !11545, align: 8)
!12361 = !DILexicalBlockFile(scope: !12362, file: !12324, discriminator: 0)
!12362 = distinct !DISubprogram(name: "from<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hb630e3ea828e81feE", scope: !11417, file: !1586, line: 190, type: !12363, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !12365)
!12363 = !DISubroutineType(types: !12364)
!12364 = !{!11542, !11545}
!12365 = !{!12360}
!12366 = !DILocation(line: 1126, column: 10, scope: !12361, inlinedAt: !12367)
!12367 = !DILocation(line: 180, column: 9, scope: !12368, inlinedAt: !12379)
!12368 = distinct !DISubprogram(name: "from<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h959b1e472f668b51E", scope: !12369, file: !1586, line: 179, type: !12370, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !12376)
!12369 = !DINamespace(name: "{impl#10}", scope: !1227)
!12370 = !DISubroutineType(types: !12371)
!12371 = !{!11542, !12372}
!12372 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !12373, templateParams: !23, identifier: "7e5732e1628c22c72461bc895deadc21")
!12373 = !{!12374, !12375}
!12374 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12372, file: !2, baseType: !3917, size: 64, align: 64)
!12375 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !12372, file: !2, baseType: !1790, size: 64, align: 64, offset: 64)
!12376 = !{!12377}
!12377 = !DILocalVariable(name: "reference", scope: !12378, file: !12324, line: 1126, type: !12372, align: 8)
!12378 = !DILexicalBlockFile(scope: !12368, file: !12324, discriminator: 0)
!12379 = !DILocation(line: 1126, column: 10, scope: !12336)
!12380 = !DILocation(line: 1125, column: 13, scope: !12323)
!12381 = !DILocation(line: 1125, column: 40, scope: !12323)
!12382 = !DILocation(line: 1125, column: 30, scope: !12345, inlinedAt: !12347)
!12383 = !DILocation(line: 1125, column: 30, scope: !12384, inlinedAt: !12386)
!12384 = !DILexicalBlockFile(scope: !12385, file: !12324, discriminator: 0)
!12385 = distinct !DISubprogram(name: "uninit<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h3f74ad3fc1be4053E", scope: !1435, file: !1452, line: 320, type: !21, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !23)
!12386 = !DILocation(line: 1105, column: 19, scope: !12342, inlinedAt: !12347)
!12387 = !DILocalVariable(name: "self", scope: !12388, file: !12324, line: 1125, type: !1536, align: 8)
!12388 = !DILexicalBlockFile(scope: !12389, file: !12324, discriminator: 0)
!12389 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9af952779b6888efE", scope: !1435, file: !1452, line: 574, type: !1533, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1398, retainedNodes: !12390)
!12390 = !{!12387}
!12391 = !DILocation(line: 1125, column: 30, scope: !12388, inlinedAt: !12392)
!12392 = !DILocation(line: 1113, column: 34, scope: !12341, inlinedAt: !12347)
!12393 = !DILocation(line: 1126, column: 33, scope: !12336)
!12394 = !DILocation(line: 1126, column: 23, scope: !12336)
!12395 = !DILocation(line: 1127, column: 5, scope: !12323)
!12396 = !DILocation(line: 1126, column: 10, scope: !12378, inlinedAt: !12379)
!12397 = !DILocalVariable(name: "reference", scope: !12398, file: !12324, line: 1126, type: !12372, align: 8)
!12398 = !DILexicalBlockFile(scope: !12399, file: !12324, discriminator: 0)
!12399 = distinct !DISubprogram(name: "from<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h6485737abd2c086fE", scope: !12400, file: !445, line: 784, type: !12401, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !12403)
!12400 = !DINamespace(name: "{impl#17}", scope: !259)
!12401 = !DISubroutineType(types: !12402)
!12402 = !{!11545, !12372}
!12403 = !{!12397}
!12404 = !DILocation(line: 1126, column: 10, scope: !12398, inlinedAt: !12405)
!12405 = !DILocation(line: 180, column: 20, scope: !12368, inlinedAt: !12379)
!12406 = !DILocation(line: 1126, column: 9, scope: !12336)
!12407 = !DILocation(line: 1127, column: 6, scope: !12323)
!12408 = !DILocation(line: 1119, column: 5, scope: !12323)
!12409 = distinct !DISubprogram(name: "leak<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17he4a9453c1f527859E", scope: !12325, file: !12324, line: 1179, type: !12410, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11563, retainedNodes: !12412)
!12410 = !DISubroutineType(types: !12411)
!12411 = !{!12372, !4142}
!12412 = !{!12413}
!12413 = !DILocalVariable(name: "b", arg: 1, scope: !12409, file: !12324, line: 1179, type: !4142)
!12414 = !DILocation(line: 1179, column: 27, scope: !12409)
!12415 = !DILocation(line: 1183, column: 47, scope: !12409)
!12416 = !DILocalVariable(name: "value", scope: !12417, file: !12324, line: 1183, type: !4142, align: 8)
!12417 = !DILexicalBlockFile(scope: !12418, file: !12324, discriminator: 0)
!12418 = distinct !DISubprogram(name: "new<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h5b08f9a40b36bac8E", scope: !12419, file: !1418, line: 70, type: !12422, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4148, retainedNodes: !12424)
!12419 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", scope: !804, file: !2, size: 128, align: 64, elements: !12420, templateParams: !4148, identifier: "40e631c356832974bdd1d09c26f79fcf")
!12420 = !{!12421}
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12419, file: !2, baseType: !4142, size: 128, align: 64)
!12422 = !DISubroutineType(types: !12423)
!12423 = !{!12419, !4142}
!12424 = !{!12416}
!12425 = !DILocation(line: 1183, column: 24, scope: !12417, inlinedAt: !12426)
!12426 = !DILocation(line: 1183, column: 24, scope: !12409)
!12427 = !DILocalVariable(name: "self", scope: !12428, file: !12324, line: 1183, type: !12433, align: 8)
!12428 = !DILexicalBlockFile(scope: !12429, file: !12324, discriminator: 0)
!12429 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2440a08bd21a35f7E", scope: !1548, file: !1418, line: 153, type: !12430, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4148, retainedNodes: !12434)
!12430 = !DISubroutineType(types: !12431)
!12431 = !{!12432, !12433}
!12432 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", baseType: !4142, size: 64, align: 64, dwarfAddressSpace: 0)
!12433 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", baseType: !12419, size: 64, align: 64, dwarfAddressSpace: 0)
!12434 = !{!12427}
!12435 = !DILocation(line: 1183, column: 24, scope: !12428, inlinedAt: !12426)
!12436 = !DILocalVariable(name: "self", scope: !12437, file: !12324, line: 1183, type: !11542, align: 8)
!12437 = !DILexicalBlockFile(scope: !12438, file: !12324, discriminator: 0)
!12438 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5c5a6f0d4258c9b1E", scope: !11542, file: !1586, line: 103, type: !12439, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !12441)
!12439 = !DISubroutineType(types: !12440)
!12440 = !{!3914, !11542}
!12441 = !{!12436}
!12442 = !DILocation(line: 1183, column: 24, scope: !12437, inlinedAt: !12426)
!12443 = !DILocalVariable(name: "self", scope: !12444, file: !12324, line: 1183, type: !11545, align: 8)
!12444 = !DILexicalBlockFile(scope: !12445, file: !12324, discriminator: 0)
!12445 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf492283f8127be86E", scope: !11545, file: !445, line: 330, type: !11612, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !12446)
!12446 = !{!12443}
!12447 = !DILocation(line: 1183, column: 24, scope: !12444, inlinedAt: !12448)
!12448 = !DILocation(line: 104, column: 9, scope: !12438, inlinedAt: !12426)
!12449 = !DILocation(line: 1184, column: 6, scope: !12409)
!12450 = distinct !DISubprogram(name: "join<&str, &str>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17habb5388bde365e88E", scope: !12452, file: !12451, line: 643, type: !10018, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12457, retainedNodes: !12454)
!12451 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/slice.rs", directory: "", checksumkind: CSK_MD5, checksum: "81dc98eb0db7edda27f495b06a09822f")
!12452 = !DINamespace(name: "{impl#0}", scope: !12453)
!12453 = !DINamespace(name: "slice", scope: !223)
!12454 = !{!12455, !12456}
!12455 = !DILocalVariable(name: "self", arg: 1, scope: !12450, file: !12451, line: 643, type: !2000)
!12456 = !DILocalVariable(name: "sep", arg: 2, scope: !12450, file: !12451, line: 643, type: !48)
!12457 = !{!47, !12458}
!12458 = !DITemplateTypeParameter(name: "Separator", type: !48)
!12459 = !DILocation(line: 643, column: 28, scope: !12450)
!12460 = !DILocation(line: 643, column: 35, scope: !12450)
!12461 = !DILocation(line: 647, column: 9, scope: !12450)
!12462 = !DILocation(line: 648, column: 6, scope: !12450)
!12463 = distinct !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817hee727218af8ebc1bE", scope: !2358, file: !10028, line: 571, type: !12464, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12466)
!12464 = !DISubroutineType(types: !12465)
!12465 = !{!7270, !1219}
!12466 = !{!12467, !12468}
!12467 = !DILocalVariable(name: "vec", arg: 1, scope: !12463, file: !10028, line: 571, type: !1219)
!12468 = !DILocalVariable(name: "e", scope: !12469, file: !10028, line: 574, type: !3811, align: 8)
!12469 = distinct !DILexicalBlock(scope: !12463, file: !10028, line: 574, column: 13)
!12470 = !DILocation(line: 571, column: 22, scope: !12463)
!12471 = !DILocation(line: 574, column: 17, scope: !12469)
!12472 = !DILocation(line: 572, column: 30, scope: !12463)
!12473 = !DILocalVariable(name: "self", scope: !12474, file: !10028, line: 572, type: !2476, align: 8)
!12474 = !DILexicalBlockFile(scope: !12475, file: !10028, discriminator: 0)
!12475 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E", scope: !2473, file: !2472, line: 2531, type: !2474, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !12476)
!12476 = !{!12473}
!12477 = !DILocation(line: 572, column: 30, scope: !12474, inlinedAt: !12472)
!12478 = !DILocation(line: 576, column: 5, scope: !12463)
!12479 = !DILocalVariable(name: "data", scope: !12480, file: !10028, line: 572, type: !342, align: 8)
!12480 = !DILexicalBlockFile(scope: !12481, file: !10028, discriminator: 0)
!12481 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h7379c702bbd7bb59E", scope: !2484, file: !2483, line: 90, type: !2485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12482)
!12482 = !{!12479, !12483, !12484}
!12483 = !DILocalVariable(name: "len", scope: !12480, file: !10028, line: 572, type: !9, align: 8)
!12484 = !DILocalVariable(name: "runtime", scope: !12485, file: !10028, line: 572, type: !2492, align: 8)
!12485 = !DILexicalBlockFile(scope: !12486, file: !10028, discriminator: 0)
!12486 = distinct !DILexicalBlock(scope: !12481, file: !640, line: 2319, column: 13)
!12487 = !DILocation(line: 572, column: 30, scope: !12480, inlinedAt: !12488)
!12488 = !DILocation(line: 2532, column: 18, scope: !12475, inlinedAt: !12472)
!12489 = !DILocalVariable(name: "data", scope: !12490, file: !10028, line: 572, type: !342, align: 8)
!12490 = !DILexicalBlockFile(scope: !12491, file: !10028, discriminator: 0)
!12491 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12492)
!12492 = !{!12489, !12493}
!12493 = !DILocalVariable(name: "len", scope: !12490, file: !10028, line: 572, type: !9, align: 8)
!12494 = !DILocation(line: 572, column: 30, scope: !12490, inlinedAt: !12495)
!12495 = !DILocation(line: 97, column: 11, scope: !12481, inlinedAt: !12488)
!12496 = !DILocalVariable(name: "self", scope: !12497, file: !10028, line: 572, type: !342, align: 8)
!12497 = !DILexicalBlockFile(scope: !12498, file: !10028, discriminator: 0)
!12498 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !12499)
!12499 = !{!12496}
!12500 = !DILocation(line: 572, column: 30, scope: !12497, inlinedAt: !12501)
!12501 = !DILocation(line: 695, column: 20, scope: !12491, inlinedAt: !12495)
!12502 = !DILocalVariable(name: "data_address", scope: !12503, file: !10028, line: 572, type: !6, align: 8)
!12503 = !DILexicalBlockFile(scope: !12504, file: !10028, discriminator: 0)
!12504 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12505)
!12505 = !{!12502, !12506}
!12506 = !DILocalVariable(name: "metadata", scope: !12503, file: !10028, line: 572, type: !9, align: 8)
!12507 = !DILocation(line: 572, column: 30, scope: !12503, inlinedAt: !12508)
!12508 = !DILocation(line: 695, column: 5, scope: !12491, inlinedAt: !12495)
!12509 = !DILocation(line: 572, column: 15, scope: !12463)
!12510 = !DILocation(line: 572, column: 9, scope: !12463)
!12511 = !DILocation(line: 571, column: 5, scope: !12463)
!12512 = !DILocation(line: 573, column: 35, scope: !12463)
!12513 = !DILocation(line: 573, column: 26, scope: !12463)
!12514 = !DILocation(line: 573, column: 23, scope: !12463)
!12515 = !DILocation(line: 573, column: 40, scope: !12463)
!12516 = !DILocation(line: 574, column: 17, scope: !12463)
!12517 = !DILocation(line: 574, column: 50, scope: !12469)
!12518 = !DILocation(line: 574, column: 62, scope: !12469)
!12519 = !DILocation(line: 574, column: 27, scope: !12469)
!12520 = !DILocation(line: 574, column: 23, scope: !12469)
!12521 = !DILocation(line: 574, column: 65, scope: !12463)
!12522 = !DILocation(line: 576, column: 6, scope: !12463)
!12523 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17hacbf9344612bd19eE", scope: !222, file: !9508, line: 448, type: !12524, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12597, retainedNodes: !12544)
!12524 = !DISubroutineType(types: !12525)
!12525 = !{!7477, !5616, !12526, !12543}
!12526 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !39, file: !2, size: 192, align: 64, elements: !12527, templateParams: !23, identifier: "f5eb2517565c2414e240d0809738639b")
!12527 = !{!12528}
!12528 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12526, file: !2, size: 192, align: 64, elements: !12529, templateParams: !23, identifier: "ca7ebfc16296c5a4625b236ff0e9ca95", discriminator: !12542)
!12529 = !{!12530, !12538}
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !12528, file: !2, baseType: !12531, size: 192, align: 64, extraData: i64 0)
!12531 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !12526, file: !2, size: 192, align: 64, elements: !23, templateParams: !12532, identifier: "82a31d7d35c38fbf988159cf4c56cf22")
!12532 = !{!12533}
!12533 = !DITemplateTypeParameter(name: "T", type: !12534)
!12534 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !12535, templateParams: !23, identifier: "e0db65c9ba902783d943457c720a3dcd")
!12535 = !{!12536, !12537}
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12534, file: !2, baseType: !339, size: 64, align: 64)
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12534, file: !2, baseType: !1622, size: 128, align: 64, offset: 64)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !12528, file: !2, baseType: !12539, size: 192, align: 64)
!12539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !12526, file: !2, size: 192, align: 64, elements: !12540, templateParams: !12532, identifier: "80f5a3fcef1d223adb2f50fc805258d")
!12540 = !{!12541}
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12539, file: !2, baseType: !12534, size: 192, align: 64)
!12542 = !DIDerivedType(tag: DW_TAG_member, scope: !12526, file: !2, baseType: !59, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!12543 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !1234, size: 64, align: 64, dwarfAddressSpace: 0)
!12544 = !{!12545, !12546, !12547, !12548, !12550, !12565, !12567, !12582, !12584, !12586, !12588, !12589, !12593, !12594}
!12545 = !DILocalVariable(name: "new_layout", arg: 1, scope: !12523, file: !9508, line: 449, type: !5616)
!12546 = !DILocalVariable(name: "current_memory", arg: 2, scope: !12523, file: !9508, line: 450, type: !12526)
!12547 = !DILocalVariable(name: "alloc", arg: 3, scope: !12523, file: !9508, line: 451, type: !12543)
!12548 = !DILocalVariable(name: "new_layout", scope: !12549, file: !9508, line: 457, type: !1622, align: 8)
!12549 = distinct !DILexicalBlock(scope: !12523, file: !9508, line: 457, column: 5)
!12550 = !DILocalVariable(name: "residual", scope: !12551, file: !9508, line: 457, type: !12552, align: 8)
!12551 = distinct !DILexicalBlock(scope: !12523, file: !9508, line: 457, column: 62)
!12552 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !2066, file: !2, size: 128, align: 64, elements: !12553, templateParams: !23, identifier: "809d287889771067c77cf635b84eef62")
!12553 = !{!12554}
!12554 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12552, file: !2, size: 128, align: 64, elements: !12555, templateParams: !23, identifier: "12ddb7978366feaa6336c55b687b2649")
!12555 = !{!12556, !12561}
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12554, file: !2, baseType: !12557, size: 128, align: 64)
!12557 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12552, file: !2, size: 128, align: 64, elements: !12558, templateParams: !12560, identifier: "27fd3ad1c55bd0cef23d16ff96910ca")
!12558 = !{!12559}
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12557, file: !2, baseType: !4201, align: 8)
!12560 = !{!4200, !7364}
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12554, file: !2, baseType: !12562, size: 128, align: 64)
!12562 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12552, file: !2, size: 128, align: 64, elements: !12563, templateParams: !12560, identifier: "411a14db1faa8aa68d08d226fa0a3689")
!12563 = !{!12564}
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12562, file: !2, baseType: !1612, size: 128, align: 64)
!12565 = !DILocalVariable(name: "val", scope: !12566, file: !9508, line: 457, type: !1622, align: 8)
!12566 = distinct !DILexicalBlock(scope: !12523, file: !9508, line: 457, column: 22)
!12567 = !DILocalVariable(name: "residual", scope: !12568, file: !9508, line: 459, type: !12569, align: 8)
!12568 = distinct !DILexicalBlock(scope: !12549, file: !9508, line: 459, column: 35)
!12569 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !2066, file: !2, size: 128, align: 64, elements: !12570, templateParams: !23, identifier: "51d82dae0fe6104fd719f84a692ca38d")
!12570 = !{!12571}
!12571 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12569, file: !2, size: 128, align: 64, elements: !12572, templateParams: !23, identifier: "3b8a9f88ba74fb9fd8c6d56ea43cf057")
!12572 = !{!12573, !12578}
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12571, file: !2, baseType: !12574, size: 128, align: 64)
!12574 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12569, file: !2, size: 128, align: 64, elements: !12575, templateParams: !12577, identifier: "6853f80ed72aea345cc68504a676797")
!12575 = !{!12576}
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12574, file: !2, baseType: !4201, align: 8)
!12577 = !{!4200, !7406}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12571, file: !2, baseType: !12579, size: 128, align: 64)
!12579 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12569, file: !2, size: 128, align: 64, elements: !12580, templateParams: !12577, identifier: "bc433f89beb0a5a2933b4b2a4ed7b488")
!12580 = !{!12581}
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12579, file: !2, baseType: !1609, size: 128, align: 64)
!12582 = !DILocalVariable(name: "val", scope: !12583, file: !9508, line: 459, type: !7, align: 1)
!12583 = distinct !DILexicalBlock(scope: !12549, file: !9508, line: 459, column: 5)
!12584 = !DILocalVariable(name: "memory", scope: !12585, file: !9508, line: 461, type: !7455, align: 8)
!12585 = distinct !DILexicalBlock(scope: !12549, file: !9508, line: 461, column: 5)
!12586 = !DILocalVariable(name: "ptr", scope: !12587, file: !9508, line: 461, type: !339, align: 8)
!12587 = distinct !DILexicalBlock(scope: !12549, file: !9508, line: 461, column: 66)
!12588 = !DILocalVariable(name: "old_layout", scope: !12587, file: !9508, line: 461, type: !1622, align: 8)
!12589 = !DILocalVariable(name: "left_val", scope: !12590, file: !9508, line: 462, type: !387, align: 8)
!12590 = !DILexicalBlockFile(scope: !12591, file: !9508, discriminator: 0)
!12591 = distinct !DILexicalBlock(scope: !12587, file: !12592, line: 39, column: 13)
!12592 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e97a64fac48eb85da734513cc520f31f")
!12593 = !DILocalVariable(name: "right_val", scope: !12590, file: !9508, line: 462, type: !387, align: 8)
!12594 = !DILocalVariable(name: "kind", scope: !12595, file: !9508, line: 462, type: !215, align: 1)
!12595 = !DILexicalBlockFile(scope: !12596, file: !9508, discriminator: 0)
!12596 = distinct !DILexicalBlock(scope: !12591, file: !12592, line: 41, column: 21)
!12597 = !{!1237}
!12598 = !DILocation(line: 449, column: 5, scope: !12523)
!12599 = !DILocation(line: 450, column: 5, scope: !12523)
!12600 = !DILocation(line: 451, column: 5, scope: !12523)
!12601 = !DILocation(line: 457, column: 9, scope: !12549)
!12602 = !DILocalVariable(name: "self", scope: !12603, file: !9508, line: 457, type: !7355, align: 8)
!12603 = !DILexicalBlockFile(scope: !12604, file: !9508, discriminator: 0)
!12604 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4774537ced5c7caeE", scope: !5658, file: !5392, line: 2108, type: !12605, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7363, retainedNodes: !12623)
!12605 = !DISubroutineType(types: !12606)
!12606 = !{!12607, !7355}
!12607 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !4233, file: !2, size: 192, align: 64, elements: !12608, templateParams: !23, identifier: "4d20e3a7473373a916a742e9a58a8108")
!12608 = !{!12609}
!12609 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12607, file: !2, size: 192, align: 64, elements: !12610, templateParams: !23, identifier: "170151a0021d35febc0850c325213826", discriminator: !12622)
!12610 = !{!12611, !12618}
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !12609, file: !2, baseType: !12612, size: 192, align: 64, extraData: i64 0)
!12612 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !12607, file: !2, size: 192, align: 64, elements: !12613, templateParams: !12615, identifier: "72f02827624dd33256b171d9ca50c51a")
!12613 = !{!12614}
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12612, file: !2, baseType: !1622, size: 128, align: 64, offset: 64)
!12615 = !{!12616, !12617}
!12616 = !DITemplateTypeParameter(name: "B", type: !12552)
!12617 = !DITemplateTypeParameter(name: "C", type: !1622)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !12609, file: !2, baseType: !12619, size: 192, align: 64, extraData: i64 1)
!12619 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !12607, file: !2, size: 192, align: 64, elements: !12620, templateParams: !12615, identifier: "e2d457b1f9ac7c0d5b5a14fc6777272c")
!12620 = !{!12621}
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12619, file: !2, baseType: !12552, size: 128, align: 64, offset: 64)
!12622 = !DIDerivedType(tag: DW_TAG_member, scope: !12607, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!12623 = !{!12602, !12624, !12627}
!12624 = !DILocalVariable(name: "v", scope: !12625, file: !9508, line: 457, type: !1622, align: 8)
!12625 = !DILexicalBlockFile(scope: !12626, file: !9508, discriminator: 0)
!12626 = distinct !DILexicalBlock(scope: !12604, file: !5392, line: 2110, column: 13)
!12627 = !DILocalVariable(name: "e", scope: !12628, file: !9508, line: 457, type: !1612, align: 8)
!12628 = !DILexicalBlockFile(scope: !12629, file: !9508, discriminator: 0)
!12629 = distinct !DILexicalBlock(scope: !12604, file: !5392, line: 2111, column: 13)
!12630 = !DILocation(line: 457, column: 22, scope: !12603, inlinedAt: !12631)
!12631 = !DILocation(line: 457, column: 22, scope: !12523)
!12632 = !DILocalVariable(name: "residual", scope: !12633, file: !9508, line: 457, type: !12552, align: 8)
!12633 = !DILexicalBlockFile(scope: !12634, file: !9508, discriminator: 0)
!12634 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h686b2bed4681b409E", scope: !5393, file: !5392, line: 2123, type: !12635, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12641, retainedNodes: !12637)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{!7477, !12552, !917}
!12637 = !{!12632, !12638}
!12638 = !DILocalVariable(name: "e", scope: !12639, file: !9508, line: 457, type: !1612, align: 8)
!12639 = !DILexicalBlockFile(scope: !12640, file: !9508, discriminator: 0)
!12640 = distinct !DILexicalBlock(scope: !12634, file: !5392, line: 2125, column: 13)
!12641 = !{!7467, !7364, !7503}
!12642 = !DILocation(line: 457, column: 22, scope: !12633, inlinedAt: !12643)
!12643 = !DILocation(line: 457, column: 22, scope: !12551)
!12644 = !DILocalVariable(name: "self", scope: !12645, file: !9508, line: 459, type: !7397, align: 8)
!12645 = !DILexicalBlockFile(scope: !12646, file: !9508, discriminator: 0)
!12646 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd432ec6b1a13f943E", scope: !5658, file: !5392, line: 2108, type: !12647, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7405, retainedNodes: !12664)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{!12649, !7397}
!12649 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !4233, file: !2, size: 128, align: 64, elements: !12650, templateParams: !23, identifier: "7ec7c61f61171ae22b679c59b7530fff")
!12650 = !{!12651}
!12651 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12649, file: !2, size: 128, align: 64, elements: !12652, templateParams: !23, identifier: "cba01c08d3472432496dd1b729905924", discriminator: !12663)
!12652 = !{!12653, !12659}
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !12651, file: !2, baseType: !12654, size: 128, align: 64, extraData: i64 -9223372036854775807)
!12654 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !12649, file: !2, size: 128, align: 64, elements: !12655, templateParams: !12657, identifier: "c086a6dba510cd0e8925055aeb4e6d9e")
!12655 = !{!12656}
!12656 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12654, file: !2, baseType: !7, align: 8)
!12657 = !{!12658, !5452}
!12658 = !DITemplateTypeParameter(name: "B", type: !12569)
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !12651, file: !2, baseType: !12660, size: 128, align: 64)
!12660 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !12649, file: !2, size: 128, align: 64, elements: !12661, templateParams: !12657, identifier: "fcf9b494db81326322e58388535c1e88")
!12661 = !{!12662}
!12662 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12660, file: !2, baseType: !12569, size: 128, align: 64)
!12663 = !DIDerivedType(tag: DW_TAG_member, scope: !12649, file: !2, baseType: !59, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!12664 = !{!12644, !12665, !12668}
!12665 = !DILocalVariable(name: "v", scope: !12666, file: !9508, line: 459, type: !7, align: 1)
!12666 = !DILexicalBlockFile(scope: !12667, file: !9508, discriminator: 0)
!12667 = distinct !DILexicalBlock(scope: !12646, file: !5392, line: 2110, column: 13)
!12668 = !DILocalVariable(name: "e", scope: !12669, file: !9508, line: 459, type: !1609, align: 8)
!12669 = !DILexicalBlockFile(scope: !12670, file: !9508, discriminator: 0)
!12670 = distinct !DILexicalBlock(scope: !12646, file: !5392, line: 2111, column: 13)
!12671 = !DILocation(line: 459, column: 5, scope: !12645, inlinedAt: !12672)
!12672 = !DILocation(line: 459, column: 5, scope: !12549)
!12673 = !DILocalVariable(name: "residual", scope: !12674, file: !9508, line: 459, type: !12569, align: 8)
!12674 = !DILexicalBlockFile(scope: !12675, file: !9508, discriminator: 0)
!12675 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfed9f21e2be26eb1E", scope: !5393, file: !5392, line: 2123, type: !12676, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12682, retainedNodes: !12678)
!12676 = !DISubroutineType(types: !12677)
!12677 = !{!7477, !12569, !917}
!12678 = !{!12673, !12679}
!12679 = !DILocalVariable(name: "e", scope: !12680, file: !9508, line: 459, type: !1609, align: 8)
!12680 = !DILexicalBlockFile(scope: !12681, file: !9508, discriminator: 0)
!12681 = distinct !DILexicalBlock(scope: !12675, file: !5392, line: 2125, column: 13)
!12682 = !{!7467, !7406, !7503}
!12683 = !DILocation(line: 459, column: 5, scope: !12674, inlinedAt: !12684)
!12684 = !DILocation(line: 459, column: 5, scope: !12568)
!12685 = !DILocation(line: 459, column: 5, scope: !12583)
!12686 = !DILocation(line: 461, column: 9, scope: !12585)
!12687 = !DILocation(line: 461, column: 36, scope: !12587)
!12688 = !DILocation(line: 459, column: 5, scope: !12666, inlinedAt: !12672)
!12689 = !DILocalVariable(name: "self", scope: !12690, file: !9508, line: 465, type: !10764, align: 8)
!12690 = !DILexicalBlockFile(scope: !12691, file: !9508, discriminator: 0)
!12691 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12692)
!12692 = !{!12689}
!12693 = !DILocation(line: 465, column: 32, scope: !12690, inlinedAt: !12694)
!12694 = !DILocation(line: 119, column: 9, scope: !12695, inlinedAt: !12699)
!12695 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12696)
!12696 = !{!12697}
!12697 = !DILocalVariable(name: "self", scope: !12698, file: !9508, line: 465, type: !7494, align: 8)
!12698 = !DILexicalBlockFile(scope: !12695, file: !9508, discriminator: 0)
!12699 = !DILocation(line: 465, column: 32, scope: !12587)
!12700 = !DILocalVariable(name: "self", scope: !12701, file: !9508, line: 465, type: !1628, align: 8)
!12701 = !DILexicalBlockFile(scope: !12702, file: !9508, discriminator: 0)
!12702 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12703)
!12703 = !{!12700}
!12704 = !DILocation(line: 465, column: 32, scope: !12701, inlinedAt: !12694)
!12705 = !DILocalVariable(name: "self", scope: !12706, file: !9508, line: 465, type: !10764, align: 8)
!12706 = !DILexicalBlockFile(scope: !12707, file: !9508, discriminator: 0)
!12707 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12708)
!12708 = !{!12705}
!12709 = !DILocation(line: 465, column: 54, scope: !12706, inlinedAt: !12710)
!12710 = !DILocation(line: 119, column: 9, scope: !12711, inlinedAt: !12715)
!12711 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12712)
!12712 = !{!12713}
!12713 = !DILocalVariable(name: "self", scope: !12714, file: !9508, line: 465, type: !7494, align: 8)
!12714 = !DILexicalBlockFile(scope: !12711, file: !9508, discriminator: 0)
!12715 = !DILocation(line: 465, column: 54, scope: !12587)
!12716 = !DILocalVariable(name: "self", scope: !12717, file: !9508, line: 465, type: !1628, align: 8)
!12717 = !DILexicalBlockFile(scope: !12718, file: !9508, discriminator: 0)
!12718 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12719)
!12719 = !{!12716}
!12720 = !DILocation(line: 465, column: 54, scope: !12717, inlinedAt: !12710)
!12721 = !DILocation(line: 457, column: 22, scope: !12625, inlinedAt: !12631)
!12722 = !DILocation(line: 457, column: 22, scope: !12628, inlinedAt: !12631)
!12723 = !DILocation(line: 457, column: 22, scope: !12566)
!12724 = !DILocation(line: 459, column: 5, scope: !12725, inlinedAt: !12672)
!12725 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h40601cf8778ab14dE", scope: !222, file: !9508, line: 505, type: !12726, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12728)
!12726 = !DISubroutineType(types: !12727)
!12727 = !{!7397, !9}
!12728 = !{!12729}
!12729 = !DILocalVariable(name: "alloc_size", scope: !12725, file: !9508, line: 459, type: !9, align: 8)
!12730 = !DILocation(line: 457, column: 62, scope: !12523)
!12731 = !DILocation(line: 457, column: 62, scope: !12551)
!12732 = !DILocation(line: 457, column: 22, scope: !12639, inlinedAt: !12643)
!12733 = !DILocalVariable(name: "kind", scope: !12734, file: !9508, line: 457, type: !1612, align: 8)
!12734 = !DILexicalBlockFile(scope: !12735, file: !9508, discriminator: 0)
!12735 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hee871011a5f2812eE", scope: !1606, file: !1605, line: 116, type: !1607, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12736)
!12736 = !{!12733}
!12737 = !DILocation(line: 457, column: 22, scope: !12734, inlinedAt: !12738)
!12738 = !DILocation(line: 2125, column: 27, scope: !12640, inlinedAt: !12643)
!12739 = !DILocation(line: 1, column: 1, scope: !12740)
!12740 = !DILexicalBlockFile(scope: !12523, file: !4302, discriminator: 0)
!12741 = !DILocation(line: 473, column: 2, scope: !12523)
!12742 = !DILocation(line: 459, column: 5, scope: !12669, inlinedAt: !12672)
!12743 = !DILocation(line: 461, column: 25, scope: !12587)
!12744 = !DILocation(line: 459, column: 35, scope: !12549)
!12745 = !DILocation(line: 459, column: 35, scope: !12568)
!12746 = !DILocation(line: 459, column: 5, scope: !12680, inlinedAt: !12684)
!12747 = !DILocation(line: 1, column: 1, scope: !12748)
!12748 = !DILexicalBlockFile(scope: !12549, file: !4302, discriminator: 0)
!12749 = !DILocation(line: 461, column: 31, scope: !12587)
!12750 = !DILocation(line: 465, column: 32, scope: !12698, inlinedAt: !12699)
!12751 = !DILocalVariable(name: "n", scope: !12752, file: !9508, line: 465, type: !9, align: 8)
!12752 = !DILexicalBlockFile(scope: !12753, file: !9508, discriminator: 0)
!12753 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12754)
!12754 = !{!12751, !12755}
!12755 = !DILocalVariable(name: "runtime", scope: !12756, file: !9508, line: 465, type: !10846, align: 8)
!12756 = !DILexicalBlockFile(scope: !12757, file: !9508, discriminator: 0)
!12757 = distinct !DILexicalBlock(scope: !12753, file: !640, line: 2319, column: 13)
!12758 = !DILocation(line: 465, column: 32, scope: !12752, inlinedAt: !12759)
!12759 = !DILocation(line: 39, column: 18, scope: !12702, inlinedAt: !12694)
!12760 = !DILocation(line: 465, column: 54, scope: !12714, inlinedAt: !12715)
!12761 = !DILocalVariable(name: "n", scope: !12762, file: !9508, line: 465, type: !9, align: 8)
!12762 = !DILexicalBlockFile(scope: !12763, file: !9508, discriminator: 0)
!12763 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12764)
!12764 = !{!12761, !12765}
!12765 = !DILocalVariable(name: "runtime", scope: !12766, file: !9508, line: 465, type: !10846, align: 8)
!12766 = !DILexicalBlockFile(scope: !12767, file: !9508, discriminator: 0)
!12767 = distinct !DILexicalBlock(scope: !12763, file: !640, line: 2319, column: 13)
!12768 = !DILocation(line: 465, column: 54, scope: !12762, inlinedAt: !12769)
!12769 = !DILocation(line: 39, column: 18, scope: !12718, inlinedAt: !12710)
!12770 = !DILocation(line: 465, column: 13, scope: !12587)
!12771 = !DILocation(line: 469, column: 24, scope: !12549)
!12772 = !DILocation(line: 469, column: 9, scope: !12549)
!12773 = !DILocation(line: 461, column: 18, scope: !12549)
!12774 = !DILocation(line: 472, column: 5, scope: !12585)
!12775 = !DILocation(line: 472, column: 20, scope: !12585)
!12776 = !DILocation(line: 466, column: 29, scope: !12587)
!12777 = !DILocation(line: 466, column: 41, scope: !12587)
!12778 = !DILocation(line: 466, column: 13, scope: !12587)
!12779 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2104520d324e94afE", scope: !7371, file: !9508, line: 457, type: !12780, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12597, retainedNodes: !12782)
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!1612, !7370, !5627}
!12782 = !{!12783, !12784}
!12783 = !DILocalVariable(arg: 1, scope: !12779, file: !9508, line: 457, type: !7370)
!12784 = !DILocalVariable(arg: 2, scope: !12779, file: !9508, line: 457, type: !5627)
!12785 = !DILocation(line: 457, column: 41, scope: !12779)
!12786 = !DILocation(line: 457, column: 42, scope: !12779)
!12787 = !DILocation(line: 457, column: 45, scope: !12779)
!12788 = !DILocation(line: 457, column: 61, scope: !12779)
!12789 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h650506fa10c07391E", scope: !7371, file: !9508, line: 472, type: !12790, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12597, retainedNodes: !12792)
!12790 = !DISubroutineType(types: !12791)
!12791 = !{!1609, !7491, !7469}
!12792 = !{!12793, !12794}
!12793 = !DILocalVariable(name: "new_layout", scope: !12789, file: !9508, line: 457, type: !1622, align: 8)
!12794 = !DILocalVariable(arg: 2, scope: !12789, file: !9508, line: 472, type: !7469)
!12795 = !DILocation(line: 457, column: 9, scope: !12789)
!12796 = !DILocation(line: 472, column: 21, scope: !12789)
!12797 = !DILocation(line: 472, column: 45, scope: !12789)
!12798 = !DILocation(line: 472, column: 24, scope: !12789)
!12799 = !DILocation(line: 472, column: 84, scope: !12789)
!12800 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h2d89f1c61a65874cE", scope: !222, file: !9508, line: 487, type: !12801, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12803)
!12801 = !DISubroutineType(types: !12802)
!12802 = !{null, !7397}
!12803 = !{!12804, !12805}
!12804 = !DILocalVariable(name: "result", arg: 1, scope: !12800, file: !9508, line: 487, type: !7397)
!12805 = !DILocalVariable(name: "layout", scope: !12806, file: !9508, line: 490, type: !1622, align: 8)
!12806 = distinct !DILexicalBlock(scope: !12800, file: !9508, line: 490, column: 9)
!12807 = !DILocation(line: 487, column: 19, scope: !12800)
!12808 = !DILocation(line: 488, column: 11, scope: !12800)
!12809 = !DILocation(line: 488, column: 5, scope: !12800)
!12810 = !DILocation(line: 493, column: 2, scope: !12800)
!12811 = !DILocation(line: 489, column: 34, scope: !12800)
!12812 = !DILocation(line: 490, column: 26, scope: !12800)
!12813 = !DILocation(line: 490, column: 26, scope: !12806)
!12814 = !DILocation(line: 490, column: 43, scope: !12806)
!12815 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hf725b3c1a732c9b8E", scope: !7429, file: !9508, line: 488, type: !12816, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12818)
!12816 = !DISubroutineType(types: !12817)
!12817 = !{!1612, !7428, !1609}
!12818 = !{!12819, !12820}
!12819 = !DILocalVariable(name: "e", arg: 2, scope: !12815, file: !9508, line: 488, type: !1609)
!12820 = !DILocalVariable(arg: 1, scope: !12815, file: !9508, line: 488, type: !7428)
!12821 = !DILocation(line: 488, column: 26, scope: !12815)
!12822 = !DILocation(line: 488, column: 27, scope: !12815)
!12823 = !DILocation(line: 488, column: 30, scope: !12815)
!12824 = !DILocation(line: 488, column: 38, scope: !12815)
!12825 = distinct !DISubprogram(name: "allocate_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8c7f42ca41dd72deE", scope: !1223, file: !9508, line: 169, type: !12826, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !12828)
!12826 = !DISubroutineType(types: !12827)
!12827 = !{!1223, !9, !221, !1234}
!12828 = !{!12829, !12830, !12831, !12832, !12834, !12836, !12838, !12840}
!12829 = !DILocalVariable(name: "capacity", arg: 1, scope: !12825, file: !9508, line: 169, type: !9)
!12830 = !DILocalVariable(name: "init", arg: 2, scope: !12825, file: !9508, line: 169, type: !221)
!12831 = !DILocalVariable(name: "alloc", arg: 3, scope: !12825, file: !9508, line: 169, type: !1234)
!12832 = !DILocalVariable(name: "layout", scope: !12833, file: !9508, line: 176, type: !1622, align: 8)
!12833 = distinct !DILexicalBlock(scope: !12825, file: !9508, line: 176, column: 13)
!12834 = !DILocalVariable(name: "layout", scope: !12835, file: !9508, line: 177, type: !1622, align: 8)
!12835 = distinct !DILexicalBlock(scope: !12825, file: !9508, line: 177, column: 17)
!12836 = !DILocalVariable(name: "result", scope: !12837, file: !9508, line: 184, type: !7455, align: 8)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !9508, line: 184, column: 13)
!12838 = !DILocalVariable(name: "ptr", scope: !12839, file: !9508, line: 188, type: !7463, align: 8)
!12839 = distinct !DILexicalBlock(scope: !12837, file: !9508, line: 188, column: 13)
!12840 = !DILocalVariable(name: "ptr", scope: !12841, file: !9508, line: 189, type: !7463, align: 8)
!12841 = distinct !DILexicalBlock(scope: !12837, file: !9508, line: 189, column: 17)
!12842 = !DILocation(line: 169, column: 20, scope: !12825)
!12843 = !DILocation(line: 169, column: 37, scope: !12825)
!12844 = !DILocation(line: 169, column: 54, scope: !12825)
!12845 = !DILocation(line: 184, column: 17, scope: !12837)
!12846 = !DILocalVariable(name: "self", scope: !12847, file: !9508, line: 197, type: !339, align: 8)
!12847 = !DILexicalBlockFile(scope: !12848, file: !9508, discriminator: 0)
!12848 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12849)
!12849 = !{!12846}
!12850 = !DILocation(line: 197, column: 53, scope: !12847, inlinedAt: !12851)
!12851 = !DILocation(line: 197, column: 53, scope: !12839)
!12852 = !DILocation(line: 171, column: 12, scope: !12825)
!12853 = !DILocation(line: 171, column: 40, scope: !12825)
!12854 = !DILocation(line: 176, column: 32, scope: !12825)
!12855 = !DILocation(line: 172, column: 26, scope: !12825)
!12856 = !DILocation(line: 172, column: 13, scope: !12825)
!12857 = !DILocation(line: 202, column: 5, scope: !12825)
!12858 = !DILocation(line: 171, column: 9, scope: !12825)
!12859 = !DILocation(line: 202, column: 6, scope: !12825)
!12860 = !DILocation(line: 176, column: 26, scope: !12825)
!12861 = !DILocation(line: 177, column: 20, scope: !12825)
!12862 = !DILocation(line: 177, column: 20, scope: !12835)
!12863 = !DILocation(line: 177, column: 31, scope: !12835)
!12864 = !DILocation(line: 176, column: 17, scope: !12833)
!12865 = !DILocation(line: 180, column: 19, scope: !12866, inlinedAt: !12869)
!12866 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h40601cf8778ab14dE", scope: !222, file: !9508, line: 505, type: !12726, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12867)
!12867 = !{!12868}
!12868 = !DILocalVariable(name: "alloc_size", scope: !12866, file: !9508, line: 180, type: !9, align: 8)
!12869 = !DILocation(line: 180, column: 19, scope: !12833)
!12870 = !DILocation(line: 180, column: 13, scope: !12833)
!12871 = !DILocation(line: 178, column: 27, scope: !12825)
!12872 = !DILocation(line: 184, column: 32, scope: !12833)
!12873 = !DILocation(line: 184, column: 26, scope: !12833)
!12874 = !DILocation(line: 182, column: 27, scope: !12833)
!12875 = !DILocation(line: 185, column: 45, scope: !12833)
!12876 = !DILocation(line: 186, column: 38, scope: !12833)
!12877 = !DILocation(line: 186, column: 66, scope: !12833)
!12878 = !DILocation(line: 188, column: 29, scope: !12837)
!12879 = !DILocation(line: 188, column: 23, scope: !12837)
!12880 = !DILocation(line: 185, column: 66, scope: !12833)
!12881 = !DILocation(line: 189, column: 20, scope: !12837)
!12882 = !DILocation(line: 189, column: 20, scope: !12841)
!12883 = !DILocation(line: 189, column: 28, scope: !12841)
!12884 = !DILocation(line: 188, column: 17, scope: !12839)
!12885 = !DILocalVariable(name: "self", scope: !12886, file: !9508, line: 197, type: !7463, align: 8)
!12886 = !DILexicalBlockFile(scope: !12887, file: !9508, discriminator: 0)
!12887 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h43e1222c2a8f698bE", scope: !7463, file: !445, line: 453, type: !10610, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12218, retainedNodes: !12888)
!12888 = !{!12885}
!12889 = !DILocation(line: 197, column: 53, scope: !12886, inlinedAt: !12851)
!12890 = !DILocalVariable(name: "self", scope: !12891, file: !9508, line: 197, type: !7463, align: 8)
!12891 = !DILexicalBlockFile(scope: !12892, file: !9508, discriminator: 0)
!12892 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12893)
!12893 = !{!12890}
!12894 = !DILocation(line: 197, column: 53, scope: !12891, inlinedAt: !12895)
!12895 = !DILocation(line: 455, column: 41, scope: !12887, inlinedAt: !12851)
!12896 = !DILocalVariable(name: "ptr", scope: !12897, file: !9508, line: 197, type: !448, align: 8)
!12897 = !DILexicalBlockFile(scope: !12898, file: !9508, discriminator: 0)
!12898 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12899)
!12899 = !{!12896}
!12900 = !DILocation(line: 197, column: 53, scope: !12897, inlinedAt: !12901)
!12901 = !DILocation(line: 455, column: 18, scope: !12887, inlinedAt: !12851)
!12902 = !DILocalVariable(name: "ptr", scope: !12903, file: !9508, line: 197, type: !448, align: 8)
!12903 = !DILexicalBlockFile(scope: !12904, file: !9508, discriminator: 0)
!12904 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hec8679f9243539c9E", scope: !1226, file: !1586, line: 85, type: !12905, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12907)
!12905 = !DISubroutineType(types: !12906)
!12906 = !{!1226, !448}
!12907 = !{!12902}
!12908 = !DILocation(line: 197, column: 31, scope: !12903, inlinedAt: !12909)
!12909 = !DILocation(line: 197, column: 31, scope: !12839)
!12910 = !DILocalVariable(name: "ptr", scope: !12911, file: !9508, line: 197, type: !448, align: 8)
!12911 = !DILexicalBlockFile(scope: !12912, file: !9508, discriminator: 0)
!12912 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12913)
!12913 = !{!12910}
!12914 = !DILocation(line: 197, column: 31, scope: !12911, inlinedAt: !12915)
!12915 = !DILocation(line: 87, column: 36, scope: !12904, inlinedAt: !12909)
!12916 = !DILocation(line: 196, column: 13, scope: !12839)
!12917 = !DILocation(line: 190, column: 27, scope: !12837)
!12918 = !DILocation(line: 169, column: 5, scope: !12825)
!12919 = distinct !DISubprogram(name: "needs_to_grow<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0ca0127d33db4ee5E", scope: !1223, file: !9508, line: 360, type: !12920, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !12922)
!12920 = !DISubroutineType(types: !12921)
!12921 = !{!989, !10207, !9, !9}
!12922 = !{!12923, !12924, !12925}
!12923 = !DILocalVariable(name: "self", arg: 1, scope: !12919, file: !9508, line: 360, type: !10207)
!12924 = !DILocalVariable(name: "len", arg: 2, scope: !12919, file: !9508, line: 360, type: !9)
!12925 = !DILocalVariable(name: "additional", arg: 3, scope: !12919, file: !9508, line: 360, type: !9)
!12926 = !DILocation(line: 360, column: 22, scope: !12919)
!12927 = !DILocation(line: 360, column: 29, scope: !12919)
!12928 = !DILocation(line: 360, column: 41, scope: !12919)
!12929 = !DILocalVariable(name: "self", scope: !12930, file: !9508, line: 361, type: !9, align: 8)
!12930 = !DILexicalBlockFile(scope: !12931, file: !9508, discriminator: 0)
!12931 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h0292a2731c9021a7E", scope: !2890, file: !2889, line: 1225, type: !2878, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !12932)
!12932 = !{!12929, !12933}
!12933 = !DILocalVariable(name: "rhs", scope: !12930, file: !9508, line: 361, type: !9, align: 8)
!12934 = !DILocation(line: 361, column: 22, scope: !12930, inlinedAt: !12935)
!12935 = !DILocation(line: 361, column: 22, scope: !12919)
!12936 = !DILocalVariable(name: "self", scope: !12937, file: !9508, line: 361, type: !10207, align: 8)
!12937 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h719ef633207df3eeE", scope: !1223, file: !9508, line: 231, type: !10419, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !12938)
!12938 = !{!12936}
!12939 = !DILocation(line: 361, column: 22, scope: !12937, inlinedAt: !12935)
!12940 = !DILocation(line: 361, column: 51, scope: !12919)
!12941 = !DILocation(line: 361, column: 9, scope: !12919)
!12942 = !DILocation(line: 362, column: 6, scope: !12919)
!12943 = distinct !DISubprogram(name: "current_memory<*const i8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h31d861587090897aE", scope: !2567, file: !9508, line: 240, type: !12944, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2584, retainedNodes: !12946)
!12944 = !DISubroutineType(types: !12945)
!12945 = !{!12526, !10074}
!12946 = !{!12947, !12948}
!12947 = !DILocalVariable(name: "self", arg: 1, scope: !12943, file: !9508, line: 240, type: !10074)
!12948 = !DILocalVariable(name: "layout", scope: !12949, file: !9508, line: 247, type: !1622, align: 8)
!12949 = distinct !DILexicalBlock(scope: !12943, file: !9508, line: 247, column: 17)
!12950 = !DILocation(line: 240, column: 23, scope: !12943)
!12951 = !DILocalVariable(name: "self", scope: !12952, file: !9508, line: 247, type: !5616, align: 8)
!12952 = !DILexicalBlockFile(scope: !12953, file: !9508, discriminator: 0)
!12953 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h771364f27a359c58E", scope: !5616, file: !5392, line: 1511, type: !12954, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5624, retainedNodes: !12956)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{!1622, !5616, !917}
!12956 = !{!12951, !12957}
!12957 = !DILocalVariable(name: "t", scope: !12958, file: !9508, line: 247, type: !1622, align: 8)
!12958 = !DILexicalBlockFile(scope: !12959, file: !9508, discriminator: 0)
!12959 = distinct !DILexicalBlock(scope: !12953, file: !5392, line: 1514, column: 13)
!12960 = !DILocation(line: 247, column: 30, scope: !12952, inlinedAt: !12961)
!12961 = !DILocation(line: 247, column: 30, scope: !12943)
!12962 = !DILocalVariable(name: "pointer", scope: !12963, file: !9508, line: 248, type: !339, align: 8)
!12963 = !DILexicalBlockFile(scope: !12964, file: !9508, discriminator: 0)
!12964 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !12965)
!12965 = !{!12962}
!12966 = !DILocation(line: 248, column: 23, scope: !12963, inlinedAt: !12967)
!12967 = !DILocation(line: 137, column: 9, scope: !12968, inlinedAt: !12975)
!12968 = distinct !DISubprogram(name: "cast<*const i8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h75eb52f72ac990cfE", scope: !2570, file: !1586, line: 136, type: !12969, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12974, retainedNodes: !12971)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!1226, !2570}
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "self", scope: !12973, file: !9508, line: 248, type: !2570, align: 8)
!12973 = !DILexicalBlockFile(scope: !12968, file: !9508, discriminator: 0)
!12974 = !{!2579, !1950}
!12975 = !DILocation(line: 248, column: 23, scope: !12949)
!12976 = !DILocation(line: 241, column: 12, scope: !12943)
!12977 = !DILocation(line: 241, column: 40, scope: !12943)
!12978 = !DILocation(line: 247, column: 49, scope: !12943)
!12979 = !DILocation(line: 242, column: 13, scope: !12943)
!12980 = !DILocation(line: 241, column: 9, scope: !12943)
!12981 = !DILocation(line: 251, column: 6, scope: !12943)
!12982 = !DILocation(line: 247, column: 30, scope: !12958, inlinedAt: !12961)
!12983 = !DILocation(line: 247, column: 21, scope: !12949)
!12984 = !DILocation(line: 248, column: 23, scope: !12973, inlinedAt: !12975)
!12985 = !DILocalVariable(name: "self", scope: !12986, file: !9508, line: 248, type: !2573, align: 8)
!12986 = !DILexicalBlockFile(scope: !12987, file: !9508, discriminator: 0)
!12987 = distinct !DISubprogram(name: "cast<*const i8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3c9876f2049e946dE", scope: !2573, file: !445, line: 453, type: !12988, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12974, retainedNodes: !12990)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{!339, !2573}
!12990 = !{!12985}
!12991 = !DILocation(line: 248, column: 23, scope: !12986, inlinedAt: !12992)
!12992 = !DILocation(line: 137, column: 22, scope: !12968, inlinedAt: !12975)
!12993 = !DILocalVariable(name: "self", scope: !12994, file: !9508, line: 248, type: !2573, align: 8)
!12994 = !DILexicalBlockFile(scope: !12995, file: !9508, discriminator: 0)
!12995 = distinct !DISubprogram(name: "as_ptr<*const i8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4eca9806c000a3cE", scope: !2573, file: !445, line: 330, type: !10088, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !12996)
!12996 = !{!12993}
!12997 = !DILocation(line: 248, column: 23, scope: !12994, inlinedAt: !12998)
!12998 = !DILocation(line: 455, column: 41, scope: !12987, inlinedAt: !12992)
!12999 = !DILocalVariable(name: "ptr", scope: !13000, file: !9508, line: 248, type: !448, align: 8)
!13000 = !DILexicalBlockFile(scope: !13001, file: !9508, discriminator: 0)
!13001 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13002)
!13002 = !{!12999}
!13003 = !DILocation(line: 248, column: 23, scope: !13000, inlinedAt: !13004)
!13004 = !DILocation(line: 455, column: 18, scope: !12987, inlinedAt: !12992)
!13005 = !DILocation(line: 247, column: 30, scope: !13006, inlinedAt: !13008)
!13006 = !DILexicalBlockFile(scope: !13007, file: !9508, discriminator: 0)
!13007 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!13008 = !DILocation(line: 1516, column: 32, scope: !12953, inlinedAt: !12961)
!13009 = !DILocation(line: 248, column: 22, scope: !12949)
!13010 = !DILocation(line: 248, column: 17, scope: !12949)
!13011 = distinct !DISubprogram(name: "current_memory<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h711cdc596ee9e83bE", scope: !2625, file: !9508, line: 240, type: !13012, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2647, retainedNodes: !13014)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!12526, !10142}
!13014 = !{!13015, !13016}
!13015 = !DILocalVariable(name: "self", arg: 1, scope: !13011, file: !9508, line: 240, type: !10142)
!13016 = !DILocalVariable(name: "layout", scope: !13017, file: !9508, line: 247, type: !1622, align: 8)
!13017 = distinct !DILexicalBlock(scope: !13011, file: !9508, line: 247, column: 17)
!13018 = !DILocation(line: 240, column: 23, scope: !13011)
!13019 = !DILocalVariable(name: "self", scope: !13020, file: !9508, line: 247, type: !5616, align: 8)
!13020 = !DILexicalBlockFile(scope: !13021, file: !9508, discriminator: 0)
!13021 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h771364f27a359c58E", scope: !5616, file: !5392, line: 1511, type: !12954, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5624, retainedNodes: !13022)
!13022 = !{!13019, !13023}
!13023 = !DILocalVariable(name: "t", scope: !13024, file: !9508, line: 247, type: !1622, align: 8)
!13024 = !DILexicalBlockFile(scope: !13025, file: !9508, discriminator: 0)
!13025 = distinct !DILexicalBlock(scope: !13021, file: !5392, line: 1514, column: 13)
!13026 = !DILocation(line: 247, column: 30, scope: !13020, inlinedAt: !13027)
!13027 = !DILocation(line: 247, column: 30, scope: !13011)
!13028 = !DILocalVariable(name: "pointer", scope: !13029, file: !9508, line: 248, type: !339, align: 8)
!13029 = !DILexicalBlockFile(scope: !13030, file: !9508, discriminator: 0)
!13030 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13031)
!13031 = !{!13028}
!13032 = !DILocation(line: 248, column: 23, scope: !13029, inlinedAt: !13033)
!13033 = !DILocation(line: 137, column: 9, scope: !13034, inlinedAt: !13041)
!13034 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h8a5d09a733e55f21E", scope: !2628, file: !1586, line: 136, type: !13035, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13040, retainedNodes: !13037)
!13035 = !DISubroutineType(types: !13036)
!13036 = !{!1226, !2628}
!13037 = !{!13038}
!13038 = !DILocalVariable(name: "self", scope: !13039, file: !9508, line: 248, type: !2628, align: 8)
!13039 = !DILexicalBlockFile(scope: !13034, file: !9508, discriminator: 0)
!13040 = !{!2642, !1950}
!13041 = !DILocation(line: 248, column: 23, scope: !13017)
!13042 = !DILocation(line: 241, column: 12, scope: !13011)
!13043 = !DILocation(line: 241, column: 40, scope: !13011)
!13044 = !DILocation(line: 247, column: 49, scope: !13011)
!13045 = !DILocation(line: 242, column: 13, scope: !13011)
!13046 = !DILocation(line: 241, column: 9, scope: !13011)
!13047 = !DILocation(line: 251, column: 6, scope: !13011)
!13048 = !DILocation(line: 247, column: 30, scope: !13024, inlinedAt: !13027)
!13049 = !DILocation(line: 247, column: 21, scope: !13017)
!13050 = !DILocation(line: 248, column: 23, scope: !13039, inlinedAt: !13041)
!13051 = !DILocalVariable(name: "self", scope: !13052, file: !9508, line: 248, type: !2631, align: 8)
!13052 = !DILexicalBlockFile(scope: !13053, file: !9508, discriminator: 0)
!13053 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h0febe6c06f59bf6fE", scope: !2631, file: !445, line: 453, type: !13054, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13040, retainedNodes: !13056)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{!339, !2631}
!13056 = !{!13051}
!13057 = !DILocation(line: 248, column: 23, scope: !13052, inlinedAt: !13058)
!13058 = !DILocation(line: 137, column: 22, scope: !13034, inlinedAt: !13041)
!13059 = !DILocalVariable(name: "self", scope: !13060, file: !9508, line: 248, type: !2631, align: 8)
!13060 = !DILexicalBlockFile(scope: !13061, file: !9508, discriminator: 0)
!13061 = distinct !DISubprogram(name: "as_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h19260b639fa11e9fE", scope: !2631, file: !445, line: 330, type: !10156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !13062)
!13062 = !{!13059}
!13063 = !DILocation(line: 248, column: 23, scope: !13060, inlinedAt: !13064)
!13064 = !DILocation(line: 455, column: 41, scope: !13053, inlinedAt: !13058)
!13065 = !DILocalVariable(name: "ptr", scope: !13066, file: !9508, line: 248, type: !448, align: 8)
!13066 = !DILexicalBlockFile(scope: !13067, file: !9508, discriminator: 0)
!13067 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13068)
!13068 = !{!13065}
!13069 = !DILocation(line: 248, column: 23, scope: !13066, inlinedAt: !13070)
!13070 = !DILocation(line: 455, column: 18, scope: !13053, inlinedAt: !13058)
!13071 = !DILocation(line: 247, column: 30, scope: !13072, inlinedAt: !13074)
!13072 = !DILexicalBlockFile(scope: !13073, file: !9508, discriminator: 0)
!13073 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!13074 = !DILocation(line: 1516, column: 32, scope: !13021, inlinedAt: !13027)
!13075 = !DILocation(line: 248, column: 22, scope: !13017)
!13076 = !DILocation(line: 248, column: 17, scope: !13017)
!13077 = distinct !DISubprogram(name: "current_memory<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9e7730fcb8eb0d41E", scope: !2542, file: !9508, line: 240, type: !13078, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2558, retainedNodes: !13080)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{!12526, !10271}
!13080 = !{!13081, !13082}
!13081 = !DILocalVariable(name: "self", arg: 1, scope: !13077, file: !9508, line: 240, type: !10271)
!13082 = !DILocalVariable(name: "layout", scope: !13083, file: !9508, line: 247, type: !1622, align: 8)
!13083 = distinct !DILexicalBlock(scope: !13077, file: !9508, line: 247, column: 17)
!13084 = !DILocation(line: 240, column: 23, scope: !13077)
!13085 = !DILocalVariable(name: "self", scope: !13086, file: !9508, line: 247, type: !5616, align: 8)
!13086 = !DILexicalBlockFile(scope: !13087, file: !9508, discriminator: 0)
!13087 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h771364f27a359c58E", scope: !5616, file: !5392, line: 1511, type: !12954, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5624, retainedNodes: !13088)
!13088 = !{!13085, !13089}
!13089 = !DILocalVariable(name: "t", scope: !13090, file: !9508, line: 247, type: !1622, align: 8)
!13090 = !DILexicalBlockFile(scope: !13091, file: !9508, discriminator: 0)
!13091 = distinct !DILexicalBlock(scope: !13087, file: !5392, line: 1514, column: 13)
!13092 = !DILocation(line: 247, column: 30, scope: !13086, inlinedAt: !13093)
!13093 = !DILocation(line: 247, column: 30, scope: !13077)
!13094 = !DILocalVariable(name: "pointer", scope: !13095, file: !9508, line: 248, type: !339, align: 8)
!13095 = !DILexicalBlockFile(scope: !13096, file: !9508, discriminator: 0)
!13096 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13097)
!13097 = !{!13094}
!13098 = !DILocation(line: 248, column: 23, scope: !13095, inlinedAt: !13099)
!13099 = !DILocation(line: 137, column: 9, scope: !13100, inlinedAt: !13107)
!13100 = distinct !DISubprogram(name: "cast<alloc::ffi::c_str::CString, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hb93bb14317e53082E", scope: !2545, file: !1586, line: 136, type: !13101, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13106, retainedNodes: !13103)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{!1226, !2545}
!13103 = !{!13104}
!13104 = !DILocalVariable(name: "self", scope: !13105, file: !9508, line: 248, type: !2545, align: 8)
!13105 = !DILexicalBlockFile(scope: !13100, file: !9508, discriminator: 0)
!13106 = !{!2553, !1950}
!13107 = !DILocation(line: 248, column: 23, scope: !13083)
!13108 = !DILocation(line: 241, column: 12, scope: !13077)
!13109 = !DILocation(line: 241, column: 40, scope: !13077)
!13110 = !DILocation(line: 247, column: 49, scope: !13077)
!13111 = !DILocation(line: 242, column: 13, scope: !13077)
!13112 = !DILocation(line: 241, column: 9, scope: !13077)
!13113 = !DILocation(line: 251, column: 6, scope: !13077)
!13114 = !DILocation(line: 247, column: 30, scope: !13090, inlinedAt: !13093)
!13115 = !DILocation(line: 247, column: 21, scope: !13083)
!13116 = !DILocation(line: 248, column: 23, scope: !13105, inlinedAt: !13107)
!13117 = !DILocalVariable(name: "self", scope: !13118, file: !9508, line: 248, type: !2548, align: 8)
!13118 = !DILexicalBlockFile(scope: !13119, file: !9508, discriminator: 0)
!13119 = distinct !DISubprogram(name: "cast<alloc::ffi::c_str::CString, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7af68922fd12c21dE", scope: !2548, file: !445, line: 453, type: !13120, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13106, retainedNodes: !13122)
!13120 = !DISubroutineType(types: !13121)
!13121 = !{!339, !2548}
!13122 = !{!13117}
!13123 = !DILocation(line: 248, column: 23, scope: !13118, inlinedAt: !13124)
!13124 = !DILocation(line: 137, column: 22, scope: !13100, inlinedAt: !13107)
!13125 = !DILocalVariable(name: "self", scope: !13126, file: !9508, line: 248, type: !2548, align: 8)
!13126 = !DILexicalBlockFile(scope: !13127, file: !9508, discriminator: 0)
!13127 = distinct !DISubprogram(name: "as_ptr<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h33005aaea3287215E", scope: !2548, file: !445, line: 330, type: !10285, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !13128)
!13128 = !{!13125}
!13129 = !DILocation(line: 248, column: 23, scope: !13126, inlinedAt: !13130)
!13130 = !DILocation(line: 455, column: 41, scope: !13119, inlinedAt: !13124)
!13131 = !DILocalVariable(name: "ptr", scope: !13132, file: !9508, line: 248, type: !448, align: 8)
!13132 = !DILexicalBlockFile(scope: !13133, file: !9508, discriminator: 0)
!13133 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13134)
!13134 = !{!13131}
!13135 = !DILocation(line: 248, column: 23, scope: !13132, inlinedAt: !13136)
!13136 = !DILocation(line: 455, column: 18, scope: !13119, inlinedAt: !13124)
!13137 = !DILocation(line: 247, column: 30, scope: !13138, inlinedAt: !13140)
!13138 = !DILexicalBlockFile(scope: !13139, file: !9508, discriminator: 0)
!13139 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!13140 = !DILocation(line: 1516, column: 32, scope: !13087, inlinedAt: !13093)
!13141 = !DILocation(line: 248, column: 22, scope: !13083)
!13142 = !DILocation(line: 248, column: 17, scope: !13083)
!13143 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17ha40ac0576ac9daf1E", scope: !1223, file: !9508, line: 240, type: !13144, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13146)
!13144 = !DISubroutineType(types: !13145)
!13145 = !{!12526, !10207}
!13146 = !{!13147, !13148}
!13147 = !DILocalVariable(name: "self", arg: 1, scope: !13143, file: !9508, line: 240, type: !10207)
!13148 = !DILocalVariable(name: "layout", scope: !13149, file: !9508, line: 247, type: !1622, align: 8)
!13149 = distinct !DILexicalBlock(scope: !13143, file: !9508, line: 247, column: 17)
!13150 = !DILocation(line: 240, column: 23, scope: !13143)
!13151 = !DILocalVariable(name: "self", scope: !13152, file: !9508, line: 247, type: !5616, align: 8)
!13152 = !DILexicalBlockFile(scope: !13153, file: !9508, discriminator: 0)
!13153 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h771364f27a359c58E", scope: !5616, file: !5392, line: 1511, type: !12954, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !5624, retainedNodes: !13154)
!13154 = !{!13151, !13155}
!13155 = !DILocalVariable(name: "t", scope: !13156, file: !9508, line: 247, type: !1622, align: 8)
!13156 = !DILexicalBlockFile(scope: !13157, file: !9508, discriminator: 0)
!13157 = distinct !DILexicalBlock(scope: !13153, file: !5392, line: 1514, column: 13)
!13158 = !DILocation(line: 247, column: 30, scope: !13152, inlinedAt: !13159)
!13159 = !DILocation(line: 247, column: 30, scope: !13143)
!13160 = !DILocalVariable(name: "pointer", scope: !13161, file: !9508, line: 248, type: !339, align: 8)
!13161 = !DILexicalBlockFile(scope: !13162, file: !9508, discriminator: 0)
!13162 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13163)
!13163 = !{!13160}
!13164 = !DILocation(line: 248, column: 23, scope: !13161, inlinedAt: !13165)
!13165 = !DILocation(line: 137, column: 9, scope: !13166, inlinedAt: !13172)
!13166 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc191c81963f0265dE", scope: !1226, file: !1586, line: 136, type: !13167, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12218, retainedNodes: !13169)
!13167 = !DISubroutineType(types: !13168)
!13168 = !{!1226, !1226}
!13169 = !{!13170}
!13170 = !DILocalVariable(name: "self", scope: !13171, file: !9508, line: 248, type: !1226, align: 8)
!13171 = !DILexicalBlockFile(scope: !13166, file: !9508, discriminator: 0)
!13172 = !DILocation(line: 248, column: 23, scope: !13149)
!13173 = !DILocation(line: 241, column: 12, scope: !13143)
!13174 = !DILocation(line: 241, column: 40, scope: !13143)
!13175 = !DILocation(line: 247, column: 49, scope: !13143)
!13176 = !DILocation(line: 242, column: 13, scope: !13143)
!13177 = !DILocation(line: 241, column: 9, scope: !13143)
!13178 = !DILocation(line: 251, column: 6, scope: !13143)
!13179 = !DILocation(line: 247, column: 30, scope: !13156, inlinedAt: !13159)
!13180 = !DILocation(line: 247, column: 21, scope: !13149)
!13181 = !DILocation(line: 248, column: 23, scope: !13171, inlinedAt: !13172)
!13182 = !DILocalVariable(name: "self", scope: !13183, file: !9508, line: 248, type: !339, align: 8)
!13183 = !DILexicalBlockFile(scope: !13184, file: !9508, discriminator: 0)
!13184 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7e8ce5a02b90def5E", scope: !339, file: !445, line: 453, type: !13185, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12218, retainedNodes: !13187)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{!339, !339}
!13187 = !{!13182}
!13188 = !DILocation(line: 248, column: 23, scope: !13183, inlinedAt: !13189)
!13189 = !DILocation(line: 137, column: 22, scope: !13166, inlinedAt: !13172)
!13190 = !DILocalVariable(name: "self", scope: !13191, file: !9508, line: 248, type: !339, align: 8)
!13191 = !DILexicalBlockFile(scope: !13192, file: !9508, discriminator: 0)
!13192 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13193)
!13193 = !{!13190}
!13194 = !DILocation(line: 248, column: 23, scope: !13191, inlinedAt: !13195)
!13195 = !DILocation(line: 455, column: 41, scope: !13184, inlinedAt: !13189)
!13196 = !DILocalVariable(name: "ptr", scope: !13197, file: !9508, line: 248, type: !448, align: 8)
!13197 = !DILexicalBlockFile(scope: !13198, file: !9508, discriminator: 0)
!13198 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13199)
!13199 = !{!13196}
!13200 = !DILocation(line: 248, column: 23, scope: !13197, inlinedAt: !13201)
!13201 = !DILocation(line: 455, column: 18, scope: !13184, inlinedAt: !13189)
!13202 = !DILocation(line: 247, column: 30, scope: !13203, inlinedAt: !13205)
!13203 = !DILexicalBlockFile(scope: !13204, file: !9508, discriminator: 0)
!13204 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h95697cfba9cd1929E", scope: !1731, file: !1730, line: 99, type: !21, scopeLine: 99, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !23)
!13205 = !DILocation(line: 1516, column: 32, scope: !13153, inlinedAt: !13159)
!13206 = !DILocation(line: 248, column: 22, scope: !13149)
!13207 = !DILocation(line: 248, column: 17, scope: !13149)
!13208 = distinct !DISubprogram(name: "grow_amortized<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h942ba71c84d3c96cE", scope: !1223, file: !9508, line: 379, type: !13209, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13212)
!13209 = !DISubroutineType(types: !13210)
!13210 = !{!7397, !13211, !9, !9}
!13211 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !1223, size: 64, align: 64, dwarfAddressSpace: 0)
!13212 = !{!13213, !13214, !13215, !13216, !13218, !13220, !13222, !13224, !13226, !13228, !13230, !13232}
!13213 = !DILocalVariable(name: "self", arg: 1, scope: !13208, file: !9508, line: 379, type: !13211)
!13214 = !DILocalVariable(name: "len", arg: 2, scope: !13208, file: !9508, line: 379, type: !9)
!13215 = !DILocalVariable(name: "additional", arg: 3, scope: !13208, file: !9508, line: 379, type: !9)
!13216 = !DILocalVariable(name: "required_cap", scope: !13217, file: !9508, line: 390, type: !9, align: 8)
!13217 = distinct !DILexicalBlock(scope: !13208, file: !9508, line: 390, column: 9)
!13218 = !DILocalVariable(name: "residual", scope: !13219, file: !9508, line: 390, type: !12552, align: 8)
!13219 = distinct !DILexicalBlock(scope: !13208, file: !9508, line: 390, column: 79)
!13220 = !DILocalVariable(name: "val", scope: !13221, file: !9508, line: 390, type: !9, align: 8)
!13221 = distinct !DILexicalBlock(scope: !13208, file: !9508, line: 390, column: 28)
!13222 = !DILocalVariable(name: "cap", scope: !13223, file: !9508, line: 394, type: !9, align: 8)
!13223 = distinct !DILexicalBlock(scope: !13217, file: !9508, line: 394, column: 9)
!13224 = !DILocalVariable(name: "cap", scope: !13225, file: !9508, line: 395, type: !9, align: 8)
!13225 = distinct !DILexicalBlock(scope: !13223, file: !9508, line: 395, column: 9)
!13226 = !DILocalVariable(name: "new_layout", scope: !13227, file: !9508, line: 397, type: !5616, align: 8)
!13227 = distinct !DILexicalBlock(scope: !13225, file: !9508, line: 397, column: 9)
!13228 = !DILocalVariable(name: "ptr", scope: !13229, file: !9508, line: 400, type: !7463, align: 8)
!13229 = distinct !DILexicalBlock(scope: !13227, file: !9508, line: 400, column: 9)
!13230 = !DILocalVariable(name: "residual", scope: !13231, file: !9508, line: 400, type: !12569, align: 8)
!13231 = distinct !DILexicalBlock(scope: !13227, file: !9508, line: 400, column: 82)
!13232 = !DILocalVariable(name: "val", scope: !13233, file: !9508, line: 400, type: !7463, align: 8)
!13233 = distinct !DILexicalBlock(scope: !13227, file: !9508, line: 400, column: 19)
!13234 = !DILocation(line: 379, column: 23, scope: !13208)
!13235 = !DILocation(line: 379, column: 34, scope: !13208)
!13236 = !DILocation(line: 379, column: 46, scope: !13208)
!13237 = !DILocalVariable(name: "self", scope: !13238, file: !9508, line: 390, type: !13256, align: 8)
!13238 = !DILexicalBlockFile(scope: !13239, file: !9508, discriminator: 0)
!13239 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb008529d583aabccE", scope: !5658, file: !5392, line: 2108, type: !13240, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13264, retainedNodes: !13270)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{!13242, !13256}
!13242 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !4233, file: !2, size: 192, align: 64, elements: !13243, templateParams: !23, identifier: "ccacef398e753a28baa2f16407c752af")
!13243 = !{!13244}
!13244 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13242, file: !2, size: 192, align: 64, elements: !13245, templateParams: !23, identifier: "703c1277ae72f090355c7c1f16a451bb", discriminator: !13255)
!13245 = !{!13246, !13251}
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13244, file: !2, baseType: !13247, size: 192, align: 64, extraData: i64 0)
!13247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13242, file: !2, size: 192, align: 64, elements: !13248, templateParams: !13250, identifier: "4f98cda5e3fb88232506af02be49580b")
!13248 = !{!13249}
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13247, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13250 = !{!12616, !5671}
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13244, file: !2, baseType: !13252, size: 192, align: 64, extraData: i64 1)
!13252 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13242, file: !2, size: 192, align: 64, elements: !13253, templateParams: !13250, identifier: "e89370222e515ed45b3f66b5b72e0221")
!13253 = !{!13254}
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13252, file: !2, baseType: !12552, size: 128, align: 64, offset: 64)
!13255 = !DIDerivedType(tag: DW_TAG_member, scope: !13242, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!13256 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !2066, file: !2, size: 192, align: 64, elements: !13257, templateParams: !23, identifier: "685f4db0002d5ba46d63e1af5783d9c2")
!13257 = !{!13258}
!13258 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13256, file: !2, size: 192, align: 64, elements: !13259, templateParams: !23, identifier: "e335e7c6be7e0e0fc06525d9e4caba4e", discriminator: !13269)
!13259 = !{!13260, !13265}
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !13258, file: !2, baseType: !13261, size: 192, align: 64, extraData: i64 0)
!13261 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !13256, file: !2, size: 192, align: 64, elements: !13262, templateParams: !13264, identifier: "2e01abe4897fc3409adca31c6535c8")
!13262 = !{!13263}
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13261, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13264 = !{!243, !7364}
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !13258, file: !2, baseType: !13266, size: 192, align: 64, extraData: i64 1)
!13266 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !13256, file: !2, size: 192, align: 64, elements: !13267, templateParams: !13264, identifier: "14ca7692b185beb861a3013f462584c0")
!13267 = !{!13268}
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13266, file: !2, baseType: !1612, size: 128, align: 64, offset: 64)
!13269 = !DIDerivedType(tag: DW_TAG_member, scope: !13256, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!13270 = !{!13237, !13271, !13274}
!13271 = !DILocalVariable(name: "v", scope: !13272, file: !9508, line: 390, type: !9, align: 8)
!13272 = !DILexicalBlockFile(scope: !13273, file: !9508, discriminator: 0)
!13273 = distinct !DILexicalBlock(scope: !13239, file: !5392, line: 2110, column: 13)
!13274 = !DILocalVariable(name: "e", scope: !13275, file: !9508, line: 390, type: !1612, align: 8)
!13275 = !DILexicalBlockFile(scope: !13276, file: !9508, discriminator: 0)
!13276 = distinct !DILexicalBlock(scope: !13239, file: !5392, line: 2111, column: 13)
!13277 = !DILocation(line: 390, column: 28, scope: !13238, inlinedAt: !13278)
!13278 = !DILocation(line: 390, column: 28, scope: !13208)
!13279 = !DILocalVariable(name: "self", scope: !13280, file: !9508, line: 390, type: !236, align: 8)
!13280 = !DILexicalBlockFile(scope: !13281, file: !9508, discriminator: 0)
!13281 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h88dd6a4fa936874dE", scope: !236, file: !1507, line: 1051, type: !13282, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13264, retainedNodes: !13284)
!13282 = !DISubroutineType(types: !13283)
!13283 = !{!13256, !236, !1612}
!13284 = !{!13279, !13285, !13286}
!13285 = !DILocalVariable(name: "err", scope: !13280, file: !9508, line: 390, type: !1612, align: 8)
!13286 = !DILocalVariable(name: "v", scope: !13287, file: !9508, line: 390, type: !9, align: 8)
!13287 = !DILexicalBlockFile(scope: !13288, file: !9508, discriminator: 0)
!13288 = distinct !DILexicalBlock(scope: !13281, file: !1507, line: 1056, column: 13)
!13289 = !DILocation(line: 390, column: 28, scope: !13280, inlinedAt: !13278)
!13290 = !DILocalVariable(name: "residual", scope: !13291, file: !9508, line: 390, type: !12552, align: 8)
!13291 = !DILexicalBlockFile(scope: !13292, file: !9508, discriminator: 0)
!13292 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcb848b7834ae0a23E", scope: !5393, file: !5392, line: 2123, type: !13293, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13299, retainedNodes: !13295)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{!7397, !12552, !917}
!13295 = !{!13290, !13296}
!13296 = !DILocalVariable(name: "e", scope: !13297, file: !9508, line: 390, type: !1612, align: 8)
!13297 = !DILexicalBlockFile(scope: !13298, file: !9508, discriminator: 0)
!13298 = distinct !DILexicalBlock(scope: !13292, file: !5392, line: 2125, column: 13)
!13299 = !{!1037, !7364, !7503}
!13300 = !DILocation(line: 390, column: 28, scope: !13291, inlinedAt: !13301)
!13301 = !DILocation(line: 390, column: 28, scope: !13219)
!13302 = !DILocalVariable(name: "self", scope: !13303, file: !9508, line: 400, type: !7477, align: 8)
!13303 = !DILexicalBlockFile(scope: !13304, file: !9508, discriminator: 0)
!13304 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha08b01c1e75a9d17E", scope: !5658, file: !5392, line: 2108, type: !13305, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !7485, retainedNodes: !13321)
!13305 = !DISubroutineType(types: !13306)
!13306 = !{!13307, !7477}
!13307 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !4233, file: !2, size: 192, align: 64, elements: !13308, templateParams: !23, identifier: "28f71c38451ad04fdd675178245595c9")
!13308 = !{!13309}
!13309 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13307, file: !2, size: 192, align: 64, elements: !13310, templateParams: !23, identifier: "b0d453054c595b03ca5aa0e02174363d", discriminator: !13320)
!13310 = !{!13311, !13316}
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13309, file: !2, baseType: !13312, size: 192, align: 64, extraData: i64 0)
!13312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13307, file: !2, size: 192, align: 64, elements: !13313, templateParams: !13315, identifier: "571264356a815018a44f4b4443eeee2d")
!13313 = !{!13314}
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13312, file: !2, baseType: !7463, size: 128, align: 64, offset: 64)
!13315 = !{!12658, !11079}
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13309, file: !2, baseType: !13317, size: 192, align: 64, extraData: i64 1)
!13317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13307, file: !2, size: 192, align: 64, elements: !13318, templateParams: !13315, identifier: "c451af23845a94b96b6043b298e1abbe")
!13318 = !{!13319}
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13317, file: !2, baseType: !12569, size: 128, align: 64, offset: 64)
!13320 = !DIDerivedType(tag: DW_TAG_member, scope: !13307, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!13321 = !{!13302, !13322, !13325}
!13322 = !DILocalVariable(name: "v", scope: !13323, file: !9508, line: 400, type: !7463, align: 8)
!13323 = !DILexicalBlockFile(scope: !13324, file: !9508, discriminator: 0)
!13324 = distinct !DILexicalBlock(scope: !13304, file: !5392, line: 2110, column: 13)
!13325 = !DILocalVariable(name: "e", scope: !13326, file: !9508, line: 400, type: !1609, align: 8)
!13326 = !DILexicalBlockFile(scope: !13327, file: !9508, discriminator: 0)
!13327 = distinct !DILexicalBlock(scope: !13304, file: !5392, line: 2111, column: 13)
!13328 = !DILocation(line: 400, column: 19, scope: !13303, inlinedAt: !13329)
!13329 = !DILocation(line: 400, column: 19, scope: !13227)
!13330 = !DILocalVariable(name: "residual", scope: !13331, file: !9508, line: 400, type: !12569, align: 8)
!13331 = !DILexicalBlockFile(scope: !13332, file: !9508, discriminator: 0)
!13332 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb6ca3cf73df699e1E", scope: !5393, file: !5392, line: 2123, type: !13333, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13339, retainedNodes: !13335)
!13333 = !DISubroutineType(types: !13334)
!13334 = !{!7397, !12569, !917}
!13335 = !{!13330, !13336}
!13336 = !DILocalVariable(name: "e", scope: !13337, file: !9508, line: 400, type: !1609, align: 8)
!13337 = !DILexicalBlockFile(scope: !13338, file: !9508, discriminator: 0)
!13338 = distinct !DILexicalBlock(scope: !13332, file: !5392, line: 2125, column: 13)
!13339 = !{!1037, !7406, !7503}
!13340 = !DILocation(line: 400, column: 19, scope: !13331, inlinedAt: !13341)
!13341 = !DILocation(line: 400, column: 19, scope: !13231)
!13342 = !DILocation(line: 383, column: 12, scope: !13208)
!13343 = !DILocation(line: 386, column: 24, scope: !13208)
!13344 = !DILocation(line: 390, column: 62, scope: !13208)
!13345 = !DILocation(line: 390, column: 28, scope: !13287, inlinedAt: !13278)
!13346 = !DILocation(line: 390, column: 28, scope: !13272, inlinedAt: !13278)
!13347 = !DILocation(line: 390, column: 28, scope: !13275, inlinedAt: !13278)
!13348 = !DILocation(line: 390, column: 28, scope: !13221)
!13349 = !DILocation(line: 390, column: 13, scope: !13217)
!13350 = !DILocation(line: 394, column: 28, scope: !13217)
!13351 = !DILocalVariable(name: "v1", scope: !13352, file: !9508, line: 394, type: !9, align: 8)
!13352 = !DILexicalBlockFile(scope: !13353, file: !9508, discriminator: 0)
!13353 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h04189f5807162cf6E", scope: !200, file: !2903, line: 1254, type: !2878, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !13354)
!13354 = !{!13351, !13355}
!13355 = !DILocalVariable(name: "v2", scope: !13352, file: !9508, line: 394, type: !9, align: 8)
!13356 = !DILocation(line: 394, column: 19, scope: !13352, inlinedAt: !13357)
!13357 = !DILocation(line: 394, column: 19, scope: !13217)
!13358 = !DILocation(line: 394, column: 42, scope: !13217)
!13359 = !DILocalVariable(name: "self", scope: !13360, file: !9508, line: 394, type: !9, align: 8)
!13360 = !DILexicalBlockFile(scope: !13361, file: !9508, discriminator: 0)
!13361 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h7d5e05e5eb2b9cbcE", scope: !13362, file: !2903, line: 796, type: !2878, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13365, retainedNodes: !13363)
!13362 = !DINamespace(name: "Ord", scope: !200)
!13363 = !{!13359, !13364}
!13364 = !DILocalVariable(name: "other", scope: !13360, file: !9508, line: 394, type: !9, align: 8)
!13365 = !{!13366}
!13366 = !DITemplateTypeParameter(name: "Self", type: !9)
!13367 = !DILocation(line: 394, column: 19, scope: !13360, inlinedAt: !13368)
!13368 = !DILocation(line: 1255, column: 5, scope: !13353, inlinedAt: !13357)
!13369 = !DILocation(line: 394, column: 13, scope: !13223)
!13370 = !DILocation(line: 390, column: 79, scope: !13208)
!13371 = !DILocation(line: 390, column: 79, scope: !13219)
!13372 = !DILocation(line: 390, column: 28, scope: !13297, inlinedAt: !13301)
!13373 = !DILocalVariable(name: "kind", scope: !13374, file: !9508, line: 390, type: !1612, align: 8)
!13374 = !DILexicalBlockFile(scope: !13375, file: !9508, discriminator: 0)
!13375 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hee871011a5f2812eE", scope: !1606, file: !1605, line: 116, type: !1607, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13376)
!13376 = !{!13373}
!13377 = !DILocation(line: 390, column: 28, scope: !13374, inlinedAt: !13378)
!13378 = !DILocation(line: 2125, column: 27, scope: !13298, inlinedAt: !13301)
!13379 = !DILocation(line: 1, column: 1, scope: !13380)
!13380 = !DILexicalBlockFile(scope: !13208, file: !4302, discriminator: 0)
!13381 = !DILocation(line: 395, column: 52, scope: !13223)
!13382 = !DILocalVariable(name: "v2", scope: !13383, file: !9508, line: 395, type: !9, align: 8)
!13383 = !DILexicalBlockFile(scope: !13384, file: !9508, discriminator: 0)
!13384 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h04189f5807162cf6E", scope: !200, file: !2903, line: 1254, type: !2878, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !13385)
!13385 = !{!13386, !13382}
!13386 = !DILocalVariable(name: "v1", scope: !13383, file: !9508, line: 395, type: !9, align: 8)
!13387 = !DILocation(line: 395, column: 19, scope: !13383, inlinedAt: !13388)
!13388 = !DILocation(line: 395, column: 19, scope: !13223)
!13389 = !DILocalVariable(name: "self", scope: !13390, file: !9508, line: 395, type: !9, align: 8)
!13390 = !DILexicalBlockFile(scope: !13391, file: !9508, discriminator: 0)
!13391 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h7d5e05e5eb2b9cbcE", scope: !13362, file: !2903, line: 796, type: !2878, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13365, retainedNodes: !13392)
!13392 = !{!13389, !13393}
!13393 = !DILocalVariable(name: "other", scope: !13390, file: !9508, line: 395, type: !9, align: 8)
!13394 = !DILocation(line: 395, column: 19, scope: !13390, inlinedAt: !13395)
!13395 = !DILocation(line: 1255, column: 5, scope: !13384, inlinedAt: !13388)
!13396 = !DILocation(line: 395, column: 13, scope: !13225)
!13397 = !DILocation(line: 397, column: 26, scope: !13225)
!13398 = !DILocation(line: 397, column: 13, scope: !13227)
!13399 = !DILocation(line: 400, column: 43, scope: !13227)
!13400 = !DILocation(line: 400, column: 66, scope: !13227)
!13401 = !DILocation(line: 400, column: 19, scope: !13323, inlinedAt: !13329)
!13402 = !DILocation(line: 400, column: 19, scope: !13326, inlinedAt: !13329)
!13403 = !DILocation(line: 400, column: 19, scope: !13233)
!13404 = !DILocation(line: 400, column: 13, scope: !13229)
!13405 = !DILocation(line: 401, column: 9, scope: !13229)
!13406 = !DILocation(line: 400, column: 82, scope: !13227)
!13407 = !DILocation(line: 400, column: 82, scope: !13231)
!13408 = !DILocation(line: 400, column: 19, scope: !13337, inlinedAt: !13341)
!13409 = !DILocation(line: 1, column: 1, scope: !13410)
!13410 = !DILexicalBlockFile(scope: !13217, file: !4302, discriminator: 0)
!13411 = !DILocation(line: 403, column: 6, scope: !13208)
!13412 = !DILocation(line: 402, column: 9, scope: !13229)
!13413 = !DILocation(line: 386, column: 20, scope: !13208)
!13414 = distinct !DISubprogram(name: "set_ptr_and_cap<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h59fb0925936be92bE", scope: !1223, file: !9508, line: 364, type: !13415, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13417)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{null, !13211, !7463, !9}
!13417 = !{!13418, !13419, !13420}
!13418 = !DILocalVariable(name: "self", arg: 1, scope: !13414, file: !9508, line: 364, type: !13211)
!13419 = !DILocalVariable(name: "ptr", arg: 2, scope: !13414, file: !9508, line: 364, type: !7463)
!13420 = !DILocalVariable(name: "cap", arg: 3, scope: !13414, file: !9508, line: 364, type: !9)
!13421 = !DILocation(line: 364, column: 24, scope: !13414)
!13422 = !DILocation(line: 364, column: 35, scope: !13414)
!13423 = !DILocation(line: 364, column: 55, scope: !13414)
!13424 = !DILocalVariable(name: "self", scope: !13425, file: !9508, line: 368, type: !339, align: 8)
!13425 = !DILexicalBlockFile(scope: !13426, file: !9508, discriminator: 0)
!13426 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13427)
!13427 = !{!13424}
!13428 = !DILocation(line: 368, column: 51, scope: !13425, inlinedAt: !13429)
!13429 = !DILocation(line: 368, column: 51, scope: !13414)
!13430 = !DILocalVariable(name: "self", scope: !13431, file: !9508, line: 368, type: !7463, align: 8)
!13431 = !DILexicalBlockFile(scope: !13432, file: !9508, discriminator: 0)
!13432 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h43e1222c2a8f698bE", scope: !7463, file: !445, line: 453, type: !10610, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !12218, retainedNodes: !13433)
!13433 = !{!13430}
!13434 = !DILocation(line: 368, column: 51, scope: !13431, inlinedAt: !13429)
!13435 = !DILocalVariable(name: "self", scope: !13436, file: !9508, line: 368, type: !7463, align: 8)
!13436 = !DILexicalBlockFile(scope: !13437, file: !9508, discriminator: 0)
!13437 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613907c4e89b0fe2E", scope: !7463, file: !445, line: 330, type: !10617, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13438)
!13438 = !{!13435}
!13439 = !DILocation(line: 368, column: 51, scope: !13436, inlinedAt: !13440)
!13440 = !DILocation(line: 455, column: 41, scope: !13432, inlinedAt: !13429)
!13441 = !DILocalVariable(name: "ptr", scope: !13442, file: !9508, line: 368, type: !448, align: 8)
!13442 = !DILexicalBlockFile(scope: !13443, file: !9508, discriminator: 0)
!13443 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13444)
!13444 = !{!13441}
!13445 = !DILocation(line: 368, column: 51, scope: !13442, inlinedAt: !13446)
!13446 = !DILocation(line: 455, column: 18, scope: !13432, inlinedAt: !13429)
!13447 = !DILocalVariable(name: "ptr", scope: !13448, file: !9508, line: 368, type: !448, align: 8)
!13448 = !DILexicalBlockFile(scope: !13449, file: !9508, discriminator: 0)
!13449 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hec8679f9243539c9E", scope: !1226, file: !1586, line: 85, type: !12905, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13450)
!13450 = !{!13447}
!13451 = !DILocation(line: 368, column: 29, scope: !13448, inlinedAt: !13452)
!13452 = !DILocation(line: 368, column: 29, scope: !13414)
!13453 = !DILocalVariable(name: "ptr", scope: !13454, file: !9508, line: 368, type: !448, align: 8)
!13454 = !DILexicalBlockFile(scope: !13455, file: !9508, discriminator: 0)
!13455 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13456)
!13456 = !{!13453}
!13457 = !DILocation(line: 368, column: 29, scope: !13454, inlinedAt: !13458)
!13458 = !DILocation(line: 87, column: 36, scope: !13449, inlinedAt: !13452)
!13459 = !DILocation(line: 368, column: 9, scope: !13414)
!13460 = !DILocation(line: 369, column: 9, scope: !13414)
!13461 = !DILocation(line: 370, column: 6, scope: !13414)
!13462 = distinct !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17heb300a1c8db8d5d4E", scope: !1223, file: !9508, line: 121, type: !13463, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13465)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!1223, !1234}
!13465 = !{!13466}
!13466 = !DILocalVariable(name: "alloc", arg: 1, scope: !13462, file: !9508, line: 121, type: !1234)
!13467 = !DILocation(line: 121, column: 25, scope: !13462)
!13468 = !DILocalVariable(name: "pointer", scope: !13469, file: !9508, line: 123, type: !339, align: 8)
!13469 = !DILexicalBlockFile(scope: !13470, file: !9508, discriminator: 0)
!13470 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h9240df87c665c011E", scope: !11417, file: !1586, line: 190, type: !11418, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13471)
!13471 = !{!13468}
!13472 = !DILocation(line: 123, column: 21, scope: !13469, inlinedAt: !13473)
!13473 = !DILocation(line: 73, column: 9, scope: !13474, inlinedAt: !13477)
!13474 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h49863b3f5a465df9E", scope: !1226, file: !1586, line: 72, type: !13475, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{!1226}
!13477 = !DILocation(line: 123, column: 21, scope: !13462)
!13478 = !DILocation(line: 123, column: 21, scope: !13479, inlinedAt: !13481)
!13479 = !DILexicalBlockFile(scope: !13480, file: !9508, discriminator: 0)
!13480 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h86963cf315d3d296E", scope: !79, file: !423, line: 460, type: !424, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!13481 = !DILocation(line: 95, column: 52, scope: !13482, inlinedAt: !13489)
!13482 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hbd5cd1f44d9b924fE", scope: !339, file: !445, line: 90, type: !13483, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13485)
!13483 = !DISubroutineType(types: !13484)
!13484 = !{!339}
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "ptr", scope: !13487, file: !9508, line: 123, type: !448, align: 8)
!13487 = !DILexicalBlockFile(scope: !13488, file: !9508, discriminator: 0)
!13488 = distinct !DILexicalBlock(scope: !13482, file: !445, line: 95, column: 13)
!13489 = !DILocation(line: 73, column: 20, scope: !13474, inlinedAt: !13477)
!13490 = !DILocalVariable(name: "addr", scope: !13491, file: !9508, line: 123, type: !9, align: 8)
!13491 = !DILexicalBlockFile(scope: !13492, file: !9508, discriminator: 0)
!13492 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h63583657686c1625E", scope: !260, file: !682, line: 569, type: !10856, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13493)
!13493 = !{!13490}
!13494 = !DILocation(line: 123, column: 21, scope: !13491, inlinedAt: !13495)
!13495 = !DILocation(line: 95, column: 23, scope: !13482, inlinedAt: !13489)
!13496 = !DILocation(line: 123, column: 21, scope: !13487, inlinedAt: !13489)
!13497 = !DILocalVariable(name: "ptr", scope: !13498, file: !9508, line: 123, type: !448, align: 8)
!13498 = !DILexicalBlockFile(scope: !13499, file: !9508, discriminator: 0)
!13499 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13500)
!13500 = !{!13497}
!13501 = !DILocation(line: 123, column: 21, scope: !13498, inlinedAt: !13502)
!13502 = !DILocation(line: 96, column: 13, scope: !13488, inlinedAt: !13489)
!13503 = !DILocation(line: 123, column: 9, scope: !13462)
!13504 = !DILocation(line: 124, column: 6, scope: !13462)
!13505 = !DILocation(line: 124, column: 5, scope: !13462)
!13506 = !DILocation(line: 121, column: 5, scope: !13462)
!13507 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h1c9f411d14b580e6E", scope: !1223, file: !9508, line: 274, type: !13508, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13510)
!13508 = !DISubroutineType(types: !13509)
!13509 = !{null, !13211, !9, !9}
!13510 = !{!13511, !13512, !13513}
!13511 = !DILocalVariable(name: "self", arg: 1, scope: !13507, file: !9508, line: 274, type: !13211)
!13512 = !DILocalVariable(name: "len", arg: 2, scope: !13507, file: !9508, line: 274, type: !9)
!13513 = !DILocalVariable(name: "additional", arg: 3, scope: !13507, file: !9508, line: 274, type: !9)
!13514 = !DILocation(line: 274, column: 20, scope: !13507)
!13515 = !DILocation(line: 274, column: 31, scope: !13507)
!13516 = !DILocation(line: 274, column: 43, scope: !13507)
!13517 = !DILocation(line: 288, column: 12, scope: !13507)
!13518 = !DILocation(line: 291, column: 6, scope: !13507)
!13519 = !DILocation(line: 289, column: 13, scope: !13507)
!13520 = !DILocation(line: 288, column: 9, scope: !13507)
!13521 = distinct !DISubprogram(name: "do_reserve_and_handle<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h8f74efdab9a3235bE", scope: !13522, file: !9508, line: 280, type: !13508, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13524)
!13522 = !DINamespace(name: "reserve", scope: !13523)
!13523 = !DINamespace(name: "{impl#1}", scope: !222)
!13524 = !{!13525, !13526, !13527}
!13525 = !DILocalVariable(name: "slf", arg: 1, scope: !13521, file: !9508, line: 281, type: !13211)
!13526 = !DILocalVariable(name: "len", arg: 2, scope: !13521, file: !9508, line: 282, type: !9)
!13527 = !DILocalVariable(name: "additional", arg: 3, scope: !13521, file: !9508, line: 283, type: !9)
!13528 = !DILocation(line: 281, column: 13, scope: !13521)
!13529 = !DILocation(line: 282, column: 13, scope: !13521)
!13530 = !DILocation(line: 283, column: 13, scope: !13521)
!13531 = !DILocation(line: 285, column: 28, scope: !13521)
!13532 = !DILocation(line: 285, column: 13, scope: !13521)
!13533 = !DILocation(line: 286, column: 10, scope: !13521)
!13534 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h06a2e774bb30b37eE", scope: !13535, file: !10028, line: 2227, type: !2996, scopeLine: 2227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13536)
!13535 = !DINamespace(name: "{impl#20}", scope: !2359)
!13536 = !{!13537, !13538}
!13537 = !DILocalVariable(name: "self", arg: 1, scope: !13534, file: !10028, line: 2227, type: !2985)
!13538 = !DILocalVariable(name: "f", arg: 2, scope: !13534, file: !10028, line: 2227, type: !2082)
!13539 = !DILocation(line: 2227, column: 12, scope: !13534)
!13540 = !DILocation(line: 2227, column: 19, scope: !13534)
!13541 = !DILocation(line: 2228, column: 28, scope: !13534)
!13542 = !DILocation(line: 2228, column: 9, scope: !13534)
!13543 = !DILocation(line: 2229, column: 6, scope: !13534)
!13544 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h9b8f622112c8538eE", scope: !10596, file: !7756, line: 240, type: !13545, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13547)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{null, !7760, !339, !1622}
!13547 = !{!13548, !13549, !13550}
!13548 = !DILocalVariable(name: "self", arg: 1, scope: !13544, file: !7756, line: 240, type: !7760)
!13549 = !DILocalVariable(name: "ptr", arg: 2, scope: !13544, file: !7756, line: 240, type: !339)
!13550 = !DILocalVariable(name: "layout", arg: 3, scope: !13544, file: !7756, line: 240, type: !1622)
!13551 = !DILocation(line: 240, column: 26, scope: !13544)
!13552 = !DILocation(line: 240, column: 33, scope: !13544)
!13553 = !DILocation(line: 240, column: 51, scope: !13544)
!13554 = !DILocalVariable(name: "layout", scope: !13555, file: !7756, line: 244, type: !1622, align: 8)
!13555 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h48b0391185af594cE", scope: !1235, file: !7756, line: 106, type: !13556, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13558)
!13556 = !DISubroutineType(types: !13557)
!13557 = !{null, !448, !1622}
!13558 = !{!13559, !13554}
!13559 = !DILocalVariable(name: "ptr", scope: !13555, file: !7756, line: 244, type: !448, align: 8)
!13560 = !DILocation(line: 244, column: 22, scope: !13555, inlinedAt: !13561)
!13561 = !DILocation(line: 244, column: 22, scope: !13544)
!13562 = !DILocalVariable(name: "self", scope: !13563, file: !7756, line: 244, type: !10764, align: 8)
!13563 = !DILexicalBlockFile(scope: !13564, file: !7756, discriminator: 0)
!13564 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h967c9f044c6d57d7E", scope: !10764, file: !10763, line: 81, type: !10768, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13565)
!13565 = !{!13562}
!13566 = !DILocation(line: 244, column: 22, scope: !13563, inlinedAt: !13567)
!13567 = !DILocation(line: 119, column: 9, scope: !13568, inlinedAt: !13572)
!13568 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h51b790556e71eae8E", scope: !1622, file: !5605, line: 118, type: !10774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13569)
!13569 = !{!13570}
!13570 = !DILocalVariable(name: "self", scope: !13571, file: !7756, line: 244, type: !7494, align: 8)
!13571 = !DILexicalBlockFile(scope: !13568, file: !7756, discriminator: 0)
!13572 = !DILocation(line: 107, column: 49, scope: !13555, inlinedAt: !13561)
!13573 = !DILocalVariable(name: "self", scope: !13574, file: !7756, line: 244, type: !1628, align: 8)
!13574 = !DILexicalBlockFile(scope: !13575, file: !7756, discriminator: 0)
!13575 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hd867a12a25f04de3E", scope: !1628, file: !5747, line: 37, type: !10790, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13576)
!13576 = !{!13573}
!13577 = !DILocation(line: 244, column: 22, scope: !13574, inlinedAt: !13567)
!13578 = !DILocation(line: 241, column: 12, scope: !13544)
!13579 = !DILocalVariable(name: "self", scope: !13580, file: !7756, line: 241, type: !7494, align: 8)
!13580 = !DILexicalBlockFile(scope: !13581, file: !7756, discriminator: 0)
!13581 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13582)
!13582 = !{!13579}
!13583 = !DILocation(line: 241, column: 12, scope: !13580, inlinedAt: !13578)
!13584 = !DILocation(line: 241, column: 9, scope: !13544)
!13585 = !DILocation(line: 244, column: 30, scope: !13544)
!13586 = !DILocalVariable(name: "self", scope: !13587, file: !7756, line: 244, type: !339, align: 8)
!13587 = !DILexicalBlockFile(scope: !13588, file: !7756, discriminator: 0)
!13588 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13589)
!13589 = !{!13586}
!13590 = !DILocation(line: 244, column: 30, scope: !13587, inlinedAt: !13585)
!13591 = !DILocation(line: 244, column: 44, scope: !13544)
!13592 = !DILocalVariable(name: "self", scope: !13593, file: !7756, line: 244, type: !7494, align: 8)
!13593 = !DILexicalBlockFile(scope: !13594, file: !7756, discriminator: 0)
!13594 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h1dfa364927bc501fE", scope: !1622, file: !5605, line: 108, type: !10774, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13595)
!13595 = !{!13592}
!13596 = !DILocation(line: 244, column: 22, scope: !13593, inlinedAt: !13597)
!13597 = !DILocation(line: 107, column: 34, scope: !13555, inlinedAt: !13561)
!13598 = !DILocation(line: 244, column: 22, scope: !13571, inlinedAt: !13572)
!13599 = !DILocalVariable(name: "n", scope: !13600, file: !7756, line: 244, type: !9, align: 8)
!13600 = !DILexicalBlockFile(scope: !13601, file: !7756, discriminator: 0)
!13601 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haffc122205880124E", scope: !10764, file: !10763, line: 55, type: !10840, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13602)
!13602 = !{!13599, !13603}
!13603 = !DILocalVariable(name: "runtime", scope: !13604, file: !7756, line: 244, type: !10846, align: 8)
!13604 = !DILexicalBlockFile(scope: !13605, file: !7756, discriminator: 0)
!13605 = distinct !DILexicalBlock(scope: !13601, file: !640, line: 2319, column: 13)
!13606 = !DILocation(line: 244, column: 22, scope: !13600, inlinedAt: !13607)
!13607 = !DILocation(line: 39, column: 18, scope: !13575, inlinedAt: !13567)
!13608 = !DILocation(line: 246, column: 6, scope: !13544)
!13609 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h5785f9c16d7fe8f4E", scope: !10596, file: !7756, line: 235, type: !10597, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13610)
!13610 = !{!13611, !13612}
!13611 = !DILocalVariable(name: "self", arg: 1, scope: !13609, file: !7756, line: 235, type: !7760)
!13612 = !DILocalVariable(name: "layout", arg: 2, scope: !13609, file: !7756, line: 235, type: !1622)
!13613 = !DILocation(line: 235, column: 24, scope: !13609)
!13614 = !DILocation(line: 235, column: 31, scope: !13609)
!13615 = !DILocation(line: 236, column: 9, scope: !13609)
!13616 = !DILocation(line: 237, column: 6, scope: !13609)
!13617 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he40aebe96a1d2471E", scope: !10596, file: !7756, line: 249, type: !13618, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13620)
!13618 = !DISubroutineType(types: !13619)
!13619 = !{!7455, !7760, !339, !1622, !1622}
!13620 = !{!13621, !13622, !13623, !13624}
!13621 = !DILocalVariable(name: "self", arg: 1, scope: !13617, file: !7756, line: 250, type: !7760)
!13622 = !DILocalVariable(name: "ptr", arg: 2, scope: !13617, file: !7756, line: 251, type: !339)
!13623 = !DILocalVariable(name: "old_layout", arg: 3, scope: !13617, file: !7756, line: 252, type: !1622)
!13624 = !DILocalVariable(name: "new_layout", arg: 4, scope: !13617, file: !7756, line: 253, type: !1622)
!13625 = !DILocation(line: 250, column: 9, scope: !13617)
!13626 = !DILocation(line: 251, column: 9, scope: !13617)
!13627 = !DILocation(line: 252, column: 9, scope: !13617)
!13628 = !DILocation(line: 253, column: 9, scope: !13617)
!13629 = !DILocation(line: 256, column: 18, scope: !13617)
!13630 = !DILocation(line: 257, column: 6, scope: !13617)
!13631 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17ha2beffcab7803646E", scope: !10596, file: !7756, line: 230, type: !10597, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13632)
!13632 = !{!13633, !13634}
!13633 = !DILocalVariable(name: "self", arg: 1, scope: !13631, file: !7756, line: 230, type: !7760)
!13634 = !DILocalVariable(name: "layout", arg: 2, scope: !13631, file: !7756, line: 230, type: !1622)
!13635 = !DILocation(line: 230, column: 17, scope: !13631)
!13636 = !DILocation(line: 230, column: 24, scope: !13631)
!13637 = !DILocation(line: 231, column: 9, scope: !13631)
!13638 = !DILocation(line: 232, column: 6, scope: !13631)
!13639 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5d0ec4a824946602E", scope: !13640, file: !10028, line: 2412, type: !13641, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13643)
!13640 = !DINamespace(name: "{impl#37}", scope: !2359)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{!48, !2985}
!13643 = !{!13644}
!13644 = !DILocalVariable(name: "self", arg: 1, scope: !13639, file: !10028, line: 2412, type: !2985)
!13645 = !DILocation(line: 2412, column: 14, scope: !13639)
!13646 = !DILocation(line: 2413, column: 43, scope: !13639)
!13647 = !DILocalVariable(name: "self", scope: !13648, file: !10028, line: 2413, type: !2476, align: 8)
!13648 = !DILexicalBlockFile(scope: !13649, file: !10028, discriminator: 0)
!13649 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E", scope: !2473, file: !2472, line: 2531, type: !2474, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13650)
!13650 = !{!13647}
!13651 = !DILocation(line: 2413, column: 43, scope: !13648, inlinedAt: !13646)
!13652 = !DILocalVariable(name: "data", scope: !13653, file: !10028, line: 2413, type: !342, align: 8)
!13653 = !DILexicalBlockFile(scope: !13654, file: !10028, discriminator: 0)
!13654 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h7379c702bbd7bb59E", scope: !2484, file: !2483, line: 90, type: !2485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13655)
!13655 = !{!13652, !13656, !13657}
!13656 = !DILocalVariable(name: "len", scope: !13653, file: !10028, line: 2413, type: !9, align: 8)
!13657 = !DILocalVariable(name: "runtime", scope: !13658, file: !10028, line: 2413, type: !2492, align: 8)
!13658 = !DILexicalBlockFile(scope: !13659, file: !10028, discriminator: 0)
!13659 = distinct !DILexicalBlock(scope: !13654, file: !640, line: 2319, column: 13)
!13660 = !DILocation(line: 2413, column: 43, scope: !13653, inlinedAt: !13661)
!13661 = !DILocation(line: 2532, column: 18, scope: !13649, inlinedAt: !13646)
!13662 = !DILocalVariable(name: "data", scope: !13663, file: !10028, line: 2413, type: !342, align: 8)
!13663 = !DILexicalBlockFile(scope: !13664, file: !10028, discriminator: 0)
!13664 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13665)
!13665 = !{!13662, !13666}
!13666 = !DILocalVariable(name: "len", scope: !13663, file: !10028, line: 2413, type: !9, align: 8)
!13667 = !DILocation(line: 2413, column: 43, scope: !13663, inlinedAt: !13668)
!13668 = !DILocation(line: 97, column: 11, scope: !13654, inlinedAt: !13661)
!13669 = !DILocalVariable(name: "self", scope: !13670, file: !10028, line: 2413, type: !342, align: 8)
!13670 = !DILexicalBlockFile(scope: !13671, file: !10028, discriminator: 0)
!13671 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !13672)
!13672 = !{!13669}
!13673 = !DILocation(line: 2413, column: 43, scope: !13670, inlinedAt: !13674)
!13674 = !DILocation(line: 695, column: 20, scope: !13664, inlinedAt: !13668)
!13675 = !DILocalVariable(name: "data_address", scope: !13676, file: !10028, line: 2413, type: !6, align: 8)
!13676 = !DILexicalBlockFile(scope: !13677, file: !10028, discriminator: 0)
!13677 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13678)
!13678 = !{!13675, !13679}
!13679 = !DILocalVariable(name: "metadata", scope: !13676, file: !10028, line: 2413, type: !9, align: 8)
!13680 = !DILocation(line: 2413, column: 43, scope: !13676, inlinedAt: !13681)
!13681 = !DILocation(line: 695, column: 5, scope: !13664, inlinedAt: !13668)
!13682 = !DILocalVariable(name: "v", scope: !13683, file: !10028, line: 2413, type: !892, align: 8)
!13683 = !DILexicalBlockFile(scope: !13684, file: !10028, discriminator: 0)
!13684 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17hf2d36401b430b233E", scope: !7617, file: !7616, line: 170, type: !13685, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13687)
!13685 = !DISubroutineType(types: !13686)
!13686 = !{!48, !892}
!13687 = !{!13682}
!13688 = !DILocation(line: 2413, column: 18, scope: !13683, inlinedAt: !13689)
!13689 = !DILocation(line: 2413, column: 18, scope: !13639)
!13690 = !DILocation(line: 2414, column: 6, scope: !13639)
!13691 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hc804b29b9b75cce0E", scope: !13693, file: !13692, line: 402, type: !3070, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3053, retainedNodes: !13694)
!13692 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/borrow.rs", directory: "", checksumkind: CSK_MD5, checksum: "9262be54c5a451be8be12a428575d424")
!13693 = !DINamespace(name: "{impl#10}", scope: !3045)
!13694 = !{!13695, !13696, !13697, !13699}
!13695 = !DILocalVariable(name: "self", arg: 1, scope: !13691, file: !13692, line: 402, type: !3043)
!13696 = !DILocalVariable(name: "f", arg: 2, scope: !13691, file: !13692, line: 402, type: !2082)
!13697 = !DILocalVariable(name: "b", scope: !13698, file: !13692, line: 404, type: !270, align: 8)
!13698 = distinct !DILexicalBlock(scope: !13691, file: !13692, line: 404, column: 13)
!13699 = !DILocalVariable(name: "o", scope: !13700, file: !13692, line: 405, type: !2985, align: 8)
!13700 = distinct !DILexicalBlock(scope: !13691, file: !13692, line: 405, column: 13)
!13701 = !DILocation(line: 402, column: 12, scope: !13691)
!13702 = !DILocation(line: 402, column: 19, scope: !13691)
!13703 = !DILocation(line: 403, column: 15, scope: !13691)
!13704 = !DILocation(line: 403, column: 9, scope: !13691)
!13705 = !DILocation(line: 404, column: 22, scope: !13691)
!13706 = !DILocation(line: 404, column: 22, scope: !13698)
!13707 = !DILocation(line: 404, column: 32, scope: !13698)
!13708 = !DILocation(line: 405, column: 19, scope: !13691)
!13709 = !DILocation(line: 405, column: 19, scope: !13700)
!13710 = !DILocation(line: 405, column: 29, scope: !13700)
!13711 = !DILocation(line: 405, column: 51, scope: !13691)
!13712 = !DILocation(line: 407, column: 6, scope: !13691)
!13713 = !DILocation(line: 404, column: 54, scope: !13691)
!13714 = distinct !DISubprogram(name: "drop", linkageName: "_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h97759489e03cba99E", scope: !13716, file: !13715, line: 701, type: !13717, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13720)
!13715 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/alloc/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "12741578c6c1bb5d06aa6e39a6fe5653")
!13716 = !DINamespace(name: "{impl#2}", scope: !2530)
!13717 = !DISubroutineType(types: !13718)
!13718 = !{null, !13719}
!13719 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !2529, size: 64, align: 64, dwarfAddressSpace: 0)
!13720 = !{!13721}
!13721 = !DILocalVariable(name: "self", arg: 1, scope: !13714, file: !13715, line: 701, type: !13719)
!13722 = !DILocation(line: 701, column: 13, scope: !13714)
!13723 = !DILocation(line: 703, column: 14, scope: !13714)
!13724 = !DILocalVariable(name: "self", scope: !13725, file: !13715, line: 703, type: !939, align: 8)
!13725 = !DILexicalBlockFile(scope: !13726, file: !13715, discriminator: 0)
!13726 = distinct !DISubprogram(name: "get_unchecked_mut<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h5a31f57afd5d9a40E", scope: !5968, file: !5967, line: 436, type: !13727, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13731, retainedNodes: !13729)
!13727 = !DISubroutineType(types: !13728)
!13728 = !{!5109, !939, !9}
!13729 = !{!13724, !13730}
!13730 = !DILocalVariable(name: "index", scope: !13725, file: !13715, line: 703, type: !9, align: 8)
!13731 = !{!344, !8259}
!13732 = !DILocation(line: 703, column: 14, scope: !13725, inlinedAt: !13723)
!13733 = !DILocalVariable(name: "slice", scope: !13734, file: !13715, line: 703, type: !715, align: 8)
!13734 = !DILexicalBlockFile(scope: !13735, file: !13715, discriminator: 0)
!13735 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h714f55546eb7829bE", scope: !8265, file: !617, line: 231, type: !13736, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13738)
!13736 = !DISubroutineType(types: !13737)
!13737 = !{!448, !9, !715}
!13738 = !{!13739, !13733, !13740}
!13739 = !DILocalVariable(name: "self", scope: !13734, file: !13715, line: 703, type: !9, align: 8)
!13740 = !DILocalVariable(name: "runtime", scope: !13741, file: !13715, line: 703, type: !13743, align: 8)
!13741 = !DILexicalBlockFile(scope: !13742, file: !13715, discriminator: 0)
!13742 = distinct !DILexicalBlock(scope: !13735, file: !640, line: 2319, column: 13)
!13743 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !8279, file: !2, size: 128, align: 64, elements: !13744, templateParams: !23, identifier: "5a3d0f599be33ca9eda99a8690ad310c")
!13744 = !{!13745, !13746}
!13745 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !13743, file: !2, baseType: !387, size: 64, align: 64)
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !13743, file: !2, baseType: !731, size: 64, align: 64, offset: 64)
!13747 = !DILocation(line: 703, column: 14, scope: !13734, inlinedAt: !13748)
!13748 = !DILocation(line: 443, column: 24, scope: !13726, inlinedAt: !13723)
!13749 = !DILocalVariable(name: "self", scope: !13750, file: !13715, line: 703, type: !715, align: 8)
!13750 = !DILexicalBlockFile(scope: !13751, file: !13715, discriminator: 0)
!13751 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h43435e6e9174c7c9E", scope: !739, file: !455, line: 1759, type: !740, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13752)
!13752 = !{!13749}
!13753 = !DILocation(line: 703, column: 14, scope: !13750, inlinedAt: !13754)
!13754 = !DILocation(line: 235, column: 13, scope: !13735, inlinedAt: !13748)
!13755 = !DILocalVariable(name: "self", scope: !13756, file: !13715, line: 703, type: !448, align: 8)
!13756 = !DILexicalBlockFile(scope: !13757, file: !13715, discriminator: 0)
!13757 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9f321a7d1697cdfcE", scope: !456, file: !455, line: 977, type: !747, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13758)
!13758 = !{!13755, !13759}
!13759 = !DILocalVariable(name: "count", scope: !13756, file: !13715, line: 703, type: !9, align: 8)
!13760 = !DILocation(line: 703, column: 14, scope: !13756, inlinedAt: !13754)
!13761 = !DILocalVariable(name: "self", scope: !13762, file: !13715, line: 703, type: !448, align: 8)
!13762 = !DILexicalBlockFile(scope: !13763, file: !13715, discriminator: 0)
!13763 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8858ce9471ea0608E", scope: !456, file: !455, line: 462, type: !756, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13764)
!13764 = !{!13761, !13765}
!13765 = !DILocalVariable(name: "count", scope: !13762, file: !13715, line: 703, type: !674, align: 8)
!13766 = !DILocation(line: 703, column: 14, scope: !13762, inlinedAt: !13767)
!13767 = !DILocation(line: 982, column: 18, scope: !13757, inlinedAt: !13754)
!13768 = !DILocation(line: 703, column: 13, scope: !13714)
!13769 = !DILocation(line: 705, column: 6, scope: !13714)
!13770 = distinct !DISubprogram(name: "drop", linkageName: "_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17he940f7859dbd9588E", scope: !13772, file: !13771, line: 168, type: !13773, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !13776)
!13771 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/std/src/os/fd/owned.rs", directory: "", checksumkind: CSK_MD5, checksum: "e3af1c17d32d7421eb269f757fa7ccac")
!13772 = !DINamespace(name: "{impl#7}", scope: !2696)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{null, !13775}
!13775 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::os::fd::owned::OwnedFd", baseType: !2695, size: 64, align: 64, dwarfAddressSpace: 0)
!13776 = !{!13777}
!13777 = !DILocalVariable(name: "self", arg: 1, scope: !13770, file: !13771, line: 168, type: !13775)
!13778 = !DILocation(line: 168, column: 13, scope: !13770)
!13779 = !DILocation(line: 175, column: 33, scope: !13770)
!13780 = !DILocation(line: 175, column: 21, scope: !13770)
!13781 = !DILocation(line: 177, column: 6, scope: !13770)
!13782 = distinct !DISubprogram(name: "drop<*const i8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h35c1bfc9efb18cecE", scope: !13783, file: !2472, line: 2915, type: !13784, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2584, retainedNodes: !13786)
!13783 = !DINamespace(name: "{impl#28}", scope: !1220)
!13784 = !DISubroutineType(types: !13785)
!13785 = !{null, !10046}
!13786 = !{!13787}
!13787 = !DILocalVariable(name: "self", arg: 1, scope: !13782, file: !2472, line: 2915, type: !10046)
!13788 = !DILocation(line: 2915, column: 13, scope: !13782)
!13789 = !DILocation(line: 2920, column: 62, scope: !13782)
!13790 = !DILocalVariable(name: "data", scope: !13791, file: !2472, line: 2920, type: !10045, align: 8)
!13791 = !DILexicalBlockFile(scope: !13792, file: !2472, discriminator: 0)
!13792 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<*const i8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hda72f7f74e57f22cE", scope: !260, file: !682, line: 726, type: !13793, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !13800)
!13793 = !DISubroutineType(types: !13794)
!13794 = !{!13795, !10045, !9}
!13795 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [*const i8]", file: !2, size: 128, align: 64, elements: !13796, templateParams: !23, identifier: "f41f9146ba318492dae6ccc311a0441c")
!13796 = !{!13797, !13799}
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !13795, file: !2, baseType: !13798, size: 64, align: 64)
!13798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64, align: 64, dwarfAddressSpace: 0)
!13799 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !13795, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13800 = !{!13790, !13801}
!13801 = !DILocalVariable(name: "len", scope: !13791, file: !2472, line: 2920, type: !9, align: 8)
!13802 = !DILocation(line: 2920, column: 32, scope: !13791, inlinedAt: !13803)
!13803 = !DILocation(line: 2920, column: 32, scope: !13782)
!13804 = !DILocation(line: 2920, column: 81, scope: !13782)
!13805 = !DILocalVariable(name: "self", scope: !13806, file: !2472, line: 2920, type: !10045, align: 8)
!13806 = !DILexicalBlockFile(scope: !13807, file: !2472, discriminator: 0)
!13807 = distinct !DISubprogram(name: "cast<*const i8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h0b68a45faca5f818E", scope: !456, file: !455, line: 45, type: !13808, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13811, retainedNodes: !13810)
!13808 = !DISubroutineType(types: !13809)
!13809 = !{!777, !10045}
!13810 = !{!13805}
!13811 = !{!2579, !697}
!13812 = !DILocation(line: 2920, column: 32, scope: !13806, inlinedAt: !13813)
!13813 = !DILocation(line: 727, column: 24, scope: !13792, inlinedAt: !13803)
!13814 = !DILocalVariable(name: "data_address", scope: !13815, file: !2472, line: 2920, type: !777, align: 8)
!13815 = !DILexicalBlockFile(scope: !13816, file: !2472, discriminator: 0)
!13816 = distinct !DISubprogram(name: "from_raw_parts_mut<[*const i8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h849d12b63a0592d8E", scope: !704, file: !703, line: 127, type: !13817, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2578, retainedNodes: !13819)
!13817 = !DISubroutineType(types: !13818)
!13818 = !{!13795, !777, !9}
!13819 = !{!13814, !13820}
!13820 = !DILocalVariable(name: "metadata", scope: !13815, file: !2472, line: 2920, type: !9, align: 8)
!13821 = !DILocation(line: 2920, column: 32, scope: !13815, inlinedAt: !13822)
!13822 = !DILocation(line: 727, column: 5, scope: !13792, inlinedAt: !13803)
!13823 = !DILocation(line: 2920, column: 13, scope: !13782)
!13824 = !DILocation(line: 2923, column: 6, scope: !13782)
!13825 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6348c2a5f302c717E", scope: !13783, file: !2472, line: 2915, type: !13826, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13828)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{null, !1645}
!13828 = !{!13829}
!13829 = !DILocalVariable(name: "self", arg: 1, scope: !13825, file: !2472, line: 2915, type: !1645)
!13830 = !DILocation(line: 2915, column: 13, scope: !13825)
!13831 = !DILocation(line: 2920, column: 62, scope: !13825)
!13832 = !DILocalVariable(name: "data", scope: !13833, file: !2472, line: 2920, type: !448, align: 8)
!13833 = !DILexicalBlockFile(scope: !13834, file: !2472, discriminator: 0)
!13834 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hd34dadd7044cb66fE", scope: !260, file: !682, line: 726, type: !765, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13835)
!13835 = !{!13832, !13836}
!13836 = !DILocalVariable(name: "len", scope: !13833, file: !2472, line: 2920, type: !9, align: 8)
!13837 = !DILocation(line: 2920, column: 32, scope: !13833, inlinedAt: !13838)
!13838 = !DILocation(line: 2920, column: 32, scope: !13825)
!13839 = !DILocation(line: 2920, column: 81, scope: !13825)
!13840 = !DILocalVariable(name: "self", scope: !13841, file: !2472, line: 2920, type: !448, align: 8)
!13841 = !DILexicalBlockFile(scope: !13842, file: !2472, discriminator: 0)
!13842 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2521638f5850fb66E", scope: !456, file: !455, line: 45, type: !775, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !13843)
!13843 = !{!13840}
!13844 = !DILocation(line: 2920, column: 32, scope: !13841, inlinedAt: !13845)
!13845 = !DILocation(line: 727, column: 24, scope: !13834, inlinedAt: !13838)
!13846 = !DILocalVariable(name: "data_address", scope: !13847, file: !2472, line: 2920, type: !777, align: 8)
!13847 = !DILexicalBlockFile(scope: !13848, file: !2472, discriminator: 0)
!13848 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h831a101dd10ae1e2E", scope: !704, file: !703, line: 127, type: !784, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13849)
!13849 = !{!13846, !13850}
!13850 = !DILocalVariable(name: "metadata", scope: !13847, file: !2472, line: 2920, type: !9, align: 8)
!13851 = !DILocation(line: 2920, column: 32, scope: !13847, inlinedAt: !13852)
!13852 = !DILocation(line: 727, column: 5, scope: !13834, inlinedAt: !13838)
!13853 = !DILocation(line: 2920, column: 13, scope: !13825)
!13854 = !DILocation(line: 2923, column: 6, scope: !13825)
!13855 = distinct !DISubprogram(name: "drop<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha754ebadfb1abed3E", scope: !13783, file: !2472, line: 2915, type: !13856, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2647, retainedNodes: !13858)
!13856 = !DISubroutineType(types: !13857)
!13857 = !{null, !10114}
!13858 = !{!13859}
!13859 = !DILocalVariable(name: "self", arg: 1, scope: !13855, file: !2472, line: 2915, type: !10114)
!13860 = !DILocation(line: 2915, column: 13, scope: !13855)
!13861 = !DILocation(line: 2920, column: 62, scope: !13855)
!13862 = !DILocalVariable(name: "data", scope: !13863, file: !2472, line: 2920, type: !3643, align: 8)
!13863 = !DILexicalBlockFile(scope: !13864, file: !2472, discriminator: 0)
!13864 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h5216d2be351da89eE", scope: !260, file: !682, line: 726, type: !13865, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{!3650, !3643, !9}
!13867 = !{!13862, !13868}
!13868 = !DILocalVariable(name: "len", scope: !13863, file: !2472, line: 2920, type: !9, align: 8)
!13869 = !DILocation(line: 2920, column: 32, scope: !13863, inlinedAt: !13870)
!13870 = !DILocation(line: 2920, column: 32, scope: !13855)
!13871 = !DILocation(line: 2920, column: 81, scope: !13855)
!13872 = !DILocalVariable(name: "self", scope: !13873, file: !2472, line: 2920, type: !3643, align: 8)
!13873 = !DILexicalBlockFile(scope: !13874, file: !2472, discriminator: 0)
!13874 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hd47f805ccc784c2eE", scope: !456, file: !455, line: 45, type: !13875, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13878, retainedNodes: !13877)
!13875 = !DISubroutineType(types: !13876)
!13876 = !{!777, !3643}
!13877 = !{!13872}
!13878 = !{!2642, !697}
!13879 = !DILocation(line: 2920, column: 32, scope: !13873, inlinedAt: !13880)
!13880 = !DILocation(line: 727, column: 24, scope: !13864, inlinedAt: !13870)
!13881 = !DILocalVariable(name: "data_address", scope: !13882, file: !2472, line: 2920, type: !777, align: 8)
!13882 = !DILexicalBlockFile(scope: !13883, file: !2472, discriminator: 0)
!13883 = distinct !DISubprogram(name: "from_raw_parts_mut<[alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h22844c0e5d5fbd46E", scope: !704, file: !703, line: 127, type: !13884, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2641, retainedNodes: !13886)
!13884 = !DISubroutineType(types: !13885)
!13885 = !{!3650, !777, !9}
!13886 = !{!13881, !13887}
!13887 = !DILocalVariable(name: "metadata", scope: !13882, file: !2472, line: 2920, type: !9, align: 8)
!13888 = !DILocation(line: 2920, column: 32, scope: !13882, inlinedAt: !13889)
!13889 = !DILocation(line: 727, column: 5, scope: !13864, inlinedAt: !13870)
!13890 = !DILocation(line: 2920, column: 13, scope: !13855)
!13891 = !DILocation(line: 2923, column: 6, scope: !13855)
!13892 = distinct !DISubprogram(name: "drop<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb7a612e473abe038E", scope: !13783, file: !2472, line: 2915, type: !13893, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2558, retainedNodes: !13895)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !10243}
!13895 = !{!13896}
!13896 = !DILocalVariable(name: "self", arg: 1, scope: !13892, file: !2472, line: 2915, type: !10243)
!13897 = !DILocation(line: 2915, column: 13, scope: !13892)
!13898 = !DILocation(line: 2920, column: 62, scope: !13892)
!13899 = !DILocalVariable(name: "data", scope: !13900, file: !2472, line: 2920, type: !3775, align: 8)
!13900 = !DILexicalBlockFile(scope: !13901, file: !2472, discriminator: 0)
!13901 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hdec551161f8ee613E", scope: !260, file: !682, line: 726, type: !13902, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !13904)
!13902 = !DISubroutineType(types: !13903)
!13903 = !{!3860, !3775, !9}
!13904 = !{!13899, !13905}
!13905 = !DILocalVariable(name: "len", scope: !13900, file: !2472, line: 2920, type: !9, align: 8)
!13906 = !DILocation(line: 2920, column: 32, scope: !13900, inlinedAt: !13907)
!13907 = !DILocation(line: 2920, column: 32, scope: !13892)
!13908 = !DILocation(line: 2920, column: 81, scope: !13892)
!13909 = !DILocalVariable(name: "self", scope: !13910, file: !2472, line: 2920, type: !3775, align: 8)
!13910 = !DILexicalBlockFile(scope: !13911, file: !2472, discriminator: 0)
!13911 = distinct !DISubprogram(name: "cast<alloc::ffi::c_str::CString, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h0eea543901c16bbcE", scope: !456, file: !455, line: 45, type: !13912, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13915, retainedNodes: !13914)
!13912 = !DISubroutineType(types: !13913)
!13913 = !{!777, !3775}
!13914 = !{!13909}
!13915 = !{!2553, !697}
!13916 = !DILocation(line: 2920, column: 32, scope: !13910, inlinedAt: !13917)
!13917 = !DILocation(line: 727, column: 24, scope: !13901, inlinedAt: !13907)
!13918 = !DILocalVariable(name: "data_address", scope: !13919, file: !2472, line: 2920, type: !777, align: 8)
!13919 = !DILexicalBlockFile(scope: !13920, file: !2472, discriminator: 0)
!13920 = distinct !DISubprogram(name: "from_raw_parts_mut<[alloc::ffi::c_str::CString]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h775f61af33431b80E", scope: !704, file: !703, line: 127, type: !13921, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2552, retainedNodes: !13923)
!13921 = !DISubroutineType(types: !13922)
!13922 = !{!3860, !777, !9}
!13923 = !{!13918, !13924}
!13924 = !DILocalVariable(name: "metadata", scope: !13919, file: !2472, line: 2920, type: !9, align: 8)
!13925 = !DILocation(line: 2920, column: 32, scope: !13919, inlinedAt: !13926)
!13926 = !DILocation(line: 727, column: 5, scope: !13901, inlinedAt: !13907)
!13927 = !DILocation(line: 2920, column: 13, scope: !13892)
!13928 = !DILocation(line: 2923, column: 6, scope: !13892)
!13929 = distinct !DISubprogram(name: "ne<&str>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h606434351e37dd6dE", scope: !13930, file: !1507, line: 515, type: !13931, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !13934)
!13930 = !DINamespace(name: "{impl#42}", scope: !39)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!989, !13933, !13933}
!13933 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<&str>", baseType: !38, size: 64, align: 64, dwarfAddressSpace: 0)
!13934 = !{!13935, !13936, !13937, !13939, !13941, !13943}
!13935 = !DILocalVariable(name: "self", arg: 1, scope: !13929, file: !1507, line: 515, type: !13933)
!13936 = !DILocalVariable(name: "other", arg: 2, scope: !13929, file: !1507, line: 515, type: !13933)
!13937 = !DILocalVariable(name: "__self_vi", scope: !13938, file: !1507, line: 515, type: !674, align: 8)
!13938 = distinct !DILexicalBlock(scope: !13929, file: !1507, line: 515, column: 16)
!13939 = !DILocalVariable(name: "__arg_1_vi", scope: !13940, file: !1507, line: 515, type: !674, align: 8)
!13940 = distinct !DILexicalBlock(scope: !13938, file: !1507, line: 515, column: 16)
!13941 = !DILocalVariable(name: "__self_0", scope: !13942, file: !1507, line: 526, type: !270, align: 8)
!13942 = distinct !DILexicalBlock(scope: !13940, file: !1507, line: 515, column: 16)
!13943 = !DILocalVariable(name: "__arg_1_0", scope: !13942, file: !1507, line: 526, type: !270, align: 8)
!13944 = !DILocation(line: 515, column: 16, scope: !13929)
!13945 = !DILocation(line: 515, column: 16, scope: !13938)
!13946 = !DILocation(line: 515, column: 16, scope: !13940)
!13947 = !DILocation(line: 526, column: 56, scope: !13940)
!13948 = !DILocation(line: 526, column: 56, scope: !13942)
!13949 = !DILocation(line: 515, column: 24, scope: !13940)
!13950 = !DILocation(line: 515, column: 25, scope: !13929)
!13951 = distinct !DISubprogram(name: "as_ref<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h154851393d2b9ba1E", scope: !13952, file: !7520, line: 615, type: !7578, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !820, retainedNodes: !13953)
!13952 = !DINamespace(name: "{impl#8}", scope: !4202)
!13953 = !{!13954}
!13954 = !DILocalVariable(name: "self", arg: 1, scope: !13951, file: !7520, line: 615, type: !3533)
!13955 = !DILocation(line: 615, column: 15, scope: !13951)
!13956 = !DILocation(line: 617, column: 6, scope: !13951)
!13957 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc891b023a73a1739E", scope: !2473, file: !2472, line: 2531, type: !2474, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !13958)
!13958 = !{!13959}
!13959 = !DILocalVariable(name: "self", arg: 1, scope: !13957, file: !2472, line: 2531, type: !2476)
!13960 = !DILocation(line: 2531, column: 14, scope: !13957)
!13961 = !DILocation(line: 2532, column: 40, scope: !13957)
!13962 = !DILocalVariable(name: "data", scope: !13963, file: !2472, line: 2532, type: !342, align: 8)
!13963 = !DILexicalBlockFile(scope: !13964, file: !2472, discriminator: 0)
!13964 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h7379c702bbd7bb59E", scope: !2484, file: !2483, line: 90, type: !2485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13965)
!13965 = !{!13962, !13966, !13967}
!13966 = !DILocalVariable(name: "len", scope: !13963, file: !2472, line: 2532, type: !9, align: 8)
!13967 = !DILocalVariable(name: "runtime", scope: !13968, file: !2472, line: 2532, type: !2492, align: 8)
!13968 = !DILexicalBlockFile(scope: !13969, file: !2472, discriminator: 0)
!13969 = distinct !DILexicalBlock(scope: !13964, file: !640, line: 2319, column: 13)
!13970 = !DILocation(line: 2532, column: 18, scope: !13963, inlinedAt: !13971)
!13971 = !DILocation(line: 2532, column: 18, scope: !13957)
!13972 = !DILocation(line: 2532, column: 55, scope: !13957)
!13973 = !DILocalVariable(name: "data", scope: !13974, file: !2472, line: 2532, type: !342, align: 8)
!13974 = !DILexicalBlockFile(scope: !13975, file: !2472, discriminator: 0)
!13975 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h45d7d8a8400d8efaE", scope: !260, file: !682, line: 694, type: !683, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13976)
!13976 = !{!13973, !13977}
!13977 = !DILocalVariable(name: "len", scope: !13974, file: !2472, line: 2532, type: !9, align: 8)
!13978 = !DILocation(line: 2532, column: 18, scope: !13974, inlinedAt: !13979)
!13979 = !DILocation(line: 97, column: 11, scope: !13964, inlinedAt: !13971)
!13980 = !DILocalVariable(name: "self", scope: !13981, file: !2472, line: 2532, type: !342, align: 8)
!13981 = !DILexicalBlockFile(scope: !13982, file: !2472, discriminator: 0)
!13982 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he0c0113386534e36E", scope: !437, file: !436, line: 46, type: !693, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !696, retainedNodes: !13983)
!13983 = !{!13980}
!13984 = !DILocation(line: 2532, column: 18, scope: !13981, inlinedAt: !13985)
!13985 = !DILocation(line: 695, column: 20, scope: !13975, inlinedAt: !13979)
!13986 = !DILocalVariable(name: "data_address", scope: !13987, file: !2472, line: 2532, type: !6, align: 8)
!13987 = !DILexicalBlockFile(scope: !13988, file: !2472, discriminator: 0)
!13988 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd135027610299951E", scope: !704, file: !703, line: 110, type: !705, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !13989)
!13989 = !{!13986, !13990}
!13990 = !DILocalVariable(name: "metadata", scope: !13987, file: !2472, line: 2532, type: !9, align: 8)
!13991 = !DILocation(line: 2532, column: 18, scope: !13987, inlinedAt: !13992)
!13992 = !DILocation(line: 695, column: 5, scope: !13975, inlinedAt: !13979)
!13993 = !DILocation(line: 2533, column: 6, scope: !13957)
!13994 = distinct !DISubprogram(name: "equal<u8, u8>", linkageName: "_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hc1214e48380b33d3E", scope: !13995, file: !6206, line: 82, type: !5969, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !13996)
!13995 = !DINamespace(name: "{impl#5}", scope: !6208)
!13996 = !{!13997, !13998, !13999}
!13997 = !DILocalVariable(name: "self", arg: 1, scope: !13994, file: !6206, line: 82, type: !892)
!13998 = !DILocalVariable(name: "other", arg: 2, scope: !13994, file: !6206, line: 82, type: !892)
!13999 = !DILocalVariable(name: "size", scope: !14000, file: !6206, line: 90, type: !9, align: 8)
!14000 = distinct !DILexicalBlock(scope: !13994, file: !6206, line: 90, column: 13)
!14001 = !DILocation(line: 82, column: 14, scope: !13994)
!14002 = !DILocation(line: 82, column: 21, scope: !13994)
!14003 = !DILocation(line: 83, column: 12, scope: !13994)
!14004 = !DILocation(line: 90, column: 41, scope: !13994)
!14005 = !DILocalVariable(name: "val", scope: !14006, file: !6206, line: 90, type: !892, align: 8)
!14006 = !DILexicalBlockFile(scope: !14007, file: !6206, discriminator: 0)
!14007 = distinct !DISubprogram(name: "size_of_val<[u8]>", linkageName: "_ZN4core3mem11size_of_val17h603e7071fbe7c4abE", scope: !79, file: !423, line: 338, type: !9676, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14008)
!14008 = !{!14005}
!14009 = !DILocation(line: 90, column: 24, scope: !14006, inlinedAt: !14010)
!14010 = !DILocation(line: 90, column: 24, scope: !13994)
!14011 = !DILocation(line: 90, column: 17, scope: !14000)
!14012 = !DILocation(line: 84, column: 20, scope: !13994)
!14013 = !DILocation(line: 93, column: 6, scope: !13994)
!14014 = !DILocation(line: 91, column: 20, scope: !14000)
!14015 = !DILocalVariable(name: "self", scope: !14016, file: !6206, line: 91, type: !892, align: 8)
!14016 = !DILexicalBlockFile(scope: !14017, file: !6206, discriminator: 0)
!14017 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd5db123b22cca324E", scope: !5968, file: !5967, line: 476, type: !6345, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14018)
!14018 = !{!14015}
!14019 = !DILocation(line: 91, column: 20, scope: !14016, inlinedAt: !14014)
!14020 = !DILocation(line: 91, column: 48, scope: !14000)
!14021 = !DILocalVariable(name: "self", scope: !14022, file: !6206, line: 91, type: !892, align: 8)
!14022 = !DILexicalBlockFile(scope: !14023, file: !6206, discriminator: 0)
!14023 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd5db123b22cca324E", scope: !5968, file: !5967, line: 476, type: !6345, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14024)
!14024 = !{!14021}
!14025 = !DILocation(line: 91, column: 48, scope: !14022, inlinedAt: !14020)
!14026 = !DILocation(line: 91, column: 13, scope: !14000)
!14027 = distinct !DISubprogram(name: "from_output<usize>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hcb15333b73c25d66E", scope: !4229, file: !1507, line: 2285, type: !14028, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !14030)
!14028 = !DISubroutineType(types: !14029)
!14029 = !{!236, !9}
!14030 = !{!14031}
!14031 = !DILocalVariable(name: "output", arg: 1, scope: !14027, file: !1507, line: 2285, type: !9)
!14032 = !DILocation(line: 2285, column: 20, scope: !14027)
!14033 = !DILocation(line: 2286, column: 9, scope: !14027)
!14034 = !DILocation(line: 2287, column: 6, scope: !14027)
!14035 = distinct !DISubprogram(name: "branch<usize>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h009968790cd0239eE", scope: !4229, file: !1507, line: 2290, type: !14036, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !14052)
!14036 = !DISubroutineType(types: !14037)
!14037 = !{!14038, !236}
!14038 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, usize>", scope: !4233, file: !2, size: 128, align: 64, elements: !14039, templateParams: !23, identifier: "8372ecec9e0cfed1b995eb2fe34fb074")
!14039 = !{!14040}
!14040 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14038, file: !2, size: 128, align: 64, elements: !14041, templateParams: !23, identifier: "455470a56b5b77711b1b645d6eedf49e", discriminator: !14051)
!14041 = !{!14042, !14047}
!14042 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14040, file: !2, baseType: !14043, size: 128, align: 64, extraData: i64 0)
!14043 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14038, file: !2, size: 128, align: 64, elements: !14044, templateParams: !14046, identifier: "99ff36562271bb1a213a5a68f4c14a5b")
!14044 = !{!14045}
!14045 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14043, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!14046 = !{!4242, !5671}
!14047 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14040, file: !2, baseType: !14048, size: 128, align: 64, extraData: i64 1)
!14048 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14038, file: !2, size: 128, align: 64, elements: !14049, templateParams: !14046, identifier: "d0c690b804f8b9efeb850ecaa1003c1")
!14049 = !{!14050}
!14050 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14048, file: !2, baseType: !4193, align: 8, offset: 64)
!14051 = !DIDerivedType(tag: DW_TAG_member, scope: !14038, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!14052 = !{!14053, !14054}
!14053 = !DILocalVariable(name: "self", arg: 1, scope: !14035, file: !1507, line: 2290, type: !236)
!14054 = !DILocalVariable(name: "v", scope: !14055, file: !1507, line: 2292, type: !9, align: 8)
!14055 = distinct !DILexicalBlock(scope: !14035, file: !1507, line: 2292, column: 13)
!14056 = !DILocation(line: 2290, column: 15, scope: !14035)
!14057 = !DILocation(line: 2291, column: 15, scope: !14035)
!14058 = !DILocation(line: 2291, column: 9, scope: !14035)
!14059 = !DILocation(line: 2293, column: 21, scope: !14035)
!14060 = !DILocation(line: 2293, column: 44, scope: !14035)
!14061 = !DILocation(line: 2292, column: 18, scope: !14035)
!14062 = !DILocation(line: 2292, column: 18, scope: !14055)
!14063 = !DILocation(line: 2292, column: 24, scope: !14055)
!14064 = !DILocation(line: 2295, column: 5, scope: !14035)
!14065 = !DILocation(line: 2295, column: 6, scope: !14035)
!14066 = distinct !DISubprogram(name: "drop<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h85d510a2416f2482E", scope: !14067, file: !9508, line: 477, type: !14068, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2647, retainedNodes: !14071)
!14067 = !DINamespace(name: "{impl#3}", scope: !222)
!14068 = !DISubroutineType(types: !14069)
!14069 = !{null, !14070}
!14070 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2625, size: 64, align: 64, dwarfAddressSpace: 0)
!14071 = !{!14072, !14073, !14075}
!14072 = !DILocalVariable(name: "self", arg: 1, scope: !14066, file: !9508, line: 477, type: !14070)
!14073 = !DILocalVariable(name: "ptr", scope: !14074, file: !9508, line: 478, type: !339, align: 8)
!14074 = distinct !DILexicalBlock(scope: !14066, file: !9508, line: 478, column: 60)
!14075 = !DILocalVariable(name: "layout", scope: !14074, file: !9508, line: 478, type: !1622, align: 8)
!14076 = !DILocation(line: 477, column: 13, scope: !14066)
!14077 = !DILocation(line: 478, column: 38, scope: !14074)
!14078 = !DILocation(line: 478, column: 16, scope: !14074)
!14079 = !DILocation(line: 478, column: 22, scope: !14074)
!14080 = !DILocation(line: 478, column: 27, scope: !14074)
!14081 = !DILocation(line: 479, column: 22, scope: !14074)
!14082 = !DILocation(line: 481, column: 6, scope: !14066)
!14083 = !DILocation(line: 478, column: 9, scope: !14066)
!14084 = distinct !DISubprogram(name: "drop<*const i8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h87a81bdf8b27ee83E", scope: !14067, file: !9508, line: 477, type: !14085, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2584, retainedNodes: !14088)
!14085 = !DISubroutineType(types: !14086)
!14086 = !{null, !14087}
!14087 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>", baseType: !2567, size: 64, align: 64, dwarfAddressSpace: 0)
!14088 = !{!14089, !14090, !14092}
!14089 = !DILocalVariable(name: "self", arg: 1, scope: !14084, file: !9508, line: 477, type: !14087)
!14090 = !DILocalVariable(name: "ptr", scope: !14091, file: !9508, line: 478, type: !339, align: 8)
!14091 = distinct !DILexicalBlock(scope: !14084, file: !9508, line: 478, column: 60)
!14092 = !DILocalVariable(name: "layout", scope: !14091, file: !9508, line: 478, type: !1622, align: 8)
!14093 = !DILocation(line: 477, column: 13, scope: !14084)
!14094 = !DILocation(line: 478, column: 38, scope: !14091)
!14095 = !DILocation(line: 478, column: 16, scope: !14091)
!14096 = !DILocation(line: 478, column: 22, scope: !14091)
!14097 = !DILocation(line: 478, column: 27, scope: !14091)
!14098 = !DILocation(line: 479, column: 22, scope: !14091)
!14099 = !DILocation(line: 481, column: 6, scope: !14084)
!14100 = !DILocation(line: 478, column: 9, scope: !14084)
!14101 = distinct !DISubprogram(name: "drop<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha47067e394a6b8ddE", scope: !14067, file: !9508, line: 477, type: !14102, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2558, retainedNodes: !14105)
!14102 = !DISubroutineType(types: !14103)
!14103 = !{null, !14104}
!14104 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2542, size: 64, align: 64, dwarfAddressSpace: 0)
!14105 = !{!14106, !14107, !14109}
!14106 = !DILocalVariable(name: "self", arg: 1, scope: !14101, file: !9508, line: 477, type: !14104)
!14107 = !DILocalVariable(name: "ptr", scope: !14108, file: !9508, line: 478, type: !339, align: 8)
!14108 = distinct !DILexicalBlock(scope: !14101, file: !9508, line: 478, column: 60)
!14109 = !DILocalVariable(name: "layout", scope: !14108, file: !9508, line: 478, type: !1622, align: 8)
!14110 = !DILocation(line: 477, column: 13, scope: !14101)
!14111 = !DILocation(line: 478, column: 38, scope: !14108)
!14112 = !DILocation(line: 478, column: 16, scope: !14108)
!14113 = !DILocation(line: 478, column: 22, scope: !14108)
!14114 = !DILocation(line: 478, column: 27, scope: !14108)
!14115 = !DILocation(line: 479, column: 22, scope: !14108)
!14116 = !DILocation(line: 481, column: 6, scope: !14101)
!14117 = !DILocation(line: 478, column: 9, scope: !14101)
!14118 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hebea49d732b609dbE", scope: !14067, file: !9508, line: 477, type: !14119, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1236, retainedNodes: !14121)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{null, !13211}
!14121 = !{!14122, !14123, !14125}
!14122 = !DILocalVariable(name: "self", arg: 1, scope: !14118, file: !9508, line: 477, type: !13211)
!14123 = !DILocalVariable(name: "ptr", scope: !14124, file: !9508, line: 478, type: !339, align: 8)
!14124 = distinct !DILexicalBlock(scope: !14118, file: !9508, line: 478, column: 60)
!14125 = !DILocalVariable(name: "layout", scope: !14124, file: !9508, line: 478, type: !1622, align: 8)
!14126 = !DILocation(line: 477, column: 13, scope: !14118)
!14127 = !DILocation(line: 478, column: 38, scope: !14124)
!14128 = !DILocation(line: 478, column: 16, scope: !14124)
!14129 = !DILocation(line: 478, column: 22, scope: !14124)
!14130 = !DILocation(line: 478, column: 27, scope: !14124)
!14131 = !DILocation(line: 479, column: 22, scope: !14124)
!14132 = !DILocation(line: 481, column: 6, scope: !14118)
!14133 = !DILocation(line: 478, column: 9, scope: !14118)
!14134 = distinct !DISubprogram(name: "drop", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8e5359068782f89bE", scope: !1817, file: !1764, line: 223, type: !14135, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14138)
!14135 = !DISubroutineType(types: !14136)
!14136 = !{null, !14137}
!14137 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::io::error::repr_bitpacked::Repr", baseType: !3736, size: 64, align: 64, dwarfAddressSpace: 0)
!14138 = !{!14139}
!14139 = !DILocalVariable(name: "self", arg: 1, scope: !14134, file: !1764, line: 223, type: !14137)
!14140 = !DILocation(line: 223, column: 13, scope: !14134)
!14141 = !DILocation(line: 227, column: 33, scope: !14134)
!14142 = !DILocation(line: 227, column: 21, scope: !14134)
!14143 = !DILocation(line: 227, column: 72, scope: !14134)
!14144 = !DILocation(line: 229, column: 6, scope: !14134)
!14145 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h0997d46a35485cf1E", scope: !1816, file: !1764, line: 227, type: !14146, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14148)
!14146 = !DISubroutineType(types: !14147)
!14147 = !{!1779, !1815, !1831}
!14148 = !{!14149, !14150}
!14149 = !DILocalVariable(name: "p", arg: 2, scope: !14145, file: !1764, line: 227, type: !1831)
!14150 = !DILocalVariable(arg: 1, scope: !14145, file: !1764, line: 227, type: !1815)
!14151 = !DILocation(line: 227, column: 41, scope: !14145)
!14152 = !DILocation(line: 227, column: 42, scope: !14145)
!14153 = !DILocalVariable(name: "alloc", scope: !14154, file: !1764, line: 227, type: !1234, align: 1)
!14154 = !DILexicalBlockFile(scope: !14155, file: !1764, discriminator: 0)
!14155 = distinct !DISubprogram(name: "from_raw_in<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h14b57e5a10d666caE", scope: !12325, file: !12324, line: 1008, type: !14156, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11404, retainedNodes: !14158)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{!1779, !1831, !1234}
!14158 = !{!14159, !14153}
!14159 = !DILocalVariable(name: "raw", scope: !14154, file: !1764, line: 227, type: !1831, align: 8)
!14160 = !DILocation(line: 227, column: 45, scope: !14154, inlinedAt: !14161)
!14161 = !DILocation(line: 953, column: 18, scope: !14162, inlinedAt: !14169)
!14162 = distinct !DISubprogram(name: "from_raw<std::io::error::Custom>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h845f3cdf2b0aad33E", scope: !14163, file: !12324, line: 952, type: !14164, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !14166)
!14163 = !DINamespace(name: "{impl#6}", scope: !12326)
!14164 = !DISubroutineType(types: !14165)
!14165 = !{!1779, !1831}
!14166 = !{!14167}
!14167 = !DILocalVariable(name: "raw", scope: !14168, file: !1764, line: 227, type: !1831, align: 8)
!14168 = !DILexicalBlockFile(scope: !14162, file: !1764, discriminator: 0)
!14169 = !DILocation(line: 227, column: 45, scope: !14145)
!14170 = !DILocation(line: 227, column: 69, scope: !14145)
!14171 = !DILocation(line: 227, column: 45, scope: !14168, inlinedAt: !14169)
!14172 = !DILocalVariable(name: "ptr", scope: !14173, file: !1764, line: 227, type: !1831, align: 8)
!14173 = !DILexicalBlockFile(scope: !14174, file: !1764, discriminator: 0)
!14174 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h99278acd086807a4E", scope: !11386, file: !1586, line: 85, type: !14175, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !14177)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{!11386, !1831}
!14177 = !{!14172}
!14178 = !DILocation(line: 227, column: 45, scope: !14173, inlinedAt: !14179)
!14179 = !DILocation(line: 1009, column: 22, scope: !14155, inlinedAt: !14161)
!14180 = !DILocalVariable(name: "ptr", scope: !14181, file: !1764, line: 227, type: !1831, align: 8)
!14181 = !DILexicalBlockFile(scope: !14182, file: !1764, discriminator: 0)
!14182 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he49f7bd719a295a0E", scope: !11389, file: !445, line: 196, type: !14183, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3760, retainedNodes: !14185)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{!11389, !1831}
!14185 = !{!14180}
!14186 = !DILocation(line: 227, column: 45, scope: !14181, inlinedAt: !14187)
!14187 = !DILocation(line: 87, column: 36, scope: !14174, inlinedAt: !14179)
!14188 = !DILocation(line: 227, column: 71, scope: !14145)
!14189 = distinct !DISubprogram(name: "branch<&str, usize>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc62c2300a8c60ecfE", scope: !5658, file: !5392, line: 2108, type: !14190, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6951, retainedNodes: !14208)
!14190 = !DISubroutineType(types: !14191)
!14191 = !{!14192, !6943}
!14192 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>", scope: !4233, file: !2, size: 192, align: 64, elements: !14193, templateParams: !23, identifier: "8598e2f179f02d9e84187e28c4814a07")
!14193 = !{!14194}
!14194 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14192, file: !2, size: 192, align: 64, elements: !14195, templateParams: !23, identifier: "b864901017bdc68ffb6e3ce5a22501df", discriminator: !14207)
!14195 = !{!14196, !14203}
!14196 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14194, file: !2, baseType: !14197, size: 192, align: 64, extraData: i64 0)
!14197 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14192, file: !2, size: 192, align: 64, elements: !14198, templateParams: !14200, identifier: "429d7076ce0882fff78be1b07b3d8142")
!14198 = !{!14199}
!14199 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14197, file: !2, baseType: !48, size: 128, align: 64, offset: 64)
!14200 = !{!14201, !14202}
!14201 = !DITemplateTypeParameter(name: "B", type: !5358)
!14202 = !DITemplateTypeParameter(name: "C", type: !48)
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14194, file: !2, baseType: !14204, size: 192, align: 64, extraData: i64 1)
!14204 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14192, file: !2, size: 192, align: 64, elements: !14205, templateParams: !14200, identifier: "f82a78aa51c526243d6dedbcfe640b84")
!14205 = !{!14206}
!14206 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14204, file: !2, baseType: !5358, size: 64, align: 64, offset: 64)
!14207 = !DIDerivedType(tag: DW_TAG_member, scope: !14192, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!14208 = !{!14209, !14210, !14212}
!14209 = !DILocalVariable(name: "self", arg: 1, scope: !14189, file: !5392, line: 2108, type: !6943)
!14210 = !DILocalVariable(name: "v", scope: !14211, file: !5392, line: 2110, type: !48, align: 8)
!14211 = distinct !DILexicalBlock(scope: !14189, file: !5392, line: 2110, column: 13)
!14212 = !DILocalVariable(name: "e", scope: !14213, file: !5392, line: 2111, type: !9, align: 8)
!14213 = distinct !DILexicalBlock(scope: !14189, file: !5392, line: 2111, column: 13)
!14214 = !DILocation(line: 2108, column: 15, scope: !14189)
!14215 = !DILocation(line: 2109, column: 15, scope: !14189)
!14216 = !DILocation(line: 2109, column: 9, scope: !14189)
!14217 = !DILocation(line: 2110, column: 16, scope: !14189)
!14218 = !DILocation(line: 2110, column: 16, scope: !14211)
!14219 = !DILocation(line: 2110, column: 22, scope: !14211)
!14220 = !DILocation(line: 2110, column: 45, scope: !14189)
!14221 = !DILocation(line: 2111, column: 17, scope: !14189)
!14222 = !DILocation(line: 2111, column: 17, scope: !14213)
!14223 = !DILocation(line: 2111, column: 42, scope: !14213)
!14224 = !DILocation(line: 2111, column: 23, scope: !14213)
!14225 = !DILocation(line: 2111, column: 48, scope: !14189)
!14226 = !DILocation(line: 2113, column: 6, scope: !14189)
!14227 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h73dbbdeebee6071cE", scope: !6791, file: !303, line: 44, type: !14228, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14230)
!14228 = !DISubroutineType(types: !14229)
!14229 = !{!321, !6790, !327}
!14230 = !{!14231, !14232}
!14231 = !DILocalVariable(name: "ch", arg: 2, scope: !14227, file: !303, line: 44, type: !327)
!14232 = !DILocalVariable(arg: 1, scope: !14227, file: !303, line: 44, type: !6790)
!14233 = !DILocation(line: 44, column: 54, scope: !14227)
!14234 = !DILocation(line: 44, column: 55, scope: !14227)
!14235 = !DILocation(line: 44, column: 84, scope: !14227)
!14236 = !DILocalVariable(name: "i", scope: !14237, file: !303, line: 44, type: !327, align: 4)
!14237 = !DILexicalBlockFile(scope: !14238, file: !303, discriminator: 0)
!14238 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17h38a171e9f7417a13E", scope: !5099, file: !14239, line: 123, type: !14240, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14242)
!14239 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/char/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d5e58489a0433b5803d74ec8aa0d2891")
!14240 = !DISubroutineType(types: !14241)
!14241 = !{!321, !327}
!14242 = !{!14236}
!14243 = !DILocation(line: 44, column: 59, scope: !14237, inlinedAt: !14244)
!14244 = !DILocation(line: 44, column: 59, scope: !14227)
!14245 = !DILocalVariable(name: "i", scope: !14246, file: !303, line: 44, type: !327, align: 4)
!14246 = !DILexicalBlockFile(scope: !14247, file: !303, discriminator: 0)
!14247 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h503d59e3d0e4cc59E", scope: !14249, file: !14248, line: 24, type: !14240, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14250)
!14248 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "8147e26ccbd3034e288b1b004be8cdcd")
!14249 = !DINamespace(name: "convert", scope: !5099)
!14250 = !{!14245}
!14251 = !DILocation(line: 44, column: 59, scope: !14246, inlinedAt: !14252)
!14252 = !DILocation(line: 125, column: 14, scope: !14238, inlinedAt: !14244)
!14253 = !DILocation(line: 44, column: 87, scope: !14227)
!14254 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17ha9b3fa3a7f61912dE", scope: !14255, file: !468, line: 410, type: !14256, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14259)
!14255 = !DINamespace(name: "{impl#0}", scope: !470)
!14256 = !DISubroutineType(types: !14257)
!14257 = !{!1107, !14258}
!14258 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharSearcher", baseType: !4697, size: 64, align: 64, dwarfAddressSpace: 0)
!14259 = !{!14260, !14261, !14263, !14265, !14267, !14269, !14271, !14273}
!14260 = !DILocalVariable(name: "self", arg: 1, scope: !14254, file: !468, line: 410, type: !14258)
!14261 = !DILocalVariable(name: "bytes", scope: !14262, file: !468, line: 413, type: !892, align: 8)
!14262 = distinct !DILexicalBlock(scope: !14254, file: !468, line: 413, column: 13)
!14263 = !DILocalVariable(name: "residual", scope: !14264, file: !468, line: 413, type: !4193, align: 1)
!14264 = distinct !DILexicalBlock(scope: !14254, file: !468, line: 413, column: 84)
!14265 = !DILocalVariable(name: "val", scope: !14266, file: !468, line: 413, type: !892, align: 8)
!14266 = distinct !DILexicalBlock(scope: !14254, file: !468, line: 413, column: 25)
!14267 = !DILocalVariable(name: "last_byte", scope: !14268, file: !468, line: 416, type: !52, align: 1)
!14268 = distinct !DILexicalBlock(scope: !14262, file: !468, line: 416, column: 13)
!14269 = !DILocalVariable(name: "index", scope: !14270, file: !468, line: 417, type: !9, align: 8)
!14270 = distinct !DILexicalBlock(scope: !14268, file: !468, line: 417, column: 67)
!14271 = !DILocalVariable(name: "found_char", scope: !14272, file: !468, line: 437, type: !9, align: 8)
!14272 = distinct !DILexicalBlock(scope: !14270, file: !468, line: 437, column: 21)
!14273 = !DILocalVariable(name: "slice", scope: !14274, file: !468, line: 438, type: !892, align: 8)
!14274 = distinct !DILexicalBlock(scope: !14272, file: !468, line: 438, column: 96)
!14275 = !DILocation(line: 410, column: 19, scope: !14254)
!14276 = !DILocalVariable(name: "self", scope: !14277, file: !468, line: 413, type: !884, align: 8)
!14277 = !DILexicalBlockFile(scope: !14278, file: !468, discriminator: 0)
!14278 = distinct !DISubprogram(name: "branch<&[u8]>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8b1c27e23c06ee33E", scope: !4229, file: !1507, line: 2290, type: !14279, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !890, retainedNodes: !14296)
!14279 = !DISubroutineType(types: !14280)
!14280 = !{!14281, !884}
!14281 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &[u8]>", scope: !4233, file: !2, size: 128, align: 64, elements: !14282, templateParams: !23, identifier: "dbe07c27feed13417c21546392d756be")
!14282 = !{!14283}
!14283 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14281, file: !2, size: 128, align: 64, elements: !14284, templateParams: !23, identifier: "711b18f09a61dd6bfff6308a3afacc51", discriminator: !14295)
!14284 = !{!14285, !14291}
!14285 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14283, file: !2, baseType: !14286, size: 128, align: 64)
!14286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14281, file: !2, size: 128, align: 64, elements: !14287, templateParams: !14289, identifier: "85a87f12a7062c1083ebeeef1de48f8d")
!14287 = !{!14288}
!14288 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14286, file: !2, baseType: !892, size: 128, align: 64)
!14289 = !{!4242, !14290}
!14290 = !DITemplateTypeParameter(name: "C", type: !892)
!14291 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14283, file: !2, baseType: !14292, size: 128, align: 64, extraData: i64 0)
!14292 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14281, file: !2, size: 128, align: 64, elements: !14293, templateParams: !14289, identifier: "be5bba558bb98f18af14ce64fb1b38e")
!14293 = !{!14294}
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14292, file: !2, baseType: !4193, align: 8)
!14295 = !DIDerivedType(tag: DW_TAG_member, scope: !14281, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!14296 = !{!14276, !14297}
!14297 = !DILocalVariable(name: "v", scope: !14298, file: !468, line: 413, type: !892, align: 8)
!14298 = !DILexicalBlockFile(scope: !14299, file: !468, discriminator: 0)
!14299 = distinct !DILexicalBlock(scope: !14278, file: !1507, line: 2292, column: 13)
!14300 = !DILocation(line: 413, column: 25, scope: !14277, inlinedAt: !14301)
!14301 = !DILocation(line: 413, column: 25, scope: !14254)
!14302 = !DILocalVariable(name: "index", scope: !14303, file: !468, line: 413, type: !626, align: 8)
!14303 = !DILexicalBlockFile(scope: !14304, file: !468, discriminator: 0)
!14304 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h159fa85483b39324E", scope: !5968, file: !5967, line: 339, type: !14305, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !14309, retainedNodes: !14307)
!14305 = !DISubroutineType(types: !14306)
!14306 = !{!884, !892, !626}
!14307 = !{!14308, !14302}
!14308 = !DILocalVariable(name: "self", scope: !14303, file: !468, line: 413, type: !892, align: 8)
!14309 = !{!344, !4591}
!14310 = !DILocation(line: 413, column: 25, scope: !14303, inlinedAt: !14301)
!14311 = !DILocation(line: 413, column: 84, scope: !14264)
!14312 = !DILocalVariable(name: "residual", scope: !14313, file: !468, line: 413, type: !4193, align: 1)
!14313 = !DILexicalBlockFile(scope: !14314, file: !468, discriminator: 0)
!14314 = distinct !DISubprogram(name: "from_residual<(usize, usize)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hfc88020439872d43E", scope: !4259, file: !1507, line: 2302, type: !14315, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1113, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!1107, !4193}
!14317 = !{!14312}
!14318 = !DILocation(line: 413, column: 25, scope: !14313, inlinedAt: !14319)
!14319 = !DILocation(line: 413, column: 25, scope: !14264)
!14320 = !DILocalVariable(name: "index", scope: !14321, file: !468, line: 438, type: !626, align: 8)
!14321 = !DILexicalBlockFile(scope: !14322, file: !468, discriminator: 0)
!14322 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h159fa85483b39324E", scope: !5968, file: !5967, line: 339, type: !14305, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !14309, retainedNodes: !14323)
!14323 = !{!14324, !14320}
!14324 = !DILocalVariable(name: "self", scope: !14321, file: !468, line: 438, type: !892, align: 8)
!14325 = !DILocation(line: 438, column: 42, scope: !14321, inlinedAt: !14326)
!14326 = !DILocation(line: 438, column: 42, scope: !14274)
!14327 = !DILocation(line: 438, column: 33, scope: !14274)
!14328 = !DILocalVariable(name: "index", scope: !14329, file: !468, line: 439, type: !626, align: 8)
!14329 = !DILexicalBlockFile(scope: !14330, file: !468, discriminator: 0)
!14330 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>, 4>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h338ed3cf62b9ae79E", scope: !14332, file: !14331, line: 285, type: !14334, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !14309, retainedNodes: !14337)
!14331 = !DIFile(filename: "/home/dy3199/s2fuzz/scripts/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!14332 = !DINamespace(name: "{impl#15}", scope: !14333)
!14333 = !DINamespace(name: "array", scope: !40)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{!892, !14336, !626, !917}
!14336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 4]", baseType: !4705, size: 64, align: 64, dwarfAddressSpace: 0)
!14337 = !{!14338, !14328}
!14338 = !DILocalVariable(name: "self", scope: !14329, file: !468, line: 439, type: !14336, align: 8)
!14339 = !DILocation(line: 439, column: 38, scope: !14329, inlinedAt: !14340)
!14340 = !DILocation(line: 439, column: 38, scope: !14274)
!14341 = !DILocation(line: 411, column: 9, scope: !14254)
!14342 = !DILocalVariable(name: "self", scope: !14343, file: !468, line: 413, type: !48, align: 8)
!14343 = !DILexicalBlockFile(scope: !14344, file: !468, discriminator: 0)
!14344 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14345)
!14345 = !{!14342}
!14346 = !DILocation(line: 413, column: 25, scope: !14343, inlinedAt: !14301)
!14347 = !DILocation(line: 413, column: 54, scope: !14254)
!14348 = !DILocation(line: 413, column: 67, scope: !14254)
!14349 = !DILocation(line: 413, column: 25, scope: !14298, inlinedAt: !14301)
!14350 = !DILocation(line: 413, column: 25, scope: !14266)
!14351 = !DILocation(line: 413, column: 17, scope: !14262)
!14352 = !DILocation(line: 416, column: 39, scope: !14262)
!14353 = !DILocalVariable(name: "self", scope: !14354, file: !468, line: 416, type: !892, align: 8)
!14354 = !DILexicalBlockFile(scope: !14355, file: !468, discriminator: 0)
!14355 = distinct !DISubprogram(name: "get_unchecked<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf93e1849868ad5cdE", scope: !5968, file: !5967, line: 398, type: !14356, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !13731, retainedNodes: !14358)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{!350, !892, !9}
!14358 = !{!14353, !14359}
!14359 = !DILocalVariable(name: "index", scope: !14354, file: !468, line: 416, type: !9, align: 8)
!14360 = !DILocation(line: 416, column: 39, scope: !14354, inlinedAt: !14352)
!14361 = !DILocation(line: 416, column: 71, scope: !14262)
!14362 = !DILocalVariable(name: "self", scope: !14363, file: !468, line: 416, type: !9, align: 8)
!14363 = !DILexicalBlockFile(scope: !14364, file: !468, discriminator: 0)
!14364 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h98ea89cca098ade3E", scope: !8265, file: !617, line: 219, type: !14365, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14367)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{!342, !9, !622}
!14367 = !{!14362, !14368, !14369}
!14368 = !DILocalVariable(name: "slice", scope: !14363, file: !468, line: 416, type: !622, align: 8)
!14369 = !DILocalVariable(name: "runtime", scope: !14370, file: !468, line: 416, type: !14372, align: 8)
!14370 = !DILexicalBlockFile(scope: !14371, file: !468, discriminator: 0)
!14371 = distinct !DILexicalBlock(scope: !14364, file: !640, line: 2319, column: 13)
!14372 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !8470, file: !2, size: 128, align: 64, elements: !14373, templateParams: !23, identifier: "2c5fdbee208ddbb5cc18f81d4392d64a")
!14373 = !{!14374, !14375}
!14374 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !14372, file: !2, baseType: !387, size: 64, align: 64)
!14375 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !14372, file: !2, baseType: !647, size: 64, align: 64, offset: 64)
!14376 = !DILocation(line: 416, column: 39, scope: !14363, inlinedAt: !14377)
!14377 = !DILocation(line: 405, column: 20, scope: !14355, inlinedAt: !14352)
!14378 = !DILocalVariable(name: "self", scope: !14379, file: !468, line: 416, type: !622, align: 8)
!14379 = !DILexicalBlockFile(scope: !14380, file: !468, discriminator: 0)
!14380 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h7a5d128f2f75dde1E", scope: !655, file: !436, line: 1374, type: !656, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14381)
!14381 = !{!14378}
!14382 = !DILocation(line: 416, column: 39, scope: !14379, inlinedAt: !14383)
!14383 = !DILocation(line: 226, column: 13, scope: !14364, inlinedAt: !14377)
!14384 = !DILocalVariable(name: "self", scope: !14385, file: !468, line: 416, type: !342, align: 8)
!14385 = !DILexicalBlockFile(scope: !14386, file: !468, discriminator: 0)
!14386 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd567d4fde3b4fe62E", scope: !437, file: !436, line: 865, type: !663, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14387)
!14387 = !{!14384, !14388}
!14388 = !DILocalVariable(name: "count", scope: !14385, file: !468, line: 416, type: !9, align: 8)
!14389 = !DILocation(line: 416, column: 39, scope: !14385, inlinedAt: !14383)
!14390 = !DILocalVariable(name: "self", scope: !14391, file: !468, line: 416, type: !342, align: 8)
!14391 = !DILexicalBlockFile(scope: !14392, file: !468, discriminator: 0)
!14392 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd8f7153041f61580E", scope: !437, file: !436, line: 452, type: !672, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14393)
!14393 = !{!14390, !14394}
!14394 = !DILocalVariable(name: "count", scope: !14391, file: !468, line: 416, type: !674, align: 8)
!14395 = !DILocation(line: 416, column: 39, scope: !14391, inlinedAt: !14396)
!14396 = !DILocation(line: 870, column: 18, scope: !14386, inlinedAt: !14383)
!14397 = !DILocation(line: 1, column: 1, scope: !14398)
!14398 = !DILexicalBlockFile(scope: !14254, file: !4302, discriminator: 0)
!14399 = !DILocation(line: 450, column: 6, scope: !14254)
!14400 = !DILocation(line: 416, column: 38, scope: !14262)
!14401 = !DILocation(line: 416, column: 17, scope: !14268)
!14402 = !DILocation(line: 417, column: 34, scope: !14270)
!14403 = !DILocation(line: 417, column: 20, scope: !14270)
!14404 = !DILocation(line: 417, column: 25, scope: !14270)
!14405 = !DILocation(line: 435, column: 32, scope: !14270)
!14406 = !DILocation(line: 435, column: 17, scope: !14270)
!14407 = !DILocation(line: 436, column: 20, scope: !14270)
!14408 = !DILocation(line: 436, column: 35, scope: !14270)
!14409 = !DILocation(line: 446, column: 31, scope: !14268)
!14410 = !DILocation(line: 446, column: 17, scope: !14268)
!14411 = !DILocation(line: 447, column: 24, scope: !14268)
!14412 = !DILocation(line: 447, column: 17, scope: !14268)
!14413 = !DILocation(line: 437, column: 38, scope: !14270)
!14414 = !DILocation(line: 437, column: 52, scope: !14270)
!14415 = !DILocation(line: 437, column: 25, scope: !14272)
!14416 = !DILocalVariable(name: "self", scope: !14417, file: !468, line: 438, type: !48, align: 8)
!14417 = !DILexicalBlockFile(scope: !14418, file: !468, discriminator: 0)
!14418 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14419)
!14419 = !{!14416}
!14420 = !DILocation(line: 438, column: 42, scope: !14417, inlinedAt: !14326)
!14421 = !DILocation(line: 438, column: 83, scope: !14274)
!14422 = !DILocation(line: 438, column: 71, scope: !14274)
!14423 = !DILocation(line: 438, column: 28, scope: !14274)
!14424 = !DILocation(line: 439, column: 28, scope: !14274)
!14425 = !DILocalVariable(name: "self", scope: !14426, file: !468, line: 439, type: !4990, align: 8)
!14426 = !DILexicalBlockFile(scope: !14427, file: !468, discriminator: 0)
!14427 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h3297ad4713e1484dE", scope: !2937, file: !2903, line: 1475, type: !4988, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2943, retainedNodes: !14428)
!14428 = !{!14425, !14429}
!14429 = !DILocalVariable(name: "other", scope: !14426, file: !468, line: 439, type: !4990, align: 8)
!14430 = !DILocation(line: 439, column: 28, scope: !14426, inlinedAt: !14424)
!14431 = !DILocation(line: 439, column: 59, scope: !14274)
!14432 = !DILocation(line: 439, column: 56, scope: !14274)
!14433 = !DILocalVariable(name: "self", scope: !14434, file: !468, line: 439, type: !892, align: 8)
!14434 = !DILexicalBlockFile(scope: !14435, file: !468, discriminator: 0)
!14435 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h22f6cd563aa841aeE", scope: !5981, file: !617, line: 17, type: !14436, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !14309, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{!892, !892, !626, !917}
!14438 = !{!14433, !14439}
!14439 = !DILocalVariable(name: "index", scope: !14434, file: !468, line: 439, type: !626, align: 8)
!14440 = !DILocation(line: 439, column: 38, scope: !14434, inlinedAt: !14441)
!14441 = !DILocation(line: 286, column: 9, scope: !14330, inlinedAt: !14340)
!14442 = !DILocation(line: 436, column: 17, scope: !14270)
!14443 = !DILocation(line: 439, column: 37, scope: !14274)
!14444 = !DILocation(line: 438, column: 21, scope: !14272)
!14445 = !DILocation(line: 440, column: 54, scope: !14274)
!14446 = !DILocation(line: 440, column: 41, scope: !14274)
!14447 = !DILocation(line: 440, column: 36, scope: !14274)
!14448 = !DILocation(line: 1, column: 1, scope: !14449)
!14449 = !DILexicalBlockFile(scope: !14268, file: !4302, discriminator: 0)
!14450 = distinct !DISubprogram(name: "haystack", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd05587b02468c61aE", scope: !14255, file: !468, line: 379, type: !14451, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14454)
!14451 = !DISubroutineType(types: !14452)
!14452 = !{!48, !14453}
!14453 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharSearcher", baseType: !4697, size: 64, align: 64, dwarfAddressSpace: 0)
!14454 = !{!14455}
!14455 = !DILocalVariable(name: "self", arg: 1, scope: !14450, file: !468, line: 379, type: !14453)
!14456 = !DILocation(line: 379, column: 17, scope: !14450)
!14457 = !DILocation(line: 380, column: 9, scope: !14450)
!14458 = !DILocation(line: 381, column: 6, scope: !14450)
!14459 = distinct !DISubprogram(name: "from_residual<usize>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hd40a09fb05970a28E", scope: !4259, file: !1507, line: 2302, type: !14460, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !14462)
!14460 = !DISubroutineType(types: !14461)
!14461 = !{!236, !4193}
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "residual", arg: 1, scope: !14459, file: !1507, line: 2302, type: !4193)
!14464 = !DILocation(line: 2302, column: 22, scope: !14459)
!14465 = !DILocation(line: 2304, column: 21, scope: !14459)
!14466 = !DILocation(line: 2306, column: 6, scope: !14459)
!14467 = distinct !DISubprogram(name: "next", linkageName: "_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf84b46cf7461bd8eE", scope: !14468, file: !303, line: 138, type: !307, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14469)
!14468 = !DINamespace(name: "{impl#5}", scope: !305)
!14469 = !{!14470, !14471, !14473, !14475, !14477}
!14470 = !DILocalVariable(name: "self", arg: 1, scope: !14467, file: !303, line: 138, type: !328)
!14471 = !DILocalVariable(name: "pre_len", scope: !14472, file: !303, line: 139, type: !9, align: 8)
!14472 = distinct !DILexicalBlock(scope: !14467, file: !303, line: 139, column: 9)
!14473 = !DILocalVariable(name: "ch", scope: !14474, file: !303, line: 142, type: !321, align: 4)
!14474 = distinct !DILexicalBlock(scope: !14472, file: !303, line: 142, column: 13)
!14475 = !DILocalVariable(name: "index", scope: !14476, file: !303, line: 143, type: !9, align: 8)
!14476 = distinct !DILexicalBlock(scope: !14474, file: !303, line: 143, column: 17)
!14477 = !DILocalVariable(name: "len", scope: !14478, file: !303, line: 144, type: !9, align: 8)
!14478 = distinct !DILexicalBlock(scope: !14476, file: !303, line: 144, column: 17)
!14479 = !DILocation(line: 138, column: 13, scope: !14467)
!14480 = !DILocation(line: 139, column: 23, scope: !14467)
!14481 = !DILocalVariable(name: "self", scope: !14482, file: !303, line: 139, type: !389, align: 8)
!14482 = !DILexicalBlockFile(scope: !14483, file: !303, discriminator: 0)
!14483 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14484)
!14484 = !{!14481, !14485, !14488, !14491}
!14485 = !DILocalVariable(name: "start", scope: !14486, file: !303, line: 139, type: !339, align: 8)
!14486 = !DILexicalBlockFile(scope: !14487, file: !303, discriminator: 0)
!14487 = distinct !DILexicalBlock(scope: !14483, file: !403, line: 18, column: 9)
!14488 = !DILocalVariable(name: "size", scope: !14489, file: !303, line: 139, type: !9, align: 8)
!14489 = !DILexicalBlockFile(scope: !14490, file: !303, discriminator: 0)
!14490 = distinct !DILexicalBlock(scope: !14487, file: !403, line: 19, column: 9)
!14491 = !DILocalVariable(name: "diff", scope: !14492, file: !303, line: 139, type: !9, align: 8)
!14492 = !DILexicalBlockFile(scope: !14493, file: !303, discriminator: 0)
!14493 = distinct !DILexicalBlock(scope: !14490, file: !403, line: 29, column: 13)
!14494 = !DILocation(line: 139, column: 23, scope: !14482, inlinedAt: !14480)
!14495 = !DILocation(line: 139, column: 23, scope: !14486, inlinedAt: !14480)
!14496 = !DILocation(line: 139, column: 23, scope: !14497, inlinedAt: !14499)
!14497 = !DILexicalBlockFile(scope: !14498, file: !303, discriminator: 0)
!14498 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14499 = !DILocation(line: 41, column: 5, scope: !14500, inlinedAt: !14501)
!14500 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14501 = !DILocation(line: 19, column: 20, scope: !14487, inlinedAt: !14480)
!14502 = !DILocation(line: 139, column: 23, scope: !14489, inlinedAt: !14480)
!14503 = !DILocalVariable(name: "self", scope: !14504, file: !303, line: 139, type: !342, align: 8)
!14504 = !DILexicalBlockFile(scope: !14505, file: !303, discriminator: 0)
!14505 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14506)
!14506 = !{!14503}
!14507 = !DILocation(line: 139, column: 23, scope: !14504, inlinedAt: !14508)
!14508 = !DILocation(line: 29, column: 47, scope: !14490, inlinedAt: !14480)
!14509 = !DILocalVariable(name: "self", scope: !14510, file: !303, line: 139, type: !339, align: 8)
!14510 = !DILexicalBlockFile(scope: !14511, file: !303, discriminator: 0)
!14511 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14512)
!14512 = !{!14509}
!14513 = !DILocation(line: 139, column: 23, scope: !14510, inlinedAt: !14514)
!14514 = !DILocation(line: 29, column: 65, scope: !14490, inlinedAt: !14480)
!14515 = !DILocalVariable(name: "self", scope: !14516, file: !303, line: 139, type: !448, align: 8)
!14516 = !DILexicalBlockFile(scope: !14517, file: !303, discriminator: 0)
!14517 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14518)
!14518 = !{!14515}
!14519 = !DILocation(line: 139, column: 23, scope: !14516, inlinedAt: !14514)
!14520 = !DILocation(line: 139, column: 23, scope: !14492, inlinedAt: !14480)
!14521 = !DILocation(line: 139, column: 13, scope: !14472)
!14522 = !DILocation(line: 140, column: 15, scope: !14472)
!14523 = !DILocalVariable(name: "self", scope: !14524, file: !303, line: 140, type: !373, align: 8)
!14524 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbcce5acc20c16a7aE", scope: !6792, file: !303, line: 41, type: !358, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !14525)
!14525 = !{!14523}
!14526 = !DILocation(line: 140, column: 15, scope: !14524, inlinedAt: !14522)
!14527 = !DILocation(line: 140, column: 9, scope: !14472)
!14528 = !DILocation(line: 141, column: 21, scope: !14472)
!14529 = !DILocation(line: 142, column: 18, scope: !14472)
!14530 = !DILocation(line: 142, column: 18, scope: !14474)
!14531 = !DILocation(line: 143, column: 29, scope: !14474)
!14532 = !DILocation(line: 143, column: 21, scope: !14476)
!14533 = !DILocation(line: 144, column: 27, scope: !14476)
!14534 = !DILocalVariable(name: "self", scope: !14535, file: !303, line: 144, type: !389, align: 8)
!14535 = !DILexicalBlockFile(scope: !14536, file: !303, discriminator: 0)
!14536 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14537)
!14537 = !{!14534, !14538, !14541, !14544}
!14538 = !DILocalVariable(name: "start", scope: !14539, file: !303, line: 144, type: !339, align: 8)
!14539 = !DILexicalBlockFile(scope: !14540, file: !303, discriminator: 0)
!14540 = distinct !DILexicalBlock(scope: !14536, file: !403, line: 18, column: 9)
!14541 = !DILocalVariable(name: "size", scope: !14542, file: !303, line: 144, type: !9, align: 8)
!14542 = !DILexicalBlockFile(scope: !14543, file: !303, discriminator: 0)
!14543 = distinct !DILexicalBlock(scope: !14540, file: !403, line: 19, column: 9)
!14544 = !DILocalVariable(name: "diff", scope: !14545, file: !303, line: 144, type: !9, align: 8)
!14545 = !DILexicalBlockFile(scope: !14546, file: !303, discriminator: 0)
!14546 = distinct !DILexicalBlock(scope: !14543, file: !403, line: 29, column: 13)
!14547 = !DILocation(line: 144, column: 27, scope: !14535, inlinedAt: !14533)
!14548 = !DILocation(line: 144, column: 27, scope: !14539, inlinedAt: !14533)
!14549 = !DILocation(line: 144, column: 27, scope: !14550, inlinedAt: !14552)
!14550 = !DILexicalBlockFile(scope: !14551, file: !303, discriminator: 0)
!14551 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14552 = !DILocation(line: 41, column: 5, scope: !14553, inlinedAt: !14554)
!14553 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14554 = !DILocation(line: 19, column: 20, scope: !14540, inlinedAt: !14533)
!14555 = !DILocation(line: 144, column: 27, scope: !14542, inlinedAt: !14533)
!14556 = !DILocalVariable(name: "self", scope: !14557, file: !303, line: 144, type: !342, align: 8)
!14557 = !DILexicalBlockFile(scope: !14558, file: !303, discriminator: 0)
!14558 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14559)
!14559 = !{!14556}
!14560 = !DILocation(line: 144, column: 27, scope: !14557, inlinedAt: !14561)
!14561 = !DILocation(line: 29, column: 47, scope: !14543, inlinedAt: !14533)
!14562 = !DILocalVariable(name: "self", scope: !14563, file: !303, line: 144, type: !339, align: 8)
!14563 = !DILexicalBlockFile(scope: !14564, file: !303, discriminator: 0)
!14564 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14565)
!14565 = !{!14562}
!14566 = !DILocation(line: 144, column: 27, scope: !14563, inlinedAt: !14567)
!14567 = !DILocation(line: 29, column: 65, scope: !14543, inlinedAt: !14533)
!14568 = !DILocalVariable(name: "self", scope: !14569, file: !303, line: 144, type: !448, align: 8)
!14569 = !DILexicalBlockFile(scope: !14570, file: !303, discriminator: 0)
!14570 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14571)
!14571 = !{!14568}
!14572 = !DILocation(line: 144, column: 27, scope: !14569, inlinedAt: !14567)
!14573 = !DILocation(line: 144, column: 27, scope: !14545, inlinedAt: !14533)
!14574 = !DILocation(line: 144, column: 21, scope: !14478)
!14575 = !DILocation(line: 145, column: 38, scope: !14478)
!14576 = !DILocation(line: 145, column: 17, scope: !14478)
!14577 = !DILocation(line: 146, column: 22, scope: !14478)
!14578 = !DILocation(line: 146, column: 17, scope: !14478)
!14579 = !DILocation(line: 147, column: 13, scope: !14472)
!14580 = !DILocation(line: 149, column: 6, scope: !14467)
!14581 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h6d92f5d3f3f7c62fE", scope: !14582, file: !2875, line: 620, type: !5409, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !242, retainedNodes: !14583)
!14582 = !DINamespace(name: "{impl#2}", scope: !2877)
!14583 = !{!14584, !14585}
!14584 = !DILocalVariable(name: "self", arg: 1, scope: !14581, file: !2875, line: 620, type: !5411)
!14585 = !DILocalVariable(name: "n", scope: !14586, file: !2875, line: 623, type: !9, align: 8)
!14586 = distinct !DILexicalBlock(scope: !14581, file: !2875, line: 623, column: 13)
!14587 = !DILocation(line: 620, column: 18, scope: !14581)
!14588 = !DILocation(line: 621, column: 12, scope: !14581)
!14589 = !DILocation(line: 621, column: 25, scope: !14581)
!14590 = !DILocation(line: 626, column: 13, scope: !14581)
!14591 = !DILocation(line: 621, column: 9, scope: !14581)
!14592 = !DILocation(line: 623, column: 54, scope: !14581)
!14593 = !DILocation(line: 623, column: 30, scope: !14581)
!14594 = !DILocation(line: 623, column: 17, scope: !14586)
!14595 = !DILocation(line: 624, column: 31, scope: !14586)
!14596 = !DILocation(line: 624, column: 18, scope: !14586)
!14597 = !DILocation(line: 624, column: 13, scope: !14586)
!14598 = !DILocation(line: 628, column: 6, scope: !14581)
!14599 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4626fb2151fff614E", scope: !14600, file: !303, line: 456, type: !14601, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4710, retainedNodes: !14603)
!14600 = !DINamespace(name: "{impl#60}", scope: !305)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{!38, !5348}
!14603 = !{!14604}
!14604 = !DILocalVariable(name: "self", arg: 1, scope: !14599, file: !303, line: 456, type: !5348)
!14605 = !DILocation(line: 456, column: 21, scope: !14599)
!14606 = !DILocation(line: 457, column: 17, scope: !14599)
!14607 = !DILocation(line: 458, column: 14, scope: !14599)
!14608 = distinct !DISubprogram(name: "next<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h630a2ba417877fbfE", scope: !14600, file: !303, line: 456, type: !14609, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !4748, retainedNodes: !14612)
!14609 = !DISubroutineType(types: !14610)
!14610 = !{!38, !14611}
!14611 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Split<build_script_build::emcc_version_code::{closure_env#0}>", baseType: !4738, size: 64, align: 64, dwarfAddressSpace: 0)
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "self", arg: 1, scope: !14608, file: !303, line: 456, type: !14611)
!14614 = !DILocation(line: 456, column: 21, scope: !14608)
!14615 = !DILocation(line: 457, column: 17, scope: !14608)
!14616 = !DILocation(line: 458, column: 14, scope: !14608)
!14617 = distinct !DISubprogram(name: "any<&str, core::slice::cmp::{impl#11}::slice_contains::{closure_env#0}<&str>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hfc31898364bfccdcE", scope: !14618, file: !403, line: 236, type: !14619, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !14626, retainedNodes: !14621)
!14618 = !DINamespace(name: "{impl#173}", scope: !254)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{!989, !5506, !7695}
!14621 = !{!14622, !14623, !14624}
!14622 = !DILocalVariable(name: "self", arg: 1, scope: !14617, file: !403, line: 236, type: !5506)
!14623 = !DILocalVariable(name: "f", arg: 2, scope: !14617, file: !403, line: 236, type: !7695)
!14624 = !DILocalVariable(name: "x", scope: !14625, file: !403, line: 241, type: !270, align: 8)
!14625 = distinct !DILexicalBlock(scope: !14617, file: !403, line: 241, column: 49)
!14626 = !{!47, !14627}
!14627 = !DITemplateTypeParameter(name: "F", type: !7695)
!14628 = !DILocation(line: 236, column: 23, scope: !14617)
!14629 = !DILocation(line: 236, column: 34, scope: !14617)
!14630 = !DILocation(line: 241, column: 17, scope: !14617)
!14631 = !DILocation(line: 241, column: 37, scope: !14625)
!14632 = !DILocation(line: 247, column: 13, scope: !14617)
!14633 = !DILocation(line: 241, column: 27, scope: !14625)
!14634 = !DILocation(line: 241, column: 32, scope: !14625)
!14635 = !DILocation(line: 242, column: 24, scope: !14625)
!14636 = !DILocation(line: 246, column: 17, scope: !14617)
!14637 = !DILocation(line: 247, column: 14, scope: !14617)
!14638 = !DILocation(line: 236, column: 13, scope: !14617)
!14639 = !DILocation(line: 243, column: 32, scope: !14625)
!14640 = distinct !DISubprogram(name: "next<&str>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1bc963773cf5f933E", scope: !14618, file: !403, line: 134, type: !14641, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{!6813, !5506}
!14643 = !{!14644}
!14644 = !DILocalVariable(name: "self", arg: 1, scope: !14640, file: !403, line: 134, type: !5506)
!14645 = !DILocation(line: 134, column: 21, scope: !14640)
!14646 = !DILocalVariable(name: "metadata", scope: !14647, file: !403, line: 142, type: !7, align: 1)
!14647 = !DILexicalBlockFile(scope: !14648, file: !403, discriminator: 0)
!14648 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14649)
!14649 = !{!14650, !14646}
!14650 = !DILocalVariable(name: "data_address", scope: !14647, file: !403, line: 142, type: !777, align: 8)
!14651 = !DILocation(line: 142, column: 29, scope: !14647, inlinedAt: !14652)
!14652 = !DILocation(line: 668, column: 5, scope: !14653, inlinedAt: !14654)
!14653 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14654 = !DILocation(line: 38, column: 41, scope: !14655, inlinedAt: !14661)
!14655 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha4deaed90223e412E", scope: !456, file: !455, line: 35, type: !14656, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14658)
!14656 = !DISubroutineType(types: !14657)
!14657 = !{!989, !3688}
!14658 = !{!14659}
!14659 = !DILocalVariable(name: "self", scope: !14660, file: !403, line: 142, type: !3688, align: 8)
!14660 = !DILexicalBlockFile(scope: !14655, file: !403, discriminator: 0)
!14661 = !DILocation(line: 142, column: 29, scope: !14640)
!14662 = !DILocalVariable(name: "metadata", scope: !14663, file: !403, line: 144, type: !7, align: 1)
!14663 = !DILexicalBlockFile(scope: !14664, file: !403, discriminator: 0)
!14664 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14665)
!14665 = !{!14666, !14662}
!14666 = !DILocalVariable(name: "data_address", scope: !14663, file: !403, line: 144, type: !6, align: 8)
!14667 = !DILocation(line: 144, column: 33, scope: !14663, inlinedAt: !14668)
!14668 = !DILocation(line: 513, column: 5, scope: !14669, inlinedAt: !14670)
!14669 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14670 = !DILocation(line: 39, column: 43, scope: !14671, inlinedAt: !14675)
!14671 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he575eaf4c9c7b48aE", scope: !437, file: !436, line: 36, type: !6237, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14672)
!14672 = !{!14673}
!14673 = !DILocalVariable(name: "self", scope: !14674, file: !403, line: 144, type: !263, align: 8)
!14674 = !DILexicalBlockFile(scope: !14671, file: !403, discriminator: 0)
!14675 = !DILocation(line: 144, column: 33, scope: !14640)
!14676 = !DILocalVariable(name: "self", scope: !14677, file: !403, line: 142, type: !258, align: 8)
!14677 = !DILexicalBlockFile(scope: !14678, file: !403, discriminator: 0)
!14678 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14679)
!14679 = !{!14676}
!14680 = !DILocation(line: 142, column: 29, scope: !14677, inlinedAt: !14661)
!14681 = !DILocation(line: 142, column: 29, scope: !14660, inlinedAt: !14661)
!14682 = !DILocalVariable(name: "self", scope: !14683, file: !403, line: 142, type: !448, align: 8)
!14683 = !DILexicalBlockFile(scope: !14684, file: !403, discriminator: 0)
!14684 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14685)
!14685 = !{!14682, !14686}
!14686 = !DILocalVariable(name: "other", scope: !14683, file: !403, line: 142, type: !448, align: 8)
!14687 = !DILocation(line: 142, column: 29, scope: !14683, inlinedAt: !14688)
!14688 = !DILocation(line: 38, column: 9, scope: !14655, inlinedAt: !14661)
!14689 = !DILocation(line: 142, column: 29, scope: !14690, inlinedAt: !14694)
!14690 = !DILexicalBlockFile(scope: !14691, file: !403, discriminator: 0)
!14691 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !14692)
!14692 = !{!14693}
!14693 = !DILocalVariable(name: "addr", scope: !14690, file: !403, line: 142, type: !9, align: 8)
!14694 = !DILocation(line: 668, column: 24, scope: !14653, inlinedAt: !14654)
!14695 = !DILocation(line: 142, column: 28, scope: !14640)
!14696 = !DILocation(line: 142, column: 21, scope: !14640)
!14697 = !DILocation(line: 143, column: 24, scope: !14640)
!14698 = !DILocation(line: 143, column: 21, scope: !14640)
!14699 = !DILocation(line: 144, column: 33, scope: !14674, inlinedAt: !14675)
!14700 = !DILocalVariable(name: "self", scope: !14701, file: !403, line: 144, type: !342, align: 8)
!14701 = !DILexicalBlockFile(scope: !14702, file: !403, discriminator: 0)
!14702 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14703)
!14703 = !{!14700, !14704}
!14704 = !DILocalVariable(name: "other", scope: !14701, file: !403, line: 144, type: !342, align: 8)
!14705 = !DILocation(line: 144, column: 33, scope: !14701, inlinedAt: !14706)
!14706 = !DILocation(line: 39, column: 9, scope: !14671, inlinedAt: !14675)
!14707 = !DILocation(line: 144, column: 33, scope: !14708, inlinedAt: !14712)
!14708 = !DILexicalBlockFile(scope: !14709, file: !403, discriminator: 0)
!14709 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !14710)
!14710 = !{!14711}
!14711 = !DILocalVariable(name: "addr", scope: !14708, file: !403, line: 144, type: !9, align: 8)
!14712 = !DILocation(line: 513, column: 20, scope: !14669, inlinedAt: !14670)
!14713 = !DILocation(line: 144, column: 32, scope: !14640)
!14714 = !DILocation(line: 144, column: 25, scope: !14640)
!14715 = !DILocation(line: 146, column: 24, scope: !14640)
!14716 = !DILocalVariable(name: "self", scope: !14717, file: !403, line: 146, type: !258, align: 8)
!14717 = !DILexicalBlockFile(scope: !14718, file: !403, discriminator: 0)
!14718 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14719)
!14719 = !{!14716}
!14720 = !DILocation(line: 146, column: 24, scope: !14717, inlinedAt: !14721)
!14721 = !DILocation(line: 8, column: 9, scope: !14640)
!14722 = !DILocation(line: 149, column: 30, scope: !14640)
!14723 = !DILocalVariable(name: "self", scope: !14724, file: !403, line: 149, type: !5506, align: 8)
!14724 = distinct !DISubprogram(name: "post_inc_start<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hb128bc0a29e4be68E", scope: !253, file: !403, line: 85, type: !14725, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14727)
!14725 = !DISubroutineType(types: !14726)
!14726 = !{!263, !5506, !674}
!14727 = !{!14723, !14728, !14729}
!14728 = !DILocalVariable(name: "offset", scope: !14724, file: !403, line: 149, type: !674, align: 8)
!14729 = !DILocalVariable(name: "old", scope: !14730, file: !403, line: 149, type: !3688, align: 8)
!14730 = distinct !DILexicalBlock(scope: !14724, file: !403, line: 90, column: 21)
!14731 = !DILocation(line: 149, column: 30, scope: !14724, inlinedAt: !14732)
!14732 = !DILocation(line: 53, column: 47, scope: !14640)
!14733 = !DILocation(line: 147, column: 25, scope: !14640)
!14734 = !DILocation(line: 146, column: 21, scope: !14640)
!14735 = !DILocation(line: 152, column: 14, scope: !14640)
!14736 = !DILocalVariable(name: "self", scope: !14737, file: !403, line: 149, type: !342, align: 8)
!14737 = !DILexicalBlockFile(scope: !14738, file: !403, discriminator: 0)
!14738 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14739)
!14739 = !{!14736, !14740}
!14740 = !DILocalVariable(name: "count", scope: !14737, file: !403, line: 149, type: !674, align: 8)
!14741 = !DILocation(line: 149, column: 30, scope: !14737, inlinedAt: !14742)
!14742 = !DILocation(line: 67, column: 29, scope: !14724, inlinedAt: !14732)
!14743 = !DILocalVariable(name: "self", scope: !14744, file: !403, line: 149, type: !258, align: 8)
!14744 = !DILexicalBlockFile(scope: !14745, file: !403, discriminator: 0)
!14745 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14746)
!14746 = !{!14743}
!14747 = !DILocation(line: 149, column: 30, scope: !14744, inlinedAt: !14748)
!14748 = !DILocation(line: 90, column: 31, scope: !14724, inlinedAt: !14732)
!14749 = !DILocation(line: 149, column: 30, scope: !14730, inlinedAt: !14732)
!14750 = !DILocalVariable(name: "self", scope: !14751, file: !403, line: 149, type: !258, align: 8)
!14751 = !DILexicalBlockFile(scope: !14752, file: !403, discriminator: 0)
!14752 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14753)
!14753 = !{!14750}
!14754 = !DILocation(line: 149, column: 30, scope: !14751, inlinedAt: !14755)
!14755 = !DILocation(line: 93, column: 64, scope: !14730, inlinedAt: !14732)
!14756 = !DILocalVariable(name: "self", scope: !14757, file: !403, line: 149, type: !3688, align: 8)
!14757 = !DILexicalBlockFile(scope: !14758, file: !403, discriminator: 0)
!14758 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h902e61bc39a1b73eE", scope: !456, file: !455, line: 462, type: !14759, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14761)
!14759 = !DISubroutineType(types: !14760)
!14760 = !{!3688, !3688, !674}
!14761 = !{!14756, !14762}
!14762 = !DILocalVariable(name: "count", scope: !14757, file: !403, line: 149, type: !674, align: 8)
!14763 = !DILocation(line: 149, column: 30, scope: !14757, inlinedAt: !14755)
!14764 = !DILocalVariable(name: "ptr", scope: !14765, file: !403, line: 149, type: !3688, align: 8)
!14765 = !DILexicalBlockFile(scope: !14766, file: !403, discriminator: 0)
!14766 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h15f59ac811dc55b2E", scope: !258, file: !445, line: 196, type: !6308, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14767)
!14767 = !{!14764}
!14768 = !DILocation(line: 149, column: 30, scope: !14765, inlinedAt: !14769)
!14769 = !DILocation(line: 93, column: 41, scope: !14730, inlinedAt: !14732)
!14770 = !DILocation(line: 149, column: 25, scope: !14640)
!14771 = !DILocalVariable(name: "self", scope: !14772, file: !403, line: 149, type: !258, align: 8)
!14772 = !DILexicalBlockFile(scope: !14773, file: !403, discriminator: 0)
!14773 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h613feea9ef2ee0c1E", scope: !258, file: !445, line: 330, type: !9587, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !14774)
!14774 = !{!14771}
!14775 = !DILocation(line: 149, column: 30, scope: !14772, inlinedAt: !14776)
!14776 = !DILocation(line: 88, column: 21, scope: !14724, inlinedAt: !14732)
!14777 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46eba837dec7c5d2E", scope: !14618, file: !403, line: 134, type: !956, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14778)
!14778 = !{!14779}
!14779 = !DILocalVariable(name: "self", arg: 1, scope: !14777, file: !403, line: 134, type: !969)
!14780 = !DILocation(line: 134, column: 21, scope: !14777)
!14781 = !DILocalVariable(name: "metadata", scope: !14782, file: !403, line: 142, type: !7, align: 1)
!14782 = !DILexicalBlockFile(scope: !14783, file: !403, discriminator: 0)
!14783 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14784)
!14784 = !{!14785, !14781}
!14785 = !DILocalVariable(name: "data_address", scope: !14782, file: !403, line: 142, type: !777, align: 8)
!14786 = !DILocation(line: 142, column: 29, scope: !14782, inlinedAt: !14787)
!14787 = !DILocation(line: 668, column: 5, scope: !14788, inlinedAt: !14789)
!14788 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14789 = !DILocation(line: 38, column: 41, scope: !14790, inlinedAt: !14794)
!14790 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc23cf25345e04005E", scope: !456, file: !455, line: 35, type: !987, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14791)
!14791 = !{!14792}
!14792 = !DILocalVariable(name: "self", scope: !14793, file: !403, line: 142, type: !448, align: 8)
!14793 = !DILexicalBlockFile(scope: !14790, file: !403, discriminator: 0)
!14794 = !DILocation(line: 142, column: 29, scope: !14777)
!14795 = !DILocalVariable(name: "metadata", scope: !14796, file: !403, line: 144, type: !7, align: 1)
!14796 = !DILexicalBlockFile(scope: !14797, file: !403, discriminator: 0)
!14797 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14798)
!14798 = !{!14799, !14795}
!14799 = !DILocalVariable(name: "data_address", scope: !14796, file: !403, line: 144, type: !6, align: 8)
!14800 = !DILocation(line: 144, column: 33, scope: !14796, inlinedAt: !14801)
!14801 = !DILocation(line: 513, column: 5, scope: !14802, inlinedAt: !14803)
!14802 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14803 = !DILocation(line: 39, column: 43, scope: !14804, inlinedAt: !14808)
!14804 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h58ff5562a6698e7eE", scope: !437, file: !436, line: 36, type: !1008, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14805)
!14805 = !{!14806}
!14806 = !DILocalVariable(name: "self", scope: !14807, file: !403, line: 144, type: !342, align: 8)
!14807 = !DILexicalBlockFile(scope: !14804, file: !403, discriminator: 0)
!14808 = !DILocation(line: 144, column: 33, scope: !14777)
!14809 = !DILocalVariable(name: "self", scope: !14810, file: !403, line: 142, type: !339, align: 8)
!14810 = !DILexicalBlockFile(scope: !14811, file: !403, discriminator: 0)
!14811 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14812)
!14812 = !{!14809}
!14813 = !DILocation(line: 142, column: 29, scope: !14810, inlinedAt: !14794)
!14814 = !DILocation(line: 142, column: 29, scope: !14793, inlinedAt: !14794)
!14815 = !DILocalVariable(name: "self", scope: !14816, file: !403, line: 142, type: !448, align: 8)
!14816 = !DILexicalBlockFile(scope: !14817, file: !403, discriminator: 0)
!14817 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14818)
!14818 = !{!14815, !14819}
!14819 = !DILocalVariable(name: "other", scope: !14816, file: !403, line: 142, type: !448, align: 8)
!14820 = !DILocation(line: 142, column: 29, scope: !14816, inlinedAt: !14821)
!14821 = !DILocation(line: 38, column: 9, scope: !14790, inlinedAt: !14794)
!14822 = !DILocation(line: 142, column: 29, scope: !14823, inlinedAt: !14827)
!14823 = !DILexicalBlockFile(scope: !14824, file: !403, discriminator: 0)
!14824 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !14825)
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "addr", scope: !14823, file: !403, line: 142, type: !9, align: 8)
!14827 = !DILocation(line: 668, column: 24, scope: !14788, inlinedAt: !14789)
!14828 = !DILocation(line: 142, column: 28, scope: !14777)
!14829 = !DILocation(line: 142, column: 21, scope: !14777)
!14830 = !DILocation(line: 143, column: 24, scope: !14777)
!14831 = !DILocation(line: 143, column: 21, scope: !14777)
!14832 = !DILocation(line: 144, column: 33, scope: !14807, inlinedAt: !14808)
!14833 = !DILocalVariable(name: "self", scope: !14834, file: !403, line: 144, type: !342, align: 8)
!14834 = !DILexicalBlockFile(scope: !14835, file: !403, discriminator: 0)
!14835 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14836)
!14836 = !{!14833, !14837}
!14837 = !DILocalVariable(name: "other", scope: !14834, file: !403, line: 144, type: !342, align: 8)
!14838 = !DILocation(line: 144, column: 33, scope: !14834, inlinedAt: !14839)
!14839 = !DILocation(line: 39, column: 9, scope: !14804, inlinedAt: !14808)
!14840 = !DILocation(line: 144, column: 33, scope: !14841, inlinedAt: !14845)
!14841 = !DILexicalBlockFile(scope: !14842, file: !403, discriminator: 0)
!14842 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !14843)
!14843 = !{!14844}
!14844 = !DILocalVariable(name: "addr", scope: !14841, file: !403, line: 144, type: !9, align: 8)
!14845 = !DILocation(line: 513, column: 20, scope: !14802, inlinedAt: !14803)
!14846 = !DILocation(line: 144, column: 32, scope: !14777)
!14847 = !DILocation(line: 144, column: 25, scope: !14777)
!14848 = !DILocation(line: 146, column: 24, scope: !14777)
!14849 = !DILocalVariable(name: "self", scope: !14850, file: !403, line: 146, type: !339, align: 8)
!14850 = !DILexicalBlockFile(scope: !14851, file: !403, discriminator: 0)
!14851 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14852)
!14852 = !{!14849}
!14853 = !DILocation(line: 146, column: 24, scope: !14850, inlinedAt: !14854)
!14854 = !DILocation(line: 8, column: 9, scope: !14777)
!14855 = !DILocation(line: 149, column: 30, scope: !14777)
!14856 = !DILocalVariable(name: "self", scope: !14857, file: !403, line: 149, type: !969, align: 8)
!14857 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hac336199565cccd2E", scope: !336, file: !403, line: 85, type: !1073, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14858)
!14858 = !{!14856, !14859, !14860}
!14859 = !DILocalVariable(name: "offset", scope: !14857, file: !403, line: 149, type: !674, align: 8)
!14860 = !DILocalVariable(name: "old", scope: !14861, file: !403, line: 149, type: !448, align: 8)
!14861 = distinct !DILexicalBlock(scope: !14857, file: !403, line: 90, column: 21)
!14862 = !DILocation(line: 149, column: 30, scope: !14857, inlinedAt: !14863)
!14863 = !DILocation(line: 53, column: 47, scope: !14777)
!14864 = !DILocation(line: 147, column: 25, scope: !14777)
!14865 = !DILocation(line: 146, column: 21, scope: !14777)
!14866 = !DILocation(line: 152, column: 14, scope: !14777)
!14867 = !DILocalVariable(name: "self", scope: !14868, file: !403, line: 149, type: !342, align: 8)
!14868 = !DILexicalBlockFile(scope: !14869, file: !403, discriminator: 0)
!14869 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14870)
!14870 = !{!14867, !14871}
!14871 = !DILocalVariable(name: "count", scope: !14868, file: !403, line: 149, type: !674, align: 8)
!14872 = !DILocation(line: 149, column: 30, scope: !14868, inlinedAt: !14873)
!14873 = !DILocation(line: 67, column: 29, scope: !14857, inlinedAt: !14863)
!14874 = !DILocalVariable(name: "self", scope: !14875, file: !403, line: 149, type: !339, align: 8)
!14875 = !DILexicalBlockFile(scope: !14876, file: !403, discriminator: 0)
!14876 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14877)
!14877 = !{!14874}
!14878 = !DILocation(line: 149, column: 30, scope: !14875, inlinedAt: !14879)
!14879 = !DILocation(line: 90, column: 31, scope: !14857, inlinedAt: !14863)
!14880 = !DILocation(line: 149, column: 30, scope: !14861, inlinedAt: !14863)
!14881 = !DILocalVariable(name: "self", scope: !14882, file: !403, line: 149, type: !339, align: 8)
!14882 = !DILexicalBlockFile(scope: !14883, file: !403, discriminator: 0)
!14883 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14884)
!14884 = !{!14881}
!14885 = !DILocation(line: 149, column: 30, scope: !14882, inlinedAt: !14886)
!14886 = !DILocation(line: 93, column: 64, scope: !14861, inlinedAt: !14863)
!14887 = !DILocalVariable(name: "self", scope: !14888, file: !403, line: 149, type: !448, align: 8)
!14888 = !DILexicalBlockFile(scope: !14889, file: !403, discriminator: 0)
!14889 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8858ce9471ea0608E", scope: !456, file: !455, line: 462, type: !756, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14890)
!14890 = !{!14887, !14891}
!14891 = !DILocalVariable(name: "count", scope: !14888, file: !403, line: 149, type: !674, align: 8)
!14892 = !DILocation(line: 149, column: 30, scope: !14888, inlinedAt: !14886)
!14893 = !DILocalVariable(name: "ptr", scope: !14894, file: !403, line: 149, type: !448, align: 8)
!14894 = !DILexicalBlockFile(scope: !14895, file: !403, discriminator: 0)
!14895 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h63d3cf9fdf822868E", scope: !339, file: !445, line: 196, type: !1598, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14896)
!14896 = !{!14893}
!14897 = !DILocation(line: 149, column: 30, scope: !14894, inlinedAt: !14898)
!14898 = !DILocation(line: 93, column: 41, scope: !14861, inlinedAt: !14863)
!14899 = !DILocation(line: 149, column: 25, scope: !14777)
!14900 = !DILocalVariable(name: "self", scope: !14901, file: !403, line: 149, type: !339, align: 8)
!14901 = !DILexicalBlockFile(scope: !14902, file: !403, discriminator: 0)
!14902 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14903)
!14903 = !{!14900}
!14904 = !DILocation(line: 149, column: 30, scope: !14901, inlinedAt: !14905)
!14905 = !DILocation(line: 88, column: 21, scope: !14857, inlinedAt: !14863)
!14906 = distinct !DISubprogram(name: "next<(&str, &[&str])>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hed34674ac8513ac7E", scope: !14618, file: !403, line: 134, type: !14907, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !14921)
!14907 = !DISubroutineType(types: !14908)
!14908 = !{!14909, !14920}
!14909 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&(&str, &[&str])>", scope: !39, file: !2, size: 64, align: 64, elements: !14910, templateParams: !23, identifier: "d51d0acdd7a81da796f82515d5b3a9d3")
!14910 = !{!14911}
!14911 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14909, file: !2, size: 64, align: 64, elements: !14912, templateParams: !23, identifier: "d9aa9737ff3ab16b4dafcb34be0255de", discriminator: !14919)
!14912 = !{!14913, !14915}
!14913 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !14911, file: !2, baseType: !14914, size: 64, align: 64, extraData: i64 0)
!14914 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !14909, file: !2, size: 64, align: 64, elements: !23, templateParams: !6425, identifier: "d0813339f85bd2561aedccca130b70ba")
!14915 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !14911, file: !2, baseType: !14916, size: 64, align: 64)
!14916 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !14909, file: !2, size: 64, align: 64, elements: !14917, templateParams: !6425, identifier: "8c083ea4003c3963fc35cf1746bdc5e9")
!14917 = !{!14918}
!14918 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14916, file: !2, baseType: !6427, size: 64, align: 64)
!14919 = !DIDerivedType(tag: DW_TAG_member, scope: !14909, file: !2, baseType: !59, size: 64, align: 64, flags: DIFlagArtificial)
!14920 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<(&str, &[&str])>", baseType: !6409, size: 64, align: 64, dwarfAddressSpace: 0)
!14921 = !{!14922}
!14922 = !DILocalVariable(name: "self", arg: 1, scope: !14906, file: !403, line: 134, type: !14920)
!14923 = !DILocation(line: 134, column: 21, scope: !14906)
!14924 = !DILocalVariable(name: "metadata", scope: !14925, file: !403, line: 142, type: !7, align: 1)
!14925 = !DILexicalBlockFile(scope: !14926, file: !403, discriminator: 0)
!14926 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h39c27ae25a214cabE", scope: !704, file: !703, line: 127, type: !976, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14927)
!14927 = !{!14928, !14924}
!14928 = !DILocalVariable(name: "data_address", scope: !14925, file: !403, line: 142, type: !777, align: 8)
!14929 = !DILocation(line: 142, column: 29, scope: !14925, inlinedAt: !14930)
!14930 = !DILocation(line: 668, column: 5, scope: !14931, inlinedAt: !14932)
!14931 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h5e0d3007363f3440E", scope: !260, file: !682, line: 667, type: !983, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14932 = !DILocation(line: 38, column: 41, scope: !14933, inlinedAt: !14939)
!14933 = distinct !DISubprogram(name: "is_null<(&str, &[&str])>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he1c2c619927386a6E", scope: !456, file: !455, line: 35, type: !14934, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !14936)
!14934 = !DISubroutineType(types: !14935)
!14935 = !{!989, !6526}
!14936 = !{!14937}
!14937 = !DILocalVariable(name: "self", scope: !14938, file: !403, line: 142, type: !6526, align: 8)
!14938 = !DILexicalBlockFile(scope: !14933, file: !403, discriminator: 0)
!14939 = !DILocation(line: 142, column: 29, scope: !14906)
!14940 = !DILocalVariable(name: "metadata", scope: !14941, file: !403, line: 144, type: !7, align: 1)
!14941 = !DILexicalBlockFile(scope: !14942, file: !403, discriminator: 0)
!14942 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h85bc262a12377edcE", scope: !704, file: !703, line: 110, type: !997, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14943)
!14943 = !{!14944, !14940}
!14944 = !DILocalVariable(name: "data_address", scope: !14941, file: !403, line: 144, type: !6, align: 8)
!14945 = !DILocation(line: 144, column: 33, scope: !14941, inlinedAt: !14946)
!14946 = !DILocation(line: 513, column: 5, scope: !14947, inlinedAt: !14948)
!14947 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h1d83572f870a3286E", scope: !260, file: !682, line: 512, type: !1004, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!14948 = !DILocation(line: 39, column: 43, scope: !14949, inlinedAt: !14953)
!14949 = distinct !DISubprogram(name: "is_null<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf34dda908509d207E", scope: !437, file: !436, line: 36, type: !6453, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !14950)
!14950 = !{!14951}
!14951 = !DILocalVariable(name: "self", scope: !14952, file: !403, line: 144, type: !6415, align: 8)
!14952 = !DILexicalBlockFile(scope: !14949, file: !403, discriminator: 0)
!14953 = !DILocation(line: 144, column: 33, scope: !14906)
!14954 = !DILocalVariable(name: "self", scope: !14955, file: !403, line: 142, type: !6412, align: 8)
!14955 = !DILexicalBlockFile(scope: !14956, file: !403, discriminator: 0)
!14956 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h554caae890c46ff2E", scope: !6412, file: !445, line: 330, type: !14957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !14959)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{!6526, !6412}
!14959 = !{!14954}
!14960 = !DILocation(line: 142, column: 29, scope: !14955, inlinedAt: !14939)
!14961 = !DILocation(line: 142, column: 29, scope: !14938, inlinedAt: !14939)
!14962 = !DILocalVariable(name: "self", scope: !14963, file: !403, line: 142, type: !448, align: 8)
!14963 = !DILexicalBlockFile(scope: !14964, file: !403, discriminator: 0)
!14964 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd0bc5584528a5e8fE", scope: !456, file: !455, line: 703, type: !1023, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14965)
!14965 = !{!14962, !14966}
!14966 = !DILocalVariable(name: "other", scope: !14963, file: !403, line: 142, type: !448, align: 8)
!14967 = !DILocation(line: 142, column: 29, scope: !14963, inlinedAt: !14968)
!14968 = !DILocation(line: 38, column: 9, scope: !14933, inlinedAt: !14939)
!14969 = !DILocation(line: 142, column: 29, scope: !14970, inlinedAt: !14974)
!14970 = !DILexicalBlockFile(scope: !14971, file: !403, discriminator: 0)
!14971 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h63094cb1337352a9E", scope: !260, file: !682, line: 569, type: !1032, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !14972)
!14972 = !{!14973}
!14973 = !DILocalVariable(name: "addr", scope: !14970, file: !403, line: 142, type: !9, align: 8)
!14974 = !DILocation(line: 668, column: 24, scope: !14931, inlinedAt: !14932)
!14975 = !DILocation(line: 142, column: 28, scope: !14906)
!14976 = !DILocation(line: 142, column: 21, scope: !14906)
!14977 = !DILocation(line: 143, column: 24, scope: !14906)
!14978 = !DILocation(line: 143, column: 21, scope: !14906)
!14979 = !DILocation(line: 144, column: 33, scope: !14952, inlinedAt: !14953)
!14980 = !DILocalVariable(name: "self", scope: !14981, file: !403, line: 144, type: !342, align: 8)
!14981 = !DILexicalBlockFile(scope: !14982, file: !403, discriminator: 0)
!14982 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h915ed989e52d45efE", scope: !437, file: !436, line: 772, type: !1047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !14983)
!14983 = !{!14980, !14984}
!14984 = !DILocalVariable(name: "other", scope: !14981, file: !403, line: 144, type: !342, align: 8)
!14985 = !DILocation(line: 144, column: 33, scope: !14981, inlinedAt: !14986)
!14986 = !DILocation(line: 39, column: 9, scope: !14949, inlinedAt: !14953)
!14987 = !DILocation(line: 144, column: 33, scope: !14988, inlinedAt: !14992)
!14988 = !DILexicalBlockFile(scope: !14989, file: !403, discriminator: 0)
!14989 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h77a717c4c85eaf4dE", scope: !260, file: !682, line: 538, type: !1056, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1036, retainedNodes: !14990)
!14990 = !{!14991}
!14991 = !DILocalVariable(name: "addr", scope: !14988, file: !403, line: 144, type: !9, align: 8)
!14992 = !DILocation(line: 513, column: 20, scope: !14947, inlinedAt: !14948)
!14993 = !DILocation(line: 144, column: 32, scope: !14906)
!14994 = !DILocation(line: 144, column: 25, scope: !14906)
!14995 = !DILocation(line: 146, column: 24, scope: !14906)
!14996 = !DILocalVariable(name: "self", scope: !14997, file: !403, line: 146, type: !6412, align: 8)
!14997 = !DILexicalBlockFile(scope: !14998, file: !403, discriminator: 0)
!14998 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h554caae890c46ff2E", scope: !6412, file: !445, line: 330, type: !14957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !14999)
!14999 = !{!14996}
!15000 = !DILocation(line: 146, column: 24, scope: !14997, inlinedAt: !15001)
!15001 = !DILocation(line: 8, column: 9, scope: !14906)
!15002 = !DILocation(line: 149, column: 30, scope: !14906)
!15003 = !DILocalVariable(name: "self", scope: !15004, file: !403, line: 149, type: !14920, align: 8)
!15004 = distinct !DISubprogram(name: "post_inc_start<(&str, &[&str])>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h759967999ff42cffE", scope: !6409, file: !403, line: 85, type: !15005, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !15007)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{!6415, !14920, !674}
!15007 = !{!15003, !15008, !15009}
!15008 = !DILocalVariable(name: "offset", scope: !15004, file: !403, line: 149, type: !674, align: 8)
!15009 = !DILocalVariable(name: "old", scope: !15010, file: !403, line: 149, type: !6526, align: 8)
!15010 = distinct !DILexicalBlock(scope: !15004, file: !403, line: 90, column: 21)
!15011 = !DILocation(line: 149, column: 30, scope: !15004, inlinedAt: !15012)
!15012 = !DILocation(line: 53, column: 47, scope: !14906)
!15013 = !DILocation(line: 147, column: 25, scope: !14906)
!15014 = !DILocation(line: 146, column: 21, scope: !14906)
!15015 = !DILocation(line: 152, column: 14, scope: !14906)
!15016 = !DILocalVariable(name: "self", scope: !15017, file: !403, line: 149, type: !342, align: 8)
!15017 = !DILexicalBlockFile(scope: !15018, file: !403, discriminator: 0)
!15018 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h043e28faea61e417E", scope: !437, file: !436, line: 534, type: !672, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15019)
!15019 = !{!15016, !15020}
!15020 = !DILocalVariable(name: "count", scope: !15017, file: !403, line: 149, type: !674, align: 8)
!15021 = !DILocation(line: 149, column: 30, scope: !15017, inlinedAt: !15022)
!15022 = !DILocation(line: 67, column: 29, scope: !15004, inlinedAt: !15012)
!15023 = !DILocalVariable(name: "self", scope: !15024, file: !403, line: 149, type: !6412, align: 8)
!15024 = !DILexicalBlockFile(scope: !15025, file: !403, discriminator: 0)
!15025 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h554caae890c46ff2E", scope: !6412, file: !445, line: 330, type: !14957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !15026)
!15026 = !{!15023}
!15027 = !DILocation(line: 149, column: 30, scope: !15024, inlinedAt: !15028)
!15028 = !DILocation(line: 90, column: 31, scope: !15004, inlinedAt: !15012)
!15029 = !DILocation(line: 149, column: 30, scope: !15010, inlinedAt: !15012)
!15030 = !DILocalVariable(name: "self", scope: !15031, file: !403, line: 149, type: !6412, align: 8)
!15031 = !DILexicalBlockFile(scope: !15032, file: !403, discriminator: 0)
!15032 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h554caae890c46ff2E", scope: !6412, file: !445, line: 330, type: !14957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !15033)
!15033 = !{!15030}
!15034 = !DILocation(line: 149, column: 30, scope: !15031, inlinedAt: !15035)
!15035 = !DILocation(line: 93, column: 64, scope: !15010, inlinedAt: !15012)
!15036 = !DILocalVariable(name: "self", scope: !15037, file: !403, line: 149, type: !6526, align: 8)
!15037 = !DILexicalBlockFile(scope: !15038, file: !403, discriminator: 0)
!15038 = distinct !DISubprogram(name: "offset<(&str, &[&str])>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h2f31c7c374a6582eE", scope: !456, file: !455, line: 462, type: !15039, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !15041)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{!6526, !6526, !674}
!15041 = !{!15036, !15042}
!15042 = !DILocalVariable(name: "count", scope: !15037, file: !403, line: 149, type: !674, align: 8)
!15043 = !DILocation(line: 149, column: 30, scope: !15037, inlinedAt: !15035)
!15044 = !DILocalVariable(name: "ptr", scope: !15045, file: !403, line: 149, type: !6526, align: 8)
!15045 = !DILexicalBlockFile(scope: !15046, file: !403, discriminator: 0)
!15046 = distinct !DISubprogram(name: "new_unchecked<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf10dca035f72b4cbE", scope: !6412, file: !445, line: 196, type: !6524, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !15047)
!15047 = !{!15044}
!15048 = !DILocation(line: 149, column: 30, scope: !15045, inlinedAt: !15049)
!15049 = !DILocation(line: 93, column: 41, scope: !15010, inlinedAt: !15012)
!15050 = !DILocation(line: 149, column: 25, scope: !14906)
!15051 = !DILocalVariable(name: "self", scope: !15052, file: !403, line: 149, type: !6412, align: 8)
!15052 = !DILexicalBlockFile(scope: !15053, file: !403, discriminator: 0)
!15053 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h554caae890c46ff2E", scope: !6412, file: !445, line: 330, type: !14957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !6420, retainedNodes: !15054)
!15054 = !{!15051}
!15055 = !DILocation(line: 149, column: 30, scope: !15052, inlinedAt: !15056)
!15056 = !DILocation(line: 88, column: 21, scope: !15004, inlinedAt: !15012)
!15057 = distinct !DISubprogram(name: "position<u8, core::slice::memchr::memchr::{closure_env#0}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hef704d7154331340E", scope: !14618, file: !403, line: 288, type: !15058, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !15075, retainedNodes: !15060)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{!236, !969, !6689}
!15060 = !{!15061, !15062, !15063, !15065, !15067, !15069, !15071, !15073}
!15061 = !DILocalVariable(name: "self", arg: 1, scope: !15057, file: !403, line: 288, type: !969)
!15062 = !DILocalVariable(name: "predicate", arg: 2, scope: !15057, file: !403, line: 288, type: !6689)
!15063 = !DILocalVariable(name: "n", scope: !15064, file: !403, line: 292, type: !9, align: 8)
!15064 = distinct !DILexicalBlock(scope: !15057, file: !403, line: 292, column: 17)
!15065 = !DILocalVariable(name: "start", scope: !15066, file: !403, line: 292, type: !339, align: 8)
!15066 = distinct !DILexicalBlock(scope: !15057, file: !403, line: 18, column: 9)
!15067 = !DILocalVariable(name: "size", scope: !15068, file: !403, line: 292, type: !9, align: 8)
!15068 = distinct !DILexicalBlock(scope: !15066, file: !403, line: 19, column: 9)
!15069 = !DILocalVariable(name: "diff", scope: !15070, file: !403, line: 292, type: !9, align: 8)
!15070 = distinct !DILexicalBlock(scope: !15068, file: !403, line: 29, column: 13)
!15071 = !DILocalVariable(name: "i", scope: !15072, file: !403, line: 293, type: !9, align: 8)
!15072 = distinct !DILexicalBlock(scope: !15064, file: !403, line: 293, column: 17)
!15073 = !DILocalVariable(name: "x", scope: !15074, file: !403, line: 294, type: !350, align: 8)
!15074 = distinct !DILexicalBlock(scope: !15072, file: !403, line: 294, column: 49)
!15075 = !{!344, !15076}
!15076 = !DITemplateTypeParameter(name: "P", type: !6689)
!15077 = !DILocation(line: 288, column: 28, scope: !15057)
!15078 = !DILocation(line: 288, column: 39, scope: !15057)
!15079 = !DILocation(line: 292, column: 21, scope: !15064)
!15080 = !DILocation(line: 293, column: 21, scope: !15072)
!15081 = !DILocation(line: 292, column: 25, scope: !15057)
!15082 = !DILocation(line: 292, column: 25, scope: !15066)
!15083 = !DILocation(line: 292, column: 25, scope: !15084, inlinedAt: !15086)
!15084 = !DILexicalBlockFile(scope: !15085, file: !403, discriminator: 0)
!15085 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15086 = !DILocation(line: 41, column: 5, scope: !15087, inlinedAt: !15088)
!15087 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15088 = !DILocation(line: 19, column: 20, scope: !15066)
!15089 = !DILocation(line: 292, column: 25, scope: !15068)
!15090 = !DILocalVariable(name: "self", scope: !15091, file: !403, line: 292, type: !342, align: 8)
!15091 = !DILexicalBlockFile(scope: !15092, file: !403, discriminator: 0)
!15092 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15093)
!15093 = !{!15090}
!15094 = !DILocation(line: 292, column: 25, scope: !15091, inlinedAt: !15095)
!15095 = !DILocation(line: 23, column: 13, scope: !15068)
!15096 = !DILocalVariable(name: "self", scope: !15097, file: !403, line: 292, type: !9, align: 8)
!15097 = !DILexicalBlockFile(scope: !15098, file: !403, discriminator: 0)
!15098 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h0292a2731c9021a7E", scope: !2890, file: !2889, line: 1225, type: !2878, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15099)
!15099 = !{!15096, !15100}
!15100 = !DILocalVariable(name: "rhs", scope: !15097, file: !403, line: 292, type: !9, align: 8)
!15101 = !DILocation(line: 292, column: 25, scope: !15097, inlinedAt: !15095)
!15102 = !DILocalVariable(name: "self", scope: !15103, file: !403, line: 292, type: !342, align: 8)
!15103 = !DILexicalBlockFile(scope: !15104, file: !403, discriminator: 0)
!15104 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15105)
!15105 = !{!15102}
!15106 = !DILocation(line: 292, column: 25, scope: !15103, inlinedAt: !15107)
!15107 = !DILocation(line: 29, column: 47, scope: !15068)
!15108 = !DILocalVariable(name: "self", scope: !15109, file: !403, line: 292, type: !339, align: 8)
!15109 = !DILexicalBlockFile(scope: !15110, file: !403, discriminator: 0)
!15110 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15111)
!15111 = !{!15108}
!15112 = !DILocation(line: 292, column: 25, scope: !15109, inlinedAt: !15113)
!15113 = !DILocation(line: 29, column: 65, scope: !15068)
!15114 = !DILocalVariable(name: "self", scope: !15115, file: !403, line: 292, type: !448, align: 8)
!15115 = !DILexicalBlockFile(scope: !15116, file: !403, discriminator: 0)
!15116 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15117)
!15117 = !{!15114}
!15118 = !DILocation(line: 292, column: 25, scope: !15115, inlinedAt: !15113)
!15119 = !DILocation(line: 292, column: 25, scope: !15070)
!15120 = !DILocation(line: 293, column: 29, scope: !15064)
!15121 = !DILocation(line: 294, column: 17, scope: !15072)
!15122 = !DILocalVariable(name: "self", scope: !15123, file: !403, line: 292, type: !339, align: 8)
!15123 = !DILexicalBlockFile(scope: !15124, file: !403, discriminator: 0)
!15124 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15125)
!15125 = !{!15122}
!15126 = !DILocation(line: 292, column: 25, scope: !15123, inlinedAt: !15127)
!15127 = !DILocation(line: 23, column: 43, scope: !15068)
!15128 = !DILocalVariable(name: "self", scope: !15129, file: !403, line: 292, type: !448, align: 8)
!15129 = !DILexicalBlockFile(scope: !15130, file: !403, discriminator: 0)
!15130 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15131)
!15131 = !{!15128}
!15132 = !DILocation(line: 292, column: 25, scope: !15129, inlinedAt: !15127)
!15133 = !DILocation(line: 294, column: 37, scope: !15074)
!15134 = !DILocation(line: 304, column: 13, scope: !15057)
!15135 = !DILocation(line: 294, column: 27, scope: !15074)
!15136 = !DILocation(line: 294, column: 32, scope: !15074)
!15137 = !DILocation(line: 295, column: 24, scope: !15074)
!15138 = !DILocation(line: 303, column: 17, scope: !15072)
!15139 = !DILocation(line: 304, column: 14, scope: !15057)
!15140 = !DILocation(line: 301, column: 21, scope: !15074)
!15141 = !DILocation(line: 298, column: 41, scope: !15074)
!15142 = !DILocation(line: 298, column: 45, scope: !15074)
!15143 = !DILocation(line: 298, column: 34, scope: !15074)
!15144 = !DILocation(line: 299, column: 37, scope: !15074)
!15145 = !DILocation(line: 299, column: 32, scope: !15074)
!15146 = !DILocation(line: 288, column: 13, scope: !15057)
!15147 = distinct !DISubprogram(name: "get<&str>", linkageName: "_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h32c302ac2e172676E", scope: !15148, file: !2766, line: 644, type: !15149, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !60, retainedNodes: !15152)
!15148 = !DINamespace(name: "{impl#1}", scope: !34)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!11593, !15151}
!15151 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::panicking::begin_panic::PanicPayload<&str>", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!15152 = !{!15153, !15154}
!15153 = !DILocalVariable(name: "self", arg: 1, scope: !15147, file: !2766, line: 644, type: !15151)
!15154 = !DILocalVariable(name: "a", scope: !15155, file: !2766, line: 646, type: !270, align: 8)
!15155 = distinct !DILexicalBlock(scope: !15147, file: !2766, line: 646, column: 17)
!15156 = !DILocation(line: 644, column: 16, scope: !15147)
!15157 = !DILocation(line: 645, column: 19, scope: !15147)
!15158 = !DILocation(line: 645, column: 13, scope: !15147)
!15159 = !DILocation(line: 647, column: 25, scope: !15147)
!15160 = !DILocation(line: 646, column: 22, scope: !15147)
!15161 = !DILocation(line: 646, column: 22, scope: !15155)
!15162 = !DILocation(line: 646, column: 32, scope: !15155)
!15163 = !DILocation(line: 649, column: 10, scope: !15147)
!15164 = distinct !DISubprogram(name: "take_box<&str>", linkageName: "_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h66fca9f2aa7ca0a2E", scope: !15148, file: !2766, line: 631, type: !15165, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !60, retainedNodes: !15167)
!15165 = !DISubroutineType(types: !15166)
!15166 = !{!3914, !15151}
!15167 = !{!15168, !15169, !15171}
!15168 = !DILocalVariable(name: "self", arg: 1, scope: !15164, file: !2766, line: 631, type: !15151)
!15169 = !DILocalVariable(name: "data", scope: !15170, file: !2766, line: 637, type: !4142, align: 8)
!15170 = distinct !DILexicalBlock(scope: !15164, file: !2766, line: 637, column: 13)
!15171 = !DILocalVariable(name: "a", scope: !15172, file: !2766, line: 638, type: !48, align: 8)
!15172 = distinct !DILexicalBlock(scope: !15164, file: !2766, line: 638, column: 17)
!15173 = !DILocation(line: 631, column: 21, scope: !15164)
!15174 = !DILocation(line: 637, column: 17, scope: !15170)
!15175 = !DILocalVariable(name: "alloc", scope: !15176, file: !2766, line: 641, type: !1234, align: 1)
!15176 = !DILexicalBlockFile(scope: !15177, file: !2766, discriminator: 0)
!15177 = distinct !DILexicalBlock(scope: !15178, file: !12324, line: 1107, column: 9)
!15178 = distinct !DISubprogram(name: "into_raw_with_allocator<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hec31b98e41e63243E", scope: !12325, file: !12324, line: 1106, type: !15179, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11563, retainedNodes: !15185)
!15179 = !DISubroutineType(types: !15180)
!15180 = !{!15181, !4142}
!15181 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut (dyn core::any::Any + core::marker::Send), alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !15182, templateParams: !23, identifier: "aa9285c90aa52cc417394a3c773daabf")
!15182 = !{!15183, !15184}
!15183 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15181, file: !2, baseType: !3914, size: 128, align: 64)
!15184 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !15181, file: !2, baseType: !1234, align: 8, offset: 128)
!15185 = !{!15186, !15188, !15175}
!15186 = !DILocalVariable(name: "b", scope: !15187, file: !2766, line: 641, type: !4142, align: 8)
!15187 = !DILexicalBlockFile(scope: !15178, file: !2766, discriminator: 0)
!15188 = !DILocalVariable(name: "leaked", scope: !15176, file: !2766, line: 641, type: !11542, align: 8)
!15189 = !DILocation(line: 641, column: 13, scope: !15176, inlinedAt: !15190)
!15190 = !DILocation(line: 1054, column: 9, scope: !15191, inlinedAt: !15197)
!15191 = distinct !DISubprogram(name: "into_raw<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h7b7511d93ff448d0E", scope: !12325, file: !12324, line: 1053, type: !15192, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !11563, retainedNodes: !15194)
!15192 = !DISubroutineType(types: !15193)
!15193 = !{!3914, !4142}
!15194 = !{!15195}
!15195 = !DILocalVariable(name: "b", scope: !15196, file: !2766, line: 641, type: !4142, align: 8)
!15196 = !DILexicalBlockFile(scope: !15191, file: !2766, discriminator: 0)
!15197 = !DILocation(line: 641, column: 13, scope: !15170)
!15198 = !DILocation(line: 637, column: 30, scope: !15164)
!15199 = !DILocalVariable(name: "self", scope: !15200, file: !2766, line: 637, type: !3370, align: 8)
!15200 = !DILexicalBlockFile(scope: !15201, file: !2766, discriminator: 0)
!15201 = distinct !DISubprogram(name: "take<&str>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17he86e8f7bd0e5cc8dE", scope: !38, file: !1507, line: 1574, type: !15202, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !15204)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{!38, !3370}
!15204 = !{!15199}
!15205 = !DILocation(line: 637, column: 30, scope: !15200, inlinedAt: !15198)
!15206 = !DILocation(line: 637, column: 24, scope: !15164)
!15207 = !DILocation(line: 639, column: 25, scope: !15164)
!15208 = !DILocation(line: 638, column: 22, scope: !15164)
!15209 = !DILocation(line: 638, column: 22, scope: !15172)
!15210 = !DILocation(line: 638, column: 37, scope: !15172)
!15211 = !DILocalVariable(name: "x", scope: !15212, file: !2766, line: 638, type: !48, align: 8)
!15212 = !DILexicalBlockFile(scope: !15213, file: !2766, discriminator: 0)
!15213 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h76aef4e18b700badE", scope: !15214, file: !12324, line: 213, type: !15215, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !46, retainedNodes: !15218)
!15214 = !DINamespace(name: "{impl#0}", scope: !12326)
!15215 = !DISubroutineType(types: !15216)
!15216 = !{!15217, !48}
!15217 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<&str, alloc::alloc::Global>", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!15218 = !{!15211}
!15219 = !DILocation(line: 638, column: 28, scope: !15212, inlinedAt: !15220)
!15220 = !DILocation(line: 638, column: 28, scope: !15172)
!15221 = !{!"rawptr_deref"}
!15222 = !DILocation(line: 641, column: 27, scope: !15170)
!15223 = !DILocation(line: 641, column: 13, scope: !15196, inlinedAt: !15197)
!15224 = !DILocation(line: 641, column: 13, scope: !15187, inlinedAt: !15190)
!15225 = !DILocation(line: 631, column: 9, scope: !15164)
!15226 = !DILocation(line: 642, column: 9, scope: !15164)
!15227 = !DILocalVariable(name: "self", scope: !15228, file: !2766, line: 641, type: !11542, align: 8)
!15228 = !DILexicalBlockFile(scope: !15229, file: !2766, discriminator: 0)
!15229 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5c5a6f0d4258c9b1E", scope: !11542, file: !1586, line: 103, type: !12439, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !15230)
!15230 = !{!15227}
!15231 = !DILocation(line: 641, column: 13, scope: !15228, inlinedAt: !15232)
!15232 = !DILocation(line: 1108, column: 10, scope: !15177, inlinedAt: !15190)
!15233 = !DILocalVariable(name: "self", scope: !15234, file: !2766, line: 641, type: !11545, align: 8)
!15234 = !DILexicalBlockFile(scope: !15235, file: !2766, discriminator: 0)
!15235 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf492283f8127be86E", scope: !11545, file: !445, line: 330, type: !11612, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3922, retainedNodes: !15236)
!15236 = !{!15233}
!15237 = !DILocation(line: 641, column: 13, scope: !15234, inlinedAt: !15238)
!15238 = !DILocation(line: 104, column: 9, scope: !15229, inlinedAt: !15232)
!15239 = !DILocation(line: 642, column: 10, scope: !15164)
!15240 = distinct !DISubprogram(name: "into_searcher<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h332f042858217278E", scope: !15241, file: !468, line: 645, type: !15242, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !499, retainedNodes: !15247)
!15241 = !DINamespace(name: "{impl#8}", scope: !470)
!15242 = !DISubroutineType(types: !15243)
!15243 = !{!491, !15244, !48}
!15244 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqPattern<core::str::{impl#0}::trim::{closure_env#0}>", scope: !470, file: !2, align: 8, elements: !15245, templateParams: !499, identifier: "8fea3fd1badda67f2e50ebeed74e8ca7")
!15245 = !{!15246}
!15246 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15244, file: !2, baseType: !494, align: 8)
!15247 = !{!15248, !15249}
!15248 = !DILocalVariable(name: "self", arg: 1, scope: !15240, file: !468, line: 645, type: !15244)
!15249 = !DILocalVariable(name: "haystack", arg: 2, scope: !15240, file: !468, line: 645, type: !48)
!15250 = !DILocation(line: 645, column: 22, scope: !15240)
!15251 = !DILocation(line: 645, column: 28, scope: !15240)
!15252 = !DILocation(line: 646, column: 72, scope: !15240)
!15253 = !DILocalVariable(name: "self", scope: !15254, file: !468, line: 646, type: !48, align: 8)
!15254 = !DILexicalBlockFile(scope: !15255, file: !468, discriminator: 0)
!15255 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hece3421e16db0edaE", scope: !496, file: !2439, line: 837, type: !15256, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15258)
!15256 = !DISubroutineType(types: !15257)
!15257 = !{!329, !48}
!15258 = !{!15253}
!15259 = !DILocation(line: 646, column: 72, scope: !15254, inlinedAt: !15252)
!15260 = !DILocalVariable(name: "self", scope: !15261, file: !468, line: 646, type: !48, align: 8)
!15261 = !DILexicalBlockFile(scope: !15262, file: !468, discriminator: 0)
!15262 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hcf96ba0c7499525aE", scope: !496, file: !2439, line: 780, type: !15263, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15265)
!15263 = !DISubroutineType(types: !15264)
!15264 = !{!333, !48}
!15265 = !{!15260}
!15266 = !DILocation(line: 646, column: 72, scope: !15261, inlinedAt: !15267)
!15267 = !DILocation(line: 838, column: 46, scope: !15255, inlinedAt: !15252)
!15268 = !DILocalVariable(name: "self", scope: !15269, file: !468, line: 646, type: !48, align: 8)
!15269 = !DILexicalBlockFile(scope: !15270, file: !468, discriminator: 0)
!15270 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15271)
!15271 = !{!15268}
!15272 = !DILocation(line: 646, column: 72, scope: !15269, inlinedAt: !15273)
!15273 = !DILocation(line: 781, column: 23, scope: !15262, inlinedAt: !15267)
!15274 = !DILocalVariable(name: "self", scope: !15275, file: !468, line: 646, type: !892, align: 8)
!15275 = !DILexicalBlockFile(scope: !15276, file: !468, discriminator: 0)
!15276 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ae0aaa6f77c2546E", scope: !5968, file: !5967, line: 734, type: !6317, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15277)
!15277 = !{!15274}
!15278 = !DILocation(line: 646, column: 72, scope: !15275, inlinedAt: !15273)
!15279 = !DILocation(line: 646, column: 96, scope: !15240)
!15280 = !DILocation(line: 646, column: 9, scope: !15240)
!15281 = !DILocation(line: 647, column: 6, scope: !15240)
!15282 = !DILocation(line: 645, column: 5, scope: !15240)
!15283 = distinct !DISubprogram(name: "into_searcher<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h86801e2df8a25968E", scope: !15241, file: !468, line: 645, type: !15284, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2862, retainedNodes: !15289)
!15284 = !DISubroutineType(types: !15285)
!15285 = !{!2854, !15286, !48}
!15286 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqPattern<build_script_build::emcc_version_code::{closure_env#0}>", scope: !470, file: !2, align: 8, elements: !15287, templateParams: !2862, identifier: "5dfa1d4310bd76705438933e15e8f17f")
!15287 = !{!15288}
!15288 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15286, file: !2, baseType: !2857, align: 8)
!15289 = !{!15290, !15291}
!15290 = !DILocalVariable(name: "self", arg: 1, scope: !15283, file: !468, line: 645, type: !15286)
!15291 = !DILocalVariable(name: "haystack", arg: 2, scope: !15283, file: !468, line: 645, type: !48)
!15292 = !DILocation(line: 645, column: 22, scope: !15283)
!15293 = !DILocation(line: 645, column: 28, scope: !15283)
!15294 = !DILocation(line: 646, column: 72, scope: !15283)
!15295 = !DILocalVariable(name: "self", scope: !15296, file: !468, line: 646, type: !48, align: 8)
!15296 = !DILexicalBlockFile(scope: !15297, file: !468, discriminator: 0)
!15297 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hece3421e16db0edaE", scope: !496, file: !2439, line: 837, type: !15256, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15298)
!15298 = !{!15295}
!15299 = !DILocation(line: 646, column: 72, scope: !15296, inlinedAt: !15294)
!15300 = !DILocalVariable(name: "self", scope: !15301, file: !468, line: 646, type: !48, align: 8)
!15301 = !DILexicalBlockFile(scope: !15302, file: !468, discriminator: 0)
!15302 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hcf96ba0c7499525aE", scope: !496, file: !2439, line: 780, type: !15263, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15303)
!15303 = !{!15300}
!15304 = !DILocation(line: 646, column: 72, scope: !15301, inlinedAt: !15305)
!15305 = !DILocation(line: 838, column: 46, scope: !15297, inlinedAt: !15294)
!15306 = !DILocalVariable(name: "self", scope: !15307, file: !468, line: 646, type: !48, align: 8)
!15307 = !DILexicalBlockFile(scope: !15308, file: !468, discriminator: 0)
!15308 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hf813db6ec02baedaE", scope: !496, file: !2439, line: 323, type: !2440, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15309)
!15309 = !{!15306}
!15310 = !DILocation(line: 646, column: 72, scope: !15307, inlinedAt: !15311)
!15311 = !DILocation(line: 781, column: 23, scope: !15302, inlinedAt: !15305)
!15312 = !DILocalVariable(name: "self", scope: !15313, file: !468, line: 646, type: !892, align: 8)
!15313 = !DILexicalBlockFile(scope: !15314, file: !468, discriminator: 0)
!15314 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ae0aaa6f77c2546E", scope: !5968, file: !5967, line: 734, type: !6317, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15315)
!15315 = !{!15312}
!15316 = !DILocation(line: 646, column: 72, scope: !15313, inlinedAt: !15311)
!15317 = !DILocation(line: 646, column: 96, scope: !15283)
!15318 = !DILocation(line: 646, column: 9, scope: !15283)
!15319 = !DILocation(line: 647, column: 6, scope: !15283)
!15320 = !DILocation(line: 645, column: 5, scope: !15283)
!15321 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17he9c4aa4cf6517257E", scope: !6766, file: !303, line: 84, type: !15322, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15324)
!15322 = !DISubroutineType(types: !15323)
!15323 = !{!321, !6765, !327}
!15324 = !{!15325, !15326}
!15325 = !DILocalVariable(name: "ch", arg: 2, scope: !15321, file: !303, line: 84, type: !327)
!15326 = !DILocalVariable(arg: 1, scope: !15321, file: !303, line: 84, type: !6765)
!15327 = !DILocation(line: 84, column: 62, scope: !15321)
!15328 = !DILocation(line: 84, column: 63, scope: !15321)
!15329 = !DILocation(line: 84, column: 92, scope: !15321)
!15330 = !DILocalVariable(name: "i", scope: !15331, file: !303, line: 84, type: !327, align: 4)
!15331 = !DILexicalBlockFile(scope: !15332, file: !303, discriminator: 0)
!15332 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17h38a171e9f7417a13E", scope: !5099, file: !14239, line: 123, type: !14240, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15333)
!15333 = !{!15330}
!15334 = !DILocation(line: 84, column: 67, scope: !15331, inlinedAt: !15335)
!15335 = !DILocation(line: 84, column: 67, scope: !15321)
!15336 = !DILocalVariable(name: "i", scope: !15337, file: !303, line: 84, type: !327, align: 4)
!15337 = !DILexicalBlockFile(scope: !15338, file: !303, discriminator: 0)
!15338 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h503d59e3d0e4cc59E", scope: !14249, file: !14248, line: 24, type: !14240, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15339)
!15339 = !{!15336}
!15340 = !DILocation(line: 84, column: 67, scope: !15337, inlinedAt: !15341)
!15341 = !DILocation(line: 125, column: 14, scope: !15332, inlinedAt: !15335)
!15342 = !DILocation(line: 84, column: 95, scope: !15321)
!15343 = distinct !DISubprogram(name: "next<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h8077774041b14461E", scope: !15344, file: !468, line: 657, type: !471, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !499, retainedNodes: !15345)
!15344 = !DINamespace(name: "{impl#9}", scope: !470)
!15345 = !{!15346, !15347, !15349, !15351, !15353, !15354, !15356}
!15346 = !DILocalVariable(name: "self", arg: 1, scope: !15343, file: !468, line: 657, type: !490)
!15347 = !DILocalVariable(name: "s", scope: !15348, file: !468, line: 658, type: !328, align: 8)
!15348 = distinct !DILexicalBlock(scope: !15343, file: !468, line: 658, column: 9)
!15349 = !DILocalVariable(name: "pre_len", scope: !15350, file: !468, line: 661, type: !9, align: 8)
!15350 = distinct !DILexicalBlock(scope: !15348, file: !468, line: 661, column: 9)
!15351 = !DILocalVariable(name: "i", scope: !15352, file: !468, line: 662, type: !9, align: 8)
!15352 = distinct !DILexicalBlock(scope: !15350, file: !468, line: 662, column: 40)
!15353 = !DILocalVariable(name: "c", scope: !15352, file: !468, line: 662, type: !321, align: 4)
!15354 = !DILocalVariable(name: "len", scope: !15355, file: !468, line: 663, type: !9, align: 8)
!15355 = distinct !DILexicalBlock(scope: !15352, file: !468, line: 663, column: 13)
!15356 = !DILocalVariable(name: "char_len", scope: !15357, file: !468, line: 664, type: !9, align: 8)
!15357 = distinct !DILexicalBlock(scope: !15355, file: !468, line: 664, column: 13)
!15358 = !DILocation(line: 657, column: 13, scope: !15343)
!15359 = !DILocation(line: 658, column: 17, scope: !15343)
!15360 = !DILocation(line: 658, column: 13, scope: !15348)
!15361 = !DILocation(line: 661, column: 23, scope: !15348)
!15362 = !DILocalVariable(name: "self", scope: !15363, file: !468, line: 661, type: !389, align: 8)
!15363 = !DILexicalBlockFile(scope: !15364, file: !468, discriminator: 0)
!15364 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15365)
!15365 = !{!15362, !15366, !15369, !15372}
!15366 = !DILocalVariable(name: "start", scope: !15367, file: !468, line: 661, type: !339, align: 8)
!15367 = !DILexicalBlockFile(scope: !15368, file: !468, discriminator: 0)
!15368 = distinct !DILexicalBlock(scope: !15364, file: !403, line: 18, column: 9)
!15369 = !DILocalVariable(name: "size", scope: !15370, file: !468, line: 661, type: !9, align: 8)
!15370 = !DILexicalBlockFile(scope: !15371, file: !468, discriminator: 0)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !403, line: 19, column: 9)
!15372 = !DILocalVariable(name: "diff", scope: !15373, file: !468, line: 661, type: !9, align: 8)
!15373 = !DILexicalBlockFile(scope: !15374, file: !468, discriminator: 0)
!15374 = distinct !DILexicalBlock(scope: !15371, file: !403, line: 29, column: 13)
!15375 = !DILocation(line: 661, column: 23, scope: !15363, inlinedAt: !15361)
!15376 = !DILocation(line: 661, column: 23, scope: !15367, inlinedAt: !15361)
!15377 = !DILocation(line: 661, column: 23, scope: !15378, inlinedAt: !15380)
!15378 = !DILexicalBlockFile(scope: !15379, file: !468, discriminator: 0)
!15379 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15380 = !DILocation(line: 41, column: 5, scope: !15381, inlinedAt: !15382)
!15381 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15382 = !DILocation(line: 19, column: 20, scope: !15368, inlinedAt: !15361)
!15383 = !DILocation(line: 661, column: 23, scope: !15370, inlinedAt: !15361)
!15384 = !DILocalVariable(name: "self", scope: !15385, file: !468, line: 661, type: !342, align: 8)
!15385 = !DILexicalBlockFile(scope: !15386, file: !468, discriminator: 0)
!15386 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15387)
!15387 = !{!15384}
!15388 = !DILocation(line: 661, column: 23, scope: !15385, inlinedAt: !15389)
!15389 = !DILocation(line: 29, column: 47, scope: !15371, inlinedAt: !15361)
!15390 = !DILocalVariable(name: "self", scope: !15391, file: !468, line: 661, type: !339, align: 8)
!15391 = !DILexicalBlockFile(scope: !15392, file: !468, discriminator: 0)
!15392 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15393)
!15393 = !{!15390}
!15394 = !DILocation(line: 661, column: 23, scope: !15391, inlinedAt: !15395)
!15395 = !DILocation(line: 29, column: 65, scope: !15371, inlinedAt: !15361)
!15396 = !DILocalVariable(name: "self", scope: !15397, file: !468, line: 661, type: !448, align: 8)
!15397 = !DILexicalBlockFile(scope: !15398, file: !468, discriminator: 0)
!15398 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15399)
!15399 = !{!15396}
!15400 = !DILocation(line: 661, column: 23, scope: !15397, inlinedAt: !15395)
!15401 = !DILocation(line: 661, column: 23, scope: !15373, inlinedAt: !15361)
!15402 = !DILocation(line: 661, column: 13, scope: !15350)
!15403 = !DILocation(line: 662, column: 31, scope: !15352)
!15404 = !DILocation(line: 662, column: 16, scope: !15352)
!15405 = !DILocation(line: 662, column: 22, scope: !15352)
!15406 = !DILocation(line: 662, column: 25, scope: !15352)
!15407 = !DILocation(line: 663, column: 23, scope: !15352)
!15408 = !DILocalVariable(name: "self", scope: !15409, file: !468, line: 663, type: !389, align: 8)
!15409 = !DILexicalBlockFile(scope: !15410, file: !468, discriminator: 0)
!15410 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15411)
!15411 = !{!15408, !15412, !15415, !15418}
!15412 = !DILocalVariable(name: "start", scope: !15413, file: !468, line: 663, type: !339, align: 8)
!15413 = !DILexicalBlockFile(scope: !15414, file: !468, discriminator: 0)
!15414 = distinct !DILexicalBlock(scope: !15410, file: !403, line: 18, column: 9)
!15415 = !DILocalVariable(name: "size", scope: !15416, file: !468, line: 663, type: !9, align: 8)
!15416 = !DILexicalBlockFile(scope: !15417, file: !468, discriminator: 0)
!15417 = distinct !DILexicalBlock(scope: !15414, file: !403, line: 19, column: 9)
!15418 = !DILocalVariable(name: "diff", scope: !15419, file: !468, line: 663, type: !9, align: 8)
!15419 = !DILexicalBlockFile(scope: !15420, file: !468, discriminator: 0)
!15420 = distinct !DILexicalBlock(scope: !15417, file: !403, line: 29, column: 13)
!15421 = !DILocation(line: 663, column: 23, scope: !15409, inlinedAt: !15407)
!15422 = !DILocation(line: 663, column: 23, scope: !15413, inlinedAt: !15407)
!15423 = !DILocation(line: 663, column: 23, scope: !15424, inlinedAt: !15426)
!15424 = !DILexicalBlockFile(scope: !15425, file: !468, discriminator: 0)
!15425 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15426 = !DILocation(line: 41, column: 5, scope: !15427, inlinedAt: !15428)
!15427 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15428 = !DILocation(line: 19, column: 20, scope: !15414, inlinedAt: !15407)
!15429 = !DILocation(line: 663, column: 23, scope: !15416, inlinedAt: !15407)
!15430 = !DILocalVariable(name: "self", scope: !15431, file: !468, line: 663, type: !342, align: 8)
!15431 = !DILexicalBlockFile(scope: !15432, file: !468, discriminator: 0)
!15432 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15433)
!15433 = !{!15430}
!15434 = !DILocation(line: 663, column: 23, scope: !15431, inlinedAt: !15435)
!15435 = !DILocation(line: 29, column: 47, scope: !15417, inlinedAt: !15407)
!15436 = !DILocation(line: 671, column: 9, scope: !15350)
!15437 = !DILocation(line: 672, column: 6, scope: !15343)
!15438 = !DILocalVariable(name: "self", scope: !15439, file: !468, line: 663, type: !339, align: 8)
!15439 = !DILexicalBlockFile(scope: !15440, file: !468, discriminator: 0)
!15440 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15441)
!15441 = !{!15438}
!15442 = !DILocation(line: 663, column: 23, scope: !15439, inlinedAt: !15443)
!15443 = !DILocation(line: 29, column: 65, scope: !15417, inlinedAt: !15407)
!15444 = !DILocalVariable(name: "self", scope: !15445, file: !468, line: 663, type: !448, align: 8)
!15445 = !DILexicalBlockFile(scope: !15446, file: !468, discriminator: 0)
!15446 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15447)
!15447 = !{!15444}
!15448 = !DILocation(line: 663, column: 23, scope: !15445, inlinedAt: !15443)
!15449 = !DILocation(line: 663, column: 23, scope: !15419, inlinedAt: !15407)
!15450 = !DILocation(line: 663, column: 17, scope: !15355)
!15451 = !DILocation(line: 664, column: 28, scope: !15355)
!15452 = !DILocation(line: 664, column: 17, scope: !15357)
!15453 = !DILocation(line: 665, column: 16, scope: !15357)
!15454 = !DILocation(line: 668, column: 46, scope: !15357)
!15455 = !DILocation(line: 668, column: 24, scope: !15357)
!15456 = !DILocation(line: 668, column: 17, scope: !15357)
!15457 = !DILocation(line: 666, column: 45, scope: !15357)
!15458 = !DILocation(line: 666, column: 24, scope: !15357)
!15459 = !DILocation(line: 666, column: 17, scope: !15357)
!15460 = distinct !DISubprogram(name: "next<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17he708c6b8215159f9E", scope: !15344, file: !468, line: 657, type: !15461, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2862, retainedNodes: !15463)
!15461 = !DISubroutineType(types: !15462)
!15462 = !{!473, !5052}
!15463 = !{!15464, !15465, !15467, !15469, !15471, !15472, !15474}
!15464 = !DILocalVariable(name: "self", arg: 1, scope: !15460, file: !468, line: 657, type: !5052)
!15465 = !DILocalVariable(name: "s", scope: !15466, file: !468, line: 658, type: !328, align: 8)
!15466 = distinct !DILexicalBlock(scope: !15460, file: !468, line: 658, column: 9)
!15467 = !DILocalVariable(name: "pre_len", scope: !15468, file: !468, line: 661, type: !9, align: 8)
!15468 = distinct !DILexicalBlock(scope: !15466, file: !468, line: 661, column: 9)
!15469 = !DILocalVariable(name: "i", scope: !15470, file: !468, line: 662, type: !9, align: 8)
!15470 = distinct !DILexicalBlock(scope: !15468, file: !468, line: 662, column: 40)
!15471 = !DILocalVariable(name: "c", scope: !15470, file: !468, line: 662, type: !321, align: 4)
!15472 = !DILocalVariable(name: "len", scope: !15473, file: !468, line: 663, type: !9, align: 8)
!15473 = distinct !DILexicalBlock(scope: !15470, file: !468, line: 663, column: 13)
!15474 = !DILocalVariable(name: "char_len", scope: !15475, file: !468, line: 664, type: !9, align: 8)
!15475 = distinct !DILexicalBlock(scope: !15473, file: !468, line: 664, column: 13)
!15476 = !DILocation(line: 657, column: 13, scope: !15460)
!15477 = !DILocation(line: 658, column: 17, scope: !15460)
!15478 = !DILocation(line: 658, column: 13, scope: !15466)
!15479 = !DILocation(line: 661, column: 23, scope: !15466)
!15480 = !DILocalVariable(name: "self", scope: !15481, file: !468, line: 661, type: !389, align: 8)
!15481 = !DILexicalBlockFile(scope: !15482, file: !468, discriminator: 0)
!15482 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15483)
!15483 = !{!15480, !15484, !15487, !15490}
!15484 = !DILocalVariable(name: "start", scope: !15485, file: !468, line: 661, type: !339, align: 8)
!15485 = !DILexicalBlockFile(scope: !15486, file: !468, discriminator: 0)
!15486 = distinct !DILexicalBlock(scope: !15482, file: !403, line: 18, column: 9)
!15487 = !DILocalVariable(name: "size", scope: !15488, file: !468, line: 661, type: !9, align: 8)
!15488 = !DILexicalBlockFile(scope: !15489, file: !468, discriminator: 0)
!15489 = distinct !DILexicalBlock(scope: !15486, file: !403, line: 19, column: 9)
!15490 = !DILocalVariable(name: "diff", scope: !15491, file: !468, line: 661, type: !9, align: 8)
!15491 = !DILexicalBlockFile(scope: !15492, file: !468, discriminator: 0)
!15492 = distinct !DILexicalBlock(scope: !15489, file: !403, line: 29, column: 13)
!15493 = !DILocation(line: 661, column: 23, scope: !15481, inlinedAt: !15479)
!15494 = !DILocation(line: 661, column: 23, scope: !15485, inlinedAt: !15479)
!15495 = !DILocation(line: 661, column: 23, scope: !15496, inlinedAt: !15498)
!15496 = !DILexicalBlockFile(scope: !15497, file: !468, discriminator: 0)
!15497 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15498 = !DILocation(line: 41, column: 5, scope: !15499, inlinedAt: !15500)
!15499 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15500 = !DILocation(line: 19, column: 20, scope: !15486, inlinedAt: !15479)
!15501 = !DILocation(line: 661, column: 23, scope: !15488, inlinedAt: !15479)
!15502 = !DILocalVariable(name: "self", scope: !15503, file: !468, line: 661, type: !342, align: 8)
!15503 = !DILexicalBlockFile(scope: !15504, file: !468, discriminator: 0)
!15504 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15505)
!15505 = !{!15502}
!15506 = !DILocation(line: 661, column: 23, scope: !15503, inlinedAt: !15507)
!15507 = !DILocation(line: 29, column: 47, scope: !15489, inlinedAt: !15479)
!15508 = !DILocalVariable(name: "self", scope: !15509, file: !468, line: 661, type: !339, align: 8)
!15509 = !DILexicalBlockFile(scope: !15510, file: !468, discriminator: 0)
!15510 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15511)
!15511 = !{!15508}
!15512 = !DILocation(line: 661, column: 23, scope: !15509, inlinedAt: !15513)
!15513 = !DILocation(line: 29, column: 65, scope: !15489, inlinedAt: !15479)
!15514 = !DILocalVariable(name: "self", scope: !15515, file: !468, line: 661, type: !448, align: 8)
!15515 = !DILexicalBlockFile(scope: !15516, file: !468, discriminator: 0)
!15516 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15517)
!15517 = !{!15514}
!15518 = !DILocation(line: 661, column: 23, scope: !15515, inlinedAt: !15513)
!15519 = !DILocation(line: 661, column: 23, scope: !15491, inlinedAt: !15479)
!15520 = !DILocation(line: 661, column: 13, scope: !15468)
!15521 = !DILocation(line: 662, column: 31, scope: !15470)
!15522 = !DILocation(line: 662, column: 16, scope: !15470)
!15523 = !DILocation(line: 662, column: 22, scope: !15470)
!15524 = !DILocation(line: 662, column: 25, scope: !15470)
!15525 = !DILocation(line: 663, column: 23, scope: !15470)
!15526 = !DILocalVariable(name: "self", scope: !15527, file: !468, line: 663, type: !389, align: 8)
!15527 = !DILexicalBlockFile(scope: !15528, file: !468, discriminator: 0)
!15528 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17he2a0ab2ce6ba7e56E", scope: !404, file: !403, line: 119, type: !405, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15529)
!15529 = !{!15526, !15530, !15533, !15536}
!15530 = !DILocalVariable(name: "start", scope: !15531, file: !468, line: 663, type: !339, align: 8)
!15531 = !DILexicalBlockFile(scope: !15532, file: !468, discriminator: 0)
!15532 = distinct !DILexicalBlock(scope: !15528, file: !403, line: 18, column: 9)
!15533 = !DILocalVariable(name: "size", scope: !15534, file: !468, line: 663, type: !9, align: 8)
!15534 = !DILexicalBlockFile(scope: !15535, file: !468, discriminator: 0)
!15535 = distinct !DILexicalBlock(scope: !15532, file: !403, line: 19, column: 9)
!15536 = !DILocalVariable(name: "diff", scope: !15537, file: !468, line: 663, type: !9, align: 8)
!15537 = !DILexicalBlockFile(scope: !15538, file: !468, discriminator: 0)
!15538 = distinct !DILexicalBlock(scope: !15535, file: !403, line: 29, column: 13)
!15539 = !DILocation(line: 663, column: 23, scope: !15527, inlinedAt: !15525)
!15540 = !DILocation(line: 663, column: 23, scope: !15531, inlinedAt: !15525)
!15541 = !DILocation(line: 663, column: 23, scope: !15542, inlinedAt: !15544)
!15542 = !DILexicalBlockFile(scope: !15543, file: !468, discriminator: 0)
!15543 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hc3f9bafcbb069e49E", scope: !79, file: !423, line: 310, type: !424, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15544 = !DILocation(line: 41, column: 5, scope: !15545, inlinedAt: !15546)
!15545 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h700b60b5ce5ec30cE", scope: !254, file: !428, line: 40, type: !429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !23)
!15546 = !DILocation(line: 19, column: 20, scope: !15532, inlinedAt: !15525)
!15547 = !DILocation(line: 663, column: 23, scope: !15534, inlinedAt: !15525)
!15548 = !DILocalVariable(name: "self", scope: !15549, file: !468, line: 663, type: !342, align: 8)
!15549 = !DILexicalBlockFile(scope: !15550, file: !468, discriminator: 0)
!15550 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1929fb6ee7a87be5E", scope: !437, file: !436, line: 178, type: !429, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15551)
!15551 = !{!15548}
!15552 = !DILocation(line: 663, column: 23, scope: !15549, inlinedAt: !15553)
!15553 = !DILocation(line: 29, column: 47, scope: !15535, inlinedAt: !15525)
!15554 = !DILocation(line: 671, column: 9, scope: !15468)
!15555 = !DILocation(line: 672, column: 6, scope: !15460)
!15556 = !DILocalVariable(name: "self", scope: !15557, file: !468, line: 663, type: !339, align: 8)
!15557 = !DILexicalBlockFile(scope: !15558, file: !468, discriminator: 0)
!15558 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4411de75be6ac952E", scope: !339, file: !445, line: 330, type: !446, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15559)
!15559 = !{!15556}
!15560 = !DILocation(line: 663, column: 23, scope: !15557, inlinedAt: !15561)
!15561 = !DILocation(line: 29, column: 65, scope: !15535, inlinedAt: !15525)
!15562 = !DILocalVariable(name: "self", scope: !15563, file: !468, line: 663, type: !448, align: 8)
!15563 = !DILexicalBlockFile(scope: !15564, file: !468, discriminator: 0)
!15564 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf0fc7c1824cd83fcE", scope: !456, file: !455, line: 182, type: !458, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !343, retainedNodes: !15565)
!15565 = !{!15562}
!15566 = !DILocation(line: 663, column: 23, scope: !15563, inlinedAt: !15561)
!15567 = !DILocation(line: 663, column: 23, scope: !15537, inlinedAt: !15525)
!15568 = !DILocation(line: 663, column: 17, scope: !15473)
!15569 = !DILocation(line: 664, column: 28, scope: !15473)
!15570 = !DILocation(line: 664, column: 17, scope: !15475)
!15571 = !DILocation(line: 665, column: 16, scope: !15475)
!15572 = !DILocation(line: 668, column: 46, scope: !15475)
!15573 = !DILocation(line: 668, column: 24, scope: !15475)
!15574 = !DILocation(line: 668, column: 17, scope: !15475)
!15575 = !DILocation(line: 666, column: 45, scope: !15475)
!15576 = !DILocation(line: 666, column: 24, scope: !15475)
!15577 = !DILocation(line: 666, column: 17, scope: !15475)
!15578 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h447487b8c4afc400E", scope: !15579, file: !2403, line: 1304, type: !15580, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15583)
!15579 = !DINamespace(name: "{impl#52}", scope: !1209)
!15580 = !DISubroutineType(types: !15581)
!15581 = !{!2407, !15582}
!15582 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::ffi::os_str::OsString", baseType: !1208, size: 64, align: 64, dwarfAddressSpace: 0)
!15583 = !{!15584}
!15584 = !DILocalVariable(name: "self", arg: 1, scope: !15578, file: !2403, line: 1304, type: !15582)
!15585 = !DILocation(line: 1304, column: 15, scope: !15578)
!15586 = !DILocalVariable(name: "_index", scope: !15587, file: !2403, line: 1305, type: !5131, align: 1)
!15587 = distinct !DISubprogram(name: "index", linkageName: "_ZN105_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17he82970d9fde7b9d9E", scope: !15588, file: !2403, line: 495, type: !15589, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15591)
!15588 = !DINamespace(name: "{impl#5}", scope: !1209)
!15589 = !DISubroutineType(types: !15590)
!15590 = !{!2407, !15582, !5131, !917}
!15591 = !{!15592, !15586}
!15592 = !DILocalVariable(name: "self", scope: !15587, file: !2403, line: 1305, type: !15582, align: 8)
!15593 = !DILocation(line: 1305, column: 9, scope: !15587, inlinedAt: !15594)
!15594 = !DILocation(line: 514, column: 10, scope: !15595, inlinedAt: !15599)
!15595 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17haa160a3ee3e91fc1E", scope: !15596, file: !2403, line: 513, type: !15580, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15597)
!15596 = !DINamespace(name: "{impl#7}", scope: !1209)
!15597 = !{!15598}
!15598 = !DILocalVariable(name: "self", scope: !15595, file: !2403, line: 1305, type: !15582, align: 8)
!15599 = !DILocation(line: 1305, column: 9, scope: !15578)
!15600 = !DILocation(line: 1305, column: 9, scope: !15595, inlinedAt: !15599)
!15601 = !DILocalVariable(name: "inner", scope: !15602, file: !2403, line: 1305, type: !2428, align: 8)
!15602 = distinct !DISubprogram(name: "from_inner", linkageName: "_ZN3std3ffi6os_str5OsStr10from_inner17h8977c59cbb586defE", scope: !2411, file: !2403, line: 663, type: !2455, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15603)
!15603 = !{!15601}
!15604 = !DILocation(line: 1305, column: 9, scope: !15602, inlinedAt: !15605)
!15605 = !DILocation(line: 496, column: 9, scope: !15587, inlinedAt: !15594)
!15606 = !DILocation(line: 1306, column: 6, scope: !15578)
!15607 = distinct !DISubprogram(name: "drop<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h541c6673ee73fd66E", scope: !15608, file: !1136, line: 185, type: !15609, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !15611)
!15608 = !DINamespace(name: "{impl#0}", scope: !1138)
!15609 = !DISubroutineType(types: !15610)
!15610 = !{null, !1500}
!15611 = !{!15612}
!15612 = !DILocalVariable(name: "self", arg: 1, scope: !15607, file: !1136, line: 185, type: !1500)
!15613 = !DILocation(line: 185, column: 13, scope: !15607)
!15614 = !DILocalVariable(name: "_x", scope: !15615, file: !1136, line: 186, type: !1143, align: 8)
!15615 = !DILexicalBlockFile(scope: !15616, file: !1136, discriminator: 0)
!15616 = distinct !DISubprogram(name: "drop<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem4drop17h85486cf71e44e1e7E", scope: !79, file: !423, line: 974, type: !15617, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !3625, retainedNodes: !15619)
!15617 = !DISubroutineType(types: !15618)
!15618 = !{null, !1143}
!15619 = !{!15614}
!15620 = !DILocation(line: 186, column: 9, scope: !15615, inlinedAt: !15621)
!15621 = !DILocation(line: 186, column: 9, scope: !15607)
!15622 = !DILocalVariable(name: "tmp", scope: !15623, file: !1136, line: 186, type: !15632, align: 8)
!15623 = !DILexicalBlockFile(scope: !15624, file: !1136, discriminator: 0)
!15624 = distinct !DILexicalBlock(scope: !15625, file: !682, line: 1105, column: 5)
!15625 = distinct !DISubprogram(name: "read<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h4bb9294697079686E", scope: !260, file: !682, line: 1097, type: !15626, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !15629)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{!1360, !15628}
!15628 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1360, size: 64, align: 64, dwarfAddressSpace: 0)
!15629 = !{!15630, !15622}
!15630 = !DILocalVariable(name: "src", scope: !15631, file: !1136, line: 186, type: !15628, align: 8)
!15631 = !DILexicalBlockFile(scope: !15625, file: !1136, discriminator: 0)
!15632 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", scope: !799, file: !2, size: 192, align: 64, elements: !15633, templateParams: !1407, identifier: "8d77cd098b92e763a3113e8818daa369")
!15633 = !{!15634, !15635}
!15634 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !15632, file: !2, baseType: !7, align: 8)
!15635 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !15632, file: !2, baseType: !1404, size: 192, align: 64)
!15636 = !DILocation(line: 186, column: 23, scope: !15623, inlinedAt: !15637)
!15637 = !DILocation(line: 186, column: 23, scope: !15607)
!15638 = !DILocalVariable(name: "self", scope: !15639, file: !1136, line: 186, type: !15632, align: 8)
!15639 = !DILexicalBlockFile(scope: !15640, file: !1136, discriminator: 0)
!15640 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hcfda777497ef081cE", scope: !15632, file: !1452, line: 629, type: !15641, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !15643)
!15641 = !DISubroutineType(types: !15642)
!15642 = !{!1360, !15632, !917}
!15643 = !{!15638}
!15644 = !DILocation(line: 186, column: 23, scope: !15639, inlinedAt: !15645)
!15645 = !DILocation(line: 1114, column: 9, scope: !15624, inlinedAt: !15637)
!15646 = !DILocalVariable(name: "slot", scope: !15647, file: !1136, line: 186, type: !1404, align: 8)
!15647 = !DILexicalBlockFile(scope: !15648, file: !1136, discriminator: 0)
!15648 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0172deab82ddc597E", scope: !1404, file: !1418, line: 88, type: !15649, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !15651)
!15649 = !DISubroutineType(types: !15650)
!15650 = !{!1360, !1404}
!15651 = !{!15646}
!15652 = !DILocation(line: 186, column: 23, scope: !15647, inlinedAt: !15653)
!15653 = !DILocation(line: 634, column: 13, scope: !15640, inlinedAt: !15645)
!15654 = !DILocation(line: 186, column: 33, scope: !15607)
!15655 = !DILocation(line: 186, column: 23, scope: !15631, inlinedAt: !15637)
!15656 = !DILocation(line: 186, column: 23, scope: !15657, inlinedAt: !15661)
!15657 = !DILexicalBlockFile(scope: !15658, file: !1136, discriminator: 0)
!15658 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h8bb68ac386aadd85E", scope: !15632, file: !1452, line: 320, type: !15659, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !23)
!15659 = !DISubroutineType(types: !15660)
!15660 = !{!15632}
!15661 = !DILocation(line: 1105, column: 19, scope: !15625, inlinedAt: !15637)
!15662 = !DILocalVariable(name: "self", scope: !15663, file: !1136, line: 186, type: !15667, align: 8)
!15663 = !DILexicalBlockFile(scope: !15664, file: !1136, discriminator: 0)
!15664 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h51483bae61d15487E", scope: !15632, file: !1452, line: 574, type: !15665, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1407, retainedNodes: !15668)
!15665 = !DISubroutineType(types: !15666)
!15666 = !{!3615, !15667}
!15667 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", baseType: !15632, size: 64, align: 64, dwarfAddressSpace: 0)
!15668 = !{!15662}
!15669 = !DILocation(line: 186, column: 23, scope: !15663, inlinedAt: !15670)
!15670 = !DILocation(line: 1113, column: 34, scope: !15624, inlinedAt: !15637)
!15671 = !DILocation(line: 186, column: 14, scope: !15607)
!15672 = !DILocation(line: 187, column: 6, scope: !15607)
!15673 = distinct !DISubprogram(name: "drop<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdd789a6152555bd0E", scope: !1660, file: !1136, line: 1618, type: !15674, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1359, retainedNodes: !15676)
!15674 = !DISubroutineType(types: !15675)
!15675 = !{null, !1667}
!15676 = !{!15677, !15678, !15680}
!15677 = !DILocalVariable(name: "self", arg: 1, scope: !15673, file: !1136, line: 1618, type: !1667)
!15678 = !DILocalVariable(name: "kv", scope: !15679, file: !1136, line: 1632, type: !1672, align: 8)
!15679 = distinct !DILexicalBlock(scope: !15673, file: !1136, line: 1632, column: 48)
!15680 = !DILocalVariable(name: "guard", scope: !15681, file: !1136, line: 1633, type: !1664, align: 8)
!15681 = distinct !DILexicalBlock(scope: !15679, file: !1136, line: 1633, column: 13)
!15682 = !DILocation(line: 1618, column: 13, scope: !15673)
!15683 = !DILocation(line: 1632, column: 24, scope: !15679)
!15684 = !DILocation(line: 1633, column: 17, scope: !15681)
!15685 = !DILocation(line: 1632, column: 9, scope: !15673)
!15686 = !DILocation(line: 1632, column: 30, scope: !15679)
!15687 = !DILocation(line: 1632, column: 19, scope: !15679)
!15688 = !DILocation(line: 1633, column: 25, scope: !15679)
!15689 = !DILocation(line: 1635, column: 22, scope: !15681)
!15690 = !DILocation(line: 1638, column: 6, scope: !15673)
!15691 = !DILocation(line: 1637, column: 9, scope: !15679)
!15692 = !DILocation(line: 1618, column: 5, scope: !15673)
!15693 = distinct !DISubprogram(name: "next_match<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h432a93621517fb67E", scope: !15694, file: !468, line: 752, type: !15695, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2864, retainedNodes: !15698)
!15694 = !DINamespace(name: "{impl#23}", scope: !470)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{!1107, !15697}
!15697 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharPredicateSearcher<build_script_build::emcc_version_code::{closure_env#0}>", baseType: !2851, size: 64, align: 64, dwarfAddressSpace: 0)
!15698 = !{!15699}
!15699 = !DILocalVariable(name: "self", arg: 1, scope: !15693, file: !468, line: 752, type: !15697)
!15700 = !DILocation(line: 752, column: 23, scope: !15693)
!15701 = !DILocation(line: 753, column: 13, scope: !15693)
!15702 = !DILocation(line: 754, column: 10, scope: !15693)
!15703 = distinct !DISubprogram(name: "next_reject<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17h7be9bc9c0bf9c8f3E", scope: !15694, file: !468, line: 756, type: !1105, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !1128, retainedNodes: !15704)
!15704 = !{!15705}
!15705 = !DILocalVariable(name: "self", arg: 1, scope: !15703, file: !468, line: 756, type: !1124)
!15706 = !DILocation(line: 756, column: 24, scope: !15703)
!15707 = !DILocation(line: 757, column: 13, scope: !15703)
!15708 = !DILocation(line: 758, column: 10, scope: !15703)
!15709 = distinct !DISubprogram(name: "haystack<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h79d159b234693157E", scope: !15694, file: !468, line: 744, type: !15710, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2864, retainedNodes: !15713)
!15710 = !DISubroutineType(types: !15711)
!15711 = !{!48, !15712}
!15712 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharPredicateSearcher<build_script_build::emcc_version_code::{closure_env#0}>", baseType: !2851, size: 64, align: 64, dwarfAddressSpace: 0)
!15713 = !{!15714}
!15714 = !DILocalVariable(name: "self", arg: 1, scope: !15709, file: !468, line: 744, type: !15712)
!15715 = !DILocation(line: 744, column: 21, scope: !15709)
!15716 = !DILocation(line: 745, column: 13, scope: !15709)
!15717 = !DILocalVariable(name: "self", scope: !15718, file: !468, line: 745, type: !15721, align: 8)
!15718 = distinct !DISubprogram(name: "haystack<build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hb559271eafcf16fcE", scope: !15344, file: !468, line: 652, type: !15719, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !2862, retainedNodes: !15722)
!15719 = !DISubroutineType(types: !15720)
!15720 = !{!48, !15721}
!15721 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::MultiCharEqSearcher<build_script_build::emcc_version_code::{closure_env#0}>", baseType: !2854, size: 64, align: 64, dwarfAddressSpace: 0)
!15722 = !{!15717}
!15723 = !DILocation(line: 745, column: 13, scope: !15718, inlinedAt: !15716)
!15724 = !DILocation(line: 746, column: 10, scope: !15709)
!15725 = distinct !DISubprogram(name: "main", linkageName: "_ZN18build_script_build4main17h6935e891c16f01a2E", scope: !2859, file: !4302, line: 45, type: !21, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !74, templateParams: !23, retainedNodes: !15726)
!15726 = !{!15727, !15729, !15730, !15732, !15734, !15736, !15738, !15740, !15742, !15744, !15746, !15748, !15750, !15752, !15753}
!15727 = !DILocalVariable(name: "rustc_minor_ver", scope: !15728, file: !4302, line: 49, type: !327, align: 4)
!15728 = distinct !DILexicalBlock(scope: !15725, file: !4302, line: 49, column: 5)
!15729 = !DILocalVariable(name: "is_nightly", scope: !15728, file: !4302, line: 49, type: !989, align: 1)
!15730 = !DILocalVariable(name: "rustc_dep_of_std", scope: !15731, file: !4302, line: 50, type: !989, align: 1)
!15731 = distinct !DILexicalBlock(scope: !15728, file: !4302, line: 50, column: 5)
!15732 = !DILocalVariable(name: "align_cargo_feature", scope: !15733, file: !4302, line: 51, type: !989, align: 1)
!15733 = distinct !DILexicalBlock(scope: !15731, file: !4302, line: 51, column: 5)
!15734 = !DILocalVariable(name: "const_extern_fn_cargo_feature", scope: !15735, file: !4302, line: 52, type: !989, align: 1)
!15735 = distinct !DILexicalBlock(scope: !15733, file: !4302, line: 52, column: 5)
!15736 = !DILocalVariable(name: "libc_ci", scope: !15737, file: !4302, line: 53, type: !989, align: 1)
!15737 = distinct !DILexicalBlock(scope: !15735, file: !4302, line: 53, column: 5)
!15738 = !DILocalVariable(name: "libc_check_cfg", scope: !15739, file: !4302, line: 54, type: !989, align: 1)
!15739 = distinct !DILexicalBlock(scope: !15737, file: !4302, line: 54, column: 5)
!15740 = !DILocalVariable(name: "v", scope: !15741, file: !4302, line: 79, type: !59, align: 8)
!15741 = distinct !DILexicalBlock(scope: !15739, file: !4302, line: 79, column: 9)
!15742 = !DILocalVariable(name: "v", scope: !15741, file: !4302, line: 79, type: !15743, align: 8)
!15743 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !59, size: 64, align: 64, dwarfAddressSpace: 0)
!15744 = !DILocalVariable(name: "iter", scope: !15745, file: !4302, line: 171, type: !253, align: 8)
!15745 = distinct !DILexicalBlock(scope: !15739, file: !4302, line: 171, column: 9)
!15746 = !DILocalVariable(name: "cfg", scope: !15747, file: !4302, line: 171, type: !270, align: 8)
!15747 = distinct !DILexicalBlock(scope: !15745, file: !4302, line: 171, column: 33)
!15748 = !DILocalVariable(name: "iter", scope: !15749, file: !4302, line: 178, type: !6409, align: 8)
!15749 = distinct !DILexicalBlock(scope: !15739, file: !4302, line: 178, column: 9)
!15750 = !DILocalVariable(name: "name", scope: !15751, file: !4302, line: 178, type: !48, align: 8)
!15751 = distinct !DILexicalBlock(scope: !15749, file: !4302, line: 178, column: 48)
!15752 = !DILocalVariable(name: "values", scope: !15751, file: !4302, line: 178, type: !2000, align: 8)
!15753 = !DILocalVariable(name: "values", scope: !15754, file: !4302, line: 179, type: !2358, align: 8)
!15754 = distinct !DILexicalBlock(scope: !15751, file: !4302, line: 179, column: 13)
!15755 = !DILocation(line: 171, column: 20, scope: !15745)
!15756 = !DILocation(line: 171, column: 13, scope: !15747)
!15757 = !DILocation(line: 178, column: 32, scope: !15749)
!15758 = !DILocation(line: 178, column: 15, scope: !15751)
!15759 = !DILocation(line: 179, column: 17, scope: !15754)
!15760 = !DILocation(line: 47, column: 5, scope: !15725)
!15761 = !DILocation(line: 49, column: 41, scope: !15725)
!15762 = !DILocation(line: 49, column: 10, scope: !15725)
!15763 = !DILocation(line: 49, column: 10, scope: !15728)
!15764 = !DILocation(line: 49, column: 27, scope: !15725)
!15765 = !DILocation(line: 49, column: 27, scope: !15728)
!15766 = !DILocation(line: 50, column: 28, scope: !15728)
!15767 = !DILocation(line: 50, column: 78, scope: !15728)
!15768 = !DILocation(line: 50, column: 9, scope: !15731)
!15769 = !DILocation(line: 45, column: 1, scope: !15725)
!15770 = !DILocation(line: 51, column: 31, scope: !15731)
!15771 = !DILocation(line: 51, column: 70, scope: !15731)
!15772 = !DILocation(line: 51, column: 9, scope: !15733)
!15773 = !DILocation(line: 52, column: 41, scope: !15733)
!15774 = !DILocation(line: 52, column: 90, scope: !15733)
!15775 = !DILocation(line: 52, column: 9, scope: !15735)
!15776 = !DILocation(line: 53, column: 19, scope: !15735)
!15777 = !DILocation(line: 53, column: 46, scope: !15735)
!15778 = !DILocation(line: 53, column: 9, scope: !15737)
!15779 = !DILocation(line: 54, column: 26, scope: !15737)
!15780 = !DILocation(line: 54, column: 60, scope: !15737)
!15781 = !DILocation(line: 54, column: 9, scope: !15739)
!15782 = !DILocation(line: 56, column: 8, scope: !15739)
!15783 = !DILocation(line: 56, column: 48, scope: !15739)
!15784 = !DILocation(line: 68, column: 11, scope: !15739)
!15785 = !DILocation(line: 57, column: 9, scope: !15739)
!15786 = !DILocation(line: 68, column: 5, scope: !15739)
!15787 = !DILocation(line: 75, column: 27, scope: !15739)
!15788 = !DILocation(line: 69, column: 21, scope: !15739)
!15789 = !DILocation(line: 70, column: 21, scope: !15739)
!15790 = !DILocation(line: 71, column: 21, scope: !15739)
!15791 = !DILocation(line: 72, column: 21, scope: !15739)
!15792 = !DILocation(line: 73, column: 21, scope: !15739)
!15793 = !DILocation(line: 74, column: 21, scope: !15739)
!15794 = !DILocation(line: 74, column: 32, scope: !15739)
!15795 = !DILocation(line: 78, column: 11, scope: !15739)
!15796 = !DILocation(line: 73, column: 32, scope: !15739)
!15797 = !DILocation(line: 72, column: 32, scope: !15739)
!15798 = !DILocation(line: 71, column: 52, scope: !15739)
!15799 = !DILocation(line: 70, column: 32, scope: !15739)
!15800 = !DILocation(line: 69, column: 32, scope: !15739)
!15801 = !DILocation(line: 78, column: 5, scope: !15739)
!15802 = !DILocation(line: 85, column: 8, scope: !15739)
!15803 = !DILocation(line: 79, column: 14, scope: !15739)
!15804 = !DILocation(line: 79, column: 14, scope: !15741)
!15805 = !DILocation(line: 79, column: 21, scope: !15739)
!15806 = !DILocation(line: 79, column: 20, scope: !15739)
!15807 = !DILocation(line: 79, column: 36, scope: !15741)
!15808 = !DILocation(line: 90, column: 8, scope: !15739)
!15809 = !DILocation(line: 86, column: 9, scope: !15739)
!15810 = !DILocation(line: 95, column: 8, scope: !15739)
!15811 = !DILocation(line: 91, column: 9, scope: !15739)
!15812 = !DILocation(line: 100, column: 8, scope: !15739)
!15813 = !DILocation(line: 96, column: 9, scope: !15739)
!15814 = !DILocation(line: 105, column: 8, scope: !15739)
!15815 = !DILocation(line: 101, column: 9, scope: !15739)
!15816 = !DILocation(line: 110, column: 8, scope: !15739)
!15817 = !DILocation(line: 106, column: 9, scope: !15739)
!15818 = !DILocation(line: 117, column: 8, scope: !15739)
!15819 = !DILocation(line: 111, column: 9, scope: !15739)
!15820 = !DILocation(line: 122, column: 8, scope: !15739)
!15821 = !DILocation(line: 118, column: 9, scope: !15739)
!15822 = !DILocation(line: 128, column: 8, scope: !15739)
!15823 = !DILocation(line: 123, column: 9, scope: !15739)
!15824 = !DILocation(line: 124, column: 9, scope: !15739)
!15825 = !DILocation(line: 133, column: 8, scope: !15739)
!15826 = !DILocation(line: 129, column: 9, scope: !15739)
!15827 = !DILocation(line: 137, column: 8, scope: !15739)
!15828 = !DILocation(line: 134, column: 9, scope: !15739)
!15829 = !DILocation(line: 142, column: 8, scope: !15739)
!15830 = !DILocation(line: 138, column: 9, scope: !15739)
!15831 = !DILocation(line: 147, column: 8, scope: !15739)
!15832 = !DILocation(line: 143, column: 9, scope: !15739)
!15833 = !DILocation(line: 152, column: 8, scope: !15739)
!15834 = !DILocation(line: 148, column: 9, scope: !15739)
!15835 = !DILocation(line: 156, column: 12, scope: !15739)
!15836 = !DILocation(line: 153, column: 9, scope: !15739)
!15837 = !DILocation(line: 170, column: 8, scope: !15739)
!15838 = !DILocation(line: 157, column: 16, scope: !15739)
!15839 = !DILocation(line: 157, column: 31, scope: !15739)
!15840 = !DILocation(line: 160, column: 13, scope: !15739)
!15841 = !DILocation(line: 158, column: 17, scope: !15739)
!15842 = !DILocation(line: 161, column: 13, scope: !15739)
!15843 = !DILocation(line: 187, column: 2, scope: !15725)
!15844 = !DILocation(line: 171, column: 20, scope: !15739)
!15845 = !DILocation(line: 171, column: 9, scope: !15745)
!15846 = !DILocation(line: 178, column: 32, scope: !15739)
!15847 = !DILocation(line: 171, column: 13, scope: !15745)
!15848 = !DILocation(line: 172, column: 16, scope: !15747)
!15849 = !DILocation(line: 175, column: 17, scope: !15747)
!15850 = !DILocation(line: 173, column: 17, scope: !15747)
!15851 = !DILocation(line: 178, column: 9, scope: !15749)
!15852 = !DILocation(line: 178, column: 15, scope: !15749)
!15853 = !DILocation(line: 178, column: 21, scope: !15749)
!15854 = !DILocation(line: 178, column: 21, scope: !15751)
!15855 = !DILocation(line: 179, column: 26, scope: !15751)
!15856 = !DILocation(line: 180, column: 16, scope: !15754)
!15857 = !DILocation(line: 183, column: 17, scope: !15754)
!15858 = !DILocation(line: 181, column: 17, scope: !15754)
!15859 = !DILocation(line: 185, column: 9, scope: !15751)
!15860 = distinct !DISubprogram(name: "rustc_minor_nightly", linkageName: "_ZN18build_script_build19rustc_minor_nightly17h7c313fbf47399675E", scope: !2859, file: !4302, line: 189, type: !15861, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15867)
!15861 = !DISubroutineType(types: !15862)
!15862 = !{!15863}
!15863 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u32, bool)", file: !2, size: 64, align: 32, elements: !15864, templateParams: !23, identifier: "84eb7d995964264847e4a7fba45ab164")
!15864 = !{!15865, !15866}
!15865 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15863, file: !2, baseType: !327, size: 32, align: 32)
!15866 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !15863, file: !2, baseType: !989, size: 8, align: 8, offset: 32)
!15867 = !{!15868, !15870, !15872, !15874, !15876, !15878, !15880, !15882, !15884, !15886, !15888, !15890, !15892}
!15868 = !DILocalVariable(name: "rustc", scope: !15869, file: !4302, line: 199, type: !1208, align: 8)
!15869 = distinct !DILexicalBlock(scope: !15860, file: !4302, line: 199, column: 5)
!15870 = !DILocalVariable(name: "e", scope: !15871, file: !4302, line: 199, type: !1208, align: 8)
!15871 = distinct !DILexicalBlock(scope: !15860, file: !4302, line: 193, column: 17)
!15872 = !DILocalVariable(name: "output", scope: !15873, file: !4302, line: 200, type: !3705, align: 8)
!15873 = distinct !DILexicalBlock(scope: !15869, file: !4302, line: 200, column: 5)
!15874 = !DILocalVariable(name: "version", scope: !15875, file: !4302, line: 212, type: !48, align: 8)
!15875 = distinct !DILexicalBlock(scope: !15873, file: !4302, line: 212, column: 5)
!15876 = !DILocalVariable(name: "e", scope: !15877, file: !4302, line: 212, type: !48, align: 8)
!15877 = distinct !DILexicalBlock(scope: !15873, file: !4302, line: 193, column: 17)
!15878 = !DILocalVariable(name: "pieces", scope: !15879, file: !4302, line: 213, type: !4689, align: 8)
!15879 = distinct !DILexicalBlock(scope: !15875, file: !4302, line: 213, column: 5)
!15880 = !DILocalVariable(name: "minor", scope: !15881, file: !4302, line: 219, type: !38, align: 8)
!15881 = distinct !DILexicalBlock(scope: !15879, file: !4302, line: 219, column: 5)
!15882 = !DILocalVariable(name: "nightly_raw", scope: !15883, file: !4302, line: 226, type: !38, align: 8)
!15883 = distinct !DILexicalBlock(scope: !15881, file: !4302, line: 226, column: 5)
!15884 = !DILocalVariable(name: "e", scope: !15885, file: !4302, line: 226, type: !48, align: 8)
!15885 = distinct !DILexicalBlock(scope: !15881, file: !4302, line: 193, column: 17)
!15886 = !DILocalVariable(name: "nightly", scope: !15887, file: !4302, line: 227, type: !989, align: 1)
!15887 = distinct !DILexicalBlock(scope: !15883, file: !4302, line: 227, column: 5)
!15888 = !DILocalVariable(name: "minor", scope: !15889, file: !4302, line: 230, type: !327, align: 4)
!15889 = distinct !DILexicalBlock(scope: !15887, file: !4302, line: 230, column: 5)
!15890 = !DILocalVariable(name: "e", scope: !15891, file: !4302, line: 230, type: !48, align: 8)
!15891 = distinct !DILexicalBlock(scope: !15887, file: !4302, line: 193, column: 17)
!15892 = !DILocalVariable(name: "e", scope: !15893, file: !4302, line: 230, type: !327, align: 4)
!15893 = distinct !DILexicalBlock(scope: !15887, file: !4302, line: 193, column: 17)
!15894 = !DILocation(line: 199, column: 9, scope: !15869)
!15895 = !DILocation(line: 199, column: 17, scope: !15871)
!15896 = !DILocation(line: 200, column: 9, scope: !15873)
!15897 = !DILocation(line: 213, column: 9, scope: !15879)
!15898 = !DILocation(line: 219, column: 9, scope: !15881)
!15899 = !DILocation(line: 199, column: 9, scope: !15860)
!15900 = !DILocation(line: 199, column: 23, scope: !15860)
!15901 = !DILocation(line: 199, column: 17, scope: !15860)
!15902 = !DILocation(line: 200, column: 31, scope: !15869)
!15903 = !DILocation(line: 200, column: 18, scope: !15869)
!15904 = !DILocation(line: 233, column: 1, scope: !15860)
!15905 = !DILocation(line: 204, column: 47, scope: !15869)
!15906 = !DILocation(line: 189, column: 1, scope: !15860)
!15907 = !DILocation(line: 233, column: 1, scope: !15869)
!15908 = !DILocation(line: 205, column: 9, scope: !15873)
!15909 = !DILocation(line: 205, column: 8, scope: !15873)
!15910 = !DILocation(line: 212, column: 40, scope: !15873)
!15911 = !DILocation(line: 208, column: 37, scope: !15873)
!15912 = !DILocation(line: 208, column: 13, scope: !15873)
!15913 = !DILocation(line: 206, column: 9, scope: !15873)
!15914 = !DILocation(line: 212, column: 25, scope: !15873)
!15915 = !DILocation(line: 212, column: 19, scope: !15873)
!15916 = !DILocation(line: 212, column: 19, scope: !15877)
!15917 = !DILocation(line: 212, column: 9, scope: !15875)
!15918 = !DILocation(line: 213, column: 22, scope: !15875)
!15919 = !DILocation(line: 215, column: 8, scope: !15879)
!15920 = !DILocation(line: 219, column: 17, scope: !15879)
!15921 = !DILocation(line: 216, column: 9, scope: !15879)
!15922 = !DILocation(line: 226, column: 29, scope: !15881)
!15923 = !DILocation(line: 226, column: 23, scope: !15881)
!15924 = !DILocation(line: 226, column: 23, scope: !15885)
!15925 = !DILocation(line: 226, column: 9, scope: !15883)
!15926 = !DILocation(line: 227, column: 19, scope: !15883)
!15927 = !DILocation(line: 227, column: 9, scope: !15887)
!15928 = !DILocation(line: 230, column: 29, scope: !15887)
!15929 = !DILocation(line: 230, column: 23, scope: !15887)
!15930 = !DILocation(line: 230, column: 23, scope: !15891)
!15931 = !DILocation(line: 230, column: 17, scope: !15887)
!15932 = !DILocation(line: 230, column: 17, scope: !15893)
!15933 = !DILocation(line: 230, column: 9, scope: !15889)
!15934 = !DILocation(line: 232, column: 5, scope: !15889)
!15935 = !DILocation(line: 233, column: 2, scope: !15860)
!15936 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17h4e87a3ecba6a48f2E", scope: !6717, file: !4302, line: 228, type: !15937, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15939)
!15937 = !DISubroutineType(types: !15938)
!15938 = !{!989, !6716, !48}
!15939 = !{!15940, !15941}
!15940 = !DILocalVariable(name: "raw", arg: 2, scope: !15936, file: !4302, line: 228, type: !48)
!15941 = !DILocalVariable(arg: 1, scope: !15936, file: !4302, line: 228, type: !6716)
!15942 = !DILocation(line: 228, column: 14, scope: !15936)
!15943 = !DILocation(line: 228, column: 15, scope: !15936)
!15944 = !DILocation(line: 228, column: 20, scope: !15936)
!15945 = !DILocation(line: 228, column: 46, scope: !15936)
!15946 = !DILocation(line: 228, column: 72, scope: !15936)
!15947 = distinct !DISubprogram(name: "which_freebsd", linkageName: "_ZN18build_script_build13which_freebsd17h684238cbfe523baaE", scope: !2859, file: !4302, line: 235, type: !15948, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !15950)
!15948 = !DISubroutineType(types: !15949)
!15949 = !{!2711}
!15950 = !{!15951, !15953, !15955, !15957, !15959, !15961, !15963, !15965, !15966, !15968, !15969, !15971, !15972, !15974, !15975, !15977}
!15951 = !DILocalVariable(name: "output", scope: !15952, file: !4302, line: 236, type: !3964, align: 8)
!15952 = distinct !DILexicalBlock(scope: !15947, file: !4302, line: 236, column: 5)
!15953 = !DILocalVariable(name: "output", scope: !15954, file: !4302, line: 240, type: !3705, align: 8)
!15954 = distinct !DILexicalBlock(scope: !15952, file: !4302, line: 240, column: 5)
!15955 = !DILocalVariable(name: "stdout", scope: !15956, file: !4302, line: 245, type: !4002, align: 8)
!15956 = distinct !DILexicalBlock(scope: !15954, file: !4302, line: 245, column: 5)
!15957 = !DILocalVariable(name: "stdout", scope: !15958, file: !4302, line: 249, type: !2358, align: 8)
!15958 = distinct !DILexicalBlock(scope: !15956, file: !4302, line: 249, column: 5)
!15959 = !DILocalVariable(name: "s", scope: !15960, file: !4302, line: 252, type: !2985, align: 8)
!15960 = distinct !DILexicalBlock(scope: !15958, file: !4302, line: 252, column: 9)
!15961 = !DILocalVariable(name: "s", scope: !15960, file: !4302, line: 252, type: !15962, align: 8)
!15962 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&alloc::string::String", baseType: !2985, size: 64, align: 64, dwarfAddressSpace: 0)
!15963 = !DILocalVariable(name: "s", scope: !15964, file: !4302, line: 253, type: !2985, align: 8)
!15964 = distinct !DILexicalBlock(scope: !15958, file: !4302, line: 253, column: 9)
!15965 = !DILocalVariable(name: "s", scope: !15964, file: !4302, line: 253, type: !15962, align: 8)
!15966 = !DILocalVariable(name: "s", scope: !15967, file: !4302, line: 254, type: !2985, align: 8)
!15967 = distinct !DILexicalBlock(scope: !15958, file: !4302, line: 254, column: 9)
!15968 = !DILocalVariable(name: "s", scope: !15967, file: !4302, line: 254, type: !15962, align: 8)
!15969 = !DILocalVariable(name: "s", scope: !15970, file: !4302, line: 255, type: !2985, align: 8)
!15970 = distinct !DILexicalBlock(scope: !15958, file: !4302, line: 255, column: 9)
!15971 = !DILocalVariable(name: "s", scope: !15970, file: !4302, line: 255, type: !15962, align: 8)
!15972 = !DILocalVariable(name: "s", scope: !15973, file: !4302, line: 256, type: !2985, align: 8)
!15973 = distinct !DILexicalBlock(scope: !15958, file: !4302, line: 256, column: 9)
!15974 = !DILocalVariable(name: "s", scope: !15973, file: !4302, line: 256, type: !15962, align: 8)
!15975 = !DILocalVariable(name: "s", scope: !15976, file: !4302, line: 257, type: !2985, align: 8)
!15976 = distinct !DILexicalBlock(scope: !15958, file: !4302, line: 257, column: 9)
!15977 = !DILocalVariable(name: "s", scope: !15976, file: !4302, line: 257, type: !15962, align: 8)
!15978 = !DILocation(line: 236, column: 9, scope: !15952)
!15979 = !DILocation(line: 240, column: 9, scope: !15954)
!15980 = !DILocation(line: 245, column: 9, scope: !15956)
!15981 = !DILocation(line: 249, column: 9, scope: !15958)
!15982 = !DILocation(line: 236, column: 9, scope: !15947)
!15983 = !DILocation(line: 236, column: 18, scope: !15947)
!15984 = !DILocation(line: 236, column: 77, scope: !15947)
!15985 = !DILocation(line: 236, column: 76, scope: !15947)
!15986 = !DILocation(line: 235, column: 1, scope: !15947)
!15987 = !DILocation(line: 260, column: 1, scope: !15947)
!15988 = !DILocation(line: 237, column: 8, scope: !15952)
!15989 = !DILocation(line: 240, column: 18, scope: !15952)
!15990 = !DILocation(line: 238, column: 16, scope: !15952)
!15991 = !DILocation(line: 1, column: 1, scope: !15952)
!15992 = !DILocation(line: 240, column: 32, scope: !15952)
!15993 = !DILocation(line: 241, column: 9, scope: !15954)
!15994 = !DILocation(line: 260, column: 1, scope: !15952)
!15995 = !DILocation(line: 241, column: 8, scope: !15954)
!15996 = !DILocation(line: 245, column: 36, scope: !15954)
!15997 = !DILocation(line: 245, column: 18, scope: !15954)
!15998 = !DILocation(line: 242, column: 16, scope: !15954)
!15999 = !DILocation(line: 1, column: 1, scope: !15954)
!16000 = !DILocation(line: 245, column: 54, scope: !15954)
!16001 = !DILocation(line: 246, column: 8, scope: !15956)
!16002 = !DILocation(line: 260, column: 1, scope: !15954)
!16003 = !DILocation(line: 249, column: 18, scope: !15956)
!16004 = !DILocation(line: 247, column: 16, scope: !15956)
!16005 = !DILocation(line: 260, column: 2, scope: !15947)
!16006 = !DILocation(line: 251, column: 11, scope: !15958)
!16007 = !DILocation(line: 252, column: 9, scope: !15958)
!16008 = !DILocation(line: 252, column: 9, scope: !15960)
!16009 = !DILocation(line: 252, column: 14, scope: !15958)
!16010 = !DILocation(line: 260, column: 1, scope: !15956)
!16011 = !DILocation(line: 253, column: 9, scope: !15958)
!16012 = !DILocation(line: 253, column: 9, scope: !15964)
!16013 = !DILocation(line: 253, column: 14, scope: !15958)
!16014 = !DILocation(line: 252, column: 37, scope: !15960)
!16015 = !DILocation(line: 252, column: 44, scope: !15958)
!16016 = !DILocation(line: 254, column: 9, scope: !15958)
!16017 = !DILocation(line: 254, column: 9, scope: !15967)
!16018 = !DILocation(line: 254, column: 14, scope: !15958)
!16019 = !DILocation(line: 253, column: 37, scope: !15964)
!16020 = !DILocation(line: 253, column: 44, scope: !15958)
!16021 = !DILocation(line: 255, column: 9, scope: !15958)
!16022 = !DILocation(line: 255, column: 9, scope: !15970)
!16023 = !DILocation(line: 255, column: 14, scope: !15958)
!16024 = !DILocation(line: 254, column: 37, scope: !15967)
!16025 = !DILocation(line: 254, column: 44, scope: !15958)
!16026 = !DILocation(line: 256, column: 9, scope: !15958)
!16027 = !DILocation(line: 256, column: 9, scope: !15973)
!16028 = !DILocation(line: 256, column: 14, scope: !15958)
!16029 = !DILocation(line: 255, column: 37, scope: !15970)
!16030 = !DILocation(line: 255, column: 44, scope: !15958)
!16031 = !DILocation(line: 257, column: 9, scope: !15958)
!16032 = !DILocation(line: 257, column: 9, scope: !15976)
!16033 = !DILocation(line: 257, column: 14, scope: !15958)
!16034 = !DILocation(line: 256, column: 37, scope: !15973)
!16035 = !DILocation(line: 256, column: 44, scope: !15958)
!16036 = !DILocation(line: 258, column: 14, scope: !15958)
!16037 = !DILocation(line: 257, column: 37, scope: !15976)
!16038 = !DILocation(line: 257, column: 44, scope: !15958)
!16039 = distinct !DISubprogram(name: "emcc_version_code", linkageName: "_ZN18build_script_build17emcc_version_code17hd8d67c9c14b82189E", scope: !2859, file: !4302, line: 262, type: !16040, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !16042)
!16040 = !DISubroutineType(types: !16041)
!16041 = !{!7050}
!16042 = !{!16043, !16045, !16047, !16049, !16051, !16053, !16055, !16057}
!16043 = !DILocalVariable(name: "output", scope: !16044, file: !4302, line: 263, type: !3964, align: 8)
!16044 = distinct !DILexicalBlock(scope: !16039, file: !4302, line: 263, column: 5)
!16045 = !DILocalVariable(name: "output", scope: !16046, file: !4302, line: 270, type: !3705, align: 8)
!16046 = distinct !DILexicalBlock(scope: !16044, file: !4302, line: 270, column: 5)
!16047 = !DILocalVariable(name: "stdout", scope: !16048, file: !4302, line: 275, type: !4002, align: 8)
!16048 = distinct !DILexicalBlock(scope: !16046, file: !4302, line: 275, column: 5)
!16049 = !DILocalVariable(name: "version", scope: !16050, file: !4302, line: 279, type: !2358, align: 8)
!16050 = distinct !DILexicalBlock(scope: !16048, file: !4302, line: 279, column: 5)
!16051 = !DILocalVariable(name: "pieces", scope: !16052, file: !4302, line: 283, type: !4738, align: 8)
!16052 = distinct !DILexicalBlock(scope: !16050, file: !4302, line: 283, column: 5)
!16053 = !DILocalVariable(name: "major", scope: !16054, file: !4302, line: 285, type: !59, align: 8)
!16054 = distinct !DILexicalBlock(scope: !16052, file: !4302, line: 285, column: 5)
!16055 = !DILocalVariable(name: "minor", scope: !16056, file: !4302, line: 286, type: !59, align: 8)
!16056 = distinct !DILexicalBlock(scope: !16054, file: !4302, line: 286, column: 5)
!16057 = !DILocalVariable(name: "patch", scope: !16058, file: !4302, line: 287, type: !59, align: 8)
!16058 = distinct !DILexicalBlock(scope: !16056, file: !4302, line: 287, column: 5)
!16059 = !DILocation(line: 263, column: 9, scope: !16044)
!16060 = !DILocation(line: 270, column: 9, scope: !16046)
!16061 = !DILocation(line: 275, column: 9, scope: !16048)
!16062 = !DILocation(line: 279, column: 9, scope: !16050)
!16063 = !DILocation(line: 283, column: 9, scope: !16052)
!16064 = !DILocation(line: 263, column: 9, scope: !16039)
!16065 = !DILocation(line: 263, column: 18, scope: !16039)
!16066 = !DILocation(line: 266, column: 14, scope: !16039)
!16067 = !DILocation(line: 266, column: 13, scope: !16039)
!16068 = !DILocation(line: 262, column: 1, scope: !16039)
!16069 = !DILocation(line: 290, column: 1, scope: !16039)
!16070 = !DILocation(line: 267, column: 8, scope: !16044)
!16071 = !DILocation(line: 270, column: 18, scope: !16044)
!16072 = !DILocation(line: 268, column: 16, scope: !16044)
!16073 = !DILocation(line: 1, column: 1, scope: !16044)
!16074 = !DILocation(line: 270, column: 32, scope: !16044)
!16075 = !DILocation(line: 271, column: 9, scope: !16046)
!16076 = !DILocation(line: 290, column: 1, scope: !16044)
!16077 = !DILocation(line: 271, column: 8, scope: !16046)
!16078 = !DILocation(line: 275, column: 36, scope: !16046)
!16079 = !DILocation(line: 275, column: 18, scope: !16046)
!16080 = !DILocation(line: 272, column: 16, scope: !16046)
!16081 = !DILocation(line: 1, column: 1, scope: !16046)
!16082 = !DILocation(line: 275, column: 54, scope: !16046)
!16083 = !DILocation(line: 276, column: 8, scope: !16048)
!16084 = !DILocation(line: 290, column: 1, scope: !16046)
!16085 = !DILocation(line: 279, column: 19, scope: !16048)
!16086 = !DILocation(line: 277, column: 16, scope: !16048)
!16087 = !DILocation(line: 290, column: 2, scope: !16039)
!16088 = !DILocation(line: 283, column: 22, scope: !16050)
!16089 = !DILocation(line: 290, column: 1, scope: !16048)
!16090 = !DILocation(line: 285, column: 17, scope: !16052)
!16091 = !DILocation(line: 285, column: 9, scope: !16054)
!16092 = !DILocation(line: 286, column: 17, scope: !16054)
!16093 = !DILocation(line: 286, column: 9, scope: !16056)
!16094 = !DILocation(line: 287, column: 17, scope: !16056)
!16095 = !DILocation(line: 287, column: 9, scope: !16058)
!16096 = !DILocation(line: 289, column: 10, scope: !16058)
!16097 = !DILocation(line: 289, column: 26, scope: !16058)
!16098 = !DILocation(line: 289, column: 5, scope: !16058)
!16099 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17hc81f91aa109c7b20E", scope: !2858, file: !4302, line: 283, type: !16100, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !16103)
!16100 = !DISubroutineType(types: !16101)
!16101 = !{!989, !16102, !321}
!16102 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&build_script_build::emcc_version_code::{closure_env#0}", baseType: !2857, size: 64, align: 64, dwarfAddressSpace: 0)
!16103 = !{!16104, !16105}
!16104 = !DILocalVariable(name: "c", arg: 2, scope: !16099, file: !4302, line: 283, type: !321)
!16105 = !DILocalVariable(arg: 1, scope: !16099, file: !4302, line: 283, type: !16102)
!16106 = !DILocation(line: 283, column: 43, scope: !16099)
!16107 = !DILocation(line: 283, column: 44, scope: !16099)
!16108 = !DILocation(line: 283, column: 47, scope: !16099)
!16109 = !DILocation(line: 283, column: 59, scope: !16099)
!16110 = !DILocation(line: 283, column: 67, scope: !16099)
!16111 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h879d7db3f5ce5301E", scope: !2858, file: !4302, line: 285, type: !16112, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !16114)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{!7050, !7110, !48}
!16114 = !{!16115, !16116}
!16115 = !DILocalVariable(name: "x", arg: 2, scope: !16111, file: !4302, line: 285, type: !48)
!16116 = !DILocalVariable(arg: 1, scope: !16111, file: !4302, line: 285, type: !7110)
!16117 = !DILocation(line: 285, column: 40, scope: !16111)
!16118 = !DILocation(line: 285, column: 41, scope: !16111)
!16119 = !DILocation(line: 285, column: 44, scope: !16111)
!16120 = !DILocation(line: 285, column: 58, scope: !16111)
!16121 = distinct !DISubprogram(name: "{closure#2}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h3438d5e0506ce391E", scope: !2858, file: !4302, line: 286, type: !16122, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !16124)
!16122 = !DISubroutineType(types: !16123)
!16123 = !{!7050, !7132, !48}
!16124 = !{!16125, !16126}
!16125 = !DILocalVariable(name: "x", arg: 2, scope: !16121, file: !4302, line: 286, type: !48)
!16126 = !DILocalVariable(arg: 1, scope: !16121, file: !4302, line: 286, type: !7132)
!16127 = !DILocation(line: 286, column: 40, scope: !16121)
!16128 = !DILocation(line: 286, column: 41, scope: !16121)
!16129 = !DILocation(line: 286, column: 44, scope: !16121)
!16130 = !DILocation(line: 286, column: 58, scope: !16121)
!16131 = distinct !DISubprogram(name: "{closure#3}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h427b2086b2c91d7cE", scope: !2858, file: !4302, line: 287, type: !16132, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !16134)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!7050, !7062, !48}
!16134 = !{!16135, !16136}
!16135 = !DILocalVariable(name: "x", arg: 2, scope: !16131, file: !4302, line: 287, type: !48)
!16136 = !DILocalVariable(arg: 1, scope: !16131, file: !4302, line: 287, type: !7062)
!16137 = !DILocation(line: 287, column: 40, scope: !16131)
!16138 = !DILocation(line: 287, column: 41, scope: !16131)
!16139 = !DILocation(line: 287, column: 44, scope: !16131)
!16140 = !DILocation(line: 287, column: 58, scope: !16131)
!16141 = distinct !DISubprogram(name: "set_cfg", linkageName: "_ZN18build_script_build7set_cfg17h5ceff7e99eed7997E", scope: !2859, file: !4302, line: 292, type: !16142, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !74, templateParams: !23, retainedNodes: !16144)
!16142 = !DISubroutineType(types: !16143)
!16143 = !{null, !48}
!16144 = !{!16145}
!16145 = !DILocalVariable(name: "cfg", arg: 1, scope: !16141, file: !4302, line: 292, type: !48)
!16146 = !DILocation(line: 292, column: 12, scope: !16141)
!16147 = !DILocation(line: 293, column: 9, scope: !16141)
!16148 = !DILocation(line: 293, column: 8, scope: !16141)
!16149 = !DILocation(line: 296, column: 5, scope: !16141)
!16150 = !DILocation(line: 294, column: 9, scope: !16141)
!16151 = !DILocation(line: 297, column: 2, scope: !16141)
